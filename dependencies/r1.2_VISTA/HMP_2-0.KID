KIDS Distribution saved on Jun 10, 2015@11:42:05
HMP 2.0 for r1.2 OSEHRA Release
**KIDS**:HMP 2.0^HMP*2.0*150417^HMP_RRB 1.0^HMP HRUB 2.0^HMP HRUB 4.1^

**INSTALL NAME**
HMP 2.0
"BLD",9078,0)
HMP 2.0^HEALTH MANAGEMENT PLATFORM^0^3150610^y
"BLD",9078,1,0)
^^416^416^3150212^
"BLD",9078,1,1,0)
The eHMP project within the Veterans Health Information Systems and
"BLD",9078,1,2,0)
Technology (VistA) Evolution program will introduce expanded
"BLD",9078,1,3,0)
capabilities and modernize existing features of the VA VistA Electronic
"BLD",9078,1,4,0)
Health Record (EHR) system. The eHMP project is a multi-year effort to
"BLD",9078,1,5,0)
evolve a modern, service-oriented Enterprise Health Application
"BLD",9078,1,6,0)
Platform. This platform includes VistA Exchange, the eHMP Clinical
"BLD",9078,1,7,0)
Practice Environment (CPE), as well as clinical knowledge enrichment and
"BLD",9078,1,8,0)
decision support services. VistA Exchange is the clinical data services
"BLD",9078,1,9,0)
engine, federating clinical data from a variety of VA and DoD sources
"BLD",9078,1,10,0)
into an Enterprise Virtual Patient Record (eVPR). The eHMP CPE framework
"BLD",9078,1,11,0)
will incorporate capabilities currently provided by JLV and hi2 HMP.
"BLD",9078,1,12,0)
eHMP CPE will eventually replace the Computerized Patient Record System
"BLD",9078,1,13,0)
(CPRS) as VA?s primary point of care application. eHMP version 1.1
"BLD",9078,1,14,0)
Viewer Edition is the initial product supporting a user interface.
"BLD",9078,1,15,0)
This project is being deployed in phases with each new iteration 
"BLD",9078,1,16,0)
adding new features.
"BLD",9078,1,17,0)
 
"BLD",9078,1,18,0)
 
"BLD",9078,1,19,0)
 
"BLD",9078,1,20,0)
 
"BLD",9078,1,21,0)
Patch Components
"BLD",9078,1,22,0)
================
"BLD",9078,1,23,0)
 
"BLD",9078,1,24,0)
This is a multi-patch build and consists of the following patches:
"BLD",9078,1,25,0)
 
"BLD",9078,1,26,0)
MD*1.0*38
"BLD",9078,1,27,0)
OR*3.0*390
"BLD",9078,1,28,0)
PSB*3.0*79
"BLD",9078,1,29,0)
TIU*1.0*106
"BLD",9078,1,30,0)
GMRC*3.0*80
"BLD",9078,1,31,0)
HMP*2.0*1
"BLD",9078,1,32,0)
 
"BLD",9078,1,33,0)
The following information is specific to the HMP 2.0 patch which is
"BLD",9078,1,34,0)
the primary patch for eHMP. The other
"BLD",9078,1,35,0)
patches contain methods for extracting domain specific data to the eHMP
"BLD",9078,1,36,0)
and JSON Data Store.
"BLD",9078,1,37,0)
 
"BLD",9078,1,38,0)
Files & Fields Associated:
"BLD",9078,1,39,0)
 
"BLD",9078,1,40,0)
File Name (#) Field Name (#) New/Modified/Deleted
"BLD",9078,1,41,0)
------------- -------------- --------------------
"BLD",9078,1,42,0)
HMP SUBSCRIPTION #800000
"BLD",9078,1,43,0)
HMP PATIENT OBJECT #800000.1
"BLD",9078,1,44,0)
HMP OBJECT #800000.11
"BLD",9078,1,45,0)
HMP LIST #800000.2
"BLD",9078,1,46,0)
HMP LIST DOMAIN #800000.21
"BLD",9078,1,47,0)
HMP LIST ATTRIBUTE #800000.22
"BLD",9078,1,48,0)
HMP PANEL #800001
"BLD",9078,1,49,0)
HMP ROSTER #800001.2
"BLD",9078,1,50,0)
HMP ACTIVITY #800001.5
"BLD",9078,1,51,0)
 
"BLD",9078,1,52,0)
 
"BLD",9078,1,53,0)
Additional Information:
"BLD",9078,1,54,0)
 
"BLD",9078,1,55,0)
Patches necessary for This patch to be installed:
"BLD",9078,1,56,0)
 
"BLD",9078,1,57,0)
 
"BLD",9078,1,58,0)
  1 MD*1.0*38                                        
"BLD",9078,1,59,0)
  2 OR*3.0*390                                       
"BLD",9078,1,60,0)
  3 PSB*3.0*79                     
"BLD",9078,1,61,0)
  4 TIU*1.0*106                                      
"BLD",9078,1,62,0)
  5 GMRC*3.0*80                                      
"BLD",9078,1,63,0)
  6 HMP 2.0                                        
"BLD",9078,1,64,0)
 
"BLD",9078,1,65,0)
 
"BLD",9078,1,66,0)
HMP 2.0
"BLD",9078,1,67,0)
 
"BLD",9078,1,68,0)
HEALTH MANAGEMENT PLATFORM
"BLD",9078,1,69,0)
HMPACT    value = 1310173
"BLD",9078,1,70,0)
HMPAP1    value = 154648962
"BLD",9078,1,71,0)
HMPATRG   value = 13049868
"BLD",9078,1,72,0)
HMPCAC    value = 96818205
"BLD",9078,1,73,0)
HMPCORD   value = 7434772
"BLD",9078,1,74,0)
HMPCORD1  value = 194228721
"BLD",9078,1,75,0)
HMPCORD2  value = 67567632
"BLD",9078,1,76,0)
HMPCORD3  value = 150904126
"BLD",9078,1,77,0)
HMPCORD4  value = 139723723
"BLD",9078,1,78,0)
HMPCORD5  value = 86484445
"BLD",9078,1,79,0)
HMPCPAT   value = 1066536
"BLD",9078,1,80,0)
HMPCPAT1  value = 7016891
"BLD",9078,1,81,0)
HMPCPRS   value = 4924700
"BLD",9078,1,82,0)
HMPCRPC   value = 12934677
"BLD",9078,1,83,0)
HMPCRPC1  value = 106973387
"BLD",9078,1,84,0)
HMPD      value = 28800925
"BLD",9078,1,85,0)
HMPDCRC   value = 46664807
"BLD",9078,1,86,0)
HMPDERRH  value = 1975041
"BLD",9078,1,87,0)
HMPDGMPL  value = 27694389
"BLD",9078,1,88,0)
HMPDGMRA  value = 22292681
"BLD",9078,1,89,0)
HMPDGMRC  value = 10807786
"BLD",9078,1,90,0)
HMPDGMV   value = 41514540
"BLD",9078,1,91,0)
HMPDGPF   value = 5516892
"BLD",9078,1,92,0)
HMPDIB    value = 12628696
"BLD",9078,1,93,0)
HMPDJ     value = 33824834
"BLD",9078,1,94,0)
HMPDJ0    value = 88010816
"BLD",9078,1,95,0)
HMPDJ00   value = 133513920
"BLD",9078,1,96,0)
HMPDJ00A  value = 113564667
"BLD",9078,1,97,0)
HMPDJ01   value = 41085471
"BLD",9078,1,98,0)
HMPDJ02   value = 139246483
"BLD",9078,1,99,0)
HMPDJ03   value = 85806963
"BLD",9078,1,100,0)
HMPDJ04   value = 64765097
"BLD",9078,1,101,0)
HMPDJ04A  value = 36508889
"BLD",9078,1,102,0)
HMPDJ04E  value = 10143878
"BLD",9078,1,103,0)
HMPDJ05   value = 79595880
"BLD",9078,1,104,0)
HMPDJ05V  value = 64852450
"BLD",9078,1,105,0)
HMPDJ06   value = 54257858
"BLD",9078,1,106,0)
HMPDJ07   value = 22322346
"BLD",9078,1,107,0)
HMPDJ08   value = 68673644
"BLD",9078,1,108,0)
HMPDJ08A  value = 46989359
"BLD",9078,1,109,0)
HMPDJ09   value = 39057508
"BLD",9078,1,110,0)
HMPDJ09M  value = 10164643
"BLD",9078,1,111,0)
HMPDJ1    value = 18536339
"BLD",9078,1,112,0)
HMPDJ2    value = 21438887
"BLD",9078,1,113,0)
HMPDJFS   value = 69787003
"BLD",9078,1,114,0)
HMPDJFSD  value = 6500303
"BLD",9078,1,115,0)
HMPDJFSG  value = 122582104
"BLD",9078,1,116,0)
HMPDJFSM  value = 89659473
"BLD",9078,1,117,0)
HMPDJFSP  value = 149324597
"BLD",9078,1,118,0)
HMPDJFST  value = 46894611
"BLD",9078,1,119,0)
HMPDJT    value = 9992032
"BLD",9078,1,120,0)
HMPDJX    value = 35974883
"BLD",9078,1,121,0)
HMPDLR    value = 24583034
"BLD",9078,1,122,0)
HMPDLRA   value = 75872905
"BLD",9078,1,123,0)
HMPDLRO   value = 27146176
"BLD",9078,1,124,0)
HMPDMC    value = 57964365
"BLD",9078,1,125,0)
HMPDMDC   value = 44173396
"BLD",9078,1,126,0)
HMPDOR    value = 13171182
"BLD",9078,1,127,0)
HMPDPROC  value = 10503927
"BLD",9078,1,128,0)
HMPDPS    value = 18754698
"BLD",9078,1,129,0)
HMPDPSI   value = 41148802
"BLD",9078,1,130,0)
HMPDPSO   value = 15565576
"BLD",9078,1,131,0)
HMPDPSOR  value = 39015653
"BLD",9078,1,132,0)
HMPDPT    value = 70429024
"BLD",9078,1,133,0)
HMPDPXAM  value = 9554968
"BLD",9078,1,134,0)
HMPDPXED  value = 9765099
"BLD",9078,1,135,0)
HMPDPXHF  value = 10000962
"BLD",9078,1,136,0)
HMPDPXIM  value = 15776836
"BLD",9078,1,137,0)
HMPDPXSK  value = 9640619
"BLD",9078,1,138,0)
HMPDRA    value = 41653266
"BLD",9078,1,139,0)
HMPDSDAM  value = 20015480
"BLD",9078,1,140,0)
HMPDSR    value = 30238500
"BLD",9078,1,141,0)
HMPDTIU   value = 80060367
"BLD",9078,1,142,0)
HMPDTIUX  value = 21288550
"BLD",9078,1,143,0)
HMPDVSIT  value = 89189669
"BLD",9078,1,144,0)
HMPEASU   value = 28117986
"BLD",9078,1,145,0)
HMPEF     value = 210968569
"BLD",9078,1,146,0)
HMPEFSG   value = 7146892
"BLD",9078,1,147,0)
HMPEFSP   value = 44616195
"BLD",9078,1,148,0)
HMPEFST   value = 5355448
"BLD",9078,1,149,0)
HMPEFX    value = 8497176
"BLD",9078,1,150,0)
HMPEHL7   value = 3357275
"BLD",9078,1,151,0)
HMPELAB   value = 5621776
"BLD",9078,1,152,0)
HMPENSZ   value = 68569424
"BLD",9078,1,153,0)
HMPENSZ1  value = 10674596
"BLD",9078,1,154,0)
HMPEQ     value = 26873326
"BLD",9078,1,155,0)
HMPEQLM   value = 111474303
"BLD",9078,1,156,0)
HMPEQLM1  value = 6971880
"BLD",9078,1,157,0)
HMPEQLM2  value = 3216732
"BLD",9078,1,158,0)
HMPEVNT   value = 112664650
"BLD",9078,1,159,0)
HMPFPTC   value = 14517957
"BLD",9078,1,160,0)
HMPHTTP   value = 14238772
"BLD",9078,1,161,0)
HMPIDX    value = 14171209
"BLD",9078,1,162,0)
HMPJSON   value = 11232902
"BLD",9078,1,163,0)
HMPJSOND  value = 70219619
"BLD",9078,1,164,0)
HMPJSONE  value = 24346328
"BLD",9078,1,165,0)
HMPLIST   value = 60978957
"BLD",9078,1,166,0)
HMPMDUTL  value = 50918469
"BLD",9078,1,167,0)
HMPP2I    value = 233946
"BLD",9078,1,168,0)
HMPP3I    value = 73661363
"BLD",9078,1,169,0)
HMPPANEL  value = 9226601
"BLD",9078,1,170,0)
HMPPARAM  value = 15385831
"BLD",9078,1,171,0)
HMPPATS   value = 44774120
"BLD",9078,1,172,0)
HMPPI     value = 298411
"BLD",9078,1,173,0)
HMPPRODC  value = 2553263
"BLD",9078,1,174,0)
HMPPTDEM  value = 12301900
"BLD",9078,1,175,0)
HMPPXPR1  value = 845616
"BLD",9078,1,176,0)
HMPPXRM   value = 12212288
"BLD",9078,1,177,0)
HMPROS2   value = 104804972
"BLD",9078,1,178,0)
HMPROS3   value = 85901883
"BLD",9078,1,179,0)
HMPROS4   value = 90329378
"BLD",9078,1,180,0)
HMPROS5   value = 9592522
"BLD",9078,1,181,0)
HMPROS6   value = 26014820
"BLD",9078,1,182,0)
HMPROS7   value = 23792527
"BLD",9078,1,183,0)
HMPROS8   value = 78575599
"BLD",9078,1,184,0)
HMPSR     value = 404968
"BLD",9078,1,185,0)
HMPTRPC   value = 3719901
"BLD",9078,1,186,0)
HMPTRPC1  value = 41566182
"BLD",9078,1,187,0)
HMPUPD    value = 22706701
"BLD",9078,1,188,0)
HMPUTILS  value = 18637094
"BLD",9078,1,189,0)
HMPYCSI   value = 16398514
"BLD",9078,1,190,0)
HMPYFRP   value = 92726383
"BLD",9078,1,191,0)
HMPYFRP1  value = 46640576
"BLD",9078,1,192,0)
HMPYFRP2  value = 43272246
"BLD",9078,1,193,0)
HMPYPAR   value = 3965687
"BLD",9078,1,194,0)
done 
"BLD",9078,1,195,0)
 
"BLD",9078,1,196,0)
Select BUILD NAME: MD*1.0*38       CLINICAL PROCEDURES
"BLD",9078,1,197,0)
MDCPROTD  value = 6599959
"BLD",9078,1,198,0)
MDPOST38  value = 2283064
"BLD",9078,1,199,0)
done
"BLD",9078,1,200,0)
 
"BLD",9078,1,201,0)
Select BUILD NAME: OR*3.0*390       ORDER ENTRY/RESULTS REPORTING
"BLD",9078,1,202,0)
ORCACT1   value = 49643037
"BLD",9078,1,203,0)
ORCSEND   value = 65938879
"BLD",9078,1,204,0)
ORMBLDOR  value = 5650360
"BLD",9078,1,205,0)
ORWDXA    value = 83177974
"BLD",9078,1,206,0)
done
"BLD",9078,1,207,0)
 
"BLD",9078,1,208,0)
Select BUILD NAME: PSB*3.0*79       BAR CODE MED ADMIN
"BLD",9078,1,209,0)
PSBML     value = 125339367
"BLD",9078,1,210,0)
PSBVPR    value = 2149221
"BLD",9078,1,211,0)
done
"BLD",9078,1,212,0)
 
"BLD",9078,1,213,0)
Select BUILD NAME: TIU*1.0*106       TEXT INTEGRATION UTILITIES
"BLD",9078,1,214,0)
TIUDDX    value = 222239
"BLD",9078,1,215,0)
TIUPS106  value = 3190064
"BLD",9078,1,216,0)
TIUVPR    value = 10950606
"BLD",9078,1,217,0)
done
"BLD",9078,1,218,0)
 
"BLD",9078,1,219,0)
Select BUILD NAME: GMRC*3.0*80       CONSULT/REQUEST TRACKING
"BLD",9078,1,220,0)
GMRCAPI   value = 8248863
"BLD",9078,1,221,0)
done
"BLD",9078,1,222,0)
 
"BLD",9078,1,223,0)
 
"BLD",9078,1,224,0)
 
"BLD",9078,1,225,0)
Forms Associated:
"BLD",9078,1,226,0)
 
"BLD",9078,1,227,0)
Form Name File # New/Modified/Deleted
"BLD",9078,1,228,0)
--------- ------ --------------------
"BLD",9078,1,229,0)
N/A
"BLD",9078,1,230,0)
 
"BLD",9078,1,231,0)
 
"BLD",9078,1,232,0)
Mail Groups Associated:
"BLD",9078,1,233,0)
 
"BLD",9078,1,234,0)
Mail Group Name New/Modified/Deleted
"BLD",9078,1,235,0)
--------------- --------------------
"BLD",9078,1,236,0)
N/A
"BLD",9078,1,237,0)
 
"BLD",9078,1,238,0)
 
"BLD",9078,1,239,0)
Options Associated:
"BLD",9078,1,240,0)
 
"BLD",9078,1,241,0)
Option Name Type New/Modified/Deleted
"BLD",9078,1,242,0)
----------- ---- --------------------
"BLD",9078,1,243,0)
HMP APPLICATION PROXY
"BLD",9078,1,244,0)
HMP APPOINTMENTS
"BLD",9078,1,245,0)
HMP PATIENT ACTIVITY
"BLD",9078,1,246,0)
HMP PATIENT DATA MONITOR
"BLD",9078,1,247,0)
HMP SYNCHRONIZATION CONTEXT
"BLD",9078,1,248,0)
HMP UI CONTEXT
"BLD",9078,1,249,0)
HMP WB PTDEM
"BLD",9078,1,250,0)
HMP WB PTDEM
"BLD",9078,1,251,0)
HMP XU EVENTS
"BLD",9078,1,252,0)
HMPM ADD HMP PATIENT
"BLD",9078,1,253,0)
HMPM ADD HMP USER
"BLD",9078,1,254,0)
HMPM EMERGENCY STOP
"BLD",9078,1,255,0)
HMPM EXTRACT MONITOR
"BLD",9078,1,256,0)
HMPM RESTART FRESHNESS
"BLD",9078,1,257,0)
HMPMGR
"BLD",9078,1,258,0)
 
"BLD",9078,1,259,0)
 
"BLD",9078,1,260,0)
Protocols Associated:
"BLD",9078,1,261,0)
 
"BLD",9078,1,262,0)
Protocol Name New/Modified/Deleted
"BLD",9078,1,263,0)
------------- --------------------
"BLD",9078,1,264,0)
HMP ADT-A04 CLIENT  
"BLD",9078,1,265,0)
HMP ADT-A08 CLIENT  
"BLD",9078,1,266,0)
HMP APPT EVENTS  
"BLD",9078,1,267,0)
HMP DG UPDATES  
"BLD",9078,1,268,0)
HMP GMPL EVENT 
"BLD",9078,1,269,0)
HMP GMRA EVENTS 
"BLD",9078,1,270,0)
HMP INPT EVENTS  
"BLD",9078,1,271,0)
HMP MDC EVENT  
"BLD",9078,1,272,0)
HMP NA EVENTS    
"BLD",9078,1,273,0)
HMP PATIENT APPT TRIGGER    
"BLD",9078,1,274,0)
HMP PCE EVENTS    
"BLD",9078,1,275,0)
HMP PCMM TEAM   
"BLD",9078,1,276,0)
HMP PCMM TEAM POSITION  
"BLD",9078,1,277,0)
HMP PSB EVENTS   
"BLD",9078,1,278,0)
HMP XQOR EVENTS    
"BLD",9078,1,279,0)
HMPM EVT QUE CHANGE DOMAIN    
"BLD",9078,1,280,0)
HMPM EVT QUE CHANGE MAX LISTED  
"BLD",9078,1,281,0)
HMPM EVT QUE CHANGE SERVER     
"BLD",9078,1,282,0)
HMPM EVT QUE DISPLAY DETAILS 
"BLD",9078,1,283,0)
HMPM EVT QUE FILTER 
"BLD",9078,1,284,0)
HMPM EVT QUE FRESHNESS REPORT 
"BLD",9078,1,285,0)
HMPM EVT QUE MGR MENU 
"BLD",9078,1,286,0)
HMPM EVT QUE REFRESH 
"BLD",9078,1,287,0)
HMPM EVT QUE SELECT PATIENT  
"BLD",9078,1,288,0)
HMPM EVT QUE SHOW TEMP GLOBALS     
"BLD",9078,1,289,0)
 
"BLD",9078,1,290,0)
Security Keys Associated:
"BLD",9078,1,291,0)
 
"BLD",9078,1,292,0)
Security Key Name
"BLD",9078,1,293,0)
-----------------
"BLD",9078,1,294,0)
HMP ADMIN
"BLD",9078,1,295,0)
HMP EXPERIMENTAL
"BLD",9078,1,296,0)
 
"BLD",9078,1,297,0)
 
"BLD",9078,1,298,0)
Templates Associated:
"BLD",9078,1,299,0)
 
"BLD",9078,1,300,0)
Template Name Type File Name (#) New/Modified/Deleted
"BLD",9078,1,301,0)
------------- ---- ------------- --------------------
"BLD",9078,1,302,0)
N/A
"BLD",9078,1,303,0)
 
"BLD",9078,1,304,0)
 
"BLD",9078,1,305,0)
New Service Requests (NSRs):
"BLD",9078,1,306,0)
-----------------------------
"BLD",9078,1,307,0)
NSR #20070902
"BLD",9078,1,308,0)
 
"BLD",9078,1,309,0)
 
"BLD",9078,1,310,0)
Patient Safety Issues (PSIs):
"BLD",9078,1,311,0)
------------------------------
"BLD",9078,1,312,0)
N/A
"BLD",9078,1,313,0)
 
"BLD",9078,1,314,0)
 
"BLD",9078,1,315,0)
Remedy Ticket(s) & Overviews:
"BLD",9078,1,316,0)
-----------------------------
"BLD",9078,1,317,0)
N/A
"BLD",9078,1,318,0)
 
"BLD",9078,1,319,0)
 
"BLD",9078,1,320,0)
Test Sites:
"BLD",9078,1,321,0)
-----------
"BLD",9078,1,322,0)
Hampton
"BLD",9078,1,323,0)
Portland
"BLD",9078,1,324,0)
San Diego
"BLD",9078,1,325,0)
Loma Linda
"BLD",9078,1,326,0)
San Antonio
"BLD",9078,1,327,0)
Indianapolis
"BLD",9078,1,328,0)
 
"BLD",9078,1,329,0)
 
"BLD",9078,1,330,0)
 
"BLD",9078,1,331,0)
Documentation Retrieval Instructions:
"BLD",9078,1,332,0)
-------------------------------------
"BLD",9078,1,333,0)
Updated documentation describing the new functionality introduced by this
"BLD",9078,1,334,0)
patch is available.
"BLD",9078,1,335,0)
 
"BLD",9078,1,336,0)
The preferred method is to FTP the files from
"BLD",9078,1,337,0)
ftp://ftp.ftpsrv.domain.ext/. Directory [EHMP]
"BLD",9078,1,338,0)
Username: EHMP Password: EHMP$STORE
"BLD",9078,1,339,0)
 
"BLD",9078,1,340,0)
 
"BLD",9078,1,341,0)
The software distribution includes:
"BLD",9078,1,342,0)
 
"BLD",9078,1,343,0)
FILE NAME DESCRIPTION BLOCK SIZE
"BLD",9078,1,344,0)
HMP_2-0_V5-4.KID KIDS BUILD BLOCKS
"BLD",9078,1,345,0)
 
"BLD",9078,1,346,0)
The documentation will be in the form of Adobe Acrobat files.
"BLD",9078,1,347,0)
 
"BLD",9078,1,348,0)
 
"BLD",9078,1,349,0)
File Name Description Retrieval Format
"BLD",9078,1,350,0)
-------------- -------------------------------- 
"BLD",9078,1,351,0)
----------------------------
"BLD",9078,1,352,0)
HMP_2-0_V5-4.KID eHMP Project initial deploymnet ASCII
"BLD",9078,1,353,0)
 
"BLD",9078,1,354,0)
Patch Installation:
"BLD",9078,1,355,0)
 
"BLD",9078,1,356,0)
 
"BLD",9078,1,357,0)
Pre/Post Installation Overview
"BLD",9078,1,358,0)
------------------------------
"BLD",9078,1,359,0)
N/A
"BLD",9078,1,360,0)
 
"BLD",9078,1,361,0)
 
"BLD",9078,1,362,0)
Installation Instructions
"BLD",9078,1,363,0)
-------------------------
"BLD",9078,1,364,0)
This patch may be installed with users on the system although it is
"BLD",9078,1,365,0)
recommended that it be installed during non-peak hours to minimize
"BLD",9078,1,366,0)
potential disruption to users. This patch should take less than 5 minutes
"BLD",9078,1,367,0)
to install.
"BLD",9078,1,368,0)
 
"BLD",9078,1,369,0)
 
"BLD",9078,1,370,0)
1. From the Kernel Installation and Distribution System Menu, select
"BLD",9078,1,371,0)
the Installation Menu. From this menu, you may elect to use the
"BLD",9078,1,372,0)
following option. When prompted for the INSTALL enter the patch #
"BLD",9078,1,373,0)
(HMP 2.0):
"BLD",9078,1,374,0)
 
"BLD",9078,1,375,0)
a. Backup a Transport Global - This option will create a backup
"BLD",9078,1,376,0)
message of any routines exported with this patch. It will not
"BLD",9078,1,377,0)
backup any other changes such as DD's or templates.
"BLD",9078,1,378,0)
b. Compare Transport Global to Current System - This option will
"BLD",9078,1,379,0)
allow you to view all changes that will be made when this patch
"BLD",9078,1,380,0)
is installed. It compares all components of this patch
"BLD",9078,1,381,0)
(routines, DD's, templates, etc.).
"BLD",9078,1,382,0)
backup any other changes such as DD's or templates.
"BLD",9078,1,383,0)
c. Compare Transport Global to Current System - This option will
"BLD",9078,1,384,0)
allow you to view all changes that will be made when this patch
"BLD",9078,1,385,0)
is installed. It compares all components of this patch
"BLD",9078,1,386,0)
(routines, DD's, templates, etc.).
"BLD",9078,1,387,0)
d. Verify Checksums in Transport Global - This option will allow
"BLD",9078,1,388,0)
you to ensure the integrity of the routines that are in the
"BLD",9078,1,389,0)
backup any other changes such as DD's or templates.
"BLD",9078,1,390,0)
e. Compare Transport Global to Current System - This option will
"BLD",9078,1,391,0)
allow you to view all changes that will be made when this patch
"BLD",9078,1,392,0)
is installed. It compares all components of this patch
"BLD",9078,1,393,0)
(routines, DD's, templates, etc.).
"BLD",9078,1,394,0)
f. Verify Checksums in Transport Global - This option will allow
"BLD",9078,1,395,0)
you to ensure the integrity of the routines that are in the
"BLD",9078,1,396,0)
transport global.
"BLD",9078,1,397,0)
 
"BLD",9078,1,398,0)
2. From the Installation Menu select Load a Distribution. Enter the Host
"BLD",9078,1,399,0)
file
"BLD",9078,1,400,0)
location, then HMP_2-0_V5-4.KID
"BLD",9078,1,401,0)
 
"BLD",9078,1,402,0)
3. From the Installation Menu, select the Install Package(s) option and
"BLD",9078,1,403,0)
choose the patch to install. Enter HMPM 2.0  (Which is the name of the 
"BLD",9078,1,404,0)
multipatch containing the patches listed above.
"BLD",9078,1,405,0)
 
"BLD",9078,1,406,0)
4. When prompted 'Want KIDS to INHIBIT LOGONs during the install? NO//',
"BLD",9078,1,407,0)
respond NO.
"BLD",9078,1,408,0)
 
"BLD",9078,1,409,0)
5. When prompted to Rebuild Menu Options YES//' respond YES.
"BLD",9078,1,410,0)
 
"BLD",9078,1,411,0)
6. When prompted 'Want to DISABLE Scheduled Options, Menu Options, and
"BLD",9078,1,412,0)
Protocols? NO//', respond NO.
"BLD",9078,1,413,0)
 
"BLD",9078,1,414,0)
7. If prompted 'Delay Install (Minutes): (0 - 60): 0//', respond 0.
"BLD",9078,1,415,0)
 
"BLD",9078,1,416,0)
[End of file]
"BLD",9078,4,0)
^9.64PA^800001.2^9
"BLD",9078,4,800000,0)
800000
"BLD",9078,4,800000,222)
y^y^f^^y^^y^o^n
"BLD",9078,4,800000.1,0)
800000.1
"BLD",9078,4,800000.1,222)
y^y^f^^y^^y^o^n
"BLD",9078,4,800000.11,0)
800000.11
"BLD",9078,4,800000.11,222)
y^y^f^^y^^y^o^n
"BLD",9078,4,800000.2,0)
800000.2
"BLD",9078,4,800000.2,222)
y^y^f^^^^n^^
"BLD",9078,4,800000.2,224)

"BLD",9078,4,800000.21,0)
800000.21
"BLD",9078,4,800000.21,222)
y^y^f^^n^^y^o^n
"BLD",9078,4,800000.22,0)
800000.22
"BLD",9078,4,800000.22,222)
y^y^f^^y^^y^o^n
"BLD",9078,4,800001,0)
800001
"BLD",9078,4,800001,222)
y^y^f^^y^^y^o^n
"BLD",9078,4,800001.2,0)
800001.2
"BLD",9078,4,800001.2,222)
y^y^f^^n^^y^o^n
"BLD",9078,4,800001.5,0)
800001.5
"BLD",9078,4,800001.5,222)
y^y^f^^y^^y^o^n
"BLD",9078,4,"B",800000,800000)

"BLD",9078,4,"B",800000.1,800000.1)

"BLD",9078,4,"B",800000.11,800000.11)

"BLD",9078,4,"B",800000.2,800000.2)

"BLD",9078,4,"B",800000.21,800000.21)

"BLD",9078,4,"B",800000.22,800000.22)

"BLD",9078,4,"B",800001,800001)

"BLD",9078,4,"B",800001.2,800001.2)

"BLD",9078,4,"B",800001.5,800001.5)

"BLD",9078,6.3)
53
"BLD",9078,"ABPKG")
n
"BLD",9078,"INI")
PRE^HMPP3I
"BLD",9078,"INIT")
POST^HMPP3I
"BLD",9078,"KRN",0)
^9.67PA^779.2^20
"BLD",9078,"KRN",.4,0)
.4
"BLD",9078,"KRN",.4,"NM",0)
^9.68A^^
"BLD",9078,"KRN",.401,0)
.401
"BLD",9078,"KRN",.401,"NM",0)
^9.68A^^
"BLD",9078,"KRN",.402,0)
.402
"BLD",9078,"KRN",.402,"NM",0)
^9.68A^^
"BLD",9078,"KRN",.403,0)
.403
"BLD",9078,"KRN",.403,"NM",0)
^9.68A^^
"BLD",9078,"KRN",.5,0)
.5
"BLD",9078,"KRN",.5,"NM",0)
^9.68A^^
"BLD",9078,"KRN",.84,0)
.84
"BLD",9078,"KRN",.84,"NM",0)
^9.68A^^
"BLD",9078,"KRN",3.6,0)
3.6
"BLD",9078,"KRN",3.6,"NM",0)
^9.68A^^
"BLD",9078,"KRN",3.8,0)
3.8
"BLD",9078,"KRN",3.8,"NM",0)
^9.68A^^
"BLD",9078,"KRN",9.2,0)
9.2
"BLD",9078,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",9078,"KRN",9.8,0)
9.8
"BLD",9078,"KRN",9.8,"NM",0)
^9.68A^136^136
"BLD",9078,"KRN",9.8,"NM",1,0)
HMP0311P^^0^B14101699
"BLD",9078,"KRN",9.8,"NM",2,0)
HMPACT^^0^B30228842
"BLD",9078,"KRN",9.8,"NM",3,0)
HMPAT^^0^B3211617
"BLD",9078,"KRN",9.8,"NM",4,0)
HMPATRG^^0^B13049868
"BLD",9078,"KRN",9.8,"NM",5,0)
HMPCAC^^0^B96818205
"BLD",9078,"KRN",9.8,"NM",6,0)
HMPCORD^^0^B7434772
"BLD",9078,"KRN",9.8,"NM",7,0)
HMPCORD1^^0^B194228721
"BLD",9078,"KRN",9.8,"NM",8,0)
HMPCORD2^^0^B67567632
"BLD",9078,"KRN",9.8,"NM",9,0)
HMPCORD3^^0^B150904126
"BLD",9078,"KRN",9.8,"NM",10,0)
HMPCORD4^^0^B140947128
"BLD",9078,"KRN",9.8,"NM",11,0)
HMPCORD5^^0^B26286318
"BLD",9078,"KRN",9.8,"NM",12,0)
HMPCPAT1^^0^B7016891
"BLD",9078,"KRN",9.8,"NM",13,0)
HMPCPAT^^0^B1066536
"BLD",9078,"KRN",9.8,"NM",14,0)
HMPCPRS^^0^B4924700
"BLD",9078,"KRN",9.8,"NM",15,0)
HMPCRPC^^0^B12934677
"BLD",9078,"KRN",9.8,"NM",16,0)
HMPCRPC1^^0^B110368005
"BLD",9078,"KRN",9.8,"NM",17,0)
HMPD^^0^B28800925
"BLD",9078,"KRN",9.8,"NM",18,0)
HMPDCRC^^0^B46664807
"BLD",9078,"KRN",9.8,"NM",19,0)
HMPDERRH^^0^B1975041
"BLD",9078,"KRN",9.8,"NM",20,0)
HMPDGMPL^^0^B27694389
"BLD",9078,"KRN",9.8,"NM",21,0)
HMPDGMRA^^0^B22292681
"BLD",9078,"KRN",9.8,"NM",22,0)
HMPDGMRC^^0^B10807786
"BLD",9078,"KRN",9.8,"NM",23,0)
HMPDGMV^^0^B41514540
"BLD",9078,"KRN",9.8,"NM",24,0)
HMPDGPF^^0^B5516892
"BLD",9078,"KRN",9.8,"NM",25,0)
HMPDIB^^0^B12628696
"BLD",9078,"KRN",9.8,"NM",26,0)
HMPDJ0^^0^B95408526
"BLD",9078,"KRN",9.8,"NM",27,0)
HMPDJ00^^0^B138223324
"BLD",9078,"KRN",9.8,"NM",28,0)
HMPDJ00A^^0^B113564667
"BLD",9078,"KRN",9.8,"NM",29,0)
HMPDJ1^^0^B18536339
"BLD",9078,"KRN",9.8,"NM",30,0)
HMPDJ01^^0^B43849243
"BLD",9078,"KRN",9.8,"NM",31,0)
HMPDJ2^^0^B21438887
"BLD",9078,"KRN",9.8,"NM",32,0)
HMPDJ02^^0^B150928804
"BLD",9078,"KRN",9.8,"NM",33,0)
HMPDJ03^^0^B91279550
"BLD",9078,"KRN",9.8,"NM",34,0)
HMPDJ04^^0^B70130990
"BLD",9078,"KRN",9.8,"NM",35,0)
HMPDJ04A^^0^B50417297
"BLD",9078,"KRN",9.8,"NM",36,0)
HMPDJ04E^^0^B10885668
"BLD",9078,"KRN",9.8,"NM",37,0)
HMPDJ05^^0^B81246570
"BLD",9078,"KRN",9.8,"NM",38,0)
HMPDJ06^^0^B58573953
"BLD",9078,"KRN",9.8,"NM",39,0)
HMPDJ07^^0^B24509003
"BLD",9078,"KRN",9.8,"NM",40,0)
HMPDJ08^^0^B70346505
"BLD",9078,"KRN",9.8,"NM",41,0)
HMPDJ08A^^0^B46989359
"BLD",9078,"KRN",9.8,"NM",42,0)
HMPDJ09^^0^B44166095
"BLD",9078,"KRN",9.8,"NM",43,0)
HMPDJ09M^^0^B10971767
"BLD",9078,"KRN",9.8,"NM",44,0)
HMPDJFS^^0^B77693723
"BLD",9078,"KRN",9.8,"NM",45,0)
HMPDJFSD^^0^B6369950
"BLD",9078,"KRN",9.8,"NM",46,0)
HMPDJFSG^^0^B156277366
"BLD",9078,"KRN",9.8,"NM",47,0)
HMPDJFSM^^0^B89659473
"BLD",9078,"KRN",9.8,"NM",48,0)
HMPDJFSP^^0^B168413377
"BLD",9078,"KRN",9.8,"NM",49,0)
HMPDJFST^^0^B46894611
"BLD",9078,"KRN",9.8,"NM",50,0)
HMPDJT^^0^B9992032
"BLD",9078,"KRN",9.8,"NM",51,0)
HMPDJX^^0^B35974883
"BLD",9078,"KRN",9.8,"NM",52,0)
HMPDLR^^0^B24583034
"BLD",9078,"KRN",9.8,"NM",53,0)
HMPDLRA^^0^B75872905
"BLD",9078,"KRN",9.8,"NM",54,0)
HMPDLRO^^0^B27146176
"BLD",9078,"KRN",9.8,"NM",55,0)
HMPDMC^^0^B57964365
"BLD",9078,"KRN",9.8,"NM",56,0)
HMPDMDC^^0^B44173396
"BLD",9078,"KRN",9.8,"NM",57,0)
HMPDOR^^0^B13171182
"BLD",9078,"KRN",9.8,"NM",58,0)
HMPDPROC^^0^B10503927
"BLD",9078,"KRN",9.8,"NM",59,0)
HMPDPSI^^0^B41148802
"BLD",9078,"KRN",9.8,"NM",60,0)
HMPDPSO^^0^B15565576
"BLD",9078,"KRN",9.8,"NM",61,0)
HMPDPSOR^^0^B39015653
"BLD",9078,"KRN",9.8,"NM",62,0)
HMPDPT^^0^B70429024
"BLD",9078,"KRN",9.8,"NM",63,0)
HMPDPXAM^^0^B9554968
"BLD",9078,"KRN",9.8,"NM",64,0)
HMPDPXED^^0^B9765099
"BLD",9078,"KRN",9.8,"NM",65,0)
HMPDPXHF^^0^B10000962
"BLD",9078,"KRN",9.8,"NM",66,0)
HMPDPXIM^^0^B15776836
"BLD",9078,"KRN",9.8,"NM",67,0)
HMPDPXSK^^0^B9640619
"BLD",9078,"KRN",9.8,"NM",68,0)
HMPDRA^^0^B41653266
"BLD",9078,"KRN",9.8,"NM",69,0)
HMPDSDAM^^0^B20015480
"BLD",9078,"KRN",9.8,"NM",70,0)
HMPDSR^^0^B30238500
"BLD",9078,"KRN",9.8,"NM",71,0)
HMPDTIU^^0^B80060367
"BLD",9078,"KRN",9.8,"NM",72,0)
HMPDTIUX^^0^B21288550
"BLD",9078,"KRN",9.8,"NM",73,0)
HMPEASU^^0^B28117986
"BLD",9078,"KRN",9.8,"NM",74,0)
HMPEF^^0^B247555818
"BLD",9078,"KRN",9.8,"NM",75,0)
HMPEFSG^^0^B7146892
"BLD",9078,"KRN",9.8,"NM",76,0)
HMPEFSP^^0^B44616195
"BLD",9078,"KRN",9.8,"NM",77,0)
HMPEFST^^0^B5355448
"BLD",9078,"KRN",9.8,"NM",78,0)
HMPEFX^^0^B8497176
"BLD",9078,"KRN",9.8,"NM",79,0)
HMPEHL7^^0^B3357275
"BLD",9078,"KRN",9.8,"NM",80,0)
HMPELAB^^0^B5621776
"BLD",9078,"KRN",9.8,"NM",81,0)
HMPENSZ^^0^B68569424
"BLD",9078,"KRN",9.8,"NM",82,0)
HMPENSZ1^^0^B10674596
"BLD",9078,"KRN",9.8,"NM",83,0)
HMPEQ^^0^B26873326
"BLD",9078,"KRN",9.8,"NM",84,0)
HMPEQLM^^0^B111474303
"BLD",9078,"KRN",9.8,"NM",85,0)
HMPEQLM1^^0^B6971880
"BLD",9078,"KRN",9.8,"NM",86,0)
HMPEQLM2^^0^B3216732
"BLD",9078,"KRN",9.8,"NM",87,0)
HMPEVNT^^0^B117308146
"BLD",9078,"KRN",9.8,"NM",88,0)
HMPFPTC^^0^B14517957
"BLD",9078,"KRN",9.8,"NM",89,0)
HMPHTTP^^0^B14238772
"BLD",9078,"KRN",9.8,"NM",90,0)
HMPIDX^^0^B14171209
"BLD",9078,"KRN",9.8,"NM",91,0)
HMPJSON^^0^B11232902
"BLD",9078,"KRN",9.8,"NM",92,0)
HMPJSOND^^0^B70219619
"BLD",9078,"KRN",9.8,"NM",93,0)
HMPJSONE^^0^B24346328
"BLD",9078,"KRN",9.8,"NM",94,0)
HMPLIST^^0^B60978957
"BLD",9078,"KRN",9.8,"NM",95,0)
HMPMDUTL^^0^B50918469
"BLD",9078,"KRN",9.8,"NM",96,0)
HMPP2I^^0^B233946
"BLD",9078,"KRN",9.8,"NM",97,0)
HMPP3I^^0^B74432110
"BLD",9078,"KRN",9.8,"NM",98,0)
HMPPANEL^^0^B9226601
"BLD",9078,"KRN",9.8,"NM",99,0)
HMPPARAM^^0^B15385831
"BLD",9078,"KRN",9.8,"NM",100,0)
HMPPATS^^0^B44774120
"BLD",9078,"KRN",9.8,"NM",101,0)
HMPPI^^0^B298411
"BLD",9078,"KRN",9.8,"NM",102,0)
HMPPRODC^^0^B2553263
"BLD",9078,"KRN",9.8,"NM",103,0)
HMPPRXY2^^0^B14165386
"BLD",9078,"KRN",9.8,"NM",104,0)
HMPPTDEM^^0^B12301900
"BLD",9078,"KRN",9.8,"NM",105,0)
HMPPXPR1^^0^B845616
"BLD",9078,"KRN",9.8,"NM",106,0)
HMPPXRM^^0^B12212288
"BLD",9078,"KRN",9.8,"NM",107,0)
HMPROS2^^0^B104804972
"BLD",9078,"KRN",9.8,"NM",108,0)
HMPROS3^^0^B85901883
"BLD",9078,"KRN",9.8,"NM",109,0)
HMPROS4^^0^B90329378
"BLD",9078,"KRN",9.8,"NM",110,0)
HMPROS5^^0^B9592522
"BLD",9078,"KRN",9.8,"NM",111,0)
HMPROS6^^0^B26014820
"BLD",9078,"KRN",9.8,"NM",112,0)
HMPROS7^^0^B23792527
"BLD",9078,"KRN",9.8,"NM",113,0)
HMPROS8^^0^B77589966
"BLD",9078,"KRN",9.8,"NM",114,0)
HMPSR^^0^B404968
"BLD",9078,"KRN",9.8,"NM",115,0)
HMPSTMP^^0^B57667855
"BLD",9078,"KRN",9.8,"NM",116,0)
HMPTFU2^^0^B33657314
"BLD",9078,"KRN",9.8,"NM",117,0)
HMPTRPC^^0^B3719901
"BLD",9078,"KRN",9.8,"NM",118,0)
HMPTRPC1^^0^B41566182
"BLD",9078,"KRN",9.8,"NM",119,0)
HMPUPD^^0^B22706701
"BLD",9078,"KRN",9.8,"NM",120,0)
HMPUTIL1^^0^B31443785
"BLD",9078,"KRN",9.8,"NM",121,0)
HMPUTILS^^0^B213811808
"BLD",9078,"KRN",9.8,"NM",122,0)
HMPWB^^0^B1537700
"BLD",9078,"KRN",9.8,"NM",123,0)
HMPWB2^^0^B39490690
"BLD",9078,"KRN",9.8,"NM",124,0)
HMPYCSI^^0^B16398514
"BLD",9078,"KRN",9.8,"NM",125,0)
HMPYCSO^^0^B21641505
"BLD",9078,"KRN",9.8,"NM",126,0)
HMPWB1^^0^B49750558
"BLD",9078,"KRN",9.8,"NM",127,0)
HMPYFRP^^0^B92765563
"BLD",9078,"KRN",9.8,"NM",128,0)
HMPYFRP1^^0^B46640576
"BLD",9078,"KRN",9.8,"NM",129,0)
HMPYFRP2^^0^B43272246
"BLD",9078,"KRN",9.8,"NM",130,0)
HMPYPAR^^0^B3965687
"BLD",9078,"KRN",9.8,"NM",131,0)
HMPZ0218^^0^B5541697
"BLD",9078,"KRN",9.8,"NM",132,0)
HMPDJ^^0^B33824834
"BLD",9078,"KRN",9.8,"NM",133,0)
HMPDE811^^0^B19118401
"BLD",9078,"KRN",9.8,"NM",134,0)
HMPDPS^^0^B18754698
"BLD",9078,"KRN",9.8,"NM",135,0)
HMPDJ05V^^0^B66330160
"BLD",9078,"KRN",9.8,"NM",136,0)
HMPDVSIT^^0^B89189669
"BLD",9078,"KRN",9.8,"NM","B","HMP0311P",1)

"BLD",9078,"KRN",9.8,"NM","B","HMPACT",2)

"BLD",9078,"KRN",9.8,"NM","B","HMPAT",3)

"BLD",9078,"KRN",9.8,"NM","B","HMPATRG",4)

"BLD",9078,"KRN",9.8,"NM","B","HMPCAC",5)

"BLD",9078,"KRN",9.8,"NM","B","HMPCORD",6)

"BLD",9078,"KRN",9.8,"NM","B","HMPCORD1",7)

"BLD",9078,"KRN",9.8,"NM","B","HMPCORD2",8)

"BLD",9078,"KRN",9.8,"NM","B","HMPCORD3",9)

"BLD",9078,"KRN",9.8,"NM","B","HMPCORD4",10)

"BLD",9078,"KRN",9.8,"NM","B","HMPCORD5",11)

"BLD",9078,"KRN",9.8,"NM","B","HMPCPAT",13)

"BLD",9078,"KRN",9.8,"NM","B","HMPCPAT1",12)

"BLD",9078,"KRN",9.8,"NM","B","HMPCPRS",14)

"BLD",9078,"KRN",9.8,"NM","B","HMPCRPC",15)

"BLD",9078,"KRN",9.8,"NM","B","HMPCRPC1",16)

"BLD",9078,"KRN",9.8,"NM","B","HMPD",17)

"BLD",9078,"KRN",9.8,"NM","B","HMPDCRC",18)

"BLD",9078,"KRN",9.8,"NM","B","HMPDE811",133)

"BLD",9078,"KRN",9.8,"NM","B","HMPDERRH",19)

"BLD",9078,"KRN",9.8,"NM","B","HMPDGMPL",20)

"BLD",9078,"KRN",9.8,"NM","B","HMPDGMRA",21)

"BLD",9078,"KRN",9.8,"NM","B","HMPDGMRC",22)

"BLD",9078,"KRN",9.8,"NM","B","HMPDGMV",23)

"BLD",9078,"KRN",9.8,"NM","B","HMPDGPF",24)

"BLD",9078,"KRN",9.8,"NM","B","HMPDIB",25)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ",132)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ0",26)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ00",27)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ00A",28)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ01",30)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ02",32)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ03",33)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ04",34)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ04A",35)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ04E",36)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ05",37)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ05V",135)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ06",38)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ07",39)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ08",40)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ08A",41)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ09",42)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ09M",43)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ1",29)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJ2",31)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJFS",44)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJFSD",45)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJFSG",46)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJFSM",47)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJFSP",48)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJFST",49)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJT",50)

"BLD",9078,"KRN",9.8,"NM","B","HMPDJX",51)

"BLD",9078,"KRN",9.8,"NM","B","HMPDLR",52)

"BLD",9078,"KRN",9.8,"NM","B","HMPDLRA",53)

"BLD",9078,"KRN",9.8,"NM","B","HMPDLRO",54)

"BLD",9078,"KRN",9.8,"NM","B","HMPDMC",55)

"BLD",9078,"KRN",9.8,"NM","B","HMPDMDC",56)

"BLD",9078,"KRN",9.8,"NM","B","HMPDOR",57)

"BLD",9078,"KRN",9.8,"NM","B","HMPDPROC",58)

"BLD",9078,"KRN",9.8,"NM","B","HMPDPS",134)

"BLD",9078,"KRN",9.8,"NM","B","HMPDPSI",59)

"BLD",9078,"KRN",9.8,"NM","B","HMPDPSO",60)

"BLD",9078,"KRN",9.8,"NM","B","HMPDPSOR",61)

"BLD",9078,"KRN",9.8,"NM","B","HMPDPT",62)

"BLD",9078,"KRN",9.8,"NM","B","HMPDPXAM",63)

"BLD",9078,"KRN",9.8,"NM","B","HMPDPXED",64)

"BLD",9078,"KRN",9.8,"NM","B","HMPDPXHF",65)

"BLD",9078,"KRN",9.8,"NM","B","HMPDPXIM",66)

"BLD",9078,"KRN",9.8,"NM","B","HMPDPXSK",67)

"BLD",9078,"KRN",9.8,"NM","B","HMPDRA",68)

"BLD",9078,"KRN",9.8,"NM","B","HMPDSDAM",69)

"BLD",9078,"KRN",9.8,"NM","B","HMPDSR",70)

"BLD",9078,"KRN",9.8,"NM","B","HMPDTIU",71)

"BLD",9078,"KRN",9.8,"NM","B","HMPDTIUX",72)

"BLD",9078,"KRN",9.8,"NM","B","HMPDVSIT",136)

"BLD",9078,"KRN",9.8,"NM","B","HMPEASU",73)

"BLD",9078,"KRN",9.8,"NM","B","HMPEF",74)

"BLD",9078,"KRN",9.8,"NM","B","HMPEFSG",75)

"BLD",9078,"KRN",9.8,"NM","B","HMPEFSP",76)

"BLD",9078,"KRN",9.8,"NM","B","HMPEFST",77)

"BLD",9078,"KRN",9.8,"NM","B","HMPEFX",78)

"BLD",9078,"KRN",9.8,"NM","B","HMPEHL7",79)

"BLD",9078,"KRN",9.8,"NM","B","HMPELAB",80)

"BLD",9078,"KRN",9.8,"NM","B","HMPENSZ",81)

"BLD",9078,"KRN",9.8,"NM","B","HMPENSZ1",82)

"BLD",9078,"KRN",9.8,"NM","B","HMPEQ",83)

"BLD",9078,"KRN",9.8,"NM","B","HMPEQLM",84)

"BLD",9078,"KRN",9.8,"NM","B","HMPEQLM1",85)

"BLD",9078,"KRN",9.8,"NM","B","HMPEQLM2",86)

"BLD",9078,"KRN",9.8,"NM","B","HMPEVNT",87)

"BLD",9078,"KRN",9.8,"NM","B","HMPFPTC",88)

"BLD",9078,"KRN",9.8,"NM","B","HMPHTTP",89)

"BLD",9078,"KRN",9.8,"NM","B","HMPIDX",90)

"BLD",9078,"KRN",9.8,"NM","B","HMPJSON",91)

"BLD",9078,"KRN",9.8,"NM","B","HMPJSOND",92)

"BLD",9078,"KRN",9.8,"NM","B","HMPJSONE",93)

"BLD",9078,"KRN",9.8,"NM","B","HMPLIST",94)

"BLD",9078,"KRN",9.8,"NM","B","HMPMDUTL",95)

"BLD",9078,"KRN",9.8,"NM","B","HMPP2I",96)

"BLD",9078,"KRN",9.8,"NM","B","HMPP3I",97)

"BLD",9078,"KRN",9.8,"NM","B","HMPPANEL",98)

"BLD",9078,"KRN",9.8,"NM","B","HMPPARAM",99)

"BLD",9078,"KRN",9.8,"NM","B","HMPPATS",100)

"BLD",9078,"KRN",9.8,"NM","B","HMPPI",101)

"BLD",9078,"KRN",9.8,"NM","B","HMPPRODC",102)

"BLD",9078,"KRN",9.8,"NM","B","HMPPRXY2",103)

"BLD",9078,"KRN",9.8,"NM","B","HMPPTDEM",104)

"BLD",9078,"KRN",9.8,"NM","B","HMPPXPR1",105)

"BLD",9078,"KRN",9.8,"NM","B","HMPPXRM",106)

"BLD",9078,"KRN",9.8,"NM","B","HMPROS2",107)

"BLD",9078,"KRN",9.8,"NM","B","HMPROS3",108)

"BLD",9078,"KRN",9.8,"NM","B","HMPROS4",109)

"BLD",9078,"KRN",9.8,"NM","B","HMPROS5",110)

"BLD",9078,"KRN",9.8,"NM","B","HMPROS6",111)

"BLD",9078,"KRN",9.8,"NM","B","HMPROS7",112)

"BLD",9078,"KRN",9.8,"NM","B","HMPROS8",113)

"BLD",9078,"KRN",9.8,"NM","B","HMPSR",114)

"BLD",9078,"KRN",9.8,"NM","B","HMPSTMP",115)

"BLD",9078,"KRN",9.8,"NM","B","HMPTFU2",116)

"BLD",9078,"KRN",9.8,"NM","B","HMPTRPC",117)

"BLD",9078,"KRN",9.8,"NM","B","HMPTRPC1",118)

"BLD",9078,"KRN",9.8,"NM","B","HMPUPD",119)

"BLD",9078,"KRN",9.8,"NM","B","HMPUTIL1",120)

"BLD",9078,"KRN",9.8,"NM","B","HMPUTILS",121)

"BLD",9078,"KRN",9.8,"NM","B","HMPWB",122)

"BLD",9078,"KRN",9.8,"NM","B","HMPWB1",126)

"BLD",9078,"KRN",9.8,"NM","B","HMPWB2",123)

"BLD",9078,"KRN",9.8,"NM","B","HMPYCSI",124)

"BLD",9078,"KRN",9.8,"NM","B","HMPYCSO",125)

"BLD",9078,"KRN",9.8,"NM","B","HMPYFRP",127)

"BLD",9078,"KRN",9.8,"NM","B","HMPYFRP1",128)

"BLD",9078,"KRN",9.8,"NM","B","HMPYFRP2",129)

"BLD",9078,"KRN",9.8,"NM","B","HMPYPAR",130)

"BLD",9078,"KRN",9.8,"NM","B","HMPZ0218",131)

"BLD",9078,"KRN",19,0)
19
"BLD",9078,"KRN",19,"NM",0)
^9.68A^16^16
"BLD",9078,"KRN",19,"NM",1,0)
HMP APPLICATION PROXY^^0
"BLD",9078,"KRN",19,"NM",2,0)
HMP APPOINTMENTS^^0
"BLD",9078,"KRN",19,"NM",3,0)
HMP PATIENT ACTIVITY^^0
"BLD",9078,"KRN",19,"NM",4,0)
HMP PATIENT DATA MONITOR^^0
"BLD",9078,"KRN",19,"NM",5,0)
HMP SYNCHRONIZATION CONTEXT^^0
"BLD",9078,"KRN",19,"NM",6,0)
HMP UI CONTEXT^^0
"BLD",9078,"KRN",19,"NM",7,0)
HMP WB PTDEM^^0
"BLD",9078,"KRN",19,"NM",8,0)
HMP XU EVENTS^^0
"BLD",9078,"KRN",19,"NM",9,0)
HMPM ADD HMP PATIENT^^0
"BLD",9078,"KRN",19,"NM",10,0)
HMPM ADD HMP USER^^0
"BLD",9078,"KRN",19,"NM",11,0)
HMPM EMERGENCY STOP^^0
"BLD",9078,"KRN",19,"NM",12,0)
HMPM EXTRACT MONITOR^^0
"BLD",9078,"KRN",19,"NM",13,0)
HMPM RESTART FRESHNESS^^0
"BLD",9078,"KRN",19,"NM",14,0)
HMPMGR^^0
"BLD",9078,"KRN",19,"NM",15,0)
XU USER ADD^^0
"BLD",9078,"KRN",19,"NM",16,0)
HMP WB DOMAINS^^0
"BLD",9078,"KRN",19,"NM","B","HMP APPLICATION PROXY",1)

"BLD",9078,"KRN",19,"NM","B","HMP APPOINTMENTS",2)

"BLD",9078,"KRN",19,"NM","B","HMP PATIENT ACTIVITY",3)

"BLD",9078,"KRN",19,"NM","B","HMP PATIENT DATA MONITOR",4)

"BLD",9078,"KRN",19,"NM","B","HMP SYNCHRONIZATION CONTEXT",5)

"BLD",9078,"KRN",19,"NM","B","HMP UI CONTEXT",6)

"BLD",9078,"KRN",19,"NM","B","HMP WB DOMAINS",16)

"BLD",9078,"KRN",19,"NM","B","HMP WB PTDEM",7)

"BLD",9078,"KRN",19,"NM","B","HMP XU EVENTS",8)

"BLD",9078,"KRN",19,"NM","B","HMPM ADD HMP PATIENT",9)

"BLD",9078,"KRN",19,"NM","B","HMPM ADD HMP USER",10)

"BLD",9078,"KRN",19,"NM","B","HMPM EMERGENCY STOP",11)

"BLD",9078,"KRN",19,"NM","B","HMPM EXTRACT MONITOR",12)

"BLD",9078,"KRN",19,"NM","B","HMPM RESTART FRESHNESS",13)

"BLD",9078,"KRN",19,"NM","B","HMPMGR",14)

"BLD",9078,"KRN",19,"NM","B","XU USER ADD",15)

"BLD",9078,"KRN",19.1,0)
19.1
"BLD",9078,"KRN",19.1,"NM",0)
^9.68A^2^2
"BLD",9078,"KRN",19.1,"NM",1,0)
HMP ADMIN^^0
"BLD",9078,"KRN",19.1,"NM",2,0)
HMP EXPERIMENTAL^^0
"BLD",9078,"KRN",19.1,"NM","B","HMP ADMIN",1)

"BLD",9078,"KRN",19.1,"NM","B","HMP EXPERIMENTAL",2)

"BLD",9078,"KRN",101,0)
101
"BLD",9078,"KRN",101,"NM",0)
^9.68A^26^25
"BLD",9078,"KRN",101,"NM",1,0)
HMP ADT-A04 CLIENT^^0
"BLD",9078,"KRN",101,"NM",2,0)
HMP ADT-A08 CLIENT^^0
"BLD",9078,"KRN",101,"NM",3,0)
HMP APPT EVENTS^^0
"BLD",9078,"KRN",101,"NM",4,0)
HMP DG UPDATES^^0
"BLD",9078,"KRN",101,"NM",5,0)
HMP GMPL EVENT^^0
"BLD",9078,"KRN",101,"NM",6,0)
HMP GMRA EVENTS^^0
"BLD",9078,"KRN",101,"NM",7,0)
HMP INPT EVENTS^^0
"BLD",9078,"KRN",101,"NM",8,0)
HMP MDC EVENT^^0
"BLD",9078,"KRN",101,"NM",9,0)
HMP NA EVENTS^^0
"BLD",9078,"KRN",101,"NM",11,0)
HMP PCE EVENTS^^0
"BLD",9078,"KRN",101,"NM",12,0)
HMP PCMM TEAM^^0
"BLD",9078,"KRN",101,"NM",13,0)
HMP PCMM TEAM POSITION^^0
"BLD",9078,"KRN",101,"NM",14,0)
HMP PSB EVENTS^^0
"BLD",9078,"KRN",101,"NM",15,0)
HMP XQOR EVENTS^^0
"BLD",9078,"KRN",101,"NM",16,0)
HMPM EVT QUE CHANGE DOMAIN^^0
"BLD",9078,"KRN",101,"NM",17,0)
HMPM EVT QUE MGR MENU^^0
"BLD",9078,"KRN",101,"NM",18,0)
HMPM EVT QUE CHANGE MAX LISTED^^0
"BLD",9078,"KRN",101,"NM",19,0)
HMPM EVT QUE SELECT PATIENT^^0
"BLD",9078,"KRN",101,"NM",20,0)
HMPM EVT QUE SHOW TEMP GLOBALS^^0
"BLD",9078,"KRN",101,"NM",21,0)
HMPM EVT QUE FILTER^^0
"BLD",9078,"KRN",101,"NM",22,0)
HMPM EVT QUE FRESHNESS REPORT^^0
"BLD",9078,"KRN",101,"NM",23,0)
HMPM EVT QUE DISPLAY DETAILS^^0
"BLD",9078,"KRN",101,"NM",24,0)
HMPM EVT QUE REFRESH^^0
"BLD",9078,"KRN",101,"NM",25,0)
HMPM EVT QUE CHANGE SERVER^^0
"BLD",9078,"KRN",101,"NM",26,0)
HMP DGPF ASSIGN FLAG^^0
"BLD",9078,"KRN",101,"NM","B","HMP ADT-A04 CLIENT",1)

"BLD",9078,"KRN",101,"NM","B","HMP ADT-A08 CLIENT",2)

"BLD",9078,"KRN",101,"NM","B","HMP APPT EVENTS",3)

"BLD",9078,"KRN",101,"NM","B","HMP DG UPDATES",4)

"BLD",9078,"KRN",101,"NM","B","HMP DGPF ASSIGN FLAG",26)

"BLD",9078,"KRN",101,"NM","B","HMP GMPL EVENT",5)

"BLD",9078,"KRN",101,"NM","B","HMP GMRA EVENTS",6)

"BLD",9078,"KRN",101,"NM","B","HMP INPT EVENTS",7)

"BLD",9078,"KRN",101,"NM","B","HMP MDC EVENT",8)

"BLD",9078,"KRN",101,"NM","B","HMP NA EVENTS",9)

"BLD",9078,"KRN",101,"NM","B","HMP PCE EVENTS",11)

"BLD",9078,"KRN",101,"NM","B","HMP PCMM TEAM",12)

"BLD",9078,"KRN",101,"NM","B","HMP PCMM TEAM POSITION",13)

"BLD",9078,"KRN",101,"NM","B","HMP PSB EVENTS",14)

"BLD",9078,"KRN",101,"NM","B","HMP XQOR EVENTS",15)

"BLD",9078,"KRN",101,"NM","B","HMPM EVT QUE CHANGE DOMAIN",16)

"BLD",9078,"KRN",101,"NM","B","HMPM EVT QUE CHANGE MAX LISTED",18)

"BLD",9078,"KRN",101,"NM","B","HMPM EVT QUE CHANGE SERVER",25)

"BLD",9078,"KRN",101,"NM","B","HMPM EVT QUE DISPLAY DETAILS",23)

"BLD",9078,"KRN",101,"NM","B","HMPM EVT QUE FILTER",21)

"BLD",9078,"KRN",101,"NM","B","HMPM EVT QUE FRESHNESS REPORT",22)

"BLD",9078,"KRN",101,"NM","B","HMPM EVT QUE MGR MENU",17)

"BLD",9078,"KRN",101,"NM","B","HMPM EVT QUE REFRESH",24)

"BLD",9078,"KRN",101,"NM","B","HMPM EVT QUE SELECT PATIENT",19)

"BLD",9078,"KRN",101,"NM","B","HMPM EVT QUE SHOW TEMP GLOBALS",20)

"BLD",9078,"KRN",409.61,0)
409.61
"BLD",9078,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",9078,"KRN",771,0)
771
"BLD",9078,"KRN",771,"NM",0)
^9.68A^1^1
"BLD",9078,"KRN",771,"NM",1,0)
HMP HL7^^0
"BLD",9078,"KRN",771,"NM","B","HMP HL7",1)

"BLD",9078,"KRN",779.2,0)
779.2
"BLD",9078,"KRN",870,0)
870
"BLD",9078,"KRN",870,"NM",0)
^9.68A^^
"BLD",9078,"KRN",8989.51,0)
8989.51
"BLD",9078,"KRN",8989.51,"NM",0)
^9.68A^9^9
"BLD",9078,"KRN",8989.51,"NM",1,0)
HMP CPRS PATH^^0
"BLD",9078,"KRN",8989.51,"NM",2,0)
HMP JSON SCHEMA^^0
"BLD",9078,"KRN",8989.51,"NM",3,0)
HMP LOCATIONS^^0
"BLD",9078,"KRN",8989.51,"NM",4,0)
HMP PARAMETERS^^0
"BLD",9078,"KRN",8989.51,"NM",5,0)
HMP SYSTEM NAME^^0
"BLD",9078,"KRN",8989.51,"NM",6,0)
HMP SYSTEM NAME^^0
"BLD",9078,"KRN",8989.51,"NM",7,0)
HMP SYSTEM NAME^^0
"BLD",9078,"KRN",8989.51,"NM",8,0)
HMP TASK WAIT TIME^^0
"BLD",9078,"KRN",8989.51,"NM",9,0)
HMP VERSION^^0
"BLD",9078,"KRN",8989.51,"NM","B","HMP CPRS PATH",1)

"BLD",9078,"KRN",8989.51,"NM","B","HMP JSON SCHEMA",2)

"BLD",9078,"KRN",8989.51,"NM","B","HMP LOCATIONS",3)

"BLD",9078,"KRN",8989.51,"NM","B","HMP PARAMETERS",4)

"BLD",9078,"KRN",8989.51,"NM","B","HMP SYSTEM NAME",5)

"BLD",9078,"KRN",8989.51,"NM","B","HMP SYSTEM NAME",6)

"BLD",9078,"KRN",8989.51,"NM","B","HMP SYSTEM NAME",7)

"BLD",9078,"KRN",8989.51,"NM","B","HMP TASK WAIT TIME",8)

"BLD",9078,"KRN",8989.51,"NM","B","HMP VERSION",9)

"BLD",9078,"KRN",8989.52,0)
8989.52
"BLD",9078,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",9078,"KRN",8994,0)
8994
"BLD",9078,"KRN",8994,"NM",0)
^9.68A^36^36
"BLD",9078,"KRN",8994,"NM",1,0)
HMP APPOINTMENTS^^0
"BLD",9078,"KRN",8994,"NM",2,0)
HMP DATA VERSION^^0
"BLD",9078,"KRN",8994,"NM",3,0)
HMP DELETE OBJECT^^0
"BLD",9078,"KRN",8994,"NM",4,0)
HMP DELETE ROSTER^^0
"BLD",9078,"KRN",8994,"NM",5,0)
HMP GET CHECKSUM^^0
"BLD",9078,"KRN",8994,"NM",6,0)
HMP GET OBJECT^^0
"BLD",9078,"KRN",8994,"NM",7,0)
HMP GET OPERATIONAL DATA^^0
"BLD",9078,"KRN",8994,"NM",8,0)
HMP GET PATIENT DATA^^0
"BLD",9078,"KRN",8994,"NM",9,0)
HMP GET PATIENT DATA JSON^^0
"BLD",9078,"KRN",8994,"NM",10,0)
HMP GET REFERENCE DATA^^0
"BLD",9078,"KRN",8994,"NM",11,0)
HMP GET ROSTER LIST^^0
"BLD",9078,"KRN",8994,"NM",12,0)
HMP GET SOURCE^^0
"BLD",9078,"KRN",8994,"NM",13,0)
HMP INPATIENTS^^0
"BLD",9078,"KRN",8994,"NM",14,0)
HMP PATIENT ACTIVITY^^0
"BLD",9078,"KRN",8994,"NM",15,0)
HMP PREVIEW ROSTER^^0
"BLD",9078,"KRN",8994,"NM",16,0)
HMP PUT DEMOGRAPHICS^^0
"BLD",9078,"KRN",8994,"NM",17,0)
HMP PUT OBJECT^^0
"BLD",9078,"KRN",8994,"NM",18,0)
HMP PUT PATIENT DATA^^0
"BLD",9078,"KRN",8994,"NM",19,0)
HMP ROSTER PATIENTS^^0
"BLD",9078,"KRN",8994,"NM",20,0)
HMP ROSTERS^^0
"BLD",9078,"KRN",8994,"NM",21,0)
HMP SUBSCRIBE^^0
"BLD",9078,"KRN",8994,"NM",22,0)
HMP SUBSCRIBE ROSTERS^^0
"BLD",9078,"KRN",8994,"NM",23,0)
HMP UPDATE ROSTER^^0
"BLD",9078,"KRN",8994,"NM",24,0)
HMP WRITEBACK PT DEM^^0
"BLD",9078,"KRN",8994,"NM",25,0)
HMPCORD RPC^^0
"BLD",9078,"KRN",8994,"NM",26,0)
HMPCPAT RPC^^0
"BLD",9078,"KRN",8994,"NM",27,0)
HMPCPRS RPC^^0
"BLD",9078,"KRN",8994,"NM",28,0)
HMPCRPC RPC^^0
"BLD",9078,"KRN",8994,"NM",29,0)
HMPCRPC RPCCHAIN^^0
"BLD",9078,"KRN",8994,"NM",30,0)
HMPDJFS API^^0
"BLD",9078,"KRN",8994,"NM",31,0)
HMPDJFS DELSUB^^0
"BLD",9078,"KRN",8994,"NM",32,0)
HMPFPTC CHKS^^0
"BLD",9078,"KRN",8994,"NM",33,0)
HMPFPTC LOG^^0
"BLD",9078,"KRN",8994,"NM",34,0)
HMP LOCAL CORRESPONDINGIDS^^0
"BLD",9078,"KRN",8994,"NM",35,0)
HMP LOCAL GETCORRESPONDINGIDS^^0
"BLD",9078,"KRN",8994,"NM",36,0)
HMP PUT OPERATIONAL DATA^^0
"BLD",9078,"KRN",8994,"NM","B","HMP APPOINTMENTS",1)

"BLD",9078,"KRN",8994,"NM","B","HMP DATA VERSION",2)

"BLD",9078,"KRN",8994,"NM","B","HMP DELETE OBJECT",3)

"BLD",9078,"KRN",8994,"NM","B","HMP DELETE ROSTER",4)

"BLD",9078,"KRN",8994,"NM","B","HMP GET CHECKSUM",5)

"BLD",9078,"KRN",8994,"NM","B","HMP GET OBJECT",6)

"BLD",9078,"KRN",8994,"NM","B","HMP GET OPERATIONAL DATA",7)

"BLD",9078,"KRN",8994,"NM","B","HMP GET PATIENT DATA",8)

"BLD",9078,"KRN",8994,"NM","B","HMP GET PATIENT DATA JSON",9)

"BLD",9078,"KRN",8994,"NM","B","HMP GET REFERENCE DATA",10)

"BLD",9078,"KRN",8994,"NM","B","HMP GET ROSTER LIST",11)

"BLD",9078,"KRN",8994,"NM","B","HMP GET SOURCE",12)

"BLD",9078,"KRN",8994,"NM","B","HMP INPATIENTS",13)

"BLD",9078,"KRN",8994,"NM","B","HMP LOCAL CORRESPONDINGIDS",34)

"BLD",9078,"KRN",8994,"NM","B","HMP LOCAL GETCORRESPONDINGIDS",35)

"BLD",9078,"KRN",8994,"NM","B","HMP PATIENT ACTIVITY",14)

"BLD",9078,"KRN",8994,"NM","B","HMP PREVIEW ROSTER",15)

"BLD",9078,"KRN",8994,"NM","B","HMP PUT DEMOGRAPHICS",16)

"BLD",9078,"KRN",8994,"NM","B","HMP PUT OBJECT",17)

"BLD",9078,"KRN",8994,"NM","B","HMP PUT OPERATIONAL DATA",36)

"BLD",9078,"KRN",8994,"NM","B","HMP PUT PATIENT DATA",18)

"BLD",9078,"KRN",8994,"NM","B","HMP ROSTER PATIENTS",19)

"BLD",9078,"KRN",8994,"NM","B","HMP ROSTERS",20)

"BLD",9078,"KRN",8994,"NM","B","HMP SUBSCRIBE",21)

"BLD",9078,"KRN",8994,"NM","B","HMP SUBSCRIBE ROSTERS",22)

"BLD",9078,"KRN",8994,"NM","B","HMP UPDATE ROSTER",23)

"BLD",9078,"KRN",8994,"NM","B","HMP WRITEBACK PT DEM",24)

"BLD",9078,"KRN",8994,"NM","B","HMPCORD RPC",25)

"BLD",9078,"KRN",8994,"NM","B","HMPCPAT RPC",26)

"BLD",9078,"KRN",8994,"NM","B","HMPCPRS RPC",27)

"BLD",9078,"KRN",8994,"NM","B","HMPCRPC RPC",28)

"BLD",9078,"KRN",8994,"NM","B","HMPCRPC RPCCHAIN",29)

"BLD",9078,"KRN",8994,"NM","B","HMPDJFS API",30)

"BLD",9078,"KRN",8994,"NM","B","HMPDJFS DELSUB",31)

"BLD",9078,"KRN",8994,"NM","B","HMPFPTC CHKS",32)

"BLD",9078,"KRN",8994,"NM","B","HMPFPTC LOG",33)

"BLD",9078,"KRN","B",.4,.4)

"BLD",9078,"KRN","B",.401,.401)

"BLD",9078,"KRN","B",.402,.402)

"BLD",9078,"KRN","B",.403,.403)

"BLD",9078,"KRN","B",.5,.5)

"BLD",9078,"KRN","B",.84,.84)

"BLD",9078,"KRN","B",3.6,3.6)

"BLD",9078,"KRN","B",3.8,3.8)

"BLD",9078,"KRN","B",9.2,9.2)

"BLD",9078,"KRN","B",9.8,9.8)

"BLD",9078,"KRN","B",19,19)

"BLD",9078,"KRN","B",19.1,19.1)

"BLD",9078,"KRN","B",101,101)

"BLD",9078,"KRN","B",409.61,409.61)

"BLD",9078,"KRN","B",771,771)

"BLD",9078,"KRN","B",779.2,779.2)

"BLD",9078,"KRN","B",870,870)

"BLD",9078,"KRN","B",8989.51,8989.51)

"BLD",9078,"KRN","B",8989.52,8989.52)

"BLD",9078,"KRN","B",8994,8994)

"BLD",9078,"QDEF")
^^^^NO^^^^YES^^NO
"BLD",9078,"QUES",0)
^9.62^^
"BLD",9078,"REQB",0)
^9.611^5^5
"BLD",9078,"REQB",1,0)
MD*1.0*38^2
"BLD",9078,"REQB",2,0)
OR*3.0*390^2
"BLD",9078,"REQB",3,0)
PSB*3.0*79^2
"BLD",9078,"REQB",4,0)
TIU*1.0*106^2
"BLD",9078,"REQB",5,0)
GMRC*3.0*80^2
"BLD",9078,"REQB","B","GMRC*3.0*80",5)

"BLD",9078,"REQB","B","MD*1.0*38",1)

"BLD",9078,"REQB","B","OR*3.0*390",2)

"BLD",9078,"REQB","B","PSB*3.0*79",3)

"BLD",9078,"REQB","B","TIU*1.0*106",4)

"DATA",800000,1,0)
hmp-development-box^3150414-45749^^85
"DATA",800000,2,0)
2-hmp-2
"DATA",800000,3,0)
0
"DATA",800000.21,1,0)
ACUITY CODE^ac^acuityCode
"DATA",800000.21,2,0)
STATUS CODE^sc^statusCode
"DATA",800000.21,3,0)
INTERPRETATION^int^interpretation
"DATA",800000.21,4,0)
RESULT STATUS^rs^resultStatus
"DATA",800000.21,5,0)
INTERPRETATION CODE^ic^interpretationCode
"DATA",800000.21,6,0)
PATIENT CLASS CODE^pcc^patientClassCode
"DATA",800000.21,7,0)
CATEGORY CODE^cc^categoryCode
"DATA",800000.21,8,0)
MEDICATION STATUS^ms^medStatus
"DATA",800000.21,9,0)
MEDICATION TYPE^mt^medType
"DATA",800000.21,10,0)
INGREDIENT ROLE^ir^ingredientRole
"DATA",800000.22,1,0)
ACUITY CODE^ac^acuityCode
"DATA",800000.22,2,0)
STATUS CODE^sc^statusCode
"DATA",800000.22,3,0)
INTERPRETATION^int^interpretation
"DATA",800000.22,4,0)
RESULT STATUS^rs^resultStatus
"DATA",800000.22,5,0)
INTERPRETATION CODE^ic^interpretationCode
"DATA",800000.22,6,0)
PATIENT CLASS CODE^pcc^patientClassCode
"DATA",800000.22,7,0)
CATEGORY CODE^cc^categoryCode
"DATA",800000.22,8,0)
MEDICATION STATUS^ms^medStatus
"DATA",800000.22,9,0)
MEDICATION TYPE^mt^medType
"DATA",800000.22,10,0)
INGREDIENT ROLE^ir^ingredientRole
"DATA",800001.5,1,0)
100816^3141008.09^^3141003.080304^3150414.093204^1
"DATA",800001.5,1,"JSON")
{ "dfn": ";100816",  "icn": "5000000317", "site": "600"},
"DATA",800001.5,2,0)
3^3141009.09^^3141008.144919^3150414.093204^1
"DATA",800001.5,2,"JSON")
{ "dfn": ";3",  "icn": "10108", "site": "600"},
"DATA",800001.5,3,0)
0^3141116.080202^^3141116.080316^3150414.093204^1
"DATA",800001.5,3,"JSON")
{ "dfn": "B362;0", "site": "600"},
"FIA",800000)
HMP SUBSCRIPTION
"FIA",800000,0)
^HMP(800000,
"FIA",800000,0,0)
800000
"FIA",800000,0,1)
y^y^f^^y^^y^o^n
"FIA",800000,0,10)

"FIA",800000,0,11)

"FIA",800000,0,"RLRO")

"FIA",800000,0,"VR")
2.0^HMP
"FIA",800000,800000)
0
"FIA",800000,800000.01)
0
"FIA",800000,800000.02)
0
"FIA",800000.1)
HMP PATIENT OBJECT
"FIA",800000.1,0)
^HMP(800000.1,
"FIA",800000.1,0,0)
800000.1
"FIA",800000.1,0,1)
y^y^f^^y^^y^o^n
"FIA",800000.1,0,10)

"FIA",800000.1,0,11)

"FIA",800000.1,0,"RLRO")

"FIA",800000.1,0,"VR")
2.0^HMP
"FIA",800000.1,800000.1)
0
"FIA",800000.1,800000.101)
0
"FIA",800000.11)
HMP OBJECT
"FIA",800000.11,0)
^HMP(800000.11,
"FIA",800000.11,0,0)
800000.11
"FIA",800000.11,0,1)
y^y^f^^y^^y^o^n
"FIA",800000.11,0,10)

"FIA",800000.11,0,11)

"FIA",800000.11,0,"RLRO")

"FIA",800000.11,0,"VR")
2.0^HMP
"FIA",800000.11,800000.11)
0
"FIA",800000.11,800000.111)
0
"FIA",800000.2)
HMP LIST
"FIA",800000.2,0)
^HMPD(800000.2,
"FIA",800000.2,0,0)
800000.2
"FIA",800000.2,0,1)
y^y^f^^^^n^^
"FIA",800000.2,0,10)

"FIA",800000.2,0,11)

"FIA",800000.2,0,"RLRO")

"FIA",800000.2,0,"VR")
2.0^HMP
"FIA",800000.2,800000.2)
0
"FIA",800000.2,800000.202)
0
"FIA",800000.2,800000.203)
0
"FIA",800000.2,800000.209)
0
"FIA",800000.21)
HMP LIST DOMAIN
"FIA",800000.21,0)
^HMPD(800000.21,
"FIA",800000.21,0,0)
800000.21
"FIA",800000.21,0,1)
y^y^f^^n^^y^o^n
"FIA",800000.21,0,10)

"FIA",800000.21,0,11)

"FIA",800000.21,0,"RLRO")

"FIA",800000.21,0,"VR")
2.0^HMP
"FIA",800000.21,800000.21)
0
"FIA",800000.22)
HMP LIST ATTRIBUTE
"FIA",800000.22,0)
^HMPD(800000.22,
"FIA",800000.22,0,0)
800000.22
"FIA",800000.22,0,1)
y^y^f^^y^^y^o^n
"FIA",800000.22,0,10)

"FIA",800000.22,0,11)

"FIA",800000.22,0,"RLRO")

"FIA",800000.22,0,"VR")
2.0^HMP
"FIA",800000.22,800000.22)
0
"FIA",800001)
HMP PANEL
"FIA",800001,0)
^HMPPANEL(
"FIA",800001,0,0)
800001P
"FIA",800001,0,1)
y^y^f^^y^^y^o^n
"FIA",800001,0,10)

"FIA",800001,0,11)

"FIA",800001,0,"RLRO")

"FIA",800001,0,"VR")
2.0^HMP
"FIA",800001,800001)
0
"FIA",800001,800001.05)
0
"FIA",800001.2)
HMP ROSTER
"FIA",800001.2,0)
^HMPROSTR(800001.2,
"FIA",800001.2,0,0)
800001.2
"FIA",800001.2,0,1)
y^y^f^^n^^y^o^n
"FIA",800001.2,0,10)

"FIA",800001.2,0,11)

"FIA",800001.2,0,"RLRO")

"FIA",800001.2,0,"VR")
2.0^HMP
"FIA",800001.2,800001.2)
0
"FIA",800001.2,800001.21)
0
"FIA",800001.2,800001.23)
0
"FIA",800001.5)
HMP ACTIVITY
"FIA",800001.5,0)
^HMP(800001.5,"PTAPPT",
"FIA",800001.5,0,0)
800001.5P
"FIA",800001.5,0,1)
y^y^f^^y^^y^o^n
"FIA",800001.5,0,10)

"FIA",800001.5,0,11)

"FIA",800001.5,0,"RLRO")

"FIA",800001.5,0,"VR")
2.0^HMP
"FIA",800001.5,800001.5)
0
"INI")
PRE^HMPP3I
"INIT")
POST^HMPP3I
"IX",800000,800000,"ADFN",0)
800000^ADFN^Patients to track in the Data Monitor^MU^^R^IR^W^800000.01^^^^^S
"IX",800000,800000,"ADFN",1)
D HMPSET^HMPDJFS(.DA,.X)
"IX",800000,800000,"ADFN",1.4)
S X=0 I +X(1)>0 S X=1
"IX",800000,800000,"ADFN",2)
D HMPKILL^HMPDJFS(.DA,.X)
"IX",800000,800000,"ADFN",2.4)
S X=0 I X(1)'="" S X=1
"IX",800000,800000,"ADFN",2.5)
K ^HMP(800000,"AITEM")
"IX",800000,800000,"ADFN",11.1,0)
^.114IA^2^2
"IX",800000,800000,"ADFN",11.1,1,0)
1^F^800000.01^.01^^1^F
"IX",800000,800000,"ADFN",11.1,2,0)
2^F^800000.01^2^^^F
"IX",800000,800000,"AITEM",0)
800000^AITEM^AITEM TEST^MU^^F^IR^I^800000^^^^^A
"IX",800000,800000,"AITEM",1)
D HMPOSET^HMPDJFS(DA,X)
"IX",800000,800000,"AITEM",1.4)
I X(1)'=""
"IX",800000,800000,"AITEM",2)
D HMPOKILL^HMPDJFS(DA)
"IX",800000,800000,"AITEM",2.4)
I X(1)'=""
"IX",800000,800000,"AITEM",2.5)
K ^HMP(800000,"AITEM")
"IX",800000,800000,"AITEM",11.1,0)
^.114IA^1^1
"IX",800000,800000,"AITEM",11.1,1,0)
1^F^800000^.03^^^F
"IX",800000,800000,"AITEM",11.1,1,3)

"IX",800000,800000,"AROS",0)
800000^AROS^Rosters to track in the Data Monitor^MU^^R^IR^W^800000.02^^^^^S
"IX",800000,800000,"AROS",1)
S:X2(2) ^HMP(800000,"AROS",X,DA(1))=""
"IX",800000,800000,"AROS",2)
K:X1(2) ^HMP(800000,"AROS",X,DA(1))
"IX",800000,800000,"AROS",2.5)
K ^HMP(800000,"AROS")
"IX",800000,800000,"AROS",11.1,0)
^.114IA^2^2
"IX",800000,800000,"AROS",11.1,1,0)
1^F^800000.02^.01^^1^F
"IX",800000,800000,"AROS",11.1,1,3)

"IX",800000,800000,"AROS",11.1,2,0)
2^F^800000.02^2^^2^
"IX",800000,800000,"AROS",11.1,2,3)

"IX",800000,800000.01,"AP",0)
800000.01^AP^Subscribed patients by server not yet initialized.^R^^R^IR^I^800000.01^^^^^S
"IX",800000,800000.01,"AP",.1,0)
^^6^6^3140521^
"IX",800000,800000.01,"AP",.1,1,0)
This index lists the patients who are not yet initialized:
"IX",800000,800000.01,"AP",.1,2,0)
 
"IX",800000,800000.01,"AP",.1,3,0)
  SERVER_IEN, "AP", STATUS, STATUS TIME, DFN
"IX",800000,800000.01,"AP",.1,4,0)
 
"IX",800000,800000.01,"AP",.1,5,0)
Patients with an initialized status (STATUS = 2) do not appear in this 
"IX",800000,800000.01,"AP",.1,6,0)
index.
"IX",800000,800000.01,"AP",1)
S ^HMP(800000,DA(1),1,"AP",X(1),X(2),DA)=""
"IX",800000,800000.01,"AP",1.4)
S X=(+X2(1)<2)
"IX",800000,800000.01,"AP",2)
K ^HMP(800000,DA(1),1,"AP",X(1),X(2),DA)
"IX",800000,800000.01,"AP",2.5)
K ^HMP(800000,DA(1),1,"AP")
"IX",800000,800000.01,"AP",11.1,0)
^.114IA^2^2
"IX",800000,800000.01,"AP",11.1,1,0)
1^F^800000.01^2^^1^F
"IX",800000,800000.01,"AP",11.1,2,0)
2^F^800000.01^3^^2^F
"IX",800000.1,800000.1,"C",0)
800000.1^C^Index by patient, collection^R^^R^IR^I^800000.1^^^^^LS
"IX",800000.1,800000.1,"C",1)
S ^HMP(800000.1,"C",X(1),X(2),DA)=""
"IX",800000.1,800000.1,"C",2)
K ^HMP(800000.1,"C",X(1),X(2),DA)
"IX",800000.1,800000.1,"C",2.5)
K ^HMP(800000.1,"C")
"IX",800000.1,800000.1,"C",11.1,0)
^.114IA^2^2
"IX",800000.1,800000.1,"C",11.1,1,0)
1^F^800000.1^.02^^1^F
"IX",800000.1,800000.1,"C",11.1,1,3)

"IX",800000.1,800000.1,"C",11.1,2,0)
2^F^800000.1^.03^^2^F
"IX",800000.1,800000.1,"C",11.1,2,3)

"IX",800001.2,800001.21,"AC",0)
800001.21^AC^SORT BY SEQUENCE^R^^F^IR^I^800001.21^^^^^S
"IX",800001.2,800001.21,"AC",1)
Q
"IX",800001.2,800001.21,"AC",2)
Q
"KRN",19,12365,-1)
0^15
"KRN",19,12365,0)
XU USER ADD^New User Event^^X^^^^^^^^KERNEL^y^1
"KRN",19,12365,1,0)
^^10^10^3030320^
"KRN",19,12365,1,1,0)
This is a protocol to link other packages that want to know about a USER
"KRN",19,12365,1,2,0)
ADD event. Other pachages can attach to this protocol option and they will
"KRN",19,12365,1,3,0)
be called when a new USER is Added.  At the end of editing the user data
"KRN",19,12365,1,4,0)
the protocol XU USER CHANGE will be called.
"KRN",19,12365,1,5,0)
DUZ will be the person that is running the adding the user option.  
"KRN",19,12365,1,6,0)
XUIFN will point to the NEW PERSON file entry that has been added. 
"KRN",19,12365,1,7,0)
Returns selected file 200 data to XUSR(field name) array for New Person
"KRN",19,12365,1,8,0)
components
"KRN",19,12365,1,9,0)
 
"KRN",19,12365,1,10,0)
Called from XUSERNEW by XUSERP.
"KRN",19,12365,10,0)
^19.01IP^3^1
"KRN",19,12365,10,3,0)
14338
"KRN",19,12365,10,3,"^")
HMP XU EVENTS
"KRN",19,12365,20)
D GET^XUSERP(XUIEN,.XUSR)
"KRN",19,12365,99)
63713,34888
"KRN",19,12365,"U")
NEW USER EVENT
"KRN",19,14332,-1)
0^3
"KRN",19,14332,0)
HMP PATIENT ACTIVITY^PATIENT APPOINTMENTS^^B^^^^^^^^
"KRN",19,14332,25)
ACT^HMPACT
"KRN",19,14332,"RPC",0)
^19.05P^1^1
"KRN",19,14332,"RPC",1,0)
HMP PATIENT ACTIVITY
"KRN",19,14332,"U")
PATIENT APPOINTMENTS
"KRN",19,14333,-1)
0^1
"KRN",19,14333,0)
HMP APPLICATION PROXY^HMP Application Proxy^^B^^^^^^^^
"KRN",19,14333,1,0)
^19.06^1^1^3110602^^^^
"KRN",19,14333,1,1,0)
This option allows the HMP connector proxy access to the VistA system.
"KRN",19,14333,99.1)
62971,33865
"KRN",19,14333,"RPC",0)
^19.05P^4^4
"KRN",19,14333,"RPC",2,0)
HMP GET PATIENT DATA
"KRN",19,14333,"RPC",3,0)
HMP DATA VERSION
"KRN",19,14333,"RPC",4,0)
HMP SUBSCRIBE
"KRN",19,14333,"U")
HMP APPLICATION PROXY
"KRN",19,14334,-1)
0^2
"KRN",19,14334,0)
HMP APPOINTMENTS^Return list of tomorrow's patients^^A^^^^^^^^^^1
"KRN",19,14334,1,0)
^^3^3^3110406^
"KRN",19,14334,1,1,0)
This option is intended to be scheduled to run nightly, to notify the
"KRN",19,14334,1,2,0)
AViVA Enterprise Health Management Platform (HMP) of patients that are expected to be
"KRN",19,14334,1,3,0)
seen tomorrow.
"KRN",19,14334,20)
D APPT^HMPPATS
"KRN",19,14334,200.9)
y
"KRN",19,14334,"U")
RETURN LIST OF TOMORROW'S PATI
"KRN",19,14335,-1)
0^4
"KRN",19,14335,0)
HMP PATIENT DATA MONITOR^HMP Patient Data Monitor^^A^^^^^^^^^^1
"KRN",19,14335,1,0)
^^4^4^3110406^
"KRN",19,14335,1,1,0)
This option manages the HMP Patient Data Monitor background job.  It 
"KRN",19,14335,1,2,0)
first checks to see if the job is already running, and will prompt to
"KRN",19,14335,1,3,0)
start it if not.  It may also stop the job if running, but the AViVA
"KRN",19,14335,1,4,0)
client may not display up-to-date data until it is started up again.
"KRN",19,14335,20)
D EN^HMPHTTP
"KRN",19,14335,"U")
HMP PATIENT DATA MONITOR
"KRN",19,14336,-1)
0^5
"KRN",19,14336,0)
HMP SYNCHRONIZATION CONTEXT^Synchronize the HMP^^B^^^^^^^^
"KRN",19,14336,99.1)
63613,33836
"KRN",19,14336,"RPC",0)
^19.05P^24^24
"KRN",19,14336,"RPC",2,0)
HMP DATA VERSION
"KRN",19,14336,"RPC",4,0)
HMP SUBSCRIBE
"KRN",19,14336,"RPC",5,0)
HMP GET PATIENT DATA JSON
"KRN",19,14336,"RPC",7,0)
HMP GET OBJECT
"KRN",19,14336,"RPC",8,0)
HMP GET OPERATIONAL DATA
"KRN",19,14336,"RPC",10,0)
HMP PUT OBJECT
"KRN",19,14336,"RPC",19,0)
HMPDJFS API
"KRN",19,14336,"RPC",20,0)
HMPDJFS DELSUB
"KRN",19,14336,"RPC",21,0)
HMP GET CHECKSUM
"KRN",19,14336,"RPC",22,0)
HMP PATIENT ACTIVITY
"KRN",19,14336,"RPC",23,0)
HMP LOCAL GETCORRESPONDINGIDS
"KRN",19,14336,"RPC",24,0)
ORWU USERINFO
"KRN",19,14336,"U")
SYNCHRONIZE THE HMP
"KRN",19,14337,-1)
0^6
"KRN",19,14337,0)
HMP UI CONTEXT^HMP UI CONTEXT version 0.7-S62^^B^^^^^^^^
"KRN",19,14337,1,0)
^19.06^1^1^3140618^^
"KRN",19,14337,1,1,0)
This option allows the HMP UI access to the VistA system.
"KRN",19,14337,99.1)
62990,29647
"KRN",19,14337,"RPC",0)
^19.05P^52^52
"KRN",19,14337,"RPC",1,0)
HMPCORD RPC
"KRN",19,14337,"RPC",2,0)
HMPCPAT RPC
"KRN",19,14337,"RPC",3,0)
HMPFPTC CHKS
"KRN",19,14337,"RPC",4,0)
HMPFPTC LOG
"KRN",19,14337,"RPC",5,0)
HMP APPOINTMENTS
"KRN",19,14337,"RPC",6,0)
HMP DATA VERSION
"KRN",19,14337,"RPC",7,0)
HMP DELETE ROSTER
"KRN",19,14337,"RPC",8,0)
HMP GET PATIENT DATA
"KRN",19,14337,"RPC",9,0)
HMP GET SOURCE
"KRN",19,14337,"RPC",10,0)
HMP INPATIENTS
"KRN",19,14337,"RPC",11,0)
HMP PREVIEW ROSTER
"KRN",19,14337,"RPC",12,0)
HMP ROSTER PATIENTS
"KRN",19,14337,"RPC",13,0)
HMP ROSTERS
"KRN",19,14337,"RPC",14,0)
HMP SUBSCRIBE
"KRN",19,14337,"RPC",15,0)
HMP UPDATE ROSTER
"KRN",19,14337,"RPC",16,0)
HMPCRPC RPC
"KRN",19,14337,"RPC",19,0)
XHD GET PARAMETER DEF LIST
"KRN",19,14337,"RPC",20,0)
HMP PUT PATIENT DATA
"KRN",19,14337,"RPC",21,0)
HMP PUT OBJECT
"KRN",19,14337,"RPC",22,0)
HMP DELETE OBJECT
"KRN",19,14337,"RPC",23,0)
HMP GET OBJECT
"KRN",19,14337,"RPC",24,0)
HMP GET ROSTER LIST
"KRN",19,14337,"RPC",25,0)
HMPCPRS RPC
"KRN",19,14337,"RPC",26,0)
ORQPT WARDS
"KRN",19,14337,"RPC",27,0)
ORQPT WARD PATIENTS
"KRN",19,14337,"RPC",28,0)
ORQPT SPECIALTIES
"KRN",19,14337,"RPC",29,0)
ORQPT SPECIALTY PATIENTS
"KRN",19,14337,"RPC",30,0)
ORWU CLINLOC
"KRN",19,14337,"RPC",31,0)
ORQPT CLINIC PATIENTS
"KRN",19,14337,"RPC",32,0)
ORWU NEWPERS
"KRN",19,14337,"RPC",33,0)
ORQPT PROVIDER PATIENTS
"KRN",19,14337,"RPC",34,0)
ORWRP COLUMN HEADERS
"KRN",19,14337,"RPC",35,0)
ORWLR CUMULATIVE REPORT
"KRN",19,14337,"RPC",36,0)
ORWLRR INTERIM
"KRN",19,14337,"RPC",37,0)
ORWRP REPORT TEXT
"KRN",19,14337,"RPC",38,0)
ORWRP3 EXPAND COLUMNS
"KRN",19,14337,"RPC",39,0)
HMP PUT DEMOGRAPHICS
"KRN",19,14337,"RPC",40,0)
HMPCRPC RPCCHAIN
"KRN",19,14337,"RPC",41,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,14337,"RPC",42,0)
ORWU USERINFO
"KRN",19,14337,"RPC",43,0)
YTQ ALLKEYS
"KRN",19,14337,"RPC",44,0)
ORWPT BYWARD
"KRN",19,14337,"RPC",45,0)
ORQQPX REMINDERS LIST
"KRN",19,14337,"RPC",46,0)
ORQQPX REMINDER DETAIL
"KRN",19,14337,"RPC",47,0)
ORQQPL4 LEX
"KRN",19,14337,"RPC",48,0)
ORWRP REPORT LISTS
"KRN",19,14337,"RPC",49,0)
HMP PATIENT ADMIT SYNC
"KRN",19,14337,"RPC",50,0)
HMP PATIENT SCHED SYNC
"KRN",19,14337,"RPC",51,0)
ORWPT LIST ALL
"KRN",19,14337,"RPC",52,0)
ORWPT APPTLST
"KRN",19,14337,"U")
HMP UI CONTEXT VERSION 0.7-S62
"KRN",19,14338,-1)
0^8
"KRN",19,14338,0)
HMP XU EVENTS^New Person events for HMP^^A^^^^^^^^^^1
"KRN",19,14338,1,0)
^^1^1^3130116^
"KRN",19,14338,1,1,0)
This protocol will track New Person updates for HMP.
"KRN",19,14338,20)
D XU^HMPEVNT(XUIEN,"")
"KRN",19,14338,"U")
NEW PERSON EVENTS FOR HMP
"KRN",19,14339,-1)
0^10
"KRN",19,14339,0)
HMPM ADD HMP USER^Add Health Management Platform User^^A^^^^^^^^^^1
"KRN",19,14339,1,0)
^^4^4^3140326^
"KRN",19,14339,1,1,0)
This option allows a user to be given access to use the Health Management
"KRN",19,14339,1,2,0)
Platform.  The selected user will be given the HMP UI CONTEXT option.
"KRN",19,14339,1,3,0)
Additionally, their default patient list my be set up for automatic
"KRN",19,14339,1,4,0)
synchronization with the Health Management Platform (HMP).
"KRN",19,14339,20)
D OPTASGN^HMPCAC
"KRN",19,14339,"U")
ADD HEALTH MANAGEMENT PLATFORM
"KRN",19,14340,-1)
0^12
"KRN",19,14340,0)
HMPM EXTRACT MONITOR^Monitor HMP Server Synchronization^^A^^^^^^^^^^1
"KRN",19,14340,1,0)
^^2^2^3140402^
"KRN",19,14340,1,1,0)
This option allow one to monitor the polls from an HMP server and any 
"KRN",19,14340,1,2,0)
currently executing HMP extracts.
"KRN",19,14340,20)
D EN^HMPDJFSM
"KRN",19,14340,"U")
MONITOR HMP SERVER SYNCHRONIZA
"KRN",19,14341,-1)
0^11
"KRN",19,14341,0)
HMPM EMERGENCY STOP^Emergency Stop HMP Freshness Updates^^A^^^^^^^^^^1
"KRN",19,14341,1,0)
^^5^5^3140403^
"KRN",19,14341,1,1,0)
This option should be used with caution.  It will stop the freshness 
"KRN",19,14341,1,2,0)
events for the ENTERPRISE HEALTH MANAGEMENT PLATFORM (HMP) from being called.  Once the 
"KRN",19,14341,1,3,0)
freshness events are stopped, patient data must be re-synchronized with
"KRN",19,14341,1,4,0)
the HMP to ensure completeness.  Only stop freshness updates if there is a
"KRN",19,14341,1,5,0)
problem with system operation.
"KRN",19,14341,20)
D EMERSTOP^HMPDJFSM
"KRN",19,14341,"U")
EMERGENCY STOP HMP FRESHNESS U
"KRN",19,14342,-1)
0^9
"KRN",19,14342,0)
HMPM ADD HMP PATIENT^Manually Add Patient to HMP^^A^^^^^^^^^^1
"KRN",19,14342,1,0)
^^2^2^3150210^
"KRN",19,14342,1,1,0)
Use this menu to manually add a patient for synchronization with the 
"KRN",19,14342,1,2,0)
Enterprise Health Management Platform (HMP).
"KRN",19,14342,20)
D ADDPT^HMPDJFSM
"KRN",19,14342,"U")
MANUALLY ADD PATIENT TO HMP
"KRN",19,14343,-1)
0^14
"KRN",19,14343,0)
HMPMGR^HMP Technical Management^^M^^^^^^^^
"KRN",19,14343,1,0)
^19.06^1^1^3141022^^
"KRN",19,14343,1,1,0)
This menu contains various options to help with the management of HMP.
"KRN",19,14343,10,0)
^19.01IP^3^3
"KRN",19,14343,10,1,0)
14339
"KRN",19,14343,10,1,"^")
HMPM ADD HMP USER
"KRN",19,14343,10,2,0)
14342
"KRN",19,14343,10,2,"^")
HMPM ADD HMP PATIENT
"KRN",19,14343,10,3,0)
14340
"KRN",19,14343,10,3,"^")
HMPM EXTRACT MONITOR
"KRN",19,14343,99)
63713,34888
"KRN",19,14343,"U")
HMP TECHNICAL MANAGEMENT
"KRN",19,14344,-1)
0^13
"KRN",19,14344,0)
HMPM RESTART FRESHNESS^Resume Freshness Updates that have been stopped^^A^^^^^^^^^^1
"KRN",19,14344,1,0)
^^4^4^3140604^
"KRN",19,14344,1,1,0)
This option will remove the flags that cause freshness updates to be 
"KRN",19,14344,1,2,0)
stopped.  It will likely be necessary to re-synchronized patients after 
"KRN",19,14344,1,3,0)
freshness has been stopped, since updates will be missing from the time 
"KRN",19,14344,1,4,0)
that freshness updates were not being recieved.
"KRN",19,14344,20)
D RSTRTFR^HMPDJFSM
"KRN",19,14344,"U")
RESUME FRESHNESS UPDATES THAT 
"KRN",19,14345,-1)
0^7
"KRN",19,14345,0)
HMP WB PTDEM^HMP WB PTDEM^^B^^^^^^^^
"KRN",19,14345,25)
FILE^HMPPTDEM
"KRN",19,14345,"RPC",0)
^19.05P^1^1
"KRN",19,14345,"RPC",1,0)
HMP WRITEBACK PT DEM
"KRN",19,14345,"U")
HMP WB PTDEM
"KRN",19,14346,-1)
0^16
"KRN",19,14346,0)
HMP WB DOMAINS^WRITEBACK OF DOMAIN DATA TO VISTA^^B^^^^^^^^
"KRN",19,14346,25)
HMPWB
"KRN",19,14346,"RPC",0)
^19.05P^1^1
"KRN",19,14346,"RPC",1,0)
HMP PUT OPERATIONAL DATA
"KRN",19,14346,"U")
WRITEBACK OF DOMAIN DATA TO VI
"KRN",19.1,695,-1)
0^2
"KRN",19.1,695,0)
HMP EXPERIMENTAL
"KRN",19.1,696,-1)
0^1
"KRN",19.1,696,0)
HMP ADMIN
"KRN",101,6103,-1)
0^1
"KRN",101,6103,0)
HMP ADT-A04 CLIENT^HMP HL7 ADT-A04 Client^^S^^^^^^^^
"KRN",101,6103,1,0)
^101.06^10^10^3141022^^^
"KRN",101,6103,1,1,0)
This client protocol is used to process HL7 ADT/A04 messages published by 
"KRN",101,6103,1,2,0)
the VAFC ADT-A04 SERVER protocol.
"KRN",101,6103,1,3,0)
 
"KRN",101,6103,1,4,0)
The client causes a HMP 'freshness' event for each new patient 
"KRN",101,6103,1,5,0)
registration that occurs. This is especially important for new patients, 
"KRN",101,6103,1,6,0)
as it is the only MAS event mechanism available that can be used to 
"KRN",101,6103,1,7,0)
discover new patient entries.
"KRN",101,6103,1,8,0)
 
"KRN",101,6103,1,9,0)
Note: The ROUTING LOGIC does not send any HL7 messages. As mentioned 
"KRN",101,6103,1,10,0)
above, It adds a HMP (Health Management Platform) 'freshness' event.
"KRN",101,6103,4)
^^^HMP ADT-A04 CLIENT
"KRN",101,6103,99)
63713,34888
"KRN",101,6103,770)
^HMP HL7^^^^^^^^^ADT
"KRN",101,6103,774)
D ADT^HMPEHL7
"KRN",101,6104,-1)
0^2
"KRN",101,6104,0)
HMP ADT-A08 CLIENT^HMP HL7 ADT-A08 Client^^S^^^^^^^^
"KRN",101,6104,1,0)
^101.06^10^10^3141022^^
"KRN",101,6104,1,1,0)
This client protocol is used to process HL7 ADT/A08 messages published by 
"KRN",101,6104,1,2,0)
the VAFC ADT-A08 SERVER protocol.
"KRN",101,6104,1,3,0)
 
"KRN",101,6104,1,4,0)
The client filters A08 events. It adds to the HMP 'freshness' queue only
"KRN",101,6104,1,5,0)
if the A08 was the result of the patient's sensitivity being modified via
"KRN",101,6104,1,6,0)
the DG SECURITY EDIT/EDIT option. All other A08 events are ignored and
"KRN",101,6104,1,7,0)
should not add to the 'freshness' queue.
"KRN",101,6104,1,8,0)
 
"KRN",101,6104,1,9,0)
Note: The ROUTING LOGIC does not send any HL7 messages. As mentioned 
"KRN",101,6104,1,10,0)
above, It adds a HMP (Health Management Platform) 'freshness' event.
"KRN",101,6104,4)
^^^
"KRN",101,6104,99)
63713,34888
"KRN",101,6104,770)
^HMP HL7^^^^^^^^^ADT
"KRN",101,6104,774)
D ADT^HMPEHL7
"KRN",101,6105,-1)
0^3
"KRN",101,6105,0)
HMP APPT EVENTS^Appointment events for HMP^^A^^^^^^^^
"KRN",101,6105,1,0)
^101.06^1^1^3101129^^^^
"KRN",101,6105,1,1,0)
This protocol will track appointments for HMP.
"KRN",101,6105,4)
^^^HMP APPT EVENTS
"KRN",101,6105,20)
D SDAM^HMPEVNT
"KRN",101,6105,99)
63713,34888
"KRN",101,6106,-1)
0^4
"KRN",101,6106,0)
HMP DG UPDATES^DG updates for HMP^^A^^^^^^^^
"KRN",101,6106,1,0)
^101.06^1^1^3101129^^^^
"KRN",101,6106,1,1,0)
This protocol will track Patient file changes for HMP.
"KRN",101,6106,4)
^^^HMP APPT EVENTS
"KRN",101,6106,20)
D DG^HMPEVNT
"KRN",101,6106,99)
63713,34888
"KRN",101,6107,-1)
0^5
"KRN",101,6107,0)
HMP GMPL EVENT^Problem List events for HMP^^A^^^^^^^^
"KRN",101,6107,1,0)
^101.06^1^1^3110823^^^^
"KRN",101,6107,1,1,0)
This protocol will track new and updated problems for HMP.
"KRN",101,6107,4)
^^^HMP GMPL EVENT
"KRN",101,6107,20)
D GMPL^HMPEVNT(DFN,GMPIFN)
"KRN",101,6107,99)
63713,34888
"KRN",101,6108,-1)
0^7
"KRN",101,6108,0)
HMP INPT EVENTS^Inpatient Movement events for HMP^^A^^^^^^^^
"KRN",101,6108,1,0)
^101.06^1^1^3101202^^^^
"KRN",101,6108,1,1,0)
This protocol will track patient admissions and discharges for HMP.
"KRN",101,6108,20)
D DGPM^HMPEVNT
"KRN",101,6108,99)
63713,34888
"KRN",101,6109,-1)
0^11
"KRN",101,6109,0)
HMP PCE EVENTS^PCE events for HMP^^A^^^^^^^^
"KRN",101,6109,1,0)
^101.06^1^1^3101129^^^
"KRN",101,6109,1,1,0)
This protocol will track PCE visit data for HMP.
"KRN",101,6109,20)
D PCE^HMPEVNT
"KRN",101,6109,99)
63713,34888
"KRN",101,6110,-1)
0^15
"KRN",101,6110,0)
HMP XQOR EVENTS^XQOR HL7 events for HMP^^A^^^^^^^^
"KRN",101,6110,1,0)
^101.06^3^3^3101129^^
"KRN",101,6110,1,1,0)
This protocol monitors order events for HMP.  It is placed on the 
"KRN",101,6110,1,2,0)
* EVSEND OR protocols to check for updates being sent from ancillary
"KRN",101,6110,1,3,0)
packages to Order Entry; it monitors when orders are completed.
"KRN",101,6110,20)
D XQOR^HMPEVNT(.XQORMSG)
"KRN",101,6110,99)
63713,34888
"KRN",101,6111,-1)
0^6
"KRN",101,6111,0)
HMP GMRA EVENTS^Allergy Events for HMP^^A^^^^^^^^
"KRN",101,6111,1,0)
^101.06^1^1^3120822^^
"KRN",101,6111,1,1,0)
This protocol will track Allergy data updates for HMP.
"KRN",101,6111,20)
D GMRA^HMPEVNT("")
"KRN",101,6111,99)
63713,34888
"KRN",101,6112,-1)
0^9
"KRN",101,6112,0)
HMP NA EVENTS^XQOR HL7 events for HMP^^A^^^^^^^^
"KRN",101,6112,1,0)
^101.06^3^3^3110818^^^
"KRN",101,6112,1,1,0)
This protocol monitors order events for HMP.  It is placed on the 
"KRN",101,6112,1,2,0)
OR EVSEND * protocols to check for order numbers assigned to new orders
"KRN",101,6112,1,3,0)
placed from the ancillary packages.
"KRN",101,6112,20)
D NA^HMPEVNT(.XQORMSG)
"KRN",101,6112,99)
63713,34888
"KRN",101,6113,-1)
0^8
"KRN",101,6113,0)
HMP MDC EVENT^CLiO events for HMP^^A^^^^^^^^
"KRN",101,6113,1,0)
^101.06^1^1^3120830^^^^
"KRN",101,6113,1,1,0)
This protocol will track new and updated observations for HMP.
"KRN",101,6113,20)
D MDC^HMPEVNT(.MDCOBS)
"KRN",101,6113,99)
63713,34888
"KRN",101,6114,-1)
0^14
"KRN",101,6114,0)
HMP PSB EVENTS^BCMA events for HMP^^A^^^^^^^^
"KRN",101,6114,1,0)
^101.06^1^1^3140415^^^^
"KRN",101,6114,1,1,0)
This protocol will track medication administrations for HMP.
"KRN",101,6114,20)
D PSB^HMPEVNT
"KRN",101,6114,99)
63713,34888
"KRN",101,6115,-1)
0^12
"KRN",101,6115,0)
HMP PCMM TEAM^PCMM Team events for HMP^^A^^^^^^^^
"KRN",101,6115,20)
D PCMMT^HMPEVNT
"KRN",101,6115,99)
63713,34888
"KRN",101,6116,-1)
0^13
"KRN",101,6116,0)
HMP PCMM TEAM POSITION^PCMM Team Position events for HMP^^A^^^^^^^^
"KRN",101,6116,20)
D PCMMTP^HMPEVNT
"KRN",101,6116,99)
63713,34888
"KRN",101,6117,-1)
0^17
"KRN",101,6117,0)
HMPM EVT QUE MGR MENU^VPR Freshness Queue Viewer^^M^^^^^^^^
"KRN",101,6117,1,0)
^101.06^1^1^3150128^^
"KRN",101,6117,1,1,0)
Main protocol menu used by the VPRM EVT QUE MGR ListMan template.
"KRN",101,6117,4)
26^4
"KRN",101,6117,10,0)
^101.01PA^20^20
"KRN",101,6117,10,1,0)
6119^^^
"KRN",101,6117,10,1,"^")
HMPM EVT QUE FRESHNESS REPORT
"KRN",101,6117,10,2,0)
6120^^^
"KRN",101,6117,10,2,"^")
HMPM EVT QUE CHANGE DOMAIN
"KRN",101,6117,10,3,0)
6121^^^
"KRN",101,6117,10,3,"^")
HMPM EVT QUE REFRESH
"KRN",101,6117,10,4,0)
6122^^^
"KRN",101,6117,10,4,"^")
HMPM EVT QUE DISPLAY DETAILS
"KRN",101,6117,10,5,0)
6123^^^
"KRN",101,6117,10,5,"^")
HMPM EVT QUE FILTER
"KRN",101,6117,10,6,0)
6124^^^
"KRN",101,6117,10,6,"^")
HMPM EVT QUE SHOW TEMP GLOBALS
"KRN",101,6117,10,7,0)
6125^^^
"KRN",101,6117,10,7,"^")
HMPM EVT QUE SELECT PATIENT
"KRN",101,6117,10,8,0)
6126^^^
"KRN",101,6117,10,8,"^")
HMPM EVT QUE CHANGE MAX LISTED
"KRN",101,6117,10,12,0)
6126^^^
"KRN",101,6117,10,12,"^")
HMPM EVT QUE CHANGE MAX LISTED
"KRN",101,6117,10,13,0)
6118^^^
"KRN",101,6117,10,13,"^")
HMPM EVT QUE CHANGE SERVER
"KRN",101,6117,10,14,0)
6119^^^
"KRN",101,6117,10,14,"^")
HMPM EVT QUE FRESHNESS REPORT
"KRN",101,6117,10,15,0)
6120^^^
"KRN",101,6117,10,15,"^")
HMPM EVT QUE CHANGE DOMAIN
"KRN",101,6117,10,16,0)
6121^^^
"KRN",101,6117,10,16,"^")
HMPM EVT QUE REFRESH
"KRN",101,6117,10,17,0)
6122^^^
"KRN",101,6117,10,17,"^")
HMPM EVT QUE DISPLAY DETAILS
"KRN",101,6117,10,18,0)
6123^^^
"KRN",101,6117,10,18,"^")
HMPM EVT QUE FILTER
"KRN",101,6117,10,19,0)
6124^^^
"KRN",101,6117,10,19,"^")
HMPM EVT QUE SHOW TEMP GLOBALS
"KRN",101,6117,10,20,0)
6125^^^
"KRN",101,6117,10,20,"^")
HMPM EVT QUE SELECT PATIENT
"KRN",101,6117,20)
S XQORM("B")="Update"
"KRN",101,6117,24)
I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),"^",1),24)) ^(24)
"KRN",101,6117,26)
D SHOW^VALM
"KRN",101,6117,28)
Select Action:
"KRN",101,6117,99)
63713,34892
"KRN",101,6118,-1)
0^25
"KRN",101,6118,0)
HMPM EVT QUE CHANGE SERVER^Change Server^^A^^^^^^^^
"KRN",101,6118,1,0)
^^2^2^3140716^
"KRN",101,6118,1,1,0)
Allows user to change which server's freshness queue events to display in 
"KRN",101,6118,1,2,0)
the viewer.
"KRN",101,6118,10,0)
^101.01PA^1^1
"KRN",101,6118,10,1,0)
6119^^^
"KRN",101,6118,10,1,"^")
HMPM EVT QUE FRESHNESS REPORT
"KRN",101,6118,20)
D CS^HMPEQLM
"KRN",101,6118,99)
63713,34892
"KRN",101,6119,-1)
0^22
"KRN",101,6119,0)
HMPM EVT QUE FRESHNESS REPORT^Freshness Report^^A^^^^^^^^
"KRN",101,6119,1,0)
^^1^1^3140716^
"KRN",101,6119,1,1,0)
View overview freshness queue information for all HMP servers.
"KRN",101,6119,20)
D FSHRPT^HMPEQLM
"KRN",101,6119,99)
63713,34892
"KRN",101,6120,-1)
0^16
"KRN",101,6120,0)
HMPM EVT QUE CHANGE DOMAIN^Change Domain^^A^^^^^^^^
"KRN",101,6120,1,0)
^^3^3^3140716^
"KRN",101,6120,1,1,0)
Allows user to indicate only freshness events for a particular domain, 
"KRN",101,6120,1,2,0)
like med, task, visit, etc., or all domains should be listed in 
"KRN",101,6120,1,3,0)
freshness viewer.
"KRN",101,6120,20)
D CD^HMPEQLM
"KRN",101,6120,99)
63713,34892
"KRN",101,6121,-1)
0^24
"KRN",101,6121,0)
HMPM EVT QUE REFRESH^Update^^A^^^^^^^^
"KRN",101,6121,1,0)
^101.06^2^2^3140716^^
"KRN",101,6121,1,1,0)
Refresh/update the current list of freshness queue events using the 
"KRN",101,6121,1,2,0)
current criteria/filters specified.
"KRN",101,6121,20)
D REFRESH^HMPEQLM
"KRN",101,6121,99)
63713,34892
"KRN",101,6122,-1)
0^23
"KRN",101,6122,0)
HMPM EVT QUE DISPLAY DETAILS^Display Details^^A^^^^^^^^
"KRN",101,6122,1,0)
^^1^1^3140716^
"KRN",101,6122,1,1,0)
Display details related to an event listed in the freshness queue viewer.
"KRN",101,6122,20)
D DETAIL^HMPEQLM
"KRN",101,6122,99)
63713,34892
"KRN",101,6123,-1)
0^21
"KRN",101,6123,0)
HMPM EVT QUE FILTER^Filter Events^^A^^^^^^^^
"KRN",101,6123,1,0)
^^3^3^3140716^
"KRN",101,6123,1,1,0)
Allows user to indicate only freshness events with a state of 
"KRN",101,6123,1,2,0)
'processed' or 'waiting to be processed' or all events should be listed in
"KRN",101,6123,1,3,0)
freshness viewer.
"KRN",101,6123,20)
D FILTER^HMPEQLM
"KRN",101,6123,99)
63713,34892
"KRN",101,6124,-1)
0^20
"KRN",101,6124,0)
HMPM EVT QUE SHOW TEMP GLOBALS^Temp Global Usage^^A^^^^^^^^
"KRN",101,6124,1,0)
^101.06^4^4^3140716^^
"KRN",101,6124,1,1,0)
Show VPR temporary global usage report. 
"KRN",101,6124,1,2,0)
 
"KRN",101,6124,1,3,0)
The report displays summary information related to VPR processing use of 
"KRN",101,6124,1,4,0)
^XTMP and ^TMP globals.
"KRN",101,6124,20)
D SHOWHMPN^HMPEQLM
"KRN",101,6124,99)
63713,34892
"KRN",101,6125,-1)
0^19
"KRN",101,6125,0)
HMPM EVT QUE SELECT PATIENT^Select Patient^^A^^^^^^^^
"KRN",101,6125,1,0)
^^2^2^3140716^
"KRN",101,6125,1,1,0)
Allows user to specify that only the freshness events for the selected 
"KRN",101,6125,1,2,0)
patient should be used in the freshness queue event viewer.
"KRN",101,6125,20)
D SELPT^HMPEQLM
"KRN",101,6125,99)
63713,34892
"KRN",101,6126,-1)
0^18
"KRN",101,6126,0)
HMPM EVT QUE CHANGE MAX LISTED^Change Max Limit^^A^^^^^^^^
"KRN",101,6126,1,0)
^^2^2^3140716^
"KRN",101,6126,1,1,0)
Allows user to select the maximum events to display in the freshness 
"KRN",101,6126,1,2,0)
queue viewer. (10 - 1000)
"KRN",101,6126,20)
D CM^HMPEQLM
"KRN",101,6126,99)
63713,34892
"KRN",101,6127,-1)
0^26
"KRN",101,6127,0)
HMP DGPF ASSIGN FLAG^^^A^^^^^^^^HEALTH MANAGEMENT PLATFORM
"KRN",101,6127,1,0)
^101.06^2^2^3150422^^
"KRN",101,6127,1,1,0)
Used to trigger a JDS update when the DGPF ASSIGN FLAG action protocol is used.
"KRN",101,6127,1,2,0)
A patient must have been selected and the DFN value is in DGDFN.
"KRN",101,6127,20)
I $G(DGDFN),$L($T(POST^HMPEVNT)) D POST^HMPEVNT(DGDFN,"patient",DGDFN)
"KRN",771,236,-1)
0^1
"KRN",771,236,0)
HMP HL7^a^^^^^USA
"KRN",8989.5,15363,0)
578;DIC(9.4,^HMP VERSION^1
"KRN",8989.5,15363,1)
2.00
"KRN",8989.5,15364,0)
578;DIC(9.4,^HMP JSON SCHEMA^1
"KRN",8989.5,15364,1)
3.001
"KRN",8989.51,848,-1)
0^9
"KRN",8989.51,848,0)
HMP VERSION^HMP Version^^^Version:
"KRN",8989.51,848,1)
N^1:99:2^Enter the current version number of the HMP data extracts.
"KRN",8989.51,848,6)
F
"KRN",8989.51,848,20,0)
^8989.512^3^3^3141016^^
"KRN",8989.51,848,20,1,0)
This parameter holds the current version number of the eHMP Patient
"KRN",8989.51,848,20,2,0)
Record (HMP) data extract RPC's, in the form V.PP where V is the
"KRN",8989.51,848,20,3,0)
package version number and PP is the latest patch number.
"KRN",8989.51,848,30,0)
^8989.513I^1^1
"KRN",8989.51,848,30,1,0)
1^9.4
"KRN",8989.51,848,30,2,0)
1^200
"KRN",8989.51,849,-1)
0^7
"KRN",8989.51,849,0)
HMP SYSTEM NAME^Hashed System Name
"KRN",8989.51,849,1)
F^1:10^Enter the CRC hashed name for this system.
"KRN",8989.51,849,20,0)
^^3^3^3130905^
"KRN",8989.51,849,20,1,0)
This parameter holds the name of this VistA system, as a hashed base 16
"KRN",8989.51,849,20,2,0)
value.  It is calculated by a HMP patch post-init and stuffed into the
"KRN",8989.51,849,20,3,0)
SYStem level value, and should NOT be modified.
"KRN",8989.51,849,30,0)
^8989.513I^1^1
"KRN",8989.51,849,30,1,0)
1^4.2
"KRN",8989.51,850,-1)
0^4
"KRN",8989.51,850,0)
HMP PARAMETERS^HMP SYSTEM PARAMETERS^1^System Parameters^System Parameters Name
"KRN",8989.51,850,1)
W
"KRN",8989.51,850,6)
F
"KRN",8989.51,850,20,0)
^8989.512^2^2^3120125^^^
"KRN",8989.51,850,20,1,0)
This parameter stores a list of parameters used by the HMP middle teir 
"KRN",8989.51,850,20,2,0)
and the HMP UI.
"KRN",8989.51,850,20,3,0)
whenever the schema changes in a way that requires a conversion or 
"KRN",8989.51,850,20,4,0)
re-extraction of objects.  The fractional piece increments whenever the 
"KRN",8989.51,850,20,5,0)
schema is extended.
"KRN",8989.51,850,30,0)
^8989.513I^2^2
"KRN",8989.51,850,30,1,0)
6^4.2
"KRN",8989.51,850,30,2,0)
1^200
"KRN",8989.51,851,-1)
0^1
"KRN",8989.51,851,0)
HMP CPRS PATH^CPRS Location^0^FREE TEXT^PIV Link Message after success
"KRN",8989.51,851,1)
W
"KRN",8989.51,851,6)
F
"KRN",8989.51,851,30,0)
^8989.513I^2^2
"KRN",8989.51,851,30,1,0)
1^200
"KRN",8989.51,851,30,2,0)
4^4.2
"KRN",8989.51,852,-1)
0^2
"KRN",8989.51,852,0)
HMP JSON SCHEMA^HMP JSON Extract Schema^^^JSON Schema Version
"KRN",8989.51,852,1)
N^1:999:4^Enter the version / build number for the HMP Schema
"KRN",8989.51,852,20,0)
^^5^5^3141022^
"KRN",8989.51,852,20,1,0)
This contains the version number of the HMP schema which describes the
"KRN",8989.51,852,20,2,0)
JSON objects produced by the HMP extracts.  The whole number increments
"KRN",8989.51,852,20,3,0)
whenever the schema changes in a way that requires a conversion or
"KRN",8989.51,852,20,4,0)
re-extraction of objects.  The fractional piece increments whenever the
"KRN",8989.51,852,20,5,0)
schema is extended.
"KRN",8989.51,852,30,0)
^8989.513I^1^1
"KRN",8989.51,852,30,1,0)
1^9.4
"KRN",8989.51,853,-1)
0^3
"KRN",8989.51,853,0)
HMP LOCATIONS^HMP Locations^1^Clinic^Synchronized
"KRN",8989.51,853,1)
Y
"KRN",8989.51,853,6)
P^44^Enter clinic to synch with HMP
"KRN",8989.51,853,30,0)
^8989.513I^1^1
"KRN",8989.51,853,30,1,0)
5^4
"KRN",8989.51,854,-1)
0^8
"KRN",8989.51,854,0)
HMP TASK WAIT TIME^HMP TASK WAIT TIME^^^#SECONDS
"KRN",8989.51,854,1)
N^1:9999^Enter the number of seconds to wait before the HMP Data Monitor re-queues
"KRN",8989.51,854,4,0)
^8989.514^1^1
"KRN",8989.51,854,4,1,0)
HMP
"KRN",8989.51,854,4,"B","HMP",1)

"KRN",8989.51,854,6)
F
"KRN",8989.51,854,20,0)
^^2^2^3141022^
"KRN",8989.51,854,20,1,0)
This is the number of seconds that the system will wait before re-queuing
"KRN",8989.51,854,20,2,0)
the HMP Data Monitor background job.
"KRN",8989.51,854,30,0)
^8989.513I^2^2
"KRN",8989.51,854,30,1,0)
1^9.4
"KRN",8989.51,854,30,2,0)
2^4.2
"KRN",8994,3461,-1)
0^14
"KRN",8994,3461,0)
HMP PATIENT ACTIVITY^ACT^HMPACT^2
"KRN",8994,3461,1,0)
^8994.01^2^2^3140903^^^
"KRN",8994,3461,1,1,0)
This remote procedure returns all JSON messages for entries that exist in
"KRN",8994,3461,1,2,0)
 the cross reference ^HMP(800001.5,"PTAPPT,"HMP"
"KRN",8994,3462,-1)
0^1
"KRN",8994,3462,0)
HMP APPOINTMENTS^OUT^HMPPATS^4^S^^^1^^^1
"KRN",8994,3462,1,0)
^8994.01^2^2^3141016^^^^
"KRN",8994,3462,1,1,0)
This RPC finds a list of patients that have scheduled appointments during
"KRN",8994,3462,1,2,0)
the requested timeframe, as XML in ^TMP($J,"HMP",n).
"KRN",8994,3462,2,0)
^8994.02A^2^2
"KRN",8994,3462,2,1,0)
START^1^20^0^1
"KRN",8994,3462,2,1,1,0)
^8994.021^2^2^3101129^^^
"KRN",8994,3462,2,1,1,1,0)
The date/time from which to begin searching for appointments; optional,
"KRN",8994,3462,2,1,1,2,0)
will default to tomorrow if not defined.
"KRN",8994,3462,2,2,0)
STOP^1^20^0^2
"KRN",8994,3462,2,2,1,0)
^8994.021^2^2^3141016^^^
"KRN",8994,3462,2,2,1,1,0)
The date/time at which to end searching for appointments; optional,
"KRN",8994,3462,2,2,1,2,0)
will default to tomorrow if not defined.
"KRN",8994,3462,2,"B","START",1)

"KRN",8994,3462,2,"B","STOP",2)

"KRN",8994,3462,2,"PARAMSEQ",1,1)

"KRN",8994,3462,2,"PARAMSEQ",2,2)

"KRN",8994,3462,3,0)
^8994.03^1^1^3141016^^^
"KRN",8994,3462,3,1,0)
Text array formatted XML
"KRN",8994,3463,-1)
0^2
"KRN",8994,3463,0)
HMP DATA VERSION^VERSION^HMPD^1^S^^^^^^1
"KRN",8994,3463,1,0)
^^2^2^3110613^
"KRN",8994,3463,1,1,0)
This RPC returns the current version of the XML returned by the RPC
"KRN",8994,3463,1,2,0)
'HMP GET PATIENT DATA.'
"KRN",8994,3463,3,0)
^^2^2^3110613^
"KRN",8994,3463,3,1,0)
A string identifying the version of the HMP data extracts and the
"KRN",8994,3463,3,2,0)
resulting XML.
"KRN",8994,3464,-1)
0^3
"KRN",8994,3464,0)
HMP DELETE OBJECT^DEL^HMPDJ2^1^S^^^1^1^^1
"KRN",8994,3464,1,0)
^8994.01^2^2^3130103^^^^
"KRN",8994,3464,1,1,0)
This RPC receives a Uid from the client and deletes the object from the
"KRN",8994,3464,1,2,0)
HMP Object file #800000.11.
"KRN",8994,3464,2,0)
^8994.02A^2^1
"KRN",8994,3464,2,2,0)
UID^1^100^1^1
"KRN",8994,3464,2,2,1,0)
^8994.021^1^1^3130103^^^^
"KRN",8994,3464,2,2,1,1,0)
The Uid of the object being deleted.
"KRN",8994,3464,2,"B","UID",2)

"KRN",8994,3464,2,"PARAMSEQ",1,2)

"KRN",8994,3464,3,0)
^8994.03^1^1^3130103^^^^
"KRN",8994,3464,3,1,0)
Text array formatted as JSON
"KRN",8994,3465,-1)
0^4
"KRN",8994,3465,0)
HMP DELETE ROSTER^DELROS^HMPROS3^1^^^^^1.2
"KRN",8994,3465,2,0)
^8994.02A^1^1
"KRN",8994,3465,2,1,0)
HMPIEN^1^100^1^1
"KRN",8994,3465,2,1,1,0)
^8994.021^1^1^3131210^^
"KRN",8994,3465,2,1,1,1,0)
Roster IEN.
"KRN",8994,3465,2,"B","HMPIEN",1)

"KRN",8994,3465,2,"B","VPRIEN",1)

"KRN",8994,3465,2,"PARAMSEQ",1,1)

"KRN",8994,3466,-1)
0^5
"KRN",8994,3466,0)
HMP GET CHECKSUM^CHECK^HMPDCRC^4^S^^^0^1^^1
"KRN",8994,3466,1,0)
^^1^1^3141016^
"KRN",8994,3466,1,1,0)
This RPC retrieves the requested data from VistA and returns its checksum.
"KRN",8994,3466,2,0)
^8994.02A^1^1
"KRN",8994,3466,2,1,0)
FILTER^2^^0^1
"KRN",8994,3466,2,1,1,0)
^^1^1^3141016^
"KRN",8994,3466,2,1,1,1,0)
List of name-value pairs defining the search.
"KRN",8994,3466,2,"B","FILTER",1)

"KRN",8994,3466,2,"PARAMSEQ",1,1)

"KRN",8994,3466,3,0)
^^1^1^3141016^
"KRN",8994,3466,3,1,0)
The CRC32 checksum value of the data.
"KRN",8994,3467,-1)
0^6
"KRN",8994,3467,0)
HMP GET OBJECT^GET^HMPDJ2^4^S^^^0^1^^1
"KRN",8994,3467,1,0)
^8994.01^2^2^3121219^^^^
"KRN",8994,3467,1,1,0)
This RPC retrieves the requested data from VistA, and returns it in
"KRN",8994,3467,1,2,0)
^TMP("HMP",$J,n) as JSON.
"KRN",8994,3467,2,0)
^8994.02A^1^1
"KRN",8994,3467,2,1,0)
FILTER^2^^0^1
"KRN",8994,3467,2,1,1,0)
^8994.021^1^1^3121219^^^^
"KRN",8994,3467,2,1,1,1,0)
List of name-value pairs defining the search.
"KRN",8994,3467,2,"B","FILTER",1)

"KRN",8994,3467,2,"PARAMSEQ",1,1)

"KRN",8994,3467,3,0)
^8994.03^1^1^3121219^^^^
"KRN",8994,3467,3,1,0)
Text array formatted as JSON
"KRN",8994,3468,-1)
0^7
"KRN",8994,3468,0)
HMP GET OPERATIONAL DATA^GET^HMPEF^4^S^^^0^1^^1
"KRN",8994,3468,1,0)
^8994.01^2^2^3140929^^^^
"KRN",8994,3468,1,1,0)
This RPC retrieves the requested data from VistA, and returns it in
"KRN",8994,3468,1,2,0)
^TMP("HMP",$J,n) as JSON.
"KRN",8994,3468,2,0)
^8994.02A^1^1
"KRN",8994,3468,2,1,0)
FILTER^2^^0^1
"KRN",8994,3468,2,1,1,0)
^8994.021^1^1^3140929^^^^
"KRN",8994,3468,2,1,1,1,0)
List of name-value pairs defining the search.
"KRN",8994,3468,2,"B","FILTER",1)

"KRN",8994,3468,2,"PARAMSEQ",1,1)

"KRN",8994,3468,3,0)
^8994.03^1^1^3140929^^^^
"KRN",8994,3468,3,1,0)
Text array formatted as JSON
"KRN",8994,3469,-1)
0^8
"KRN",8994,3469,0)
HMP GET PATIENT DATA^GET^HMPD^4^S^^^1^1^^1
"KRN",8994,3469,1,0)
^8994.01^2^2^3110606^^^^
"KRN",8994,3469,1,1,0)
This RPC retrieves the requested data from VistA, and returns it in
"KRN",8994,3469,1,2,0)
^TMP("HMP",$J,n) as XML.
"KRN",8994,3469,2,0)
^8994.02A^7^7
"KRN",8994,3469,2,1,0)
DFN^1^20^1^1
"KRN",8994,3469,2,1,1,0)
^8994.021^2^2^3100203^^
"KRN",8994,3469,2,1,1,1,0)
Internal entry number from Patient file #2
"KRN",8994,3469,2,1,1,2,0)
[optionally DFN;ICN for remote calls]
"KRN",8994,3469,2,2,0)
TYPE^1^100^0^2
"KRN",8994,3469,2,2,1,0)
^8994.021^4^4^3110606^^^
"KRN",8994,3469,2,2,1,1,0)
The kind(s) of data to return, which may include:
"KRN",8994,3469,2,2,1,2,0)
  demographics;reactions;problems;vitals;labs;meds;
"KRN",8994,3469,2,2,1,3,0)
  immunizations;visits;appointments;documents;
"KRN",8994,3469,2,2,1,4,0)
  procedures;consults
"KRN",8994,3469,2,3,0)
START^1^20^0^3
"KRN",8994,3469,2,3,1,0)
^8994.021^1^1^3100203^^
"KRN",8994,3469,2,3,1,1,0)
The date/time from which to begin searching for data [optional].
"KRN",8994,3469,2,4,0)
STOP^1^20^0^4
"KRN",8994,3469,2,4,1,0)
^8994.021^1^1^3100203^^
"KRN",8994,3469,2,4,1,1,0)
The date/time at which to end searching for data [optional].
"KRN",8994,3469,2,5,0)
MAX^1^7^0^5
"KRN",8994,3469,2,5,1,0)
^8994.021^1^1^3100203^^
"KRN",8994,3469,2,5,1,1,0)
The maximum number of items to return per data type [optional].
"KRN",8994,3469,2,6,0)
ITEM^1^30^0^6
"KRN",8994,3469,2,6,1,0)
^8994.021^2^2^3100329^^^
"KRN",8994,3469,2,6,1,1,0)
The identifier of a single item to return [optional, but TYPE must
"KRN",8994,3469,2,6,1,2,0)
also be defined when used].
"KRN",8994,3469,2,7,0)
FILTER^2^^0^7
"KRN",8994,3469,2,7,1,0)
^8994.021^1^1^3110606^^^^
"KRN",8994,3469,2,7,1,1,0)
List of name-value pairs, further refining the search.
"KRN",8994,3469,2,"B","DFN",1)

"KRN",8994,3469,2,"B","FILTER",7)

"KRN",8994,3469,2,"B","ITEM",6)

"KRN",8994,3469,2,"B","MAX",5)

"KRN",8994,3469,2,"B","START",3)

"KRN",8994,3469,2,"B","STOP",4)

"KRN",8994,3469,2,"B","TYPE",2)

"KRN",8994,3469,2,"PARAMSEQ",1,1)

"KRN",8994,3469,2,"PARAMSEQ",2,2)

"KRN",8994,3469,2,"PARAMSEQ",3,3)

"KRN",8994,3469,2,"PARAMSEQ",4,4)

"KRN",8994,3469,2,"PARAMSEQ",5,5)

"KRN",8994,3469,2,"PARAMSEQ",6,6)

"KRN",8994,3469,2,"PARAMSEQ",7,7)

"KRN",8994,3469,3,0)
^8994.03^1^1^3110606^^^^
"KRN",8994,3469,3,1,0)
Text array formatted as XML
"KRN",8994,3470,-1)
0^9
"KRN",8994,3470,0)
HMP GET PATIENT DATA JSON^GET^HMPDJ^4^S^^^0^1^^1
"KRN",8994,3470,1,0)
^8994.01^2^2^3131209^^^^
"KRN",8994,3470,1,1,0)
This RPC retrieves the requested data from VistA, and returns it in
"KRN",8994,3470,1,2,0)
^TMP("HMP",$J,n) as JSON.
"KRN",8994,3470,2,0)
^8994.02A^1^1
"KRN",8994,3470,2,1,0)
FILTER^2^^0^1
"KRN",8994,3470,2,1,1,0)
^8994.021^1^1^3131209^^^^
"KRN",8994,3470,2,1,1,1,0)
List of name-value pairs defining the search.
"KRN",8994,3470,2,"B","FILTER",1)

"KRN",8994,3470,2,"PARAMSEQ",1,1)

"KRN",8994,3470,3,0)
^8994.03^1^1^3131209^^^^
"KRN",8994,3470,3,1,0)
Text array formatted as JSON
"KRN",8994,3471,-1)
0^10
"KRN",8994,3471,0)
HMP GET REFERENCE DATA^GET^HMPEF^4^S^^^0^1^^1
"KRN",8994,3471,1,0)
^^2^2^3131105
"KRN",8994,3471,1,1,0)
This RPC retrieves the requested data from VistA, and returns it in
"KRN",8994,3471,1,2,0)
^TMP("HMP",$J,n) as JSON.
"KRN",8994,3471,2,0)
^8994.02A^1^1
"KRN",8994,3471,2,1,0)
FILTER^2^^0^1
"KRN",8994,3471,2,1,1,0)
^^1^1^3131105
"KRN",8994,3471,2,1,1,1,0)
List of name-value pairs defining the search.
"KRN",8994,3471,2,"B","FILTER",1)

"KRN",8994,3471,2,"PARAMSEQ",1,1)

"KRN",8994,3471,3,0)
^^1^1^3131105
"KRN",8994,3471,3,1,0)
Text array formatted as JSON
"KRN",8994,3472,-1)
0^11
"KRN",8994,3472,0)
HMP GET ROSTER LIST^GET^HMPROS7^4^S^^^^1^^1
"KRN",8994,3472,1,0)
^8994.01^2^2^3130221^^
"KRN",8994,3472,1,1,0)
Patient identification data passed in and roster identification returned.
"KRN",8994,3472,1,2,0)
List will contain all rosters associated with patient.
"KRN",8994,3472,2,0)
^8994.02A^2^2
"KRN",8994,3472,2,1,0)
HMP^2^3200^1^1
"KRN",8994,3472,2,2,0)
HMPARRAY^2^3200^1^1
"KRN",8994,3472,2,"B","HMP",1)

"KRN",8994,3472,2,"B","HMPARRAY",2)

"KRN",8994,3472,2,"B","VPR",1)

"KRN",8994,3472,2,"B","VPRARRAY",2)

"KRN",8994,3472,2,"PARAMSEQ",1,1)

"KRN",8994,3472,2,"PARAMSEQ",1,2)

"KRN",8994,3473,-1)
0^12
"KRN",8994,3473,0)
HMP GET SOURCE^GETSRC^HMPROS4^4^P^^^1^1^^1
"KRN",8994,3473,1,0)
^8994.01^2^2^3111101^^
"KRN",8994,3473,1,1,0)
Get all source information for requested source.  For example, Request is for Clinics.  Transmit all active clinics
"KRN",8994,3473,1,2,0)
include name and ien.
"KRN",8994,3473,2,0)
^8994.02A^2^2
"KRN",8994,3473,2,1,0)
HMPSRC^1^30^1^1
"KRN",8994,3473,2,1,1,0)
^^1^1^3111031^
"KRN",8994,3473,2,1,1,1,0)
Identifies which source information to send to the GUI.
"KRN",8994,3473,2,2,0)
HMPFILT^1^30^0^2
"KRN",8994,3473,2,2,1,0)
^8994.021^1^1^3111103^^
"KRN",8994,3473,2,2,1,1,0)
Text identifying what you are looking for.  Will be used when matching for details.
"KRN",8994,3473,2,"B","HMPFILT",2)

"KRN",8994,3473,2,"B","HMPSRC",1)

"KRN",8994,3473,2,"B","VPRFILT",2)

"KRN",8994,3473,2,"B","VPRSRC",1)

"KRN",8994,3473,2,"PARAMSEQ",1,1)

"KRN",8994,3473,2,"PARAMSEQ",2,2)

"KRN",8994,3473,3,0)
^8994.03^1^1^3111101^^
"KRN",8994,3473,3,1,0)
An array containing names and ien's of source data.
"KRN",8994,3474,-1)
0^13
"KRN",8994,3474,0)
HMP INPATIENTS^IN^HMPPATS^4^S^^^1^^^1
"KRN",8994,3474,1,0)
^8994.01^2^2^3101129^^^
"KRN",8994,3474,1,1,0)
This RPC finds a list of patients that are currently admitted,
"KRN",8994,3474,1,2,0)
as XML in ^TMP($J,"HMP",n).
"KRN",8994,3474,3,0)
^8994.03^1^1^3101129^^^
"KRN",8994,3474,3,1,0)
Text array formatted XML
"KRN",8994,3475,-1)
0^15
"KRN",8994,3475,0)
HMP PREVIEW ROSTER^PREVIEW^HMPROS3^4^P^^^1^1^^1
"KRN",8994,3475,1,0)
^8994.01^1^1^3120131^^^^
"KRN",8994,3475,1,1,0)
Compiles Roster based on data passed from GUI Interface.
"KRN",8994,3475,2,0)
^8994.02A^1^1
"KRN",8994,3475,2,1,0)
HMPARRAY^2^32000^1^1
"KRN",8994,3475,2,1,1,0)
^8994.021^1^1^3111022^^^^
"KRN",8994,3475,2,1,1,1,0)
Roster data from GUI.
"KRN",8994,3475,2,"B","HMPARRAY",1)

"KRN",8994,3475,2,"B","VPRARRAY",1)

"KRN",8994,3475,2,"PARAMSEQ",1,1)

"KRN",8994,3475,3,0)
^8994.03^1^1^3111022^^^^
"KRN",8994,3475,3,1,0)
XML formatted Roster.
"KRN",8994,3476,-1)
0^16
"KRN",8994,3476,0)
HMP PUT DEMOGRAPHICS^PUT^HMPUPD^4^S^^^0^1^^1
"KRN",8994,3476,1,0)
^8994.01^2^2^3131119^^
"KRN",8994,3476,1,1,0)
This RPC receives updated phone numbers from the client and calls
"KRN",8994,3476,1,2,0)
VAFCPTED to save them in the Patient file #2.
"KRN",8994,3476,2,0)
^8994.02A^3^3
"KRN",8994,3476,2,1,0)
OBJECT^3^^^3
"KRN",8994,3476,2,1,1,0)
^8994.021^1^1^3131120^^^
"KRN",8994,3476,2,1,1,1,0)
The data, as a JSON object
"KRN",8994,3476,2,2,0)
COMMAND^1^^^2
"KRN",8994,3476,2,2,1,0)
^8994.021^1^1^3131120^^
"KRN",8994,3476,2,2,1,1,0)
The action to take on the object in VistA
"KRN",8994,3476,2,3,0)
PATIENT^1^^^1
"KRN",8994,3476,2,3,1,0)
^^1^1^3131120^
"KRN",8994,3476,2,3,1,1,0)
Patient file #2 ien
"KRN",8994,3476,2,"B","COMMAND",2)

"KRN",8994,3476,2,"B","OBJECT",1)

"KRN",8994,3476,2,"B","PATIENT",3)

"KRN",8994,3476,2,"PARAMSEQ",1,3)

"KRN",8994,3476,2,"PARAMSEQ",2,2)

"KRN",8994,3476,2,"PARAMSEQ",3,1)

"KRN",8994,3476,3,0)
^8994.03^1^1^3131120^^^^
"KRN",8994,3476,3,1,0)
Text array formatted as JSON
"KRN",8994,3477,-1)
0^17
"KRN",8994,3477,0)
HMP PUT OBJECT^PUT^HMPDJ2^1^S^^^1^1^^1
"KRN",8994,3477,1,0)
^8994.01^2^2^3131216^^^^
"KRN",8994,3477,1,1,0)
This RPC receives data from the client and saves it in the HMP Object
"KRN",8994,3477,1,2,0)
file #800000.11 as JSON.
"KRN",8994,3477,2,0)
^8994.02A^3^2
"KRN",8994,3477,2,2,0)
TYPE^1^100^0^1
"KRN",8994,3477,2,2,1,0)
^8994.021^1^1^3121129^^^^
"KRN",8994,3477,2,2,1,1,0)
The kind of data being stored.
"KRN",8994,3477,2,3,0)
OBJECT^3^^0^2
"KRN",8994,3477,2,3,1,0)
^8994.021^1^1^3121129^^^^
"KRN",8994,3477,2,3,1,1,0)
The content of the object, as JSON
"KRN",8994,3477,2,"B","OBJECT",3)

"KRN",8994,3477,2,"B","TYPE",2)

"KRN",8994,3477,2,"PARAMSEQ",1,2)

"KRN",8994,3477,2,"PARAMSEQ",2,3)

"KRN",8994,3477,3,0)
^8994.03^1^1^3121129^^^^
"KRN",8994,3477,3,1,0)
Text array formatted as JSON
"KRN",8994,3478,-1)
0^18
"KRN",8994,3478,0)
HMP PUT PATIENT DATA^PUT^HMPDJ1^1^S^^^1^1^^1
"KRN",8994,3478,1,0)
^8994.01^2^2^3121129^^^^
"KRN",8994,3478,1,1,0)
This RPC receives data from the client and saves it in the HMP Patient
"KRN",8994,3478,1,2,0)
Object file #800000.1 as JSON.
"KRN",8994,3478,2,0)
^8994.02A^3^3
"KRN",8994,3478,2,1,0)
DFN^1^20^1^1
"KRN",8994,3478,2,1,1,0)
^8994.021^2^2^3121010^^^
"KRN",8994,3478,2,1,1,1,0)
Internal entry number from Patient file #2
"KRN",8994,3478,2,1,1,2,0)
[optionally DFN;ICN for remote calls]
"KRN",8994,3478,2,2,0)
TYPE^1^100^0^2
"KRN",8994,3478,2,2,1,0)
^8994.021^1^1^3121010^^^^
"KRN",8994,3478,2,2,1,1,0)
The kind of data being stored.
"KRN",8994,3478,2,3,0)
OBJECT^3^^0^3
"KRN",8994,3478,2,3,1,0)
^8994.021^1^1^3121129^^^^
"KRN",8994,3478,2,3,1,1,0)
The content of the object, as JSON
"KRN",8994,3478,2,"B","DFN",1)

"KRN",8994,3478,2,"B","OBJECT",3)

"KRN",8994,3478,2,"B","TYPE",2)

"KRN",8994,3478,2,"PARAMSEQ",1,1)

"KRN",8994,3478,2,"PARAMSEQ",2,2)

"KRN",8994,3478,2,"PARAMSEQ",3,3)

"KRN",8994,3478,3,0)
^8994.03^1^1^3121129^^^^
"KRN",8994,3478,3,1,0)
Text array formatted as JSON
"KRN",8994,3479,-1)
0^19
"KRN",8994,3479,0)
HMP ROSTER PATIENTS^COMPILE^HMPROS2^4^P^^^1^1^^1
"KRN",8994,3479,1,0)
^8994.01^1^1^3141009^^^^
"KRN",8994,3479,1,1,0)
Provides patients associated with requested Roster.
"KRN",8994,3479,2,0)
^8994.02A^2^2
"KRN",8994,3479,2,1,0)
ROSTER^1^15^0^1
"KRN",8994,3479,2,1,1,0)
^8994.021^1^1^3120105^^^^
"KRN",8994,3479,2,1,1,1,0)
IEN of Roster you are requesting patients for.
"KRN",8994,3479,2,2,0)
OWNER^1^15^0^2
"KRN",8994,3479,2,2,1,0)
^^1^1^3120105^
"KRN",8994,3479,2,2,1,1,0)
Compile all rosters for this owner.
"KRN",8994,3479,2,"B","OWNER",2)

"KRN",8994,3479,2,"B","ROSTER",1)

"KRN",8994,3479,2,"PARAMSEQ",1,1)

"KRN",8994,3479,2,"PARAMSEQ",2,2)

"KRN",8994,3479,3,0)
^8994.03^1^1^3141009^^^^
"KRN",8994,3479,3,1,0)
Text array formated XML.
"KRN",8994,3480,-1)
0^20
"KRN",8994,3480,0)
HMP ROSTERS^GETROS^HMPROS2^4^P^^^1^1^^1
"KRN",8994,3480,1,0)
^8994.01^1^1^3111110^^^^
"KRN",8994,3480,1,1,0)
Creates XML list of all Rosters.
"KRN",8994,3480,2,0)
^8994.02A^1^1
"KRN",8994,3480,2,1,0)
HMPFILT^1^30^0^1
"KRN",8994,3480,2,1,1,0)
^8994.021^1^1^3111110^^
"KRN",8994,3480,2,1,1,1,0)
Filter rosters if filter not null.
"KRN",8994,3480,2,"B","HMPFILT",1)

"KRN",8994,3480,2,"B","VPRFILT",1)

"KRN",8994,3480,2,"PARAMSEQ",1,1)

"KRN",8994,3480,3,0)
^8994.03^1^1^3111110^^^^
"KRN",8994,3480,3,1,0)
Text array formatted in XML.
"KRN",8994,3481,-1)
0^21
"KRN",8994,3481,0)
HMP SUBSCRIBE^SUBS^HMPPATS^4^S^^^1^^^1
"KRN",8994,3481,1,0)
^8994.01^3^3^3141006^^^^
"KRN",8994,3481,1,1,0)
This RPC will maintain a list of patients & events to monitor for new data.
"KRN",8994,3481,1,2,0)
The LIST of patients passed into this RPC is returned in ^TMP($J,"HMP",n)
"KRN",8994,3481,1,3,0)
as XML, with a subscription status of 'on', 'off', or 'error'.
"KRN",8994,3481,2,0)
^8994.02A^3^3
"KRN",8994,3481,2,1,0)
SYS^1^^0^1
"KRN",8994,3481,2,1,1,0)
^8994.021^3^3^3130417^^^^
"KRN",8994,3481,2,1,1,1,0)
This is the name of the system calling the RPC; it is used to create
"KRN",8994,3481,2,1,1,2,0)
an entry in the HMP SUBSCRIPTION file, and link a system to a list of
"KRN",8994,3481,2,1,1,3,0)
patients and/or events.
"KRN",8994,3481,2,2,0)
LIST^2^^0^3
"KRN",8994,3481,2,2,1,0)
^8994.021^2^2^3110310^^^
"KRN",8994,3481,2,2,1,1,0)
This is the list of patient identifiers, in the form 'dfn;icn', that
"KRN",8994,3481,2,2,1,2,0)
are to be either added to or removed from the monitor.
"KRN",8994,3481,2,3,0)
STS^1^^0^2
"KRN",8994,3481,2,3,1,0)
^^2^2^3110310^
"KRN",8994,3481,2,3,1,1,0)
This is a boolean value, 1 or 0, indicating if the patient should be
"KRN",8994,3481,2,3,1,2,0)
added to or removed from the data monitor.
"KRN",8994,3481,2,"B","LIST",2)

"KRN",8994,3481,2,"B","STS",3)

"KRN",8994,3481,2,"B","SYS",1)

"KRN",8994,3481,2,"PARAMSEQ",1,1)

"KRN",8994,3481,2,"PARAMSEQ",2,3)

"KRN",8994,3481,2,"PARAMSEQ",3,2)

"KRN",8994,3481,3,0)
^8994.03^1^1^3141006^^^^
"KRN",8994,3481,3,1,0)
Text array formatted as XML.
"KRN",8994,3482,-1)
0^22
"KRN",8994,3482,0)
HMP SUBSCRIBE ROSTERS^SUBS^HMPROS7^4^S^^^1^^^1
"KRN",8994,3482,1,0)
^8994.01^3^3^3130417^^^^
"KRN",8994,3482,1,1,0)
This RPC will maintain a list of rosters to monitor for new patients.
"KRN",8994,3482,1,2,0)
The LIST of rosters passed into this RPC is returned in ^TMP($J,"HMP",n)
"KRN",8994,3482,1,3,0)
as XML, with a subscription status of 'on', 'off', or 'error'.
"KRN",8994,3482,2,0)
^8994.02A^3^3
"KRN",8994,3482,2,1,0)
SYS^1^^0^1
"KRN",8994,3482,2,1,1,0)
^8994.021^3^3^3130417^^^^
"KRN",8994,3482,2,1,1,1,0)
This is the name of the system calling the RPC; it is used to create
"KRN",8994,3482,2,1,1,2,0)
an entry in the HMP SUBSCRIPTION file, and link a system to a list of
"KRN",8994,3482,2,1,1,3,0)
rosters.
"KRN",8994,3482,2,2,0)
LIST^2^^0^3
"KRN",8994,3482,2,2,1,0)
^8994.021^2^2^3130417^^^^
"KRN",8994,3482,2,2,1,1,0)
This is the list of roster identifiers that are to be either added to or
"KRN",8994,3482,2,2,1,2,0)
removed from the monitor.
"KRN",8994,3482,2,3,0)
STS^1^^0^2
"KRN",8994,3482,2,3,1,0)
^8994.021^2^2^3130417^^
"KRN",8994,3482,2,3,1,1,0)
This is a boolean value, 1 or 0, indicating if the roster should be
"KRN",8994,3482,2,3,1,2,0)
added to or removed from the data monitor.
"KRN",8994,3482,2,"B","LIST",2)

"KRN",8994,3482,2,"B","STS",3)

"KRN",8994,3482,2,"B","SYS",1)

"KRN",8994,3482,2,"PARAMSEQ",1,1)

"KRN",8994,3482,2,"PARAMSEQ",2,3)

"KRN",8994,3482,2,"PARAMSEQ",3,2)

"KRN",8994,3482,3,0)
^8994.03^1^1^3130417^^^^
"KRN",8994,3482,3,1,0)
Text array formatted as XML.
"KRN",8994,3483,-1)
0^23
"KRN",8994,3483,0)
HMP UPDATE ROSTER^UPDATE^HMPROS3^4^P^^^1^1^^1
"KRN",8994,3483,1,0)
^8994.01^1^1^3141006^^^
"KRN",8994,3483,1,1,0)
Udates roster data editted by GUI into VistA.
"KRN",8994,3483,2,0)
^8994.02A^1^1
"KRN",8994,3483,2,1,0)
HMPARRAY^2^32000^1^1
"KRN",8994,3483,2,"B","HMPARRAY",1)

"KRN",8994,3483,2,"B","VPRARRAY",1)

"KRN",8994,3483,2,"PARAMSEQ",1,1)

"KRN",8994,3484,-1)
0^24
"KRN",8994,3484,0)
HMP WRITEBACK PT DEM^FILE^HMPPTDEM^2^S^^^0^1^^1
"KRN",8994,3484,1,0)
^8994.01^1^1^3141015^^
"KRN",8994,3484,1,1,0)
This RPC takes demographic data from an outside system and files it in to the Patient File (#2)
"KRN",8994,3484,2,0)
^8994.02A^1^1
"KRN",8994,3484,2,1,0)
FIL^1^32000^1^1
"KRN",8994,3484,2,1,1,0)
^8994.021^1^1^3141015^^
"KRN",8994,3484,2,1,1,1,0)
"^" delimited set of data to be filed in to the Patient File 
"KRN",8994,3484,2,"B","FIL",1)

"KRN",8994,3484,2,"PARAMSEQ",1,1)

"KRN",8994,3484,3,0)
^8994.03^1^1^3141015^^
"KRN",8994,3484,3,1,0)
Error or Success message
"KRN",8994,3485,-1)
0^25
"KRN",8994,3485,0)
HMPCORD RPC^RPC^HMPCORD^3^^^^0
"KRN",8994,3485,2,0)
^8994.02A^1^1
"KRN",8994,3485,2,1,0)
PARAMS^2^^1^1
"KRN",8994,3485,2,"B","PARAMS",1)

"KRN",8994,3485,2,"PARAMSEQ",1,1)

"KRN",8994,3486,-1)
0^26
"KRN",8994,3486,0)
HMPCPAT RPC^RPC^HMPCPAT^4
"KRN",8994,3486,2,0)
^8994.02A^1^1
"KRN",8994,3486,2,1,0)
PARAMS^2^^1^1
"KRN",8994,3486,2,"B","PARAMS",1)

"KRN",8994,3486,2,"PARAMSEQ",1,1)

"KRN",8994,3487,-1)
0^27
"KRN",8994,3487,0)
HMPCPRS RPC^RPC^HMPCPRS^3^^^^0
"KRN",8994,3487,2,0)
^8994.02A^1^1
"KRN",8994,3487,2,1,0)
PARAMS^2^^1^1
"KRN",8994,3487,2,"B","PARAMS",1)

"KRN",8994,3487,2,"PARAMSEQ",1,1)

"KRN",8994,3488,-1)
0^28
"KRN",8994,3488,0)
HMPCRPC RPC^RPC^HMPCRPC^3^^^^0
"KRN",8994,3488,1,0)
^8994.01^2^2^3120515^^
"KRN",8994,3488,1,1,0)
This RPC is used to save and get data to/from the HMP PARAMETERS in the 
"KRN",8994,3488,1,2,0)
parameter file.
"KRN",8994,3488,2,0)
^8994.02A^1^1
"KRN",8994,3488,2,1,0)
PARAMS^2^^1^1
"KRN",8994,3488,2,"B","PARAMS",1)

"KRN",8994,3488,2,"PARAMSEQ",1,1)

"KRN",8994,3489,-1)
0^29
"KRN",8994,3489,0)
HMPCRPC RPCCHAIN^CHAINRPC^HMPCRPC^3^P^0^^0^1^^1
"KRN",8994,3489,2,0)
^8994.02A^1^1
"KRN",8994,3489,2,1,0)
PARAMS^2^32000^1^1
"KRN",8994,3489,2,"B","PARAMS",1)

"KRN",8994,3489,2,"PARAMSEQ",1,1)

"KRN",8994,3490,-1)
0^30
"KRN",8994,3490,0)
HMPDJFS API^API^HMPDJFS^4^^^^0
"KRN",8994,3490,2,0)
^8994.02A^1^1
"KRN",8994,3490,2,1,0)
RESPONSE^1^^^1
"KRN",8994,3490,2,"B","RESPONSE",1)

"KRN",8994,3490,2,"PARAMSEQ",1,1)

"KRN",8994,3491,-1)
0^31
"KRN",8994,3491,0)
HMPDJFS DELSUB^DELSUB^HMPDJFS^1^P^0
"KRN",8994,3492,-1)
0^32
"KRN",8994,3492,0)
HMPFPTC CHKS^CHKS^HMPFPTC^3^^^^0
"KRN",8994,3492,1,0)
^8994.01^2^2^3120629^^^
"KRN",8994,3492,1,1,0)
This RPC returns the patient selection checks for a sensitive patient, 
"KRN",8994,3492,1,2,0)
deceased, and PRF.
"KRN",8994,3492,2,0)
^8994.02A^1^1
"KRN",8994,3492,2,1,0)
ICN^1^^1^1
"KRN",8994,3492,2,1,1,0)
^8994.021^1^1^3120629^^
"KRN",8994,3492,2,1,1,1,0)
This is the patient ICN
"KRN",8994,3492,2,"B","ICN",1)

"KRN",8994,3492,2,"PARAMSEQ",1,1)

"KRN",8994,3493,-1)
0^33
"KRN",8994,3493,0)
HMPFPTC LOG^LOG^HMPFPTC^3^^^^0
"KRN",8994,3493,1,0)
^8994.01^2^2^3120124^
"KRN",8994,3493,1,1,0)
This RPC is used to log a patient when a provider is accessing a 
"KRN",8994,3493,1,2,0)
sensitive record.
"KRN",8994,3493,2,0)
^8994.02A^1^1
"KRN",8994,3493,2,1,0)
ICN^1^^1^1
"KRN",8994,3493,2,"B","ICN",1)

"KRN",8994,3493,2,"PARAMSEQ",1,1)

"KRN",8994,3494,-1)
0^35
"KRN",8994,3494,0)
HMP LOCAL GETCORRESPONDINGIDS^TFL^HMPTFU2^3^P^^^1^1
"KRN",8994,3494,1,0)
^8994.01^2^2^3150205^^^^
"KRN",8994,3494,1,1,0)
Given a patient DFN, ICN, or EDIPI, this Remote Procedure Call returns a list of Treating Facilities, including SOURCE   
"KRN",8994,3494,1,2,0)
     ID,  station number, and  IDENTIFIER STATUS. INPUT PARAMETER: Patient Identifier      
"KRN",8994,3494,2,0)
^8994.02A^1^1
"KRN",8994,3494,2,1,0)
Patient Identifier^3^255^1^1
"KRN",8994,3494,2,1,1,0)
^8994.021^11^11^3150205^^^^
"KRN",8994,3494,2,1,1,1,0)
 The patient identifier will either be the PATIENT file (#2) IEN (aka 
"KRN",8994,3494,2,1,1,2,0)
 DFN), Integration Control Number (aka ICN) or the DOD Identifier (aka 
"KRN",8994,3494,2,1,1,3,0)
 EDIPI).  Following this format:
"KRN",8994,3494,2,1,1,4,0)
  
"KRN",8994,3494,2,1,1,5,0)
 Id^IdType^AssigningAuthority^AssigningFacility
"KRN",8994,3494,2,1,1,6,0)
  
"KRN",8994,3494,2,1,1,7,0)
 Examples:
"KRN",8994,3494,2,1,1,8,0)
  
"KRN",8994,3494,2,1,1,9,0)
 ICN example:   1008520438V882204^NI^USVHA^200M
"KRN",8994,3494,2,1,1,10,0)
DFN example:   100000511^PI^USVHA^500
"KRN",8994,3494,2,1,1,11,0)
 EDIPI example: 852043888^NI^USDOD^200DOD
"KRN",8994,3494,2,"B","Patient Identifier",1)

"KRN",8994,3494,2,"PARAMSEQ",1,1)

"KRN",8994,3494,3,0)
^8994.03^14^14^3150205^^^^
"KRN",8994,3494,3,1,0)
 This will return a list of treating facilities in the following format:
"KRN",8994,3494,3,2,0)
 
"KRN",8994,3494,3,3,0)
 ID^IDTYPE^AssigningFacility^AssigningAuthority^IDStatus
"KRN",8994,3494,3,4,0)
 
"KRN",8994,3494,3,5,0)
AssigningFacility is a hashed value based on facility domain,
"KRN",8994,3494,3,6,0)
using $$BASE^XLFUTL($$CRC16^XLFCRC("DOMAIN.DOMAIN.EXT"),10,16)
"KRN",8994,3494,3,7,0)
 
"KRN",8994,3494,3,8,0)
 Examples:
"KRN",8994,3494,3,9,0)
 
"KRN",8994,3494,3,10,0)
 RETURN(1)="27^PI^D17^USVHA^H"
"KRN",8994,3494,3,11,0)
 RETURN(2)="7169806^PI^D17^USVHA^A"
"KRN",8994,3494,3,12,0)
 RETURN(3)="^PI^200PS^USVHA"
"KRN",8994,3494,3,13,0)
 RETURN(4)="1^NI^200DOD^USDOD^A"
"KRN",8994,3494,3,14,0)
 RETURN(5)="2^NI^200DOD^USDOD^H"
"KRN",8994,3495,-1)
0^34
"KRN",8994,3495,0)
HMP LOCAL CORRESPONDINGIDS^TFL^HMPTFU2^3^P^^^1^1
"KRN",8994,3495,1,0)
^8994.01^1^1^3150219^^^^
"KRN",8994,3495,1,1,0)
Give a patient DFN, ICN, or EDIPI, this Remote Procedure Call returns a list of Treating Facilities, including SOURCE ID, SITE HASH, and IDENTIFIER STATUS.
"KRN",8994,3495,2,0)
^8994.02A^1^1
"KRN",8994,3495,2,1,0)
Patient Identifier^3^255^1^1
"KRN",8994,3495,2,1,1,0)
^8994.021^7^7^3150219^^^^
"KRN",8994,3495,2,1,1,1,0)
The patient identifier will either be the PATIENT (#2) IEN (aka DFN), Integration Control Number (aka ICN), or the DOD Identifier (aka EDIPI). Following this format:
"KRN",8994,3495,2,1,1,2,0)
Id^IdType^AssigningAuthority^AssigningFacility
"KRN",8994,3495,2,1,1,3,0)
 
"KRN",8994,3495,2,1,1,4,0)
Examples:
"KRN",8994,3495,2,1,1,5,0)
 ICN example:  1008520438V882204^NI^USVHA^200M
"KRN",8994,3495,2,1,1,6,0)
 DFN example:  100000511^PI^USHVA^500
"KRN",8994,3495,2,1,1,7,0)
EDIPI example: 852043888^NI^USDOD^200DOD
"KRN",8994,3495,2,"B","Patient Identifier",1)

"KRN",8994,3495,2,"PARAMSEQ",1,1)

"KRN",8994,3495,3,0)
^8994.03^8^8^3150219^^^
"KRN",8994,3495,3,1,0)
This will return a list of treating facilities in the following format:
"KRN",8994,3495,3,2,0)
 
"KRN",8994,3495,3,3,0)
 ID^IDTYPE^SiteHash^AssigningAuthority^IDSTatus
"KRN",8994,3495,3,4,0)
 
"KRN",8994,3495,3,5,0)
Examples:
"KRN",8994,3495,3,6,0)
 RETURN(1)=27^PI^D17^USVHA^H"
"KRN",8994,3495,3,7,0)
 RETURN(2)=7169806^PI^D17^USHVA^A"
"KRN",8994,3495,3,8,0)
 RETURN(3)=1^NI^200DOD^USDOD^A"
"KRN",8994,3496,-1)
0^36
"KRN",8994,3496,0)
HMP PUT OPERATIONAL DATA^API^HMPWB^1^S^^^^^^1
"KRN",8994,3496,1,0)
^8994.01^1^1^3141222^^
"KRN",8994,3496,1,1,0)
This RPC accepts writeback data from JDS and returns a JSON formatted acknowledgement message. 
"KRN",8994,3496,2,0)
^8994.02A^3^3
"KRN",8994,3496,2,1,0)
IEN^1^^1^1
"KRN",8994,3496,2,2,0)
DFN^1^^1^2
"KRN",8994,3496,2,3,0)
DATA^2^^1^3
"KRN",8994,3496,2,"B","DATA",3)

"KRN",8994,3496,2,"B","DFN",2)

"KRN",8994,3496,2,"B","IEN",1)

"KRN",8994,3496,2,"PARAMSEQ",1,1)

"KRN",8994,3496,2,"PARAMSEQ",2,2)

"KRN",8994,3496,2,"PARAMSEQ",3,3)

"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PGL",800000.1,0,2,.02)
PATIENT^RP2'^DPT(^0;2^Q
"PKG",578,-1)
1^1
"PKG",578,0)
HEALTH MANAGEMENT PLATFORM^HMP^Access patient medical records from all VistA's
"PKG",578,20,0)
^9.402P^^
"PKG",578,22,0)
^9.49I^1^1
"PKG",578,22,1,0)
2.0^3150610^3150610^1
"PKG",578,22,1,1,0)
^^416^416^3150610
"PKG",578,22,1,1,1,0)
The eHMP project within the Veterans Health Information Systems and
"PKG",578,22,1,1,2,0)
Technology (VistA) Evolution program will introduce expanded
"PKG",578,22,1,1,3,0)
capabilities and modernize existing features of the VA VistA Electronic
"PKG",578,22,1,1,4,0)
Health Record (EHR) system. The eHMP project is a multi-year effort to
"PKG",578,22,1,1,5,0)
evolve a modern, service-oriented Enterprise Health Application
"PKG",578,22,1,1,6,0)
Platform. This platform includes VistA Exchange, the eHMP Clinical
"PKG",578,22,1,1,7,0)
Practice Environment (CPE), as well as clinical knowledge enrichment and
"PKG",578,22,1,1,8,0)
decision support services. VistA Exchange is the clinical data services
"PKG",578,22,1,1,9,0)
engine, federating clinical data from a variety of VA and DoD sources
"PKG",578,22,1,1,10,0)
into an Enterprise Virtual Patient Record (eVPR). The eHMP CPE framework
"PKG",578,22,1,1,11,0)
will incorporate capabilities currently provided by JLV and hi2 HMP.
"PKG",578,22,1,1,12,0)
eHMP CPE will eventually replace the Computerized Patient Record System
"PKG",578,22,1,1,13,0)
(CPRS) as VA?s primary point of care application. eHMP version 1.1
"PKG",578,22,1,1,14,0)
Viewer Edition is the initial product supporting a user interface.
"PKG",578,22,1,1,15,0)
This project is being deployed in phases with each new iteration 
"PKG",578,22,1,1,16,0)
adding new features.
"PKG",578,22,1,1,17,0)
 
"PKG",578,22,1,1,18,0)
 
"PKG",578,22,1,1,19,0)
 
"PKG",578,22,1,1,20,0)
 
"PKG",578,22,1,1,21,0)
Patch Components
"PKG",578,22,1,1,22,0)
================
"PKG",578,22,1,1,23,0)
 
"PKG",578,22,1,1,24,0)
This is a multi-patch build and consists of the following patches:
"PKG",578,22,1,1,25,0)
 
"PKG",578,22,1,1,26,0)
MD*1.0*38
"PKG",578,22,1,1,27,0)
OR*3.0*390
"PKG",578,22,1,1,28,0)
PSB*3.0*79
"PKG",578,22,1,1,29,0)
TIU*1.0*106
"PKG",578,22,1,1,30,0)
GMRC*3.0*80
"PKG",578,22,1,1,31,0)
HMP*2.0*1
"PKG",578,22,1,1,32,0)
 
"PKG",578,22,1,1,33,0)
The following information is specific to the HMP 2.0 patch which is
"PKG",578,22,1,1,34,0)
the primary patch for eHMP. The other
"PKG",578,22,1,1,35,0)
patches contain methods for extracting domain specific data to the eHMP
"PKG",578,22,1,1,36,0)
and JSON Data Store.
"PKG",578,22,1,1,37,0)
 
"PKG",578,22,1,1,38,0)
Files & Fields Associated:
"PKG",578,22,1,1,39,0)
 
"PKG",578,22,1,1,40,0)
File Name (#) Field Name (#) New/Modified/Deleted
"PKG",578,22,1,1,41,0)
------------- -------------- --------------------
"PKG",578,22,1,1,42,0)
HMP SUBSCRIPTION #800000
"PKG",578,22,1,1,43,0)
HMP PATIENT OBJECT #800000.1
"PKG",578,22,1,1,44,0)
HMP OBJECT #800000.11
"PKG",578,22,1,1,45,0)
HMP LIST #800000.2
"PKG",578,22,1,1,46,0)
HMP LIST DOMAIN #800000.21
"PKG",578,22,1,1,47,0)
HMP LIST ATTRIBUTE #800000.22
"PKG",578,22,1,1,48,0)
HMP PANEL #800001
"PKG",578,22,1,1,49,0)
HMP ROSTER #800001.2
"PKG",578,22,1,1,50,0)
HMP ACTIVITY #800001.5
"PKG",578,22,1,1,51,0)
 
"PKG",578,22,1,1,52,0)
 
"PKG",578,22,1,1,53,0)
Additional Information:
"PKG",578,22,1,1,54,0)
 
"PKG",578,22,1,1,55,0)
Patches necessary for This patch to be installed:
"PKG",578,22,1,1,56,0)
 
"PKG",578,22,1,1,57,0)
 
"PKG",578,22,1,1,58,0)
  1 MD*1.0*38                                        
"PKG",578,22,1,1,59,0)
  2 OR*3.0*390                                       
"PKG",578,22,1,1,60,0)
  3 PSB*3.0*79                     
"PKG",578,22,1,1,61,0)
  4 TIU*1.0*106                                      
"PKG",578,22,1,1,62,0)
  5 GMRC*3.0*80                                      
"PKG",578,22,1,1,63,0)
  6 HMP 2.0                                        
"PKG",578,22,1,1,64,0)
 
"PKG",578,22,1,1,65,0)
 
"PKG",578,22,1,1,66,0)
HMP 2.0
"PKG",578,22,1,1,67,0)
 
"PKG",578,22,1,1,68,0)
HEALTH MANAGEMENT PLATFORM
"PKG",578,22,1,1,69,0)
HMPACT    value = 1310173
"PKG",578,22,1,1,70,0)
HMPAP1    value = 154648962
"PKG",578,22,1,1,71,0)
HMPATRG   value = 13049868
"PKG",578,22,1,1,72,0)
HMPCAC    value = 96818205
"PKG",578,22,1,1,73,0)
HMPCORD   value = 7434772
"PKG",578,22,1,1,74,0)
HMPCORD1  value = 194228721
"PKG",578,22,1,1,75,0)
HMPCORD2  value = 67567632
"PKG",578,22,1,1,76,0)
HMPCORD3  value = 150904126
"PKG",578,22,1,1,77,0)
HMPCORD4  value = 139723723
"PKG",578,22,1,1,78,0)
HMPCORD5  value = 86484445
"PKG",578,22,1,1,79,0)
HMPCPAT   value = 1066536
"PKG",578,22,1,1,80,0)
HMPCPAT1  value = 7016891
"PKG",578,22,1,1,81,0)
HMPCPRS   value = 4924700
"PKG",578,22,1,1,82,0)
HMPCRPC   value = 12934677
"PKG",578,22,1,1,83,0)
HMPCRPC1  value = 106973387
"PKG",578,22,1,1,84,0)
HMPD      value = 28800925
"PKG",578,22,1,1,85,0)
HMPDCRC   value = 46664807
"PKG",578,22,1,1,86,0)
HMPDERRH  value = 1975041
"PKG",578,22,1,1,87,0)
HMPDGMPL  value = 27694389
"PKG",578,22,1,1,88,0)
HMPDGMRA  value = 22292681
"PKG",578,22,1,1,89,0)
HMPDGMRC  value = 10807786
"PKG",578,22,1,1,90,0)
HMPDGMV   value = 41514540
"PKG",578,22,1,1,91,0)
HMPDGPF   value = 5516892
"PKG",578,22,1,1,92,0)
HMPDIB    value = 12628696
"PKG",578,22,1,1,93,0)
HMPDJ     value = 33824834
"PKG",578,22,1,1,94,0)
HMPDJ0    value = 88010816
"PKG",578,22,1,1,95,0)
HMPDJ00   value = 133513920
"PKG",578,22,1,1,96,0)
HMPDJ00A  value = 113564667
"PKG",578,22,1,1,97,0)
HMPDJ01   value = 41085471
"PKG",578,22,1,1,98,0)
HMPDJ02   value = 139246483
"PKG",578,22,1,1,99,0)
HMPDJ03   value = 85806963
"PKG",578,22,1,1,100,0)
HMPDJ04   value = 64765097
"PKG",578,22,1,1,101,0)
HMPDJ04A  value = 36508889
"PKG",578,22,1,1,102,0)
HMPDJ04E  value = 10143878
"PKG",578,22,1,1,103,0)
HMPDJ05   value = 79595880
"PKG",578,22,1,1,104,0)
HMPDJ05V  value = 64852450
"PKG",578,22,1,1,105,0)
HMPDJ06   value = 54257858
"PKG",578,22,1,1,106,0)
HMPDJ07   value = 22322346
"PKG",578,22,1,1,107,0)
HMPDJ08   value = 68673644
"PKG",578,22,1,1,108,0)
HMPDJ08A  value = 46989359
"PKG",578,22,1,1,109,0)
HMPDJ09   value = 39057508
"PKG",578,22,1,1,110,0)
HMPDJ09M  value = 10164643
"PKG",578,22,1,1,111,0)
HMPDJ1    value = 18536339
"PKG",578,22,1,1,112,0)
HMPDJ2    value = 21438887
"PKG",578,22,1,1,113,0)
HMPDJFS   value = 69787003
"PKG",578,22,1,1,114,0)
HMPDJFSD  value = 6500303
"PKG",578,22,1,1,115,0)
HMPDJFSG  value = 122582104
"PKG",578,22,1,1,116,0)
HMPDJFSM  value = 89659473
"PKG",578,22,1,1,117,0)
HMPDJFSP  value = 149324597
"PKG",578,22,1,1,118,0)
HMPDJFST  value = 46894611
"PKG",578,22,1,1,119,0)
HMPDJT    value = 9992032
"PKG",578,22,1,1,120,0)
HMPDJX    value = 35974883
"PKG",578,22,1,1,121,0)
HMPDLR    value = 24583034
"PKG",578,22,1,1,122,0)
HMPDLRA   value = 75872905
"PKG",578,22,1,1,123,0)
HMPDLRO   value = 27146176
"PKG",578,22,1,1,124,0)
HMPDMC    value = 57964365
"PKG",578,22,1,1,125,0)
HMPDMDC   value = 44173396
"PKG",578,22,1,1,126,0)
HMPDOR    value = 13171182
"PKG",578,22,1,1,127,0)
HMPDPROC  value = 10503927
"PKG",578,22,1,1,128,0)
HMPDPS    value = 18754698
"PKG",578,22,1,1,129,0)
HMPDPSI   value = 41148802
"PKG",578,22,1,1,130,0)
HMPDPSO   value = 15565576
"PKG",578,22,1,1,131,0)
HMPDPSOR  value = 39015653
"PKG",578,22,1,1,132,0)
HMPDPT    value = 70429024
"PKG",578,22,1,1,133,0)
HMPDPXAM  value = 9554968
"PKG",578,22,1,1,134,0)
HMPDPXED  value = 9765099
"PKG",578,22,1,1,135,0)
HMPDPXHF  value = 10000962
"PKG",578,22,1,1,136,0)
HMPDPXIM  value = 15776836
"PKG",578,22,1,1,137,0)
HMPDPXSK  value = 9640619
"PKG",578,22,1,1,138,0)
HMPDRA    value = 41653266
"PKG",578,22,1,1,139,0)
HMPDSDAM  value = 20015480
"PKG",578,22,1,1,140,0)
HMPDSR    value = 30238500
"PKG",578,22,1,1,141,0)
HMPDTIU   value = 80060367
"PKG",578,22,1,1,142,0)
HMPDTIUX  value = 21288550
"PKG",578,22,1,1,143,0)
HMPDVSIT  value = 89189669
"PKG",578,22,1,1,144,0)
HMPEASU   value = 28117986
"PKG",578,22,1,1,145,0)
HMPEF     value = 210968569
"PKG",578,22,1,1,146,0)
HMPEFSG   value = 7146892
"PKG",578,22,1,1,147,0)
HMPEFSP   value = 44616195
"PKG",578,22,1,1,148,0)
HMPEFST   value = 5355448
"PKG",578,22,1,1,149,0)
HMPEFX    value = 8497176
"PKG",578,22,1,1,150,0)
HMPEHL7   value = 3357275
"PKG",578,22,1,1,151,0)
HMPELAB   value = 5621776
"PKG",578,22,1,1,152,0)
HMPENSZ   value = 68569424
"PKG",578,22,1,1,153,0)
HMPENSZ1  value = 10674596
"PKG",578,22,1,1,154,0)
HMPEQ     value = 26873326
"PKG",578,22,1,1,155,0)
HMPEQLM   value = 111474303
"PKG",578,22,1,1,156,0)
HMPEQLM1  value = 6971880
"PKG",578,22,1,1,157,0)
HMPEQLM2  value = 3216732
"PKG",578,22,1,1,158,0)
HMPEVNT   value = 112664650
"PKG",578,22,1,1,159,0)
HMPFPTC   value = 14517957
"PKG",578,22,1,1,160,0)
HMPHTTP   value = 14238772
"PKG",578,22,1,1,161,0)
HMPIDX    value = 14171209
"PKG",578,22,1,1,162,0)
HMPJSON   value = 11232902
"PKG",578,22,1,1,163,0)
HMPJSOND  value = 70219619
"PKG",578,22,1,1,164,0)
HMPJSONE  value = 24346328
"PKG",578,22,1,1,165,0)
HMPLIST   value = 60978957
"PKG",578,22,1,1,166,0)
HMPMDUTL  value = 50918469
"PKG",578,22,1,1,167,0)
HMPP2I    value = 233946
"PKG",578,22,1,1,168,0)
HMPP3I    value = 73661363
"PKG",578,22,1,1,169,0)
HMPPANEL  value = 9226601
"PKG",578,22,1,1,170,0)
HMPPARAM  value = 15385831
"PKG",578,22,1,1,171,0)
HMPPATS   value = 44774120
"PKG",578,22,1,1,172,0)
HMPPI     value = 298411
"PKG",578,22,1,1,173,0)
HMPPRODC  value = 2553263
"PKG",578,22,1,1,174,0)
HMPPTDEM  value = 12301900
"PKG",578,22,1,1,175,0)
HMPPXPR1  value = 845616
"PKG",578,22,1,1,176,0)
HMPPXRM   value = 12212288
"PKG",578,22,1,1,177,0)
HMPROS2   value = 104804972
"PKG",578,22,1,1,178,0)
HMPROS3   value = 85901883
"PKG",578,22,1,1,179,0)
HMPROS4   value = 90329378
"PKG",578,22,1,1,180,0)
HMPROS5   value = 9592522
"PKG",578,22,1,1,181,0)
HMPROS6   value = 26014820
"PKG",578,22,1,1,182,0)
HMPROS7   value = 23792527
"PKG",578,22,1,1,183,0)
HMPROS8   value = 78575599
"PKG",578,22,1,1,184,0)
HMPSR     value = 404968
"PKG",578,22,1,1,185,0)
HMPTRPC   value = 3719901
"PKG",578,22,1,1,186,0)
HMPTRPC1  value = 41566182
"PKG",578,22,1,1,187,0)
HMPUPD    value = 22706701
"PKG",578,22,1,1,188,0)
HMPUTILS  value = 18637094
"PKG",578,22,1,1,189,0)
HMPYCSI   value = 16398514
"PKG",578,22,1,1,190,0)
HMPYFRP   value = 92726383
"PKG",578,22,1,1,191,0)
HMPYFRP1  value = 46640576
"PKG",578,22,1,1,192,0)
HMPYFRP2  value = 43272246
"PKG",578,22,1,1,193,0)
HMPYPAR   value = 3965687
"PKG",578,22,1,1,194,0)
done 
"PKG",578,22,1,1,195,0)
 
"PKG",578,22,1,1,196,0)
Select BUILD NAME: MD*1.0*38       CLINICAL PROCEDURES
"PKG",578,22,1,1,197,0)
MDCPROTD  value = 6599959
"PKG",578,22,1,1,198,0)
MDPOST38  value = 2283064
"PKG",578,22,1,1,199,0)
done
"PKG",578,22,1,1,200,0)
 
"PKG",578,22,1,1,201,0)
Select BUILD NAME: OR*3.0*390       ORDER ENTRY/RESULTS REPORTING
"PKG",578,22,1,1,202,0)
ORCACT1   value = 49643037
"PKG",578,22,1,1,203,0)
ORCSEND   value = 65938879
"PKG",578,22,1,1,204,0)
ORMBLDOR  value = 5650360
"PKG",578,22,1,1,205,0)
ORWDXA    value = 83177974
"PKG",578,22,1,1,206,0)
done
"PKG",578,22,1,1,207,0)
 
"PKG",578,22,1,1,208,0)
Select BUILD NAME: PSB*3.0*79       BAR CODE MED ADMIN
"PKG",578,22,1,1,209,0)
PSBML     value = 125339367
"PKG",578,22,1,1,210,0)
PSBVPR    value = 2149221
"PKG",578,22,1,1,211,0)
done
"PKG",578,22,1,1,212,0)
 
"PKG",578,22,1,1,213,0)
Select BUILD NAME: TIU*1.0*106       TEXT INTEGRATION UTILITIES
"PKG",578,22,1,1,214,0)
TIUDDX    value = 222239
"PKG",578,22,1,1,215,0)
TIUPS106  value = 3190064
"PKG",578,22,1,1,216,0)
TIUVPR    value = 10950606
"PKG",578,22,1,1,217,0)
done
"PKG",578,22,1,1,218,0)
 
"PKG",578,22,1,1,219,0)
Select BUILD NAME: GMRC*3.0*80       CONSULT/REQUEST TRACKING
"PKG",578,22,1,1,220,0)
GMRCAPI   value = 8248863
"PKG",578,22,1,1,221,0)
done
"PKG",578,22,1,1,222,0)
 
"PKG",578,22,1,1,223,0)
 
"PKG",578,22,1,1,224,0)
 
"PKG",578,22,1,1,225,0)
Forms Associated:
"PKG",578,22,1,1,226,0)
 
"PKG",578,22,1,1,227,0)
Form Name File # New/Modified/Deleted
"PKG",578,22,1,1,228,0)
--------- ------ --------------------
"PKG",578,22,1,1,229,0)
N/A
"PKG",578,22,1,1,230,0)
 
"PKG",578,22,1,1,231,0)
 
"PKG",578,22,1,1,232,0)
Mail Groups Associated:
"PKG",578,22,1,1,233,0)
 
"PKG",578,22,1,1,234,0)
Mail Group Name New/Modified/Deleted
"PKG",578,22,1,1,235,0)
--------------- --------------------
"PKG",578,22,1,1,236,0)
N/A
"PKG",578,22,1,1,237,0)
 
"PKG",578,22,1,1,238,0)
 
"PKG",578,22,1,1,239,0)
Options Associated:
"PKG",578,22,1,1,240,0)
 
"PKG",578,22,1,1,241,0)
Option Name Type New/Modified/Deleted
"PKG",578,22,1,1,242,0)
----------- ---- --------------------
"PKG",578,22,1,1,243,0)
HMP APPLICATION PROXY
"PKG",578,22,1,1,244,0)
HMP APPOINTMENTS
"PKG",578,22,1,1,245,0)
HMP PATIENT ACTIVITY
"PKG",578,22,1,1,246,0)
HMP PATIENT DATA MONITOR
"PKG",578,22,1,1,247,0)
HMP SYNCHRONIZATION CONTEXT
"PKG",578,22,1,1,248,0)
HMP UI CONTEXT
"PKG",578,22,1,1,249,0)
HMP WB PTDEM
"PKG",578,22,1,1,250,0)
HMP WB PTDEM
"PKG",578,22,1,1,251,0)
HMP XU EVENTS
"PKG",578,22,1,1,252,0)
HMPM ADD HMP PATIENT
"PKG",578,22,1,1,253,0)
HMPM ADD HMP USER
"PKG",578,22,1,1,254,0)
HMPM EMERGENCY STOP
"PKG",578,22,1,1,255,0)
HMPM EXTRACT MONITOR
"PKG",578,22,1,1,256,0)
HMPM RESTART FRESHNESS
"PKG",578,22,1,1,257,0)
HMPMGR
"PKG",578,22,1,1,258,0)
 
"PKG",578,22,1,1,259,0)
 
"PKG",578,22,1,1,260,0)
Protocols Associated:
"PKG",578,22,1,1,261,0)
 
"PKG",578,22,1,1,262,0)
Protocol Name New/Modified/Deleted
"PKG",578,22,1,1,263,0)
------------- --------------------
"PKG",578,22,1,1,264,0)
HMP ADT-A04 CLIENT  
"PKG",578,22,1,1,265,0)
HMP ADT-A08 CLIENT  
"PKG",578,22,1,1,266,0)
HMP APPT EVENTS  
"PKG",578,22,1,1,267,0)
HMP DG UPDATES  
"PKG",578,22,1,1,268,0)
HMP GMPL EVENT 
"PKG",578,22,1,1,269,0)
HMP GMRA EVENTS 
"PKG",578,22,1,1,270,0)
HMP INPT EVENTS  
"PKG",578,22,1,1,271,0)
HMP MDC EVENT  
"PKG",578,22,1,1,272,0)
HMP NA EVENTS    
"PKG",578,22,1,1,273,0)
HMP PATIENT APPT TRIGGER    
"PKG",578,22,1,1,274,0)
HMP PCE EVENTS    
"PKG",578,22,1,1,275,0)
HMP PCMM TEAM   
"PKG",578,22,1,1,276,0)
HMP PCMM TEAM POSITION  
"PKG",578,22,1,1,277,0)
HMP PSB EVENTS   
"PKG",578,22,1,1,278,0)
HMP XQOR EVENTS    
"PKG",578,22,1,1,279,0)
HMPM EVT QUE CHANGE DOMAIN    
"PKG",578,22,1,1,280,0)
HMPM EVT QUE CHANGE MAX LISTED  
"PKG",578,22,1,1,281,0)
HMPM EVT QUE CHANGE SERVER     
"PKG",578,22,1,1,282,0)
HMPM EVT QUE DISPLAY DETAILS 
"PKG",578,22,1,1,283,0)
HMPM EVT QUE FILTER 
"PKG",578,22,1,1,284,0)
HMPM EVT QUE FRESHNESS REPORT 
"PKG",578,22,1,1,285,0)
HMPM EVT QUE MGR MENU 
"PKG",578,22,1,1,286,0)
HMPM EVT QUE REFRESH 
"PKG",578,22,1,1,287,0)
HMPM EVT QUE SELECT PATIENT  
"PKG",578,22,1,1,288,0)
HMPM EVT QUE SHOW TEMP GLOBALS     
"PKG",578,22,1,1,289,0)
 
"PKG",578,22,1,1,290,0)
Security Keys Associated:
"PKG",578,22,1,1,291,0)
 
"PKG",578,22,1,1,292,0)
Security Key Name
"PKG",578,22,1,1,293,0)
-----------------
"PKG",578,22,1,1,294,0)
HMP ADMIN
"PKG",578,22,1,1,295,0)
HMP EXPERIMENTAL
"PKG",578,22,1,1,296,0)
 
"PKG",578,22,1,1,297,0)
 
"PKG",578,22,1,1,298,0)
Templates Associated:
"PKG",578,22,1,1,299,0)
 
"PKG",578,22,1,1,300,0)
Template Name Type File Name (#) New/Modified/Deleted
"PKG",578,22,1,1,301,0)
------------- ---- ------------- --------------------
"PKG",578,22,1,1,302,0)
N/A
"PKG",578,22,1,1,303,0)
 
"PKG",578,22,1,1,304,0)
 
"PKG",578,22,1,1,305,0)
New Service Requests (NSRs):
"PKG",578,22,1,1,306,0)
-----------------------------
"PKG",578,22,1,1,307,0)
NSR #20070902
"PKG",578,22,1,1,308,0)
 
"PKG",578,22,1,1,309,0)
 
"PKG",578,22,1,1,310,0)
Patient Safety Issues (PSIs):
"PKG",578,22,1,1,311,0)
------------------------------
"PKG",578,22,1,1,312,0)
N/A
"PKG",578,22,1,1,313,0)
 
"PKG",578,22,1,1,314,0)
 
"PKG",578,22,1,1,315,0)
Remedy Ticket(s) & Overviews:
"PKG",578,22,1,1,316,0)
-----------------------------
"PKG",578,22,1,1,317,0)
N/A
"PKG",578,22,1,1,318,0)
 
"PKG",578,22,1,1,319,0)
 
"PKG",578,22,1,1,320,0)
Test Sites:
"PKG",578,22,1,1,321,0)
-----------
"PKG",578,22,1,1,322,0)
Hampton
"PKG",578,22,1,1,323,0)
Portland
"PKG",578,22,1,1,324,0)
San Diego
"PKG",578,22,1,1,325,0)
Loma Linda
"PKG",578,22,1,1,326,0)
San Antonio
"PKG",578,22,1,1,327,0)
Indianapolis
"PKG",578,22,1,1,328,0)
 
"PKG",578,22,1,1,329,0)
 
"PKG",578,22,1,1,330,0)
 
"PKG",578,22,1,1,331,0)
Documentation Retrieval Instructions:
"PKG",578,22,1,1,332,0)
-------------------------------------
"PKG",578,22,1,1,333,0)
Updated documentation describing the new functionality introduced by this
"PKG",578,22,1,1,334,0)
patch is available.
"PKG",578,22,1,1,335,0)
 
"PKG",578,22,1,1,336,0)
The preferred method is to FTP the files from
"PKG",578,22,1,1,337,0)
ftp://ftp.ftpsrv.domain.ext/. Directory [EHMP]
"PKG",578,22,1,1,338,0)
Username: EHMP Password: EHMP$STORE
"PKG",578,22,1,1,339,0)
 
"PKG",578,22,1,1,340,0)
 
"PKG",578,22,1,1,341,0)
The software distribution includes:
"PKG",578,22,1,1,342,0)
 
"PKG",578,22,1,1,343,0)
FILE NAME DESCRIPTION BLOCK SIZE
"PKG",578,22,1,1,344,0)
HMP_2-0_V5-4.KID KIDS BUILD BLOCKS
"PKG",578,22,1,1,345,0)
 
"PKG",578,22,1,1,346,0)
The documentation will be in the form of Adobe Acrobat files.
"PKG",578,22,1,1,347,0)
 
"PKG",578,22,1,1,348,0)
 
"PKG",578,22,1,1,349,0)
File Name Description Retrieval Format
"PKG",578,22,1,1,350,0)
-------------- -------------------------------- 
"PKG",578,22,1,1,351,0)
----------------------------
"PKG",578,22,1,1,352,0)
HMP_2-0_V5-4.KID eHMP Project initial deploymnet ASCII
"PKG",578,22,1,1,353,0)
 
"PKG",578,22,1,1,354,0)
Patch Installation:
"PKG",578,22,1,1,355,0)
 
"PKG",578,22,1,1,356,0)
 
"PKG",578,22,1,1,357,0)
Pre/Post Installation Overview
"PKG",578,22,1,1,358,0)
------------------------------
"PKG",578,22,1,1,359,0)
N/A
"PKG",578,22,1,1,360,0)
 
"PKG",578,22,1,1,361,0)
 
"PKG",578,22,1,1,362,0)
Installation Instructions
"PKG",578,22,1,1,363,0)
-------------------------
"PKG",578,22,1,1,364,0)
This patch may be installed with users on the system although it is
"PKG",578,22,1,1,365,0)
recommended that it be installed during non-peak hours to minimize
"PKG",578,22,1,1,366,0)
potential disruption to users. This patch should take less than 5 minutes
"PKG",578,22,1,1,367,0)
to install.
"PKG",578,22,1,1,368,0)
 
"PKG",578,22,1,1,369,0)
 
"PKG",578,22,1,1,370,0)
1. From the Kernel Installation and Distribution System Menu, select
"PKG",578,22,1,1,371,0)
the Installation Menu. From this menu, you may elect to use the
"PKG",578,22,1,1,372,0)
following option. When prompted for the INSTALL enter the patch #
"PKG",578,22,1,1,373,0)
(HMP 2.0):
"PKG",578,22,1,1,374,0)
 
"PKG",578,22,1,1,375,0)
a. Backup a Transport Global - This option will create a backup
"PKG",578,22,1,1,376,0)
message of any routines exported with this patch. It will not
"PKG",578,22,1,1,377,0)
backup any other changes such as DD's or templates.
"PKG",578,22,1,1,378,0)
b. Compare Transport Global to Current System - This option will
"PKG",578,22,1,1,379,0)
allow you to view all changes that will be made when this patch
"PKG",578,22,1,1,380,0)
is installed. It compares all components of this patch
"PKG",578,22,1,1,381,0)
(routines, DD's, templates, etc.).
"PKG",578,22,1,1,382,0)
backup any other changes such as DD's or templates.
"PKG",578,22,1,1,383,0)
c. Compare Transport Global to Current System - This option will
"PKG",578,22,1,1,384,0)
allow you to view all changes that will be made when this patch
"PKG",578,22,1,1,385,0)
is installed. It compares all components of this patch
"PKG",578,22,1,1,386,0)
(routines, DD's, templates, etc.).
"PKG",578,22,1,1,387,0)
d. Verify Checksums in Transport Global - This option will allow
"PKG",578,22,1,1,388,0)
you to ensure the integrity of the routines that are in the
"PKG",578,22,1,1,389,0)
backup any other changes such as DD's or templates.
"PKG",578,22,1,1,390,0)
e. Compare Transport Global to Current System - This option will
"PKG",578,22,1,1,391,0)
allow you to view all changes that will be made when this patch
"PKG",578,22,1,1,392,0)
is installed. It compares all components of this patch
"PKG",578,22,1,1,393,0)
(routines, DD's, templates, etc.).
"PKG",578,22,1,1,394,0)
f. Verify Checksums in Transport Global - This option will allow
"PKG",578,22,1,1,395,0)
you to ensure the integrity of the routines that are in the
"PKG",578,22,1,1,396,0)
transport global.
"PKG",578,22,1,1,397,0)
 
"PKG",578,22,1,1,398,0)
2. From the Installation Menu select Load a Distribution. Enter the Host
"PKG",578,22,1,1,399,0)
file
"PKG",578,22,1,1,400,0)
location, then HMP_2-0_V5-4.KID
"PKG",578,22,1,1,401,0)
 
"PKG",578,22,1,1,402,0)
3. From the Installation Menu, select the Install Package(s) option and
"PKG",578,22,1,1,403,0)
choose the patch to install. Enter HMPM 2.0  (Which is the name of the 
"PKG",578,22,1,1,404,0)
multipatch containing the patches listed above.
"PKG",578,22,1,1,405,0)
 
"PKG",578,22,1,1,406,0)
4. When prompted 'Want KIDS to INHIBIT LOGONs during the install? NO//',
"PKG",578,22,1,1,407,0)
respond NO.
"PKG",578,22,1,1,408,0)
 
"PKG",578,22,1,1,409,0)
5. When prompted to Rebuild Menu Options YES//' respond YES.
"PKG",578,22,1,1,410,0)
 
"PKG",578,22,1,1,411,0)
6. When prompted 'Want to DISABLE Scheduled Options, Menu Options, and
"PKG",578,22,1,1,412,0)
Protocols? NO//', respond NO.
"PKG",578,22,1,1,413,0)
 
"PKG",578,22,1,1,414,0)
7. If prompted 'Delay Install (Minutes): (0 - 60): 0//', respond 0.
"PKG",578,22,1,1,415,0)
 
"PKG",578,22,1,1,416,0)
[End of file]
"PKG",578,22,1,"PAH",0)
^9.4901^3^3
"PKG",578,22,1,"PAH",1,0)
650223^3150414.062711^1
"PKG",578,22,1,"PAH",1,1,0)
^^1^1^3150414
"PKG",578,22,1,"PAH",1,1,1,0)
Add proxy user for eHMP
"PKG",578,22,1,"PAH",2,0)
650218^3150414.062712^1
"PKG",578,22,1,"PAH",2,1,0)
^^1^1^3150414
"PKG",578,22,1,"PAH",2,1,1,0)
Routine HMPTFU2, converted from VAFCTFU2.
"PKG",578,22,1,"PAH",3,0)
150417^3150610.094132^1
"PKG",578,22,1,"PAH",3,1,0)
^^1^1^3150610
"PKG",578,22,1,"PAH",3,1,1,0)
Merge S68 changes into eHMP.
"PKG",578,22,1,"PAH","B",150417,3)

"PKG",578,22,1,"PAH","B",650218,2)

"PKG",578,22,1,"PAH","B",650223,1)

"PKG",578,"VERSION")
2.0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
136
"RTN","HMP0311P")
0^1^B14101699
"RTN","HMP0311P",1,0)
HMP0311P ; Agilex/hrubovcak ;Mar 20, 2015@14:34:08
"RTN","HMP0311P",2,0)
 ;;2.0;Health Management Platform;****;;Build 53
"RTN","HMP0311P",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMP0311P",4,0)
 ;
"RTN","HMP0311P",5,0)
 Q
"RTN","HMP0311P",6,0)
 ; Post-init logic
"RTN","HMP0311P",7,0)
POST ; make HMP DGPF ASSIGN FLAG protocol an ITEM
"RTN","HMP0311P",8,0)
 ;
"RTN","HMP0311P",9,0)
 N HMPDGIEN,HMPERR,HMPEXIT,HMPFDA,HMPIEN,HMPRTCL,J,PRTCLITM,V,X,Y
"RTN","HMP0311P",10,0)
 ;
"RTN","HMP0311P",11,0)
 D MES^XPDUTL($T(+0)_" post-init routine started "_$$HTE^XLFDT($H))
"RTN","HMP0311P",12,0)
 S V=$$SVDATA D MES^XPDUTL("Old data saved in "_V)
"RTN","HMP0311P",13,0)
 S HMPRTCL="HMP DGPF ASSIGN FLAG",HMPIEN=$O(^ORD(101,"B",HMPRTCL,0))
"RTN","HMP0311P",14,0)
 ; protocol missing, write message and exit
"RTN","HMP0311P",15,0)
 I '(HMPIEN>0) D MES^XPDUTL(HMPRTCL_" protocol not found. It must be installed to proceed.") Q
"RTN","HMP0311P",16,0)
 ;
"RTN","HMP0311P",17,0)
 S Y="DGPF ASSIGN FLAG",HMPDGIEN=$O(^ORD(101,"B",Y,0))
"RTN","HMP0311P",18,0)
 ; protocol missing, write message and exit
"RTN","HMP0311P",19,0)
 I '(HMPDGIEN>0) D MES^XPDUTL(Y_" protocol not found.  No ITEM update performed.") Q
"RTN","HMP0311P",20,0)
 ; make DGPF ASSIGN FLAG an extended action
"RTN","HMP0311P",21,0)
 S HMPFDA(101,HMPDGIEN_",",4)="X"
"RTN","HMP0311P",22,0)
 D UPDATE^DIE("","HMPFDA","","HMPERR")
"RTN","HMP0311P",23,0)
 I $D(HMPERR) D  Q  ; something went wrong
"RTN","HMP0311P",24,0)
 .D MES^XPDUTL("FileMan error when editing DGPF ASSIGN FLAG protocol")
"RTN","HMP0311P",25,0)
 .N V S V="HMPERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","HMP0311P",26,0)
 ;
"RTN","HMP0311P",27,0)
 ; is protocol already an item?
"RTN","HMP0311P",28,0)
 S HMPEXIT=$O(^ORD(101,HMPDGIEN,10,"B",HMPIEN,0))
"RTN","HMP0311P",29,0)
 I HMPEXIT D MES^XPDUTL(HMPRTCL_" already an ITEM in "_Y_".  No update needed.") Q
"RTN","HMP0311P",30,0)
 ;
"RTN","HMP0311P",31,0)
 ; add protocol as ITEM
"RTN","HMP0311P",32,0)
 K HMPFDA,HMPERR
"RTN","HMP0311P",33,0)
 S HMPFDA(101.01,"+1,"_HMPDGIEN_",",.01)=HMPIEN
"RTN","HMP0311P",34,0)
 D UPDATE^DIE("","HMPFDA","PRTCLITM","HMPERR")
"RTN","HMP0311P",35,0)
 I $D(HMPERR) D  Q  ; something went wrong
"RTN","HMP0311P",36,0)
 .D MES^XPDUTL("FileMan error when adding ITEM to DGPF ASSIGN FLAG protocol")
"RTN","HMP0311P",37,0)
 .N V S V="HMPERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","HMP0311P",38,0)
 ; new ITEM sub-file IEN will be in PRTCLITM(1)
"RTN","HMP0311P",39,0)
 D MES^XPDUTL(HMPRTCL_" protocol update finished "_$$HTE^XLFDT($H))
"RTN","HMP0311P",40,0)
 ;
"RTN","HMP0311P",41,0)
 Q
"RTN","HMP0311P",42,0)
 ;
"RTN","HMP0311P",43,0)
SVDATA() ; extrinsic variable, save original FileMan data, returns storage node
"RTN","HMP0311P",44,0)
 ;
"RTN","HMP0311P",45,0)
 D DT^DICRW
"RTN","HMP0311P",46,0)
 N FMERRCNT,HMPXTMP,HMPIEN,LN,NTRY,TXT,V,X,Y
"RTN","HMP0311P",47,0)
 S Y=$$NOW^XLFDT,HMPXTMP=$NA(^XTMP("HMP INSTALL LOG",Y))  ; XTMP storage location
"RTN","HMP0311P",48,0)
 ; ^XTMP log data expires in 90 days
"RTN","HMP0311P",49,0)
 S X=$G(@HMPXTMP@(0)) S:X="" @HMPXTMP@(0)=$$FMADD^XLFDT(DT,90)_U_Y_"^HMP installation "_$$FMTE^XLFDT(Y)
"RTN","HMP0311P",50,0)
 ;
"RTN","HMP0311P",51,0)
 S FMERRCNT=0  ; FileMan error counter
"RTN","HMP0311P",52,0)
 ; save entries in FileMan items list
"RTN","HMP0311P",53,0)
 F LN=1:1 S TXT=$P($T(FMITMS+LN),";;",2,99) Q:TXT=""  D
"RTN","HMP0311P",54,0)
 .N FLNO,FMARRY,FMERR  ; file #, FileMan returned value and error message arrays
"RTN","HMP0311P",55,0)
 .S FLNO=+$P(TXT,U),X=$P(TXT,U,2,99)  ; file number and target entry
"RTN","HMP0311P",56,0)
 .Q:'(FLNO>1)!(X="")  ; file and entry required
"RTN","HMP0311P",57,0)
 .S HMPIEN=$$FIND1^DIC(FLNO,"","",X,"","","FMERR")  ; lookup value in X is external format
"RTN","HMP0311P",58,0)
 .I $D(FMERR) D  Q  ; log error message and quit
"RTN","HMP0311P",59,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @HMPXTMP@("FM LOOKUP ERROR",FMERRCNT,V)=@V
"RTN","HMP0311P",60,0)
 .;
"RTN","HMP0311P",61,0)
 .S:'(HMPIEN>0) FMERRCNT=FMERRCNT+1,@HMPXTMP@("FM ENTRY NOT FOUND",FMERRCNT)=TXT  ; entry
"RTN","HMP0311P",62,0)
 .S:HMPIEN>0 @HMPXTMP@("ENTRY",FLNO,HMPIEN)="entry found"
"RTN","HMP0311P",63,0)
 .K FMERR  ; just in case
"RTN","HMP0311P",64,0)
 .D GETS^DIQ(FLNO,HMPIEN_",","**","EN","FMARRY","FMERR")  ; data including sub-files, ignore null values
"RTN","HMP0311P",65,0)
 .I $D(FMERR) D  ; log error message
"RTN","HMP0311P",66,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @HMPXTMP@("FM DATA ERROR",FMERRCNT,V)=@V
"RTN","HMP0311P",67,0)
 .; save the data
"RTN","HMP0311P",68,0)
 .M @HMPXTMP@("ENTRY")=FMARRY
"RTN","HMP0311P",69,0)
 ;
"RTN","HMP0311P",70,0)
 Q HMPXTMP  ; return ^XTMP storage location
"RTN","HMP0311P",71,0)
 ;
"RTN","HMP0311P",72,0)
FMITMS ; list of FileMan entries: "file # ^ .01 field value"
"RTN","HMP0311P",73,0)
 ;;101^DGPF ASSIGN FLAG
"RTN","HMP0311P",74,0)
 ;
"RTN","HMPACT")
0^2^B30228842
"RTN","HMPACT",1,0)
HMPACT ;AGILEX/EJK - Patient Appointment Broker Call ;8/4/14  15:29
"RTN","HMPACT",2,0)
 ;;2.0;HEALTH MANAGEMENT PLATFORM;**1**;Oct 10, 2014;Build 53
"RTN","HMPACT",3,0)
ACT(ROOT,DFN,ID,ALPHA,OMEGA,DTRANGE,REMOTE,MAX,ORFHIE) ;
"RTN","HMPACT",4,0)
 N ERR,ERRMSG,DFN,IEN,DIE,HMSTOP
"RTN","HMPACT",5,0)
 S ERR=0,ERRMSG="",DFN="",IEN="",HMSTOP=0
"RTN","HMPACT",6,0)
 S ROOT="XWBY"
"RTN","HMPACT",7,0)
 K ^TMP("ORDATA",$J)
"RTN","HMPACT",8,0)
 Q:'$D(^HMP(800001.5,"PTAPPT","HMP"))
"RTN","HMPACT",9,0)
 S DIE="^HMP(800001.5,""PTAPPT"","
"RTN","HMPACT",10,0)
 D FETCH
"RTN","HMPACT",11,0)
 D CLEAN
"RTN","HMPACT",12,0)
 Q
"RTN","HMPACT",13,0)
 ;
"RTN","HMPACT",14,0)
FETCH ;GET PENDING JSON MESSAGES AND UPDATE DATE RECORD RETRIEVED
"RTN","HMPACT",15,0)
 S X="[" D SETITEM(.ROOT,X)
"RTN","HMPACT",16,0)
 F  S IEN=$O(^HMP(800001.5,"PTAPPT","HMP",IEN)) Q:IEN=""!(HMSTOP)  D
"RTN","HMPACT",17,0)
 . S X=$G(^HMP(800001.5,"PTAPPT",IEN,"JSON"))
"RTN","HMPACT",18,0)
 . I $O(^HMP(800001.5,"PTAPPT","HMP",IEN))="" S $E(X,$L(X))="",HMSTOP=1
"RTN","HMPACT",19,0)
 . D SETITEM(.ROOT,X)
"RTN","HMPACT",20,0)
 . S DA=IEN,DR="6///1" D ^DIE
"RTN","HMPACT",21,0)
 . Q
"RTN","HMPACT",22,0)
 S X="]" D SETITEM(.ROOT,X)
"RTN","HMPACT",23,0)
 Q
"RTN","HMPACT",24,0)
 ;
"RTN","HMPACT",25,0)
CLEAN ;CLEAN UP STRAY VARIABLES
"RTN","HMPACT",26,0)
 K DA,DR,X
"RTN","HMPACT",27,0)
 Q
"RTN","HMPACT",28,0)
 ;
"RTN","HMPACT",29,0)
SETITEM(ROOT,X) ; -- set item in list - RRB US5872 
"RTN","HMPACT",30,0)
 S @ROOT@($O(@ROOT@(9999),-1)+1)=X
"RTN","HMPACT",31,0)
 Q
"RTN","HMPACT",32,0)
 ;
"RTN","HMPACT",33,0)
APPT(HMPOUT,BEG,END,LOCIEN) ; Lookup appointments by date and location
"RTN","HMPACT",34,0)
 ;
"RTN","HMPACT",35,0)
 ;Associated ICRs:
"RTN","HMPACT",36,0)
 ;  ICR#
"RTN","HMPACT",37,0)
 ;      2051:  Database Server API: Lookup Utilities
"RTN","HMPACT",38,0)
 ;             FIND1^DIC
"RTN","HMPACT",39,0)
 ;      10103: XLFDT Date functions
"RTN","HMPACT",40,0)
 ;             HTFM^XLFDT
"RTN","HMPACT",41,0)
 ;      3293:  CLINLOC^ORWU
"RTN","HMPACT",42,0)
 ;  SUPPORTED: VADPT
"RTN","HMPACT",43,0)
 ;             SDA^VADPT
"RTN","HMPACT",44,0)
 ;             KVA^VADPT
"RTN","HMPACT",45,0)
 ;             KVAR^VADPT
"RTN","HMPACT",46,0)
 ;
"RTN","HMPACT",47,0)
 N DFN,LOC,OVER,PAT,REQ,SD,SCX
"RTN","HMPACT",48,0)
 I '$G(BEG) S BEG=$$HTFM^XLFDT(+$H)  ; Default current day
"RTN","HMPACT",49,0)
 S BEG=$P(BEG,".",1)
"RTN","HMPACT",50,0)
 I BEG'?7N Q -1
"RTN","HMPACT",51,0)
 I '$G(END) S END=$$HTFM^XLFDT(+$H)  ; Default current day
"RTN","HMPACT",52,0)
 S END=$P(END,".",1)
"RTN","HMPACT",53,0)
 I END'?7N Q -1
"RTN","HMPACT",54,0)
 I END<BEG Q -1
"RTN","HMPACT",55,0)
 K ^TMP("HMPAPPT",$J)
"RTN","HMPACT",56,0)
 S HMPOUT=$NA(^TMP("HMPAPPT",$J))
"RTN","HMPACT",57,0)
 I $G(LOCIEN) D SCHED(LOCIEN,BEG,END) G ENDAPPT
"RTN","HMPACT",58,0)
 K LOC
"RTN","HMPACT",59,0)
 D CLINLOC^ORWU(.LOC,"",1)  ; Lookup VistA Clinic Locations
"RTN","HMPACT",60,0)
 ;
"RTN","HMPACT",61,0)
 ; The clinic locations will be returned in the HMPOUT array:
"RTN","HMPACT",62,0)
 ;     LOC(D1)=LOCIEN^LOCNAME
"RTN","HMPACT",63,0)
 ;
"RTN","HMPACT",64,0)
LOCLKUP ;
"RTN","HMPACT",65,0)
 N LOCNAME
"RTN","HMPACT",66,0)
 S SCX=""
"RTN","HMPACT",67,0)
 F  S SCX=$O(LOC(SCX)) Q:SCX=""  D
"RTN","HMPACT",68,0)
 . S LOCIEN=$P(LOC(SCX),U,1),LOCNAME=$P(LOC(SCX),U,2)
"RTN","HMPACT",69,0)
 . D SCHED(LOCIEN,BEG,END)
"RTN","HMPACT",70,0)
 G ENDAPPT
"RTN","HMPACT",71,0)
 ;
"RTN","HMPACT",72,0)
SCHED(LOCIEN,BEG,END) ;
"RTN","HMPACT",73,0)
 N APPTDT,VASD
"RTN","HMPACT",74,0)
 ; Get list of patients and appointment dates from the Hospital Location file (#44)
"RTN","HMPACT",75,0)
 ; via the "S" index and return patient, clinic, and appointment date.time
"RTN","HMPACT",76,0)
 ;
"RTN","HMPACT",77,0)
 S SD=BEG
"RTN","HMPACT",78,0)
 F  S SD=$O(^SC(LOCIEN,"S",SD)) Q:SD=""!(SD>END)  D  ; Quit if null or date > END
"RTN","HMPACT",79,0)
 . S PAT=0
"RTN","HMPACT",80,0)
 . F  S PAT=$O(^SC(LOCIEN,"S",SD,1,PAT)) Q:PAT=""  D
"RTN","HMPACT",81,0)
 .. Q:'$D(^SC(LOCIEN,"S",SD,1,1))
"RTN","HMPACT",82,0)
 .. S DFN=$P(^SC(LOCIEN,"S",SD,1,PAT,0),U,1)
"RTN","HMPACT",83,0)
 .. I DFN=$P($G(^HMP(800000,1,1,DFN,0)),U,1) Q  ; Check for subscription and skip if subscribed
"RTN","HMPACT",84,0)
 .. ; Use supported SDA^VADPT call to get the appt data from the Patient File (#2)
"RTN","HMPACT",85,0)
 .. ; VASD("F")= "From" Appointment Date without timestamp.
"RTN","HMPACT",86,0)
 .. ; VASD("T")= "To" Appointment Date without timestamp.  This is set to the "From" date so only
"RTN","HMPACT",87,0)
 .. ;            one day is evaluated since we're examining each date entry in ^SC(LOCIEN,"S",SD)
"RTN","HMPACT",88,0)
 .. ; VASD("C")= Array of clinic location IENs. This is set to the current location only.
"RTN","HMPACT",89,0)
 .. ;
"RTN","HMPACT",90,0)
 .. S VASD("F")=$P(SD,".",1),VASD("T")=VASD("F"),VASD("C",LOCIEN)=""
"RTN","HMPACT",91,0)
 .. D SDA^VADPT
"RTN","HMPACT",92,0)
 .. Q:'$D(^UTILITY("VASD",$J,1))
"RTN","HMPACT",93,0)
 .. ; ^UTILITY("VASD",$J) is killed by VADPT0
"RTN","HMPACT",94,0)
 .. S LOCNAME=$P(^UTILITY("VASD",$J,1,"E"),U,2),APPTDT=$P(^UTILITY("VASD",$J,1,"I"),U,1)
"RTN","HMPACT",95,0)
 .. S ^TMP("HMPAPPT",$J,DFN,SD,LOCIEN)=DFN_U_APPTDT_U_LOCNAME_U_LOCIEN
"RTN","HMPACT",96,0)
 .. D KVAR^VADPT,KVA^VADPT
"RTN","HMPACT",97,0)
 Q
"RTN","HMPACT",98,0)
 ;
"RTN","HMPACT",99,0)
ENDAPPT ;
"RTN","HMPACT",100,0)
 ;
"RTN","HMPACT",101,0)
 M @HMPOUT=^TMP("HMPAPPT",$J)
"RTN","HMPACT",102,0)
 K @HMPOUT@(0)
"RTN","HMPACT",103,0)
 Q
"RTN","HMPACT",104,0)
 ;
"RTN","HMPACT",105,0)
ADMIT(HMPOUT,LOCIEN) ; Lookup admissions by location
"RTN","HMPACT",106,0)
 ;
"RTN","HMPACT",107,0)
 ;Associated ICRs:
"RTN","HMPACT",108,0)
 ;  ICR#
"RTN","HMPACT",109,0)
 ;      2051:  Database Server API: Lookup Utilities
"RTN","HMPACT",110,0)
 ;             FIND1^DIC
"RTN","HMPACT",111,0)
 ;             LIST^DIC
"RTN","HMPACT",112,0)
 ;      10103: XLFDT Date functions
"RTN","HMPACT",113,0)
 ;             HTFM^XLFDT
"RTN","HMPACT",114,0)
 ;  SUPPORTED: VADPT
"RTN","HMPACT",115,0)
 ;             INP^VADPT
"RTN","HMPACT",116,0)
 ;             KVA^VADPT
"RTN","HMPACT",117,0)
 ;             KVAR^VADPT
"RTN","HMPACT",118,0)
 ;
"RTN","HMPACT",119,0)
 N DFROM,DIEN,DOUT,DPART,DRID,FILE,FLDS,FLG,MAX,PIDX,SCRN,SUBSCRP,WARD,XREF
"RTN","HMPACT",120,0)
 K ^TMP("HMPADMIT",$J)
"RTN","HMPACT",121,0)
 S HMPOUT=$NA(^TMP("HMPADMIT",$J))
"RTN","HMPACT",122,0)
 ; Get Patient list by Ward
"RTN","HMPACT",123,0)
 S FILE=2,DIEN="",FLDS="@;.1",FLG="P",MAX="",DFROM="",DPART="",XREF="ACN"
"RTN","HMPACT",124,0)
 S SCRN="I $P($G(^DPT(+Y,.102)),""^"")>0",DRID="",DOUT=""
"RTN","HMPACT",125,0)
 ; The SCRN parameter is set to insure the patient record has a current movement file entry.
"RTN","HMPACT",126,0)
 K ^TMP("DILIST",$J)
"RTN","HMPACT",127,0)
 D LIST^DIC(FILE,DIEN,FLDS,FLG,MAX,.DFROM,DPART,XREF,SCRN,DRID,DOUT)  ; ICR #2051
"RTN","HMPACT",128,0)
 ; The list of patients and associated wards are returned via the ^TMP("DILIST",$J,PIDX,0) global in the following format:
"RTN","HMPACT",129,0)
 ;      ^TMP("DILIST",$J,PIDX,0)=DFN^WARD
"RTN","HMPACT",130,0)
 ;      Note:  The WARD is the ward name, not an internal (IEN) entry
"RTN","HMPACT",131,0)
 S PIDX=0
"RTN","HMPACT",132,0)
 F  S PIDX=$O(^TMP("DILIST",$J,PIDX)) Q:PIDX=""  D
"RTN","HMPACT",133,0)
 . S DFN=$P(^TMP("DILIST",$J,PIDX,0),U,1),WARD=$P(^TMP("DILIST",$J,PIDX,0),U,2)
"RTN","HMPACT",134,0)
 . ; If the calling application passes a ward LOCIEN, Use the WARD LOCATION File (#42) to lookup
"RTN","HMPACT",135,0)
 . ; the ward (location) IEN for comparison to the requested LOCIEN to screen out any entries that don't match the request.
"RTN","HMPACT",136,0)
 . ; 
"RTN","HMPACT",137,0)
 . I LOCIEN'="",LOCIEN'=$$FIND1^DIC(42,"","BX",WARD,"B","","") Q
"RTN","HMPACT",138,0)
 . ; Check patients for HMP subscription, File (#800000) and setup patient data
"RTN","HMPACT",139,0)
 . I DFN=$P($G(^HMP(800000,1,1,DFN,0)),U,1) Q  ; Check for subscription and skip if subscribed
"RTN","HMPACT",140,0)
 . D GETADMIT(DFN)
"RTN","HMPACT",141,0)
 ;
"RTN","HMPACT",142,0)
ENDADMIT ;
"RTN","HMPACT",143,0)
 ;
"RTN","HMPACT",144,0)
 M @HMPOUT=^TMP("HMPADMIT",$J)
"RTN","HMPACT",145,0)
 K @HMPOUT@(0)
"RTN","HMPACT",146,0)
 Q
"RTN","HMPACT",147,0)
 ;
"RTN","HMPACT",148,0)
GETADMIT(DFN) ;
"RTN","HMPACT",149,0)
 N ADMIT,PDATA,LOC,LOCNAME,LRMBD,VAERR,VAIN
"RTN","HMPACT",150,0)
 ; Lookup patient admissions data
"RTN","HMPACT",151,0)
 ; Use supported INP^VADPT call to get the admissions data from the Patient File (#2)
"RTN","HMPACT",152,0)
 D INP^VADPT
"RTN","HMPACT",153,0)
 ; LOC = Ward (Location) IEN, LOCNAME = Ward (Location) Name, LRMBD = Room-Bed Name (Optional depending upon inpatient
"RTN","HMPACT",154,0)
 ; location setup), ADMIT = Admission date.time in VA format
"RTN","HMPACT",155,0)
 S LOC=$P(VAIN(4),U),LOCNAME=$P(VAIN(4),U,2),LRMBD=VAIN(5),ADMIT=$P(VAIN(7),U)
"RTN","HMPACT",156,0)
 K PDATA
"RTN","HMPACT",157,0)
 S PDATA=DFN_U_ADMIT_U_LOCNAME_U_LRMBD_U_LOC
"RTN","HMPACT",158,0)
 S ^TMP("HMPADMIT",$J,DFN,LOC)=PDATA
"RTN","HMPACT",159,0)
 ; Supported calls to Kill VADPT variables
"RTN","HMPACT",160,0)
 D KVAR^VADPT,KVA^VADPT
"RTN","HMPACT",161,0)
 ;
"RTN","HMPACT",162,0)
 Q
"RTN","HMPACT",163,0)
 ;
"RTN","HMPAT")
0^3^B3211617
"RTN","HMPAT",1,0)
HMPAT ;AGILEX/EJK - ASU/TIU Trigger to HMP Activity File ;3/31/15  15:29
"RTN","HMPAT",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;;Build 53
"RTN","HMPAT",3,0)
 ;
"RTN","HMPAT",4,0)
 ; 
"RTN","HMPAT",5,0)
ECLASS(HMPIEN) ; called from EDIT^USRCLASS,ADD^USRRULA
"RTN","HMPAT",6,0)
 N HMPSYS,TYPE,HMPMAX,HMPI,HMPID,HMPERR,HMPTN,HMPLAST,HMPCNT,HMPFINI,HMPFRSP,HMPARGS
"RTN","HMPAT",7,0)
 N $ES,$ET,ERRMSG
"RTN","HMPAT",8,0)
 S HMPID=$P($G(USRDATA),U,2)
"RTN","HMPAT",9,0)
 S HMP=$NA(^TMP("HMP",$J)),HMPI=0 K @HMP
"RTN","HMPAT",10,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPAT",11,0)
 S (HMPMAX,HMPLAST,HMPID)="",HMPCNT=0
"RTN","HMPAT",12,0)
 S HMPARGS("server")=$O(^HMP(800000,"B",""))
"RTN","HMPAT",13,0)
 S HMPARGS("command")="startOperationalDataExtract"
"RTN","HMPAT",14,0)
 S HMPARGS("domains")="asu-class"
"RTN","HMPAT",15,0)
 D API^HMPDJFS(.HMPRSLT,.HMPARGS)
"RTN","HMPAT",16,0)
 Q
"RTN","HMPAT",17,0)
 ;
"RTN","HMPAT",18,0)
ERULE ; called from EDIT1^USRRULA
"RTN","HMPAT",19,0)
 N HMPSYS,TYPE,HMPMAX,HMPI,HMPID,HMPERR,HMPTN,HMPLAST,HMPCNT,HMPFINI,HMPFRSP,HMPARGS
"RTN","HMPAT",20,0)
 N $ES,$ET,ERRMSG
"RTN","HMPAT",21,0)
 S HMP=$NA(^TMP("HMP",$J)),HMPI=0 K @HMP
"RTN","HMPAT",22,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPAT",23,0)
 S (HMPMAX,HMPLAST,HMPID)="",HMPCNT=0
"RTN","HMPAT",24,0)
 S HMPARGS("server")=$O(^HMP(800000,"B",""))
"RTN","HMPAT",25,0)
 S HMPARGS("command")="startOperationalDataExtract"
"RTN","HMPAT",26,0)
 S HMPARGS("domains")="asu-rule"
"RTN","HMPAT",27,0)
 D API^HMPDJFS(.HMPRSLT,.HMPARGS)
"RTN","HMPAT",28,0)
 Q
"RTN","HMPAT",29,0)
 ;
"RTN","HMPAT",30,0)
EDEF ; called from option TIU DOCUMENT DEFINITION EDIT
"RTN","HMPAT",31,0)
 N HMPDA
"RTN","HMPAT",32,0)
 S HMPDA=$P(XQLOK,",",2),HMPDA=$TR(HMPDA,")","")
"RTN","HMPAT",33,0)
 I HMPDA?1N.N,$D(^TIU(8925.1,HMPDA)) D POSTX^HMPEVNT("doc-def",HMPDA)
"RTN","HMPAT",34,0)
 I HMPDA?1N.N,'$D(^TIU(8925.1,HMPDA)) D POSTX^HMPEVNT("doc-def",HMPDA,"@")
"RTN","HMPAT",35,0)
 Q
"RTN","HMPATRG")
0^4^B13049868
"RTN","HMPATRG",1,0)
HMPATRG ;AGILEX/JS - Patient Appointment Trigger to HMP Activity File ;8/4/14  15:29
"RTN","HMPATRG",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;;Build 53
"RTN","HMPATRG",3,0)
 ;
"RTN","HMPATRG",4,0)
 ;8/5 - TEST OTHER SDAM APPT ACTIONS:  SDAM APPT CANCEL  (D EN^SDAMC)
"RTN","HMPATRG",5,0)
 ;                                     SDAM APPT NO-SHOW (D EN^SDAMN)
"RTN","HMPATRG",6,0)
 ;                                     SDAM APPT UNSCHEDULED (S SDWLLIST=1 D WI^SDAM2)
"RTN","HMPATRG",7,0)
 ;
"RTN","HMPATRG",8,0)
 ;8/6 - Add commas, change JSON message structure depending on dfn and icn exists
"RTN","HMPATRG",9,0)
 ; 
"RTN","HMPATRG",10,0)
APPT ; called from Protocol file #101 SDAM APPOINTMENT EVENT item HM PATIENT APPT TRIGGER
"RTN","HMPATRG",11,0)
 NEW HMDFN,HMEDIT,HMERR,HMFILE,HMICN,HMAPTDT,HMSNODE,HMSITE,HMSTA,HMSTATUS,HMNOW,HMJSDFN,HMJSICN
"RTN","HMPATRG",12,0)
 I $G(DFN)="" Q
"RTN","HMPATRG",13,0)
 I $G(SDT)="" Q
"RTN","HMPATRG",14,0)
 S HMDFN=DFN
"RTN","HMPATRG",15,0)
 S HMSNODE=$G(^DPT(HMDFN,"S",SDT,0))
"RTN","HMPATRG",16,0)
 S HMICN=$P($G(^DPT(HMDFN,"MPI")),"^",1)
"RTN","HMPATRG",17,0)
 S HMSTATUS=$P(HMSNODE,"^",2)
"RTN","HMPATRG",18,0)
 I HMSTATUS]"" I HMSTATUS'="I" S HMEDIT=1 ; APPT STATUS IS NOT INPATIENT/FUTURE OR FUTURE,IE, STATUS CHANGE
"RTN","HMPATRG",19,0)
 S HMAPTDT=$G(SDT)
"RTN","HMPATRG",20,0)
 S HMNOW=$$NOW^XLFDT()
"RTN","HMPATRG",21,0)
 S HMSITE=$$GET^XPAR("SYS","HMP SYSTEM NAME") ; site hash value from XPAR parameter
"RTN","HMPATRG",22,0)
 S HMSTA=$P($$SITE^VASITE,"^",3) ;              site station number from file 4
"RTN","HMPATRG",23,0)
 ;
"RTN","HMPATRG",24,0)
 ;JSON format example for multiple records:
"RTN","HMPATRG",25,0)
 ;
"RTN","HMPATRG",26,0)
 ;[{
"RTN","HMPATRG",27,0)
 ;   "dfn": "9E7A;200",
"RTN","HMPATRG",28,0)
 ;   "site": "500"
"RTN","HMPATRG",29,0)
 ;},
"RTN","HMPATRG",30,0)
 ;{
"RTN","HMPATRG",31,0)
 ;   "icn": "10108",
"RTN","HMPATRG",32,0)
 ;   "site": "500"
"RTN","HMPATRG",33,0)
 ;},
"RTN","HMPATRG",34,0)
 ;{
"RTN","HMPATRG",35,0)
 ;   "icn": "10109",
"RTN","HMPATRG",36,0)
 ;   "site": "500"
"RTN","HMPATRG",37,0)
 ;}]
"RTN","HMPATRG",38,0)
 ;
"RTN","HMPATRG",39,0)
 ;per email on JSON message change 8/6:
"RTN","HMPATRG",40,0)
 ;
"RTN","HMPATRG",41,0)
 ;    { "dfn": "VA123;391", "site": "500" } , { "icn": "10130", "site": "500" },
"RTN","HMPATRG",42,0)
 ;
"RTN","HMPATRG",43,0)
 ;    Do this:
"RTN","HMPATRG",44,0)
 ;    { "dfn": "VA123;391", "icn": "10130", "site": "500"},
"RTN","HMPATRG",45,0)
 ;       -----HMJSON1-----  ---HMJSON2----  --HMJSON3------
"RTN","HMPATRG",46,0)
 ;
"RTN","HMPATRG",47,0)
 ;    In the case that the patient only has one of the ids, just include that
"RTN","HMPATRG",48,0)
 ;    one type. 
"RTN","HMPATRG",49,0)
 ;
"RTN","HMPATRG",50,0)
 ; build JSON message component
"RTN","HMPATRG",51,0)
 N HMJSON,HMJSON1,HMJSON2,HMJSON3
"RTN","HMPATRG",52,0)
 S HMJSON1="{ "_"""dfn"""_": "_""""_HMSITE_";"_HMDFN_""""_", " ;                 <<<< DFN OBJECT
"RTN","HMPATRG",53,0)
 I $G(HMICN)]"" N HMJSON2 S HMJSON2=" "_"""icn"""_": "_""""_HMICN_""""_", " ;    <<<< ICN OBJECT 
"RTN","HMPATRG",54,0)
 S HMJSON3="""site"""_": "_""""_HMSTA_"""}," ;                                   <<<< SITE OBJECT
"RTN","HMPATRG",55,0)
 S HMJSON=$G(HMJSON1)_$G(HMJSON2)_$G(HMJSON3)
"RTN","HMPATRG",56,0)
 ;
"RTN","HMPATRG",57,0)
UPDATE ; Add/edit entry to HMP Activity file #800001.5
"RTN","HMPATRG",58,0)
 S HMFILE=800001.5
"RTN","HMPATRG",59,0)
 K FDA($J)
"RTN","HMPATRG",60,0)
 D:$G(HMEDIT)="" FDANEW
"RTN","HMPATRG",61,0)
 D:$G(HMEDIT) FDAEDIT
"RTN","HMPATRG",62,0)
 D FILE
"RTN","HMPATRG",63,0)
 K FDA($J)
"RTN","HMPATRG",64,0)
 Q
"RTN","HMPATRG",65,0)
 ;
"RTN","HMPATRG",66,0)
FDANEW ; Get IEN and set up FDA root file to add a new file entry.
"RTN","HMPATRG",67,0)
 S FDA($J,HMFILE,"+1,",.01)=HMDFN ;               Patient Name [.01]
"RTN","HMPATRG",68,0)
 S FDA($J,HMFILE,"+1,",2)=HMAPTDT ;               Appointment Date/Time [2]
"RTN","HMPATRG",69,0)
 S FDA($J,HMFILE,"+1,",3)=HMSTATUS ;              Appointment Status [3]
"RTN","HMPATRG",70,0)
 S FDA($J,HMFILE,"+1,",4)=HMNOW ;                 Date Record Created [4]
"RTN","HMPATRG",71,0)
 S FDA($J,HMFILE,"+1,",6)=0 ;                     HMP Process Flag [6]
"RTN","HMPATRG",72,0)
 S FDA($J,HMFILE,"+1,",7)=HMJSON ;                JSON Message [7]
"RTN","HMPATRG",73,0)
 Q 
"RTN","HMPATRG",74,0)
 ;
"RTN","HMPATRG",75,0)
FDAEDIT ; Get IEN and set up FDA root file to edit existing file entry
"RTN","HMPATRG",76,0)
 S FDA($J,HMFILE,"?+1,",.01)=HMDFN ;               Patient Name [.01]
"RTN","HMPATRG",77,0)
 S FDA($J,HMFILE,"?+1,",2)=HMAPTDT ;               Appointment Date/Time [2]
"RTN","HMPATRG",78,0)
 S FDA($J,HMFILE,"?+1,",3)=HMSTATUS ;              Appointment Status [3]
"RTN","HMPATRG",79,0)
 S FDA($J,HMFILE,"?+1,",4)=HMNOW ;                 Date Record Created [4]
"RTN","HMPATRG",80,0)
 S FDA($J,HMFILE,"?+1,",6)=0 ;                     HMP Process Flag [6]
"RTN","HMPATRG",81,0)
 S FDA($J,HMFILE,"?+1,",7)=HMJSON ;                JSON Message [7]
"RTN","HMPATRG",82,0)
 Q 
"RTN","HMPATRG",83,0)
 ;
"RTN","HMPATRG",84,0)
FILE ;-file entry add/edit
"RTN","HMPATRG",85,0)
 K HMERR
"RTN","HMPATRG",86,0)
 D UPDATE^DIE(,"FDA($J)",,"HMERR")
"RTN","HMPATRG",87,0)
 I $G(HMERR("DIERR",1)) S RET=-HMERR("DIERR",1)_U_HMERR("DIERR",1,"TEXT",1)
"RTN","HMPATRG",88,0)
 K HMERR
"RTN","HMPATRG",89,0)
 Q
"RTN","HMPATRG",90,0)
 ;
"RTN","HMPATRG",91,0)
 ;call to delete the HMP Process Flag from RPC poll
"RTN","HMPATRG",92,0)
 ;deleting HMP PROCESS FLAG fld #6 will trigger date 'NOW' in DATE RECORD RETREIVED fld #5
"RTN","HMPATRG",93,0)
 ;S HMIEN=1
"RTN","HMPATRG",94,0)
 ;S RET=$$DEL6^HMACTRG(,HMIEN) W RET
"RTN","HMPATRG",95,0)
DEL6(RET,HMIEN) ;
"RTN","HMPATRG",96,0)
 S RET=0
"RTN","HMPATRG",97,0)
 I $G(HMIEN)="" Q RET
"RTN","HMPATRG",98,0)
 K FDA($J)
"RTN","HMPATRG",99,0)
 S FDA($J,800001.5,HMIEN_",",6)="@"
"RTN","HMPATRG",100,0)
 K HMERR
"RTN","HMPATRG",101,0)
 D FILE^DIE("","FDA($J)","HMERR")
"RTN","HMPATRG",102,0)
 I $G(HMERR("DIERR",1)) S RET=-HMERR("DIERR",1)_U_HMERR("DIERR",1,"TEXT",1) K HMERR Q RET
"RTN","HMPATRG",103,0)
 S RET=1
"RTN","HMPATRG",104,0)
 Q RET
"RTN","HMPCAC")
0^5^B96818205
"RTN","HMPCAC",1,0)
HMPCAC ;SLC/AGP-- HMP CAC Tools
"RTN","HMPCAC",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Feb 06, 2014;Build 53
"RTN","HMPCAC",3,0)
 ;
"RTN","HMPCAC",4,0)
 Q
"RTN","HMPCAC",5,0)
 ;
"RTN","HMPCAC",6,0)
ASK(YESNO,PROMPT)      ;
"RTN","HMPCAC",7,0)
 N X,Y,TEXT
"RTN","HMPCAC",8,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","HMPCAC",9,0)
 S DIR(0)="YA0"
"RTN","HMPCAC",10,0)
 S DIR("A")=PROMPT
"RTN","HMPCAC",11,0)
 S DIR("B")="N"
"RTN","HMPCAC",12,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","HMPCAC",13,0)
 ;S DIR("??")=U_"D HELP^PXRMLCR("_NUM_")"
"RTN","HMPCAC",14,0)
 W !
"RTN","HMPCAC",15,0)
 D ^DIR K DIR
"RTN","HMPCAC",16,0)
 I $D(DIROUT) S DTOUT=1
"RTN","HMPCAC",17,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","HMPCAC",18,0)
 S YESNO=$E(Y(0))
"RTN","HMPCAC",19,0)
 Q
"RTN","HMPCAC",20,0)
 ;
"RTN","HMPCAC",21,0)
ADDSVR() ;
"RTN","HMPCAC",22,0)
 N DEF,DIC,DLAYGO,SITE,SYS,Y
"RTN","HMPCAC",23,0)
 S SITE=$$SITE^VASITE()
"RTN","HMPCAC",24,0)
 S SYS=$$SYS^HMPUTILS()
"RTN","HMPCAC",25,0)
 W !,"Station Number: "_$P(SITE,U,3)
"RTN","HMPCAC",26,0)
 W !,"HMP System Identifier: "_SYS
"RTN","HMPCAC",27,0)
 S DEF=$S($P($G(^HMP(800000,0)),U,4)=1:$P($G(^HMP(800000,1,0)),U),1:"") I DEF'="" S DIC("B")=DEF
"RTN","HMPCAC",28,0)
 S DIC="^HMP(800000,",DIC(0)="AEMQL",DIC("A")="Select HMP server instance: ",DLAYGO=800000
"RTN","HMPCAC",29,0)
 D ^DIC
"RTN","HMPCAC",30,0)
 Q Y
"RTN","HMPCAC",31,0)
 ;
"RTN","HMPCAC",32,0)
OPTASGN() ;
"RTN","HMPCAC",33,0)
 N ARGS,DIC,DLAYGO,FDA,HASOPT,IEN,LIST,MSG,OPTNAME,PAT,RESULT,SVR,HMPERR,HMPOPT,Y,YESNO
"RTN","HMPCAC",34,0)
 S OPTNAME="HMP UI CONTEXT"
"RTN","HMPCAC",35,0)
 S HMPOPT=$$FIND1^DIC(19,"","B",OPTNAME,,,"MSG") I HMPOPT'>0 W !,"Error: Could not find 'HMP UI CONTEXT' option." Q
"RTN","HMPCAC",36,0)
 ;
"RTN","HMPCAC",37,0)
 S Y=$$ADDSVR() I +Y<0 Q
"RTN","HMPCAC",38,0)
 S SVR=$P($G(^HMP(800000,+Y,0)),U)
"RTN","HMPCAC",39,0)
 ;
"RTN","HMPCAC",40,0)
 K DLAYGO
"RTN","HMPCAC",41,0)
 S DIC="^VA(200,",DIC(0)="AEMQ",DIC("A")="Select user to provide access to HMP: "
"RTN","HMPCAC",42,0)
 D ^DIC
"RTN","HMPCAC",43,0)
 I +Y<0 Q
"RTN","HMPCAC",44,0)
 S IEN=+Y
"RTN","HMPCAC",45,0)
 ;
"RTN","HMPCAC",46,0)
 S HASOPT=$$ACCESS^XQCHK(IEN,HMPOPT)
"RTN","HMPCAC",47,0)
 I +HASOPT>0 D  Q
"RTN","HMPCAC",48,0)
 .W !,"User has 'HMP UI CONTEXT' already assigned." D ASK(.YESNO,"Sync user default CPRS patient list: ") I YESNO'="Y" Q
"RTN","HMPCAC",49,0)
 .I $G(YESNO)="Y" D GETPATS(.RESULT,IEN,SVR)
"RTN","HMPCAC",50,0)
 ;
"RTN","HMPCAC",51,0)
 K YESNO
"RTN","HMPCAC",52,0)
 D ASK(.YESNO,"Assign 'HMP UI CONTEXT': ")
"RTN","HMPCAC",53,0)
 I YESNO'="Y" Q
"RTN","HMPCAC",54,0)
 S FDA(200.03,"+2,"_IEN_",",.01)=HMPOPT
"RTN","HMPCAC",55,0)
 D UPDATE^DIE("","FDA","","HMPERR")
"RTN","HMPCAC",56,0)
 I $D(HMPERR) D  Q
"RTN","HMPCAC",57,0)
 .D EN^DDIOL("Update failed, UPDATE^DIE returned the following error message.")
"RTN","HMPCAC",58,0)
 .S IC="HMPERR"
"RTN","HMPCAC",59,0)
 .F  S IC=$Q(@IC) Q:IC=""  W !,IC,"=",@IC
"RTN","HMPCAC",60,0)
 D GETPATS(.RESULT,IEN,SVR)
"RTN","HMPCAC",61,0)
 Q
"RTN","HMPCAC",62,0)
 ;
"RTN","HMPCAC",63,0)
GETPATS(RESULT,IEN,SRV) ;
"RTN","HMPCAC",64,0)
 N ARGS,LIST,PAT
"RTN","HMPCAC",65,0)
 D GETDFLST(.LIST,IEN)
"RTN","HMPCAC",66,0)
 I '$D(LIST) W !,"No default patient list found." Q
"RTN","HMPCAC",67,0)
 S ARGS("command")="putPtSubscription"
"RTN","HMPCAC",68,0)
 S ARGS("server")=SRV
"RTN","HMPCAC",69,0)
 S PAT=0 F  S PAT=$O(LIST(PAT)) Q:PAT'>0  D
"RTN","HMPCAC",70,0)
 .;check to see if patient is already sync for the server.
"RTN","HMPCAC",71,0)
 .I $G(^HMP(800000,"AITEM",PAT,SRV))>0 W !,"Patient "_PAT_" already synced." Q
"RTN","HMPCAC",72,0)
 .S ARGS("localId")=PAT
"RTN","HMPCAC",73,0)
 .W !,"Starting sync on patient: "_PAT
"RTN","HMPCAC",74,0)
 .D API^HMPDJFS(.RESULT,.ARGS)
"RTN","HMPCAC",75,0)
 Q
"RTN","HMPCAC",76,0)
 ;
"RTN","HMPCAC",77,0)
 ;
"RTN","HMPCAC",78,0)
BLDLIST(LIST,HMPY) ;
"RTN","HMPCAC",79,0)
 N I,CNT,NODE
"RTN","HMPCAC",80,0)
 S I=0 F  S I=$O(HMPY(I)) Q:I'>0  D
"RTN","HMPCAC",81,0)
 .S NODE=$G(HMPY(I)) I +NODE'>0 Q
"RTN","HMPCAC",82,0)
 .;S CNT=$O(HMPY(I),-1)+1
"RTN","HMPCAC",83,0)
 .S LIST(+$P(NODE,U))=""
"RTN","HMPCAC",84,0)
 Q
"RTN","HMPCAC",85,0)
 ;
"RTN","HMPCAC",86,0)
 ;The appointment list date range is designed to query for full dates, 
"RTN","HMPCAC",87,0)
 ;so when the search result exceeds 200 appointments, 
"RTN","HMPCAC",88,0)
 ;the display will end with the last appointment of the last day before the maximum was reached. 
"RTN","HMPCAC",89,0)
CLINPTS2(Y,USER,CLIN,BDATE,EDATE) ; WRAPPER FUNCTION FOR USE BY RPC CALL ORQPT CLINIC PATIENTS
"RTN","HMPCAC",90,0)
 N MAXAPPTS,APPTBGN,APPTEND,NUMAPPTS
"RTN","HMPCAC",91,0)
 S MAXAPPTS=200 I BDATE=EDATE S MAXAPPTS=0  ; if we only want one day, don't limit answer.
"RTN","HMPCAC",92,0)
 D CLINPTS(.Y,USER,CLIN,BDATE,EDATE,MAXAPPTS,.APPTBGN,.APPTEND)
"RTN","HMPCAC",93,0)
 S NUMAPPTS=$O(Y(""),-1)
"RTN","HMPCAC",94,0)
 I MAXAPPTS,NUMAPPTS'<MAXAPPTS D
"RTN","HMPCAC",95,0)
 . N ORI
"RTN","HMPCAC",96,0)
 . S ORI=0 S APPTEND=$P(APPTEND,".")
"RTN","HMPCAC",97,0)
 . F  S ORI=$O(Y(ORI)) Q:'ORI  D  ;erase last day's appts since we assume it to be partial
"RTN","HMPCAC",98,0)
 .. I APPTEND<$P(Y(ORI),U,4) K Y(ORI) S NUMAPPTS=NUMAPPTS-1 ;erase an appointment
"RTN","HMPCAC",99,0)
 . S Y(MAXAPPTS+1)="^ *** UNABLE TO SHOW ALL APPOINTMENTS ***"
"RTN","HMPCAC",100,0)
 . S Y(MAXAPPTS+2)="^ Showing the first "_NUMAPPTS_" appointments from "_$$FMTE^XLFDT(APPTBGN,"D")_" to "_$$FMTE^XLFDT(APPTEND-1,"D")
"RTN","HMPCAC",101,0)
 . S Y(MAXAPPTS+3)="^"_$C(160)_" Modify the appointment list date range to start on "_$$FMTE^XLFDT(APPTEND,"D")_" to see additional appointments." ;add blank line
"RTN","HMPCAC",102,0)
 . S Y(MAXAPPTS+4)="^"_$C(160)_$C(160) ;add blank line
"RTN","HMPCAC",103,0)
 ;
"RTN","HMPCAC",104,0)
CLINPTS(Y,USER,CLIN,BDATE,EDATE,MAXAPPTS,APPTBGN,APPTEND) ; RETURN LIST OF PTS W/CLINIC APPT W/IN BEGINNING AND END DATES
"RTN","HMPCAC",105,0)
 ; PKS-8/2003: Modified for new scheduling pkg APIs.
"RTN","HMPCAC",106,0)
 I +$G(CLIN)<1 S Y(1)="^No clinic identified" Q 
"RTN","HMPCAC",107,0)
 I $$ACTLOC^ORWU(CLIN)'=1 S Y(1)="^Clinic is inactive or Occasion Of Service" Q
"RTN","HMPCAC",108,0)
 N ORSRV,ORRESULT,ORERR,ORI,ORPT,ORPTSTAT,ORAPPT,ORCLIN,SDARRAY,NODE
"RTN","HMPCAC",109,0)
 I $L($G(MAXAPPTS))=0 S MAXAPPTS=200
"RTN","HMPCAC",110,0)
 S ORSRV=$G(^VA(200,USER,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","HMPCAC",111,0)
 I BDATE="" S BDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","HMPCAC",112,0)
 I EDATE="" S EDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","HMPCAC",113,0)
 ;
"RTN","HMPCAC",114,0)
 ; Convert BDATE, EDATE to FM Date/Time:
"RTN","HMPCAC",115,0)
 D DT^DILF("T",BDATE,.BDATE,"","")
"RTN","HMPCAC",116,0)
 D DT^DILF("T",EDATE,.EDATE,"","")
"RTN","HMPCAC",117,0)
 I (BDATE=-1)!(EDATE=-1) S Y(1)="^Error in date range." Q 
"RTN","HMPCAC",118,0)
 S EDATE=$P(EDATE,".")_.5 ; Add 1/2 day to end date.
"RTN","HMPCAC",119,0)
 ;
"RTN","HMPCAC",120,0)
 K ^TMP($J,"SDAMA301") ; Clean house before starting.
"RTN","HMPCAC",121,0)
 S ORRESULT=""
"RTN","HMPCAC",122,0)
 S ORCLIN=+CLIN
"RTN","HMPCAC",123,0)
 S SDARRAY(1)=BDATE_";"_EDATE
"RTN","HMPCAC",124,0)
 S SDARRAY(2)=+CLIN
"RTN","HMPCAC",125,0)
 S SDARRAY(3)="R;I;NT"
"RTN","HMPCAC",126,0)
 S SDARRAY("SORT")="P" ;no clinic index
"RTN","HMPCAC",127,0)
 S SDARRAY("FLDS")="3;4"  ;ApptStatus^IEN;PtName
"RTN","HMPCAC",128,0)
 I MAXAPPTS S SDARRAY("MAX")=MAXAPPTS
"RTN","HMPCAC",129,0)
 ;
"RTN","HMPCAC",130,0)
 S ORRESULT=$$SDAPI^SDAMA301(.SDARRAY) ; DBIA 4433
"RTN","HMPCAC",131,0)
 ;
"RTN","HMPCAC",132,0)
 ; Deal with server errors:
"RTN","HMPCAC",133,0)
 I ORRESULT<0 D  S Y(1)=U_ORERR Q
"RTN","HMPCAC",134,0)
 .S ORERR=""
"RTN","HMPCAC",135,0)
 .N IDXERR S IDXERR=$O(^TMP($J,"SDAMA301","")) Q:IDXERR'>0
"RTN","HMPCAC",136,0)
 .S ORERR=^TMP($J,"SDAMA301",IDXERR)
"RTN","HMPCAC",137,0)
 ;
"RTN","HMPCAC",138,0)
 ; Reassign ^TMP array to local array:
"RTN","HMPCAC",139,0)
 S (ORPT,ORI)=0
"RTN","HMPCAC",140,0)
 I ORRESULT'>0 S Y(1)="^No appointments." Q
"RTN","HMPCAC",141,0)
 F  S ORPT=$O(^TMP($J,"SDAMA301",ORPT)) Q:ORPT=""  D
"RTN","HMPCAC",142,0)
 .S ORAPPT=""
"RTN","HMPCAC",143,0)
 .F  S ORAPPT=$O(^TMP($J,"SDAMA301",ORPT,ORAPPT)) Q:ORAPPT=""  D
"RTN","HMPCAC",144,0)
 ..S ORI=ORI+1
"RTN","HMPCAC",145,0)
 ..S NODE=^TMP($J,"SDAMA301",ORPT,ORAPPT)
"RTN","HMPCAC",146,0)
 ..S Y(ORI)=$TR($P(NODE,U,4),";","^") ; IEN^Name.
"RTN","HMPCAC",147,0)
 ..S Y(ORI)=Y(ORI)_U_ORCLIN ; ^Clinic IEN.
"RTN","HMPCAC",148,0)
 ..S Y(ORI)=Y(ORI)_U_ORAPPT ; App't.
"RTN","HMPCAC",149,0)
 ..I $L($G(APPTEND))=0 S APPTEND=ORAPPT,APPTBGN=ORAPPT
"RTN","HMPCAC",150,0)
 ..I ORAPPT>APPTEND S APPTEND=ORAPPT
"RTN","HMPCAC",151,0)
 ..I ORAPPT<APPTBGN S APPTBGN=ORAPPT
"RTN","HMPCAC",152,0)
 ..S ORPTSTAT=$P($P(NODE,U,3),";",1) ;appt status, will be transformed to pt status.
"RTN","HMPCAC",153,0)
 ..S ORPTSTAT=$S(ORPTSTAT="I":"IPT",ORPTSTAT="R":"OPT",ORPTSTAT="NT":"OPT",1:"") ; Pt Status.
"RTN","HMPCAC",154,0)
 ..S Y(ORI)=Y(ORI)_U_U_U_U_U_ORPTSTAT ; Pt I or O status (or "NT").
"RTN","HMPCAC",155,0)
 K ^TMP($J,"SDAMA301") ; Clean house after finishing.
"RTN","HMPCAC",156,0)
 ;
"RTN","HMPCAC",157,0)
 Q
"RTN","HMPCAC",158,0)
 ;
"RTN","HMPCAC",159,0)
COMBPTS(LIST,USER,PTR,BDATE,EDATE) ;
"RTN","HMPCAC",160,0)
 N FILE,MAXAPPTS,MSG,PTR,RTN,SRC,TXT,HMPERR,HMPY
"RTN","HMPCAC",161,0)
 ;
"RTN","HMPCAC",162,0)
 ; Do preliminary settings, cleanup, look for an existing user record:
"RTN","HMPCAC",163,0)
 S MSG=""                                       ; Default.
"RTN","HMPCAC",164,0)
 S MAXAPPTS=$S(BDATE=EDATE:0,1:200)         ; If date range is only one day then no max, otherwise 200
"RTN","HMPCAC",165,0)
 S RTN=$$FIND1^DIC(100.24,"","QX",USER,"","","HMPERR")
"RTN","HMPCAC",166,0)
 K HMPERR
"RTN","HMPCAC",167,0)
 D CLEAN^DILF ; Clean up after DB call.
"RTN","HMPCAC",168,0)
 ;
"RTN","HMPCAC",169,0)
 ; If no combination record, then punt:
"RTN","HMPCAC",170,0)
 I +RTN<1 D
"RTN","HMPCAC",171,0)
 .S MSG="No combination entry."
"RTN","HMPCAC",172,0)
 .Q
"RTN","HMPCAC",173,0)
 ;
"RTN","HMPCAC",174,0)
 ; Order through the user's combination source entries:
"RTN","HMPCAC",175,0)
 S SORT="A" ; Required variable for PTSCOMBO^ORQPTQ5.
"RTN","HMPCAC",176,0)
 S SRC=0
"RTN","HMPCAC",177,0)
 F  S SRC=$O(^OR(100.24,RTN,.01,SRC)) Q:'SRC  D
"RTN","HMPCAC",178,0)
 .K ORY                                         ; Clean up each time.
"RTN","HMPCAC",179,0)
 .S TXT=""                                   ; Initialize.
"RTN","HMPCAC",180,0)
 .S TXT=$G(^OR(100.24,RTN,.01,SRC,0))  ; Get record's value.
"RTN","HMPCAC",181,0)
 .;
"RTN","HMPCAC",182,0)
 .; In case of error, punt:
"RTN","HMPCAC",183,0)
 .I TXT="" S MSG="Combination source entry error."
"RTN","HMPCAC",184,0)
 .I TXT="" Q
"RTN","HMPCAC",185,0)
 .S PTR=$P(TXT,";")                       ; Get pointer.
"RTN","HMPCAC",186,0)
 .S FILE="^"_$P(TXT,";",2)                ; Get file.
"RTN","HMPCAC",187,0)
 .;
"RTN","HMPCAC",188,0)
 .; Get info for each source entry and build HMPY array accordingly.
"RTN","HMPCAC",189,0)
 .I FILE="^DIC(42," D  Q                     ; Wards.
"RTN","HMPCAC",190,0)
 ..D WARDPTS^ORQPTQ2(.HMPY,PTR)
"RTN","HMPCAC",191,0)
 ..I $D(HMPY) D BLDLIST(.LIST,.HMPY)
"RTN","HMPCAC",192,0)
 .I FILE="^VA(200," D  Q                     ; Providers.
"RTN","HMPCAC",193,0)
 ..D PROVPTS^ORQPTQ2(.HMPY,PTR)
"RTN","HMPCAC",194,0)
 ..I $D(HMPY) D BLDLIST(.LIST,.HMPY)
"RTN","HMPCAC",195,0)
 .I FILE="^DIC(45.7," D  Q                   ; Specialties.
"RTN","HMPCAC",196,0)
 ..D SPECPTS^ORQPTQ2(.HMPY,PTR)
"RTN","HMPCAC",197,0)
 ..I $D(HMPY) D BLDLIST(.LIST,.HMPY)
"RTN","HMPCAC",198,0)
 .I FILE="^OR(100.21," D  Q                  ; Team Lists
"RTN","HMPCAC",199,0)
 ..D TEAMPTS^ORQPTQ1(.HMPY,PTR)
"RTN","HMPCAC",200,0)
 ..I $D(HMPY) D BLDLIST(.LIST,.HMPY)
"RTN","HMPCAC",201,0)
 .I FILE="^SC(" D  Q                         ; Clinics.
"RTN","HMPCAC",202,0)
 ..N APPTBGN,APPTEND S (APPTBGN,APPTEND)=""
"RTN","HMPCAC",203,0)
 ..D CLINPTS^ORQPTQ2(.HMPY,PTR,BDATE,EDATE,MAXAPPTS,.APPTBGN,.APPTEND)
"RTN","HMPCAC",204,0)
 ..I $D(HMPY) D BLDLIST(.LIST,.HMPY)
"RTN","HMPCAC",205,0)
 Q
"RTN","HMPCAC",206,0)
 ;
"RTN","HMPCAC",207,0)
GETDFLST(LIST,USER) ;
"RTN","HMPCAC",208,0)
 N API,BEG,END,IEN,SRC,SRV,HMPSRC,HMPY,X
"RTN","HMPCAC",209,0)
 S SRV=$G(^VA(200,USER,5)) I +SRV>0 S SRV=$P(SRV,U)
"RTN","HMPCAC",210,0)
 S SRC=$$GET^XPAR("USR.`"_USER_"^SRV.`"_+$G(SRV),"ORLP DEFAULT LIST SOURCE",1,"Q")
"RTN","HMPCAC",211,0)
 ;
"RTN","HMPCAC",212,0)
 I SRC="T" S IEN=$$GET^XPAR("USR.`"_USER_"^SRV.`"_+$G(SRV),"ORLP DEFAULT TEAM",1,"Q") D:+$G(IEN)>0 TEAMPTS^ORQPTQ1(.HMPY,IEN)
"RTN","HMPCAC",213,0)
 I SRC="W" S IEN=$$GET^XPAR("USR.`"_USER_"^SRV.`"_+$G(SRV),"ORLP DEFAULT WARD",1,"Q") D:+$G(IEN)>0 BYWARD^ORWPT(.HMPY,IEN)
"RTN","HMPCAC",214,0)
 I SRC="P" S IEN=$$GET^XPAR("USR.`"_USER_"^SRV.`"_+$G(SRV),"ORLP DEFAULT PROVIDER",1,"Q") D:+$G(IEN)>0 PROVPTS^ORQPTQ2(.HMPY,IEN)
"RTN","HMPCAC",215,0)
 I SRC="S" S IEN=$$GET^XPAR("USR.`"_USER_"^SRV.`"_+$G(SRV),"ORLP DEFAULT SPECIALTY",1,"Q") D:+$G(IEN)>0 SPECPTS^ORQPTQ2(.HMPY,IEN)
"RTN","HMPCAC",216,0)
 I SRC'="C",SRC'="M" D BLDLIST(.LIST,.HMPY) Q
"RTN","HMPCAC",217,0)
 ;
"RTN","HMPCAC",218,0)
  I SRC="C" D  Q
"RTN","HMPCAC",219,0)
 .F X="Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday" D
"RTN","HMPCAC",220,0)
 ..S API="ORLP DEFAULT CLINIC "_$$UP^XLFSTR(X),IEN=$$GET^XPAR("USR.`"_USER_"^SRV.`"_+$G(SRV),API,1,"Q") I +$G(IEN)>0 D
"RTN","HMPCAC",221,0)
 ...S BEG=$$UP^XLFSTR($$GET^XPAR("USR.`"_USER_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","HMPCAC",222,0)
 ...I BEG="T+0" S BEG=$$FMTE^XLFDT(DT,BEG)
"RTN","HMPCAC",223,0)
 ...S END=$$UP^XLFSTR($$GET^XPAR("USR.`"_USER_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","HMPCAC",224,0)
 ...I END="T+0" S END=$$FMTE^XLFDT(DT,END)
"RTN","HMPCAC",225,0)
 ...D CLINPTS2(.HMPY,USER,+$G(IEN),BEG,END)
"RTN","HMPCAC",226,0)
 ...D BLDLIST(.LIST,.HMPY)
"RTN","HMPCAC",227,0)
 I SRC="M" D  Q
"RTN","HMPCAC",228,0)
 .S IEN=$D(^OR(100.24,USER,0)) I +$G(IEN)>0 S IEN=USER D
"RTN","HMPCAC",229,0)
 ..S BEG=$$UP^XLFSTR($$GET^XPAR("USR.`"_USER_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","HMPCAC",230,0)
 ..I BEG="T+0" S BEG=$$FMTE^XLFDT(DT,BEG)
"RTN","HMPCAC",231,0)
 ..S END=$$UP^XLFSTR($$GET^XPAR("USR.`"_USER_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","HMPCAC",232,0)
 ..I END="T+0" S END=$$FMTE^XLFDT(DT,END)
"RTN","HMPCAC",233,0)
 ..D COMBPTS(.LIST,USER,+$G(IEN),BEG,END) ; "0"= GUI RPC call.
"RTN","HMPCAC",234,0)
 Q
"RTN","HMPCAC",235,0)
 ;
"RTN","HMPCAC",236,0)
REMOPT(IEN,OPT) ;
"RTN","HMPCAC",237,0)
 Q
"RTN","HMPCAC",238,0)
 ;
"RTN","HMPCORD")
0^6^B7434772
"RTN","HMPCORD",1,0)
HMPCORD ;SLC/AGP - Ordering Controller for HMP ; 9/21/12 5:57pm
"RTN","HMPCORD",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPCORD",3,0)
 ;
"RTN","HMPCORD",4,0)
 ;
"RTN","HMPCORD",5,0)
RPC(HMPOUT,PARAMS) ; Process request via RPC instead of CSP
"RTN","HMPCORD",6,0)
 N X,REQ,HMPCNT,HMPSITE,HMPUSER,HMPDBUG,HMPSTA
"RTN","HMPCORD",7,0)
 S HMPCNT=0
"RTN","HMPCORD",8,0)
 S HMPUSER=DUZ,HMPSITE=DUZ(2),HMPSTA=$$STA^XUAF4(DUZ(2))
"RTN","HMPCORD",9,0)
 S X="" F  S X=$O(PARAMS(X)) Q:X=""  S REQ(X,1)=PARAMS(X)
"RTN","HMPCORD",10,0)
 ;
"RTN","HMPCORD",11,0)
COMMON ; Come here for both CSP and RPC Mode
"RTN","HMPCORD",12,0)
 ;
"RTN","HMPCORD",13,0)
 N CMD
"RTN","HMPCORD",14,0)
 S CMD=$G(REQ("command",1))
"RTN","HMPCORD",15,0)
 ;
"RTN","HMPCORD",16,0)
 ; returns an order structure for change orders
"RTN","HMPCORD",17,0)
 ; or places an order if auto-accept QO
"RTN","HMPCORD",18,0)
 I CMD="ordering" D  G OUT
"RTN","HMPCORD",19,0)
 . D ORDERING^HMPCORD1(.HMPOUT,$$VAL("uid"),$$VAL("qoIen"),$$VAL("patient"),$$VAL("location"),$$VAL("provider"),$$VAL("orderAction"),0,$$VAL("snippet"),$$VAL("name"))
"RTN","HMPCORD",20,0)
 ;
"RTN","HMPCORD",21,0)
 ;
"RTN","HMPCORD",22,0)
 I CMD="listQuickOrders" D  G OUT
"RTN","HMPCORD",23,0)
 . D QOL^HMPCORD1(.HMPOUT,$$VAL("location"),$$VAL("provider"),$$VAL("panelNumber"),$$VAL("patient"))
"RTN","HMPCORD",24,0)
 ;
"RTN","HMPCORD",25,0)
 I CMD="renewOrder" D  G OUT
"RTN","HMPCORD",26,0)
 . D RENEW^HMPCORD1(.HMPOUT,$$VAL("uid"),$$VAL("provider"),0,$$VAL("snippet"),$$VAL("name"))
"RTN","HMPCORD",27,0)
 ;
"RTN","HMPCORD",28,0)
 I CMD="dcReasonsList" D  G OUT
"RTN","HMPCORD",29,0)
 . D DCLREAS^HMPCORD1(.HMPOUT,$$VAL("uid"),$$VAL("provider"))
"RTN","HMPCORD",30,0)
 ;
"RTN","HMPCORD",31,0)
 I CMD="discontinue" D  G OUT
"RTN","HMPCORD",32,0)
 . D DC^HMPCORD1(.HMPOUT,$$VAL("uid"),$$VAL("provider"),$$VAL("location"),$$VAL("patient"),$$VAL("snippet"),$$VAL("name"))
"RTN","HMPCORD",33,0)
 ;
"RTN","HMPCORD",34,0)
 I CMD="cancel" D  G OUT
"RTN","HMPCORD",35,0)
 . D CANCEL^HMPCORD1(.HMPOUT,$$VAL("uid"))
"RTN","HMPCORD",36,0)
 ;
"RTN","HMPCORD",37,0)
 I CMD="performOrderChecks" D  G OUT
"RTN","HMPCORD",38,0)
 . D ORDERING^HMPCORD1(.HMPOUT,$$VAL("uid"),$$VAL("qoIen"),$$VAL("patient"),$$VAL("location"),$$VAL("provider"),$$VAL("orderAction"),1)
"RTN","HMPCORD",39,0)
 ;
"RTN","HMPCORD",40,0)
 I CMD="getSnippets" D  G OUT
"RTN","HMPCORD",41,0)
 .D GETSNIPS^HMPCORD1(.HMPOUT,$$VAL("patient"),$$VAL("provider"))
"RTN","HMPCORD",42,0)
 ;
"RTN","HMPCORD",43,0)
 I CMD="saveOrder" D  G OUT
"RTN","HMPCORD",44,0)
 .;M ^XTMP("AGP INFO","PARAMS")=PARAMS
"RTN","HMPCORD",45,0)
 .D EN^HMPCORD3(.HMPOUT,.PARAMS)
"RTN","HMPCORD",46,0)
 ;
"RTN","HMPCORD",47,0)
 I CMD="orderAction" D  G OUT
"RTN","HMPCORD",48,0)
 .N INFO
"RTN","HMPCORD",49,0)
 .;M ^XTMP("AGP PARAMS")=REQ
"RTN","HMPCORD",50,0)
 .D BLDINFO(.INFO)
"RTN","HMPCORD",51,0)
 .D ORDERUID^HMPCORD1(.HMPOUT,.INFO)
"RTN","HMPCORD",52,0)
 ;
"RTN","HMPCORD",53,0)
OUT ;
"RTN","HMPCORD",54,0)
END ;
"RTN","HMPCORD",55,0)
 ;
"RTN","HMPCORD",56,0)
BLDINFO(INFO) ;
"RTN","HMPCORD",57,0)
 N X
"RTN","HMPCORD",58,0)
 S X="" F  S X=$O(REQ(X)) Q:X=""  D
"RTN","HMPCORD",59,0)
 .S INFO(X)=REQ(X,1)
"RTN","HMPCORD",60,0)
 Q
"RTN","HMPCORD",61,0)
 ;
"RTN","HMPCORD",62,0)
VAL(X) ; return value from request
"RTN","HMPCORD",63,0)
 Q $G(REQ(X,1))
"RTN","HMPCORD",64,0)
 ;
"RTN","HMPCORD1")
0^7^B194228721
"RTN","HMPCORD1",1,0)
HMPCORD1 ; SLC/AGP,JLC - Process Order Request from AVIVA System. ; 9/21/12 5:59pm
"RTN","HMPCORD1",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPCORD1",3,0)
 Q
"RTN","HMPCORD1",4,0)
 ;
"RTN","HMPCORD1",5,0)
ADD(X,HMPVALUE) ; Add a line @NHIN@(n)=X
"RTN","HMPCORD1",6,0)
 N RESULT
"RTN","HMPCORD1",7,0)
 S RESULT("success")="false"
"RTN","HMPCORD1",8,0)
 S RESULT("error")=X
"RTN","HMPCORD1",9,0)
 D ENCODE^HMPJSON("RESULT","HMPVALUE","HMPERR")
"RTN","HMPCORD1",10,0)
 Q
"RTN","HMPCORD1",11,0)
 ;
"RTN","HMPCORD1",12,0)
AE(TEXT,HMPVALUE) ;
"RTN","HMPCORD1",13,0)
 ;N RESULT
"RTN","HMPCORD1",14,0)
 ;S RESULT("success")="false"
"RTN","HMPCORD1",15,0)
 ;S RESULT("error")=TEXT
"RTN","HMPCORD1",16,0)
 ;D ENCODE^HMPJSON("RESULT","HMPVALUE","HMPERR")
"RTN","HMPCORD1",17,0)
 N DATA,TXT
"RTN","HMPCORD1",18,0)
 S TXT(1)=TEXT
"RTN","HMPCORD1",19,0)
 D SETERROR^HMPUTILS(.HMPVALUE,.TXT,.TXT,.DATA)
"RTN","HMPCORD1",20,0)
 Q
"RTN","HMPCORD1",21,0)
 ;
"RTN","HMPCORD1",22,0)
AEM(TEXT,HMPVALUE) ;
"RTN","HMPCORD1",23,0)
 ;N NUM,RESULT
"RTN","HMPCORD1",24,0)
 ;S RESULT("success")="false"
"RTN","HMPCORD1",25,0)
 ;S NUM=0 F  S NUM=$O(TEXT(NUM)) Q:NUM'>0  D
"RTN","HMPCORD1",26,0)
 ;.I $G(RESULT("error"))="" S RESULT("error")=TEXT(NUM)
"RTN","HMPCORD1",27,0)
 ;.S RESULT("error")=RESULT("error")_$C(13,10)_TEXT(NUM)
"RTN","HMPCORD1",28,0)
 ;D ENCODE^HMPJSON("RESULT","HMPVALUE","HMPERR")
"RTN","HMPCORD1",29,0)
 N DATA
"RTN","HMPCORD1",30,0)
 D SETERROR^HMPUTILS(.HMPVALUE,.TEXT,.TEXT,.DATA)
"RTN","HMPCORD1",31,0)
 Q
"RTN","HMPCORD1",32,0)
 ;
"RTN","HMPCORD1",33,0)
CANCEL(UID) ;
"RTN","HMPCORD1",34,0)
 N HMPERARR,HMPERCNT,HMPRES,HMPISORD,HMPOIFN,HMPOK,HMPPOSS
"RTN","HMPCORD1",35,0)
 S HMPERCNT=0,HMPOUT=0
"RTN","HMPCORD1",36,0)
 I UID'["orderID" D AE("UID does not contain an order ID") G EXIT
"RTN","HMPCORD1",37,0)
 S DFN=$P(UID,":",5),HMPOIFN=$P(UID,"D",2),HMPISORD=1
"RTN","HMPCORD1",38,0)
 G UNO
"RTN","HMPCORD1",39,0)
 Q
"RTN","HMPCORD1",40,0)
 ;
"RTN","HMPCORD1",41,0)
 ;DC(HMPVALUE,UID,USER,LOC,ICN,REAS,NAME) ;
"RTN","HMPCORD1",42,0)
DC(HMPVALUE,DFN,ID,USER,LOC,REAS,NAME) ;
"RTN","HMPCORD1",43,0)
 N RESULT,HMPDIEN,HMPERCNT,HMPFILL,HMPISORD,HMPOK,HMPRES
"RTN","HMPCORD1",44,0)
 S HMPISORD=1
"RTN","HMPCORD1",45,0)
 ;I $$VALIDUID(UID)=0  D AE("UID is not valid UID",.HMPVALUE) G DCX
"RTN","HMPCORD1",46,0)
 ;S DFN=$P(UID,":",5)
"RTN","HMPCORD1",47,0)
 S HMPOIFN=ID
"RTN","HMPCORD1",48,0)
 S HMPDIEN=+$P($G(^OR(100,HMPOIFN,0)),U,5)
"RTN","HMPCORD1",49,0)
 D FILLID^ORWDXC(.HMPFILL,HMPDIEN)
"RTN","HMPCORD1",50,0)
 D DC^ORWDXA(.HMPRES,HMPOIFN,USER,LOC,REAS,0,0)
"RTN","HMPCORD1",51,0)
 ;D UNO
"RTN","HMPCORD1",52,0)
 D KILLALRT^HMPCORD2(DFN,HMPFILL)
"RTN","HMPCORD1",53,0)
 I $D(HMPVALUE)>0 G DCX
"RTN","HMPCORD1",54,0)
 S REAS="Discontinue "_NAME_" "_REAS
"RTN","HMPCORD1",55,0)
 D BLDJSON^HMPCORD2(.HMPVALUE,.RESULT,.HMPPOSS,.HMPVALUE,$G(REAS),UID)
"RTN","HMPCORD1",56,0)
DCX ;
"RTN","HMPCORD1",57,0)
 Q
"RTN","HMPCORD1",58,0)
 ;
"RTN","HMPCORD1",59,0)
 ;D DCLREAS(.HMPVALUE,DFN,ID,ORPROV)
"RTN","HMPCORD1",60,0)
DCLREAS(RESULT,DFN,HMPOIFN,USER) ;
"RTN","HMPCORD1",61,0)
 N CNT,NODE,NUM,HMPHSKEY,HMPERARR,HMPISORD,HMPOARRY,HMPOUT,HMPRES,HMPPOSS
"RTN","HMPCORD1",62,0)
 S HMPERCNT=0,HMPOUT=0,HMPISORD=1
"RTN","HMPCORD1",63,0)
 K HMPOUT D OFCPLX^ORWDXA(.HMPOUT,HMPOIFN) I $D(HMPOUT)>0 S RESULT("complexOrder")="true"
"RTN","HMPCORD1",64,0)
 K HMPOUT D DCREN^ORWDX1(.HMPOUT,HMPOIFN) I $D(HMPOUT) S RESULT("pendingRenewal")="true"
"RTN","HMPCORD1",65,0)
 K HMPOUT D DCREASON^ORWDX2(.HMPOUT) I $D(HMPOUT) D
"RTN","HMPCORD1",66,0)
 .S CNT=1,NUM=1 F  S CNT=$O(HMPOUT(CNT)) Q:CNT'>0  D
"RTN","HMPCORD1",67,0)
 ..S NODE=$E(HMPOUT(CNT),2,$L(HMPOUT(CNT)))
"RTN","HMPCORD1",68,0)
 ..S RESULT("lists",NUM,"value")=$P(NODE,U,2),RESULT("lists",NUM,"id")=$P(NODE,U),NUM=NUM+1
"RTN","HMPCORD1",69,0)
 Q
"RTN","HMPCORD1",70,0)
 ;
"RTN","HMPCORD1",71,0)
EN(IEN,DFN,LOC,USER,RSPID,ORDTYPE,CHKONLY,VARSARR,ORDIALOG,ERRARR,HMPPOSS,RESULT,HMPVALUE) ;
"RTN","HMPCORD1",72,0)
 N CHECKS,CNT,DEFDLF,DLGDEF,DLGNAME,DIEN,DRUG,EXT,FILLER,INST,ISCLOZ,INT,NUM
"RTN","HMPCORD1",73,0)
 N ODIEN,ORDCHKOT,ORDERCHK,SAVEARR,STR,TEMP,TEXT
"RTN","HMPCORD1",74,0)
 I ORDTYPE="E" S DIEN=+$P($G(^OR(100,IEN,0)),U,5)
"RTN","HMPCORD1",75,0)
 I ORDTYPE="Q" S DIEN=IEN
"RTN","HMPCORD1",76,0)
 S VARSARR("DISPLAY GROUP IEN")=$P($G(^ORD(101.41,$$DEFDLG^ORCD(DIEN),0)),U,5)
"RTN","HMPCORD1",77,0)
 S VARSARR("DISPLAY GROUP")=$P($G(^ORD(101.98,VARSARR("DISPLAY GROUP IEN"),0)),U)
"RTN","HMPCORD1",78,0)
 D FILLID^ORWDXC(.FILLER,DIEN)
"RTN","HMPCORD1",79,0)
 S VARSARR("FILLER ID")=FILLER
"RTN","HMPCORD1",80,0)
 K ^TMP($J,"ORDER CHECKS")
"RTN","HMPCORD1",81,0)
 I $$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE")="E" D
"RTN","HMPCORD1",82,0)
 .D DISPLAY^ORWDXC(.CHECKS,DUZ,VARSARR("FILLER ID")) I $D(CHECKS) D INFO^HMPCORD2(.CHECKS)
"RTN","HMPCORD1",83,0)
 S DLGNAME=$P($G(^ORD(101.41,DIEN,0)),U)
"RTN","HMPCORD1",84,0)
 I ORDTYPE="Q" S DLGNAME=$P($G(^ORD(101.41,ORDIALOG,0)),U)
"RTN","HMPCORD1",85,0)
 I DLGNAME="" D AE("INVALID DEFAULT DIALOG",.HMPVALUE) G ENX
"RTN","HMPCORD1",86,0)
 S VARSARR("DIALOG NAME")=DLGNAME
"RTN","HMPCORD1",87,0)
 D DLGDEF^ORWDX(.DLGDEF,DLGNAME)
"RTN","HMPCORD1",88,0)
 ;build order check array,build dialog structure and build save array
"RTN","HMPCORD1",89,0)
 D BLDARRS^HMPCORD2(.RESULT,.ORDIALOG,.VARSARR,DFN,LOC,.ORDERCHK,.SAVEARR,.HMPPOSS)
"RTN","HMPCORD1",90,0)
 D ACCEPT^ORWDXC(.ORDCHKOT,DFN,VARSARR("FILLER ID"),"",LOC,.ORDERCHK,"",0) D INFO^HMPCORD2(.ORDCHKOT)
"RTN","HMPCORD1",91,0)
 I CHKONLY=1 Q
"RTN","HMPCORD1",92,0)
 S SAVEARR("ORCHECK")=0,SAVEARR("ORTS")=0
"RTN","HMPCORD1",93,0)
 I ORDTYPE="Q"!(ACTION="C") D SAVE(.RESULT,DFN,USER,LOC,VARSARR("DIALOG NAME"),VARSARR("DISPLAY GROUP IEN"),DIEN,0,.SAVEARR)
"RTN","HMPCORD1",94,0)
ENX ;
"RTN","HMPCORD1",95,0)
 Q
"RTN","HMPCORD1",96,0)
 ;
"RTN","HMPCORD1",97,0)
GETSNIPS(HMPVALUE,ICN,USER) ;
"RTN","HMPCORD1",98,0)
 N CNT,DFN,RESULT
"RTN","HMPCORD1",99,0)
 I +$G(DFN)'>0 S DFN=$$GETDFN^MPIF001(ICN)
"RTN","HMPCORD1",100,0)
 S CNT=0 F  S CNT=$O(^XTMP("HMP SNIPPET",DFN,USER,DT,CNT)) Q:CNT'>0  D
"RTN","HMPCORD1",101,0)
 .I $G(RESULT("text"))'="" S RESULT=$G(RESULT("text"))_$C(13,10)_$G(^XTMP("HMP SNIPPET",DFN,USER,DT,CNT,"text")) Q
"RTN","HMPCORD1",102,0)
 .S RESULT("text")=$G(^XTMP("HMP SNIPPET",DFN,USER,DT,CNT,"text"))
"RTN","HMPCORD1",103,0)
 S RESULT("success")=$S($D(RESULT):"true",1:"false")
"RTN","HMPCORD1",104,0)
 D ENCODE^HMPJSON("RESULT","HMPVALUE","ERROR")
"RTN","HMPCORD1",105,0)
 Q
"RTN","HMPCORD1",106,0)
 ;
"RTN","HMPCORD1",107,0)
GETEXT(NAME,VALUE) ;
"RTN","HMPCORD1",108,0)
 N RESULT
"RTN","HMPCORD1",109,0)
 I NAME="ORDERABLE" Q $P(^ORD(101.43,VALUE,0),U)
"RTN","HMPCORD1",110,0)
 I NAME="URGENCY" Q $P(^ORD(101.42,VALUE,0),U)
"RTN","HMPCORD1",111,0)
 I NAME="ROUTE" Q $$GET1^DIQ(51.2,+VALUE_",",.01)
"RTN","HMPCORD1",112,0)
 I NAME="DRUG" Q $$GET1^DIQ(50,+VALUE_",",.01)
"RTN","HMPCORD1",113,0)
 Q VALUE
"RTN","HMPCORD1",114,0)
 ;
"RTN","HMPCORD1",115,0)
 ;entry point for RPC for QO and editing an existing order
"RTN","HMPCORD1",116,0)
 ;ORDERING(.OUT,"",15833,10103,240,1089,"",1,"")
"RTN","HMPCORD1",117,0)
ORDERING(HMPVALUE,UID,QIEN,ICN,LOC,USER,ACTION,CHKONLY,REAS,NAME,HMPPOSS) ;
"RTN","HMPCORD1",118,0)
 N DFN,FAIL,ORDTYPE,RESULT,TEMP,HMPERCNT,HMPISORD,HMPOIFN
"RTN","HMPCORD1",119,0)
 N VARSARR,HMPERARR,HMPRES,HMPBLT
"RTN","HMPCORD1",120,0)
 S HMPBLT=0
"RTN","HMPCORD1",121,0)
 K ^TMP($J,"ORDER CHECKS")
"RTN","HMPCORD1",122,0)
 S HMPERCNT=0,HMPISORD=0
"RTN","HMPCORD1",123,0)
 S FAIL=0
"RTN","HMPCORD1",124,0)
 I $L($G(UID))>0 D
"RTN","HMPCORD1",125,0)
 . ;I UID'["orderID" D AE("UID does not contain an order ID") S FAIL=1
"RTN","HMPCORD1",126,0)
 . S HMPOIFN=$P(UID,":",6)
"RTN","HMPCORD1",127,0)
 I ACTION="R" D RENEW(UID,USER,ICN,CHKONLY) Q:HMPBLT=1  G ORDERUNO
"RTN","HMPCORD1",128,0)
 I FAIL=1 G EXIT
"RTN","HMPCORD1",129,0)
 I +$G(DFN)'>0 S DFN=$$GETDFN^MPIF001(ICN) I DFN'>0 D AE("Cannot find patient dfn from ICN") G EXIT
"RTN","HMPCORD1",130,0)
 ;I QIEN>0 S HMPOIFN=QIEN
"RTN","HMPCORD1",131,0)
 I QIEN>0 D QOSET(QIEN,ACTION,DFN,CHKONLY,.RESULT,.HMPVALUE)
"RTN","HMPCORD1",132,0)
 I +QIEN=0 D PROCESS(HMPOIFN,ACTION,CHKONLY,.RESULT,.HMPVALUE)
"RTN","HMPCORD1",133,0)
 I CHKONLY=1 Q
"RTN","HMPCORD1",134,0)
 S TEMP=REAS
"RTN","HMPCORD1",135,0)
 I QIEN>0 D
"RTN","HMPCORD1",136,0)
 .S NAME="quick order "_$P($G(^ORD(101.41,QIEN,0)),U,2)
"RTN","HMPCORD1",137,0)
 .S REAS="Place "_"qo"_" "_TEMP
"RTN","HMPCORD1",138,0)
 I ACTION="C" S REAS="Copy "_NAME_" "_TEMP
"RTN","HMPCORD1",139,0)
ORDERUNO ;
"RTN","HMPCORD1",140,0)
 Q
"RTN","HMPCORD1",141,0)
 ;
"RTN","HMPCORD1",142,0)
QOSET(QIEN,ACTION,DFN,CHKONLY,RESULT,HMPVALUE) ;
"RTN","HMPCORD1",143,0)
 N NUM,HMPOIFN
"RTN","HMPCORD1",144,0)
 I $P($G(^ORD(101.41,QIEN,0)),U,4)'="O" S HMPOIFN=QIEN D PROCESS(HMPOIFN,ACTION,CHKONLY,.RESULT,.HMPVALUE) Q
"RTN","HMPCORD1",145,0)
 S NUM=0 F  S NUM=$O(^ORD(101.41,QIEN,10,NUM)) Q:NUM'>0  D
"RTN","HMPCORD1",146,0)
 .S HMPOIFN=$P($G(^ORD(101.41,QIEN,10,NUM,0)),U,2) I +$G(HMPOIFN)'>0 Q
"RTN","HMPCORD1",147,0)
 .D PROCESS(HMPOIFN,ACTION,CHKONLY,.RESULT,.HMPVALUE)
"RTN","HMPCORD1",148,0)
 Q
"RTN","HMPCORD1",149,0)
PROCESS(HMPOIFN,ACTION,CHKONLY,RESULT,HMPVALUE,HMPOK) ;
"RTN","HMPCORD1",150,0)
 N BLDRES,ORCAT,ORDARR,ORDIALOG,RSPID,TEMP,TEXT
"RTN","HMPCORD1",151,0)
 S TEMP=$G(ACTION)_HMPOIFN
"RTN","HMPCORD1",152,0)
 I $$BEG^HMPCORD2(DFN,LOC,TEMP,USER,.VARSARR,.BLDRES)=0 G PROCESSX
"RTN","HMPCORD1",153,0)
 I $P(BLDRES(0),U,4)="Q" D
"RTN","HMPCORD1",154,0)
 .S ORDTYPE="Q"
"RTN","HMPCORD1",155,0)
 .I $P(BLDRES(0),U)'=1,$P(BLDRES(0),U)'=2 D AE("Quick Order is not set to Auto-Accept",.HMPVALUE) G PROCESSX
"RTN","HMPCORD1",156,0)
 I $G(ORDTYPE)="" S ORDTYPE=$S(ACTION="C":"E",ACTION="X":"E",1:"N")
"RTN","HMPCORD1",157,0)
 S RSPID=$P(BLDRES(0),U,2)
"RTN","HMPCORD1",158,0)
 I ACTION="X" I $$CHANGE^HMPCORD2(HMPOIFN,DFN,LOC,USER,.ERRARR,.HMPVALUE)=0 G PROCESSX
"RTN","HMPCORD1",159,0)
 I ORDTYPE="Q" D
"RTN","HMPCORD1",160,0)
 .D GETQDLG^ORCD(HMPOIFN)
"RTN","HMPCORD1",161,0)
 .S ORCAT=$S(+$G(^DPT(DFN,.1))>0:"I",1:"O"),PROMPT=$$PTR("SIG")
"RTN","HMPCORD1",162,0)
 .D SIG^ORCDPS2
"RTN","HMPCORD1",163,0)
 I '$D(ORDIALOG) D
"RTN","HMPCORD1",164,0)
 .S ORDIALOG=+$P($G(^OR(100,+HMPOIFN,0)),U,5)
"RTN","HMPCORD1",165,0)
 .D GETDLG1^ORCD(ORDIALOG)
"RTN","HMPCORD1",166,0)
 .D GETORDER^ORCD(+HMPOIFN)
"RTN","HMPCORD1",167,0)
 D EN(+HMPOIFN,DFN,LOC,USER,RSPID,ORDTYPE,CHKONLY,.VARSARR,.ORDIALOG,.ERRARR,.HMPPOSS,.RESULT,.HMPVALUE)
"RTN","HMPCORD1",168,0)
PROCESSX ;
"RTN","HMPCORD1",169,0)
 Q
"RTN","HMPCORD1",170,0)
 ;
"RTN","HMPCORD1",171,0)
QOL(RESULT,LOC,PROV,IEN) ;
"RTN","HMPCORD1",172,0)
 N CNT,BLDRES,DIEN,NAME,NODE,NUM,TEXT,TYPE,VARSARR,HMPERCNT,HMPERARR,HMPOARRY,HMPPOSS
"RTN","HMPCORD1",173,0)
 S HMPERCNT=0
"RTN","HMPCORD1",174,0)
 S DIEN="",NUM=0,TEXT=""
"RTN","HMPCORD1",175,0)
 F  S NUM=$O(^HMPPANEL(IEN,"ORDER DIALOGS",NUM)) Q:NUM'>0  D
"RTN","HMPCORD1",176,0)
 .S DIEN=$G(^HMPPANEL(IEN,"ORDER DIALOGS",NUM,0)) Q:+DIEN'>0
"RTN","HMPCORD1",177,0)
 .S NAME=$P($G(^ORD(101.41,+DIEN,0)),U) I NAME="" Q
"RTN","HMPCORD1",178,0)
 .I $$BEG^HMPCORD2(DFN,LOC,DIEN,PROV,.VARSARR,.BLDRES)=0 G QOLX
"RTN","HMPCORD1",179,0)
 .S TYPE=$P(BLDRES(0),U,4)
"RTN","HMPCORD1",180,0)
 .S RESULT("qo",NUM,"name")=NAME,RESULT("qo",NUM,"id")=DIEN,RESULT("qo",NUM,"type")=TYPE
"RTN","HMPCORD1",181,0)
 I $D(HMPVALUE)>0 G QOLX
"RTN","HMPCORD1",182,0)
QOLX ;
"RTN","HMPCORD1",183,0)
 Q
"RTN","HMPCORD1",184,0)
 ;
"RTN","HMPCORD1",185,0)
RENEW(HMPVALUE,DFN,ID,ORPROV,CHKONLY,REAS,NAME,LOC) ;
"RTN","HMPCORD1",186,0)
 ;RENEW(HMPVALUE,UID,PROVP,CHKONLY,REAS,NAME) ;
"RTN","HMPCORD1",187,0)
 ;Input - DFN of the patient
"RTN","HMPCORD1",188,0)
 ;        RX to be renewed
"RTN","HMPCORD1",189,0)
 ;
"RTN","HMPCORD1",190,0)
 N X,ORY,ORPKG,ORITM,PSOSTAT,A,PDET,ORFLDS,DRUG,DISPLAY,FAIL,LIST,OCHKS,OCO,OCLIST,ORCPLX,ORINFO,ORPVSTS
"RTN","HMPCORD1",191,0)
 N ORL,PCP,PCPN,RESULT,RNWFLDS,SPACES,Y,ORUSR,NEWIFN,PNM,RXE,HMPOIFN
"RTN","HMPCORD1",192,0)
 N HMPERARR,HMPERCNT,HMPRES,HMPISORD,HMPOK
"RTN","HMPCORD1",193,0)
 K ^TMP($J,"ORDER CHECKS")
"RTN","HMPCORD1",194,0)
 S HMPERCNT=0,HMPISORD=1
"RTN","HMPCORD1",195,0)
 S HMPOIFN=ID
"RTN","HMPCORD1",196,0)
 D RNWFLDS^ORWDXR(.RNWFLDS,HMPOIFN) S ORFLDS(1)=RNWFLDS(0)
"RTN","HMPCORD1",197,0)
 D ISCPLX^ORWDXR(.ORCPLX,HMPOIFN) S ORCPLX=+$G(ORCPLX)
"RTN","HMPCORD1",198,0)
 I CHKONLY=1 Q
"RTN","HMPCORD1",199,0)
 D RENEW^ORWDXR(.RESULT,HMPOIFN,DFN,ORPROV,LOC,.ORFLDS,ORCPLX,0)
"RTN","HMPCORD1",200,0)
 S NEWIFN=$P(^OR(100,HMPOIFN,3),"^",6)
"RTN","HMPCORD1",201,0)
 S $P(^OR(100,NEWIFN,8,1,0),"^",13)=ORPROV
"RTN","HMPCORD1",202,0)
 I $D(HMPVALUE)>0 G RENEWX
"RTN","HMPCORD1",203,0)
 S REAS="Renew "_NAME_" "_REAS
"RTN","HMPCORD1",204,0)
RENEWUNO ;
"RTN","HMPCORD1",205,0)
 ;I HMPISORD=1 D UNLKORD^ORWDX(.HMPOK,HMPOIFN) I 'HMPOK D AE("Order unlock Failed") K HMPOK
"RTN","HMPCORD1",206,0)
RENEWUNL ;
"RTN","HMPCORD1",207,0)
 ;D UNLOCK^ORWDX(.HMPOK,DFN) I 'HMPOK D AE("Chart unlock Failed")
"RTN","HMPCORD1",208,0)
RENEWX ;
"RTN","HMPCORD1",209,0)
 ;D ENCODE^HMPJSON("RESULT","HMPVALUE","HMPERR")
"RTN","HMPCORD1",210,0)
 Q
"RTN","HMPCORD1",211,0)
 ;
"RTN","HMPCORD1",212,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","HMPCORD1",213,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","HMPCORD1",214,0)
 ;
"RTN","HMPCORD1",215,0)
SAVE(HMPRES,DFN,USER,LOC,DLGNAME,DGIEN,QOIEN,ORIFN,SAVEARR) ;
"RTN","HMPCORD1",216,0)
 N CNT,NUM,HMPOREST
"RTN","HMPCORD1",217,0)
 I QOIEN>0 D SAVE^ORWDX(.HMPOREST,DFN,USER,LOC,DLGNAME,DGIEN,QOIEN,"",.SAVEARR,"",DT,"",0)
"RTN","HMPCORD1",218,0)
 I ORIFN>0 D SAVE^ORWDX(.HMPOREST,DFN,USER,LOC,DLGNAME,DGIEN,"",ORIFN,.SAVEARR,"",DT,"C",0)
"RTN","HMPCORD1",219,0)
 S CNT=$O(HMPRES(""),-1)
"RTN","HMPCORD1",220,0)
 S NUM=0 F  S NUM=$O(HMPOREST(NUM)) Q:NUM'>0  D
"RTN","HMPCORD1",221,0)
 .S CNT=CNT+1,HMPRES("resultText")=$G(HMPRES("resultText"))_$C(13,10)_HMPOREST(NUM)
"RTN","HMPCORD1",222,0)
 Q
"RTN","HMPCORD1",223,0)
 ;
"RTN","HMPCORD1",224,0)
UNO ;
"RTN","HMPCORD1",225,0)
 ;I HMPISORD=1 D UNLKORD^ORWDX(.HMPOK,HMPOIFN) I 'HMPOK D AE("Order unlock Failed") K HMPOK
"RTN","HMPCORD1",226,0)
UNLOCK ;
"RTN","HMPCORD1",227,0)
 ;D UNLOCK^ORWDX(.HMPOK,DFN) I 'HMPOK D AE("Chart unlock Failed")
"RTN","HMPCORD1",228,0)
EXIT ;
"RTN","HMPCORD1",229,0)
 S HMPBLT=1
"RTN","HMPCORD1",230,0)
 ;D BLDXMLD^HMPCORD2(.HMPERARR,.HMPRES,.HMPPOSS)
"RTN","HMPCORD1",231,0)
 K ^TMP($J,"ORDER CHECKS")
"RTN","HMPCORD1",232,0)
 Q
"RTN","HMPCORD1",233,0)
 ;
"RTN","HMPCORD1",234,0)
VAL(REQ,X) ; return value from request
"RTN","HMPCORD1",235,0)
 Q $G(REQ(X,1))
"RTN","HMPCORD1",236,0)
 ;
"RTN","HMPCORD1",237,0)
VALIDUID(UID) ;
"RTN","HMPCORD1",238,0)
 I UID["med" Q 1
"RTN","HMPCORD1",239,0)
 Q 0
"RTN","HMPCORD1",240,0)
 ;
"RTN","HMPCORD1",241,0)
PRECHK(HMPOK,DFN,LOC,HMPOIFN,ORPROV,ACTION,PACTION,VARSARR,SAVEARR,HMPOARRY,ERROR) ;
"RTN","HMPCORD1",242,0)
 N ORDERCHK,ORDTYPE,TEMP,HMPPKG
"RTN","HMPCORD1",243,0)
 I PACTION'="N" D GETPKG^ORWDXR(.HMPPKG,HMPOIFN) I '$D(HMPPKG) D AE("Invalid Order Number",.ERROR) S HMPOK=2 Q
"RTN","HMPCORD1",244,0)
 I HMPPKG["PS" D  I HMPOK>0 Q
"RTN","HMPCORD1",245,0)
 .S ORDTYPE=$S(ACTION="R":"E",PACTION="C":"E",PACTION="X":"E",PACTION="N":"N",1:"Q")
"RTN","HMPCORD1",246,0)
 .D ALLWORD^ORALWORD(.HMPOK,DFN,HMPOIFN,ORDTYPE,ORPROV) I $G(HMPOK)>0 D AEM(.HMPOK,.ERROR) Q
"RTN","HMPCORD1",247,0)
 .I ACTION="DL"!(ACTION="RENEW") D  I HMPOK>0 Q
"RTN","HMPCORD1",248,0)
 .. S ORTYPE=$S(ACTION="DL":"DC",ACTION="RENEW":"RN",1:"") I ORTYPE="" Q
"RTN","HMPCORD1",249,0)
 .. D VALID^ORWDXA(.HMPOK,HMPOIFN,ORTYPE,ORPROV) I $G(HMPOK)'="" D AE(HMPOK,.ERROR) S HMPOK=2 Q
"RTN","HMPCORD1",250,0)
 ..I ACTION="DL" Q
"RTN","HMPCORD1",251,0)
 ..D GTORITM^ORWDXR(.ORITM,HMPOIFN)
"RTN","HMPCORD1",252,0)
 ..I HMPPKG="PSO" D FAILDEA^ORWDPS1(.FAIL,ORITM,ORPROV,"O") I FAIL D AE("Failed DEA Check",.ERROR) S HMPOK=2 Q
"RTN","HMPCORD1",253,0)
 ..D RNWFLDS^ORWDXR(.RNWFLDS,HMPOIFN) S ORFLDS(1)=RNWFLDS(0)
"RTN","HMPCORD1",254,0)
 ..D CHKGRP^ORWDPS2(.DISPLAY,HMPOIFN) ;I DISPLAY'=2 D AE("Package Problem on Order") G UNO
"RTN","HMPCORD1",255,0)
 ;
"RTN","HMPCORD1",256,0)
 I ACTION="P" D  I HMPOK>0 Q 
"RTN","HMPCORD1",257,0)
 .D BLDPORD(HMPOIFN,DFN,LOC,PACTION,ORPROV,.VARSARR,.HMPOK,.HMPOARRY,.ORDERCHK,.SAVEARR)
"RTN","HMPCORD1",258,0)
 ;
"RTN","HMPCORD1",259,0)
 W !,HMPPKG
"RTN","HMPCORD1",260,0)
 W !,HMPOIFN
"RTN","HMPCORD1",261,0)
 D PEROC(.HMPOK,DFN,HMPOIFN,HMPPKG,ACTION,LOC,.ORDERCHK,.VARSARR,.ORDIALOG,.SAVEARR,.HMPOARRY)
"RTN","HMPCORD1",262,0)
 Q
"RTN","HMPCORD1",263,0)
 ;
"RTN","HMPCORD1",264,0)
BLDPORD(HMPOIFN,DFN,LOC,PACTION,ORPROV,VARSARR,HMPOK,ORDIALOG,ORDERCHK,SAVEARR,ERROR) ;
"RTN","HMPCORD1",265,0)
 N BLDRES,DIEN,ORDTYPE,TEMP
"RTN","HMPCORD1",266,0)
 S TEMP=$G(PACTION)_HMPOIFN
"RTN","HMPCORD1",267,0)
 I $$BEG^HMPCORD2(DFN,LOC,TEMP,ORPROV,.VARSARR,.BLDRES)=0 S HMPOK=2 Q
"RTN","HMPCORD1",268,0)
 I $P(BLDRES(0),U,4)="Q" D
"RTN","HMPCORD1",269,0)
 .S ORDTYPE="Q"
"RTN","HMPCORD1",270,0)
 .I $P(BLDRES(0),U)'=1,$P(BLDRES(0),U)'=2 D AE("Quick Order is not set to Auto-Accept",.HMPVALUE) S HMPOK=2 Q
"RTN","HMPCORD1",271,0)
 I $G(ORDTYPE)="" S ORDTYPE=$S(PACTION="C":"E",PACTION="X":"E",1:"N")
"RTN","HMPCORD1",272,0)
 S RSPID=$P(BLDRES(0),U,2)
"RTN","HMPCORD1",273,0)
 I PACTION="X" I $$CHANGE^HMPCORD2(HMPOIFN,DFN,LOC,USER,.ERRARR,.HMPVALUE)=0 G PROCESSX
"RTN","HMPCORD1",274,0)
 S VARSARR("DISPLAY GROUP IEN")=$S(ORDTYPE="Q":$P($G(^ORD(101.41,$$DEFDLG^ORCD(HMPOIFN),0)),U,5),1:+$P(^OR(100,HMPOIFN,0),U,11))
"RTN","HMPCORD1",275,0)
 S VARSARR("DISPLAY GROUP")=$P($G(^ORD(101.98,VARSARR("DISPLAY GROUP IEN"),0)),U)
"RTN","HMPCORD1",276,0)
 D BLDORDLG(.ORDIALOG,HMPOIFN,DFN,RSPID,ORDTYPE)
"RTN","HMPCORD1",277,0)
 S DIEN=VARSARR("DISPLAY GROUP IEN")
"RTN","HMPCORD1",278,0)
 D FILLID^ORWDXC(.FILLER,DIEN)
"RTN","HMPCORD1",279,0)
 S VARSARR("FILLER ID")=FILLER
"RTN","HMPCORD1",280,0)
 I ORDTYPE="E" S DIEN=+$P($G(^OR(100,HMPOIFN,0)),U,5)
"RTN","HMPCORD1",281,0)
 I ORDTYPE="Q" S DIEN=HMPOIFN
"RTN","HMPCORD1",282,0)
 S DLGNAME=$P($G(^ORD(101.41,DIEN,0)),U)
"RTN","HMPCORD1",283,0)
 I DLGNAME="" D AE("INVALID DEFAULT DIALOG",.ERROR) S HMPOK=2 Q
"RTN","HMPCORD1",284,0)
 S VARSARR("DIALOG NAME")=DLGNAME
"RTN","HMPCORD1",285,0)
 D DLGDEF^ORWDX(.DLGDEF,DLGNAME)
"RTN","HMPCORD1",286,0)
 ;build order check array,build dialog structure and build save array
"RTN","HMPCORD1",287,0)
 D BLDARRS^HMPCORD2(.RESULT,.ORDIALOG,.VARSARR,DFN,LOC,.ORDERCHK,.SAVEARR,.HMPPOSS)
"RTN","HMPCORD1",288,0)
 Q
"RTN","HMPCORD1",289,0)
 ;
"RTN","HMPCORD1",290,0)
BLDORDLG(ORDIALOG,HMPOIFN,DFN,RSPID,ORDTYPE) ;
"RTN","HMPCORD1",291,0)
 N PROMPT
"RTN","HMPCORD1",292,0)
 I ORDTYPE="Q" D
"RTN","HMPCORD1",293,0)
 .D GETQDLG^ORCD(HMPOIFN)
"RTN","HMPCORD1",294,0)
 .S ORCAT=$S(+$G(^DPT(DFN,.1))>0:"I",1:"O"),PROMPT=$$PTR("SIG")
"RTN","HMPCORD1",295,0)
 .D SIG^ORCDPS2
"RTN","HMPCORD1",296,0)
 I '$D(ORDIALOG) D
"RTN","HMPCORD1",297,0)
 .S ORDIALOG=+$P($G(^OR(100,+HMPOIFN,0)),U,5)
"RTN","HMPCORD1",298,0)
 .D GETDLG1^ORCD(ORDIALOG)
"RTN","HMPCORD1",299,0)
 .D GETORDER^ORCD(+HMPOIFN)
"RTN","HMPCORD1",300,0)
 Q
"RTN","HMPCORD1",301,0)
 ;
"RTN","HMPCORD1",302,0)
 ;PEROC(.HMPOK,DFN,HMPOIFN,HMPPKG,ACTION)
"RTN","HMPCORD1",303,0)
PEROC(HMPOK,DFN,HMPOIFN,HMPPKG,ACTION,LOC,ORDERCHK,VARSARR,ORDIALOG,SAVEARR,HMPOARRY) ;
"RTN","HMPCORD1",304,0)
 N A,OCO,OCLIST,ORINFO,ORL,OCHKS,PATTYPE,HMPREN,HMPPOSS
"RTN","HMPCORD1",305,0)
 W !,HMPPKG
"RTN","HMPCORD1",306,0)
 W !,HMPOIFN
"RTN","HMPCORD1",307,0)
 S PATTYPE=$S(+$G(^DPT(DFN,.1))>0:"I",1:"O")
"RTN","HMPCORD1",308,0)
 D ON^ORWDXC(.OCO)
"RTN","HMPCORD1",309,0)
 D DISPLAY^ORWDXC(.OCLIST,DFN,HMPPKG) I $D(OCLIST) D INFO^HMPCORD2(.OCLIST)
"RTN","HMPCORD1",310,0)
 S HMPREN=0
"RTN","HMPCORD1",311,0)
 I ACTION="RENEW" D  I HMPOK>0 Q
"RTN","HMPCORD1",312,0)
 .D OXDATA^ORWDXR01(.ORINFO,HMPOIFN)
"RTN","HMPCORD1",313,0)
 .S A=$G(^OR(100,HMPOIFN,0)) I A="" D AE("Order missing from ORDERS file",.HMPVALUE) S HMPOK=2 Q
"RTN","HMPCORD1",314,0)
 .S ORPROV=+$P(A,"^",4),ORL=+$P(A,"^",10)
"RTN","HMPCORD1",315,0)
 .S HMPREN=1
"RTN","HMPCORD1",316,0)
 D ACCEPT^ORWDXC(.OCHKS,DFN,HMPPKG,PATTYPE,LOC,.ORDERCHK,HMPOIFN,HMPREN) I $D(OCHKS) D INFO^HMPCORD2(.OCHKS)
"RTN","HMPCORD1",317,0)
 Q
"RTN","HMPCORD1",318,0)
 ;
"RTN","HMPCORD1",319,0)
ORDERUID(HMPVALUE,INFO) ;
"RTN","HMPCORD1",320,0)
ENORDER ;
"RTN","HMPCORD1",321,0)
 N ACTION,CHKONLY,DFN,ERROR,ID,ISQO,LOC,NAME,ORDIALOG,ORPROV,PACTION,PATIENT,RESULT,SAVEARR,SNIPPET,TEMP,TYPE,UID,USER,HMPOARRY,HMPOK,HMPPOSS
"RTN","HMPCORD1",322,0)
 S UID=$G(INFO("uid")),DFN=""
"RTN","HMPCORD1",323,0)
 S ACTION=$G(INFO("action")),SNIPPET=$G(INFO("snippet")),ORPROV=$G(INFO("user")),PATIENT=$G(INFO("patient")),NAME=$G(INFO("name"))
"RTN","HMPCORD1",324,0)
 S LOC=$G(INFO("location")),CHKONLY=$G(INFO("orderChecksOnly")),ISQO=$G(INFO("isQO")),PACTION=$G(INFO("orderAction")),ID=$G(INFO("qoListId"))
"RTN","HMPCORD1",325,0)
 S ID=$G(INFO("qoId"))
"RTN","HMPCORD1",326,0)
 S TEMP=$S(PACTION="RENEW":"Order can be renew to new order.",PACTION="C":"Order cannot be renew it can be copy to a new order.",1:"")
"RTN","HMPCORD1",327,0)
 S HMPOK=0
"RTN","HMPCORD1",328,0)
 I PACTION'="" D  I HMPOK>0 G ORDERX
"RTN","HMPCORD1",329,0)
 .I $$VALIDUID(UID)=0  D AE("UID is not valid UID",.ERROR)
"RTN","HMPCORD1",330,0)
 .S DFN=$P(UID,":",5)
"RTN","HMPCORD1",331,0)
 .S ID=$P(UID,":",6)
"RTN","HMPCORD1",332,0)
 I DFN="" S DFN=PATIENT
"RTN","HMPCORD1",333,0)
 ;perform Inital Checks
"RTN","HMPCORD1",334,0)
 I PACTION'="" D PRECHK(.HMPOK,LOC,DFN,ID,ORPROV,ACTION,PACTION,.VARSARR,.SAVEARR,.HMPOARRY,.ERROR)
"RTN","HMPCORD1",335,0)
 I HMPOK>1,ACTION="RENEW" K ^TMP($J,"ORDER CHECKS") S INFO("action")="P",INFO("orderAction")="C",INFO("orderChecksOnly")="true" G ENORDER
"RTN","HMPCORD1",336,0)
 I HMPOK>1 G ORDERX
"RTN","HMPCORD1",337,0)
 I CHKONLY="true" S RESULT("resultText")=TEMP G ORDERX
"RTN","HMPCORD1",338,0)
 ;
"RTN","HMPCORD1",339,0)
 ;list Discontinue Reason List
"RTN","HMPCORD1",340,0)
 I ACTION="DL" D  G ORDERX
"RTN","HMPCORD1",341,0)
 .D DCLREAS(.RESULT,DFN,ID,ORPROV)
"RTN","HMPCORD1",342,0)
 ;Discontinue Order
"RTN","HMPCORD1",343,0)
 I ACTION="D" D  G ORDERX
"RTN","HMPCORD1",344,0)
 .S REAS=INFO("dcReason")
"RTN","HMPCORD1",345,0)
 .D DC(.RESULT,DFN,ID,ORPROV,LOC,.SNIPPET,NAME)
"RTN","HMPCORD1",346,0)
 ;Renew Order
"RTN","HMPCORD1",347,0)
 I ACTION="RENEW" D  G ORDERX
"RTN","HMPCORD1",348,0)
 .D RENEW(.RESULT,DFN,ID,ORPROV,CHKONLY,.SNIPPET,NAME,LOC)
"RTN","HMPCORD1",349,0)
 ;
"RTN","HMPCORD1",350,0)
 I ACTION="P" D  G ORDERX
"RTN","HMPCORD1",351,0)
 .N ORDIALOG
"RTN","HMPCORD1",352,0)
 .M ORDIALOG=HMPOARRY
"RTN","HMPCORD1",353,0)
 .S SAVEARR("ORCHECK")=0,SAVEARR("ORTS")=0
"RTN","HMPCORD1",354,0)
 .I PACTION="Q" D SAVE(.RESULT,DFN,ORPROV,LOC,VARSARR("DIALOG NAME"),VARSARR("DISPLAY GROUP IEN"),ID,0,.SAVEARR)
"RTN","HMPCORD1",355,0)
 .i PACTION="C" D SAVE(.RESULT,DFN,ORPROV,LOC,VARSARR("DIALOG NAME"),VARSARR("DISPLAY GROUP IEN"),0,ID,.SAVEARR)
"RTN","HMPCORD1",356,0)
 .I $L($G(RESULT("resultText")))>0 S RESULT("resultText")=TEMP_$C(13,10)_RESULT("resultText")
"RTN","HMPCORD1",357,0)
 ;
"RTN","HMPCORD1",358,0)
 I ACTION="QL" D  G ORDERX
"RTN","HMPCORD1",359,0)
 .D QOL(.RESULT,LOC,ORPROV,ID)
"RTN","HMPCORD1",360,0)
 ;
"RTN","HMPCORD1",361,0)
ORDERX ;
"RTN","HMPCORD1",362,0)
 I '$D(ERROR) D BLDJSON^HMPCORD2(.RESULT,.HMPOARRY,.HMPPOSS,.HMPVALUE,SNIPPET,UID)
"RTN","HMPCORD1",363,0)
 ;I $D(ERROR) M HMPVALUE=ERROR
"RTN","HMPCORD1",364,0)
 I $D(ERROR) D ENCODE^HMPJSON("ERROR","HMPVALUE","HMPERR")
"RTN","HMPCORD1",365,0)
 ;M ^XTMP("AGP INFO")=HMPVALUE
"RTN","HMPCORD1",366,0)
 Q
"RTN","HMPCORD1",367,0)
 ;
"RTN","HMPCORD2")
0^8^B67567632
"RTN","HMPCORD2",1,0)
HMPCORD2 ;;SLC/AGP - Process Order Request from AVIVA System ; 11/2/10 11:39am
"RTN","HMPCORD2",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPCORD2",3,0)
 ;
"RTN","HMPCORD2",4,0)
 ;The purpose of this API is to process a request to renew an
"RTN","HMPCORD2",5,0)
 ;Outpatient Prescription
"RTN","HMPCORD2",6,0)
 ;
"RTN","HMPCORD2",7,0)
 Q
"RTN","HMPCORD2",8,0)
 ;
"RTN","HMPCORD2",9,0)
 ;add possible values from the dialog to XML List return for each prompt
"RTN","HMPCORD2",10,0)
ADDPOSS(POSS,RESULT) ;
"RTN","HMPCORD2",11,0)
 N CNT,ISFIRST,NUM,LAST,PROMPT,TEMP
"RTN","HMPCORD2",12,0)
 ;S RESULT("possibleValues")=""
"RTN","HMPCORD2",13,0)
 M RESULT=POSS
"RTN","HMPCORD2",14,0)
 S ISFIRST=1,LAST="",PROMPT=""
"RTN","HMPCORD2",15,0)
 ;F  S PROMPT=$O(POSS(PROMPT)) Q:PROMPT=""  D
"RTN","HMPCORD2",16,0)
 ;.S TEMP=PROMPT_"s",LAST=PROMPT
"RTN","HMPCORD2",17,0)
 ;.S RESULT("possibleValues",TEMP)=""
"RTN","HMPCORD2",18,0)
 ;.S CNT="",NUM=0 F  S CNT=$O(POSS(PROMPT,CNT)) Q:CNT=""  
"RTN","HMPCORD2",19,0)
 ;..S RESULT("possibleValues",TEMP,NUM,"value")=POSS(PROMPT,CNT),NUM=NUM+1
"RTN","HMPCORD2",20,0)
 Q
"RTN","HMPCORD2",21,0)
 ;
"RTN","HMPCORD2",22,0)
ARRREAS(REAS,UID) ;
"RTN","HMPCORD2",23,0)
 I '$D(^XTMP("HMP SNIPPET",DFN,DT)) S ^XTMP("HMP SNIPPET",0)=""
"RTN","HMPCORD2",24,0)
 N CNT S CNT=$O(^XTMP("HMP SNIPPET",DFN,DT,""),-1)
"RTN","HMPCORD2",25,0)
 S CNT=CNT+1
"RTN","HMPCORD2",26,0)
 S ^XTMP("HMP SNIPPET",DFN,DT,CNT)=""
"RTN","HMPCORD2",27,0)
 S ^XTMP("HMP SNIPPET",DFN,DT,CNT,"text")=REAS
"RTN","HMPCORD2",28,0)
 I $G(UID)'="" S ^XTMP("HMP SNIPPET",DFN,DT,CNT,"uid")=UID
"RTN","HMPCORD2",29,0)
 Q
"RTN","HMPCORD2",30,0)
 ;
"RTN","HMPCORD2",31,0)
 ;initial API needed for order actions and QO
"RTN","HMPCORD2",32,0)
BEG(DFN,LOC,IEN,USER,VARSARR,BLDRES,HMPVALUE) ;
"RTN","HMPCORD2",33,0)
 N CNT,FLDS,HASKEY,TEXT,HMPLST
"RTN","HMPCORD2",34,0)
 D BLDVAR(DFN,LOC,DT,.VARSARR) I VARSARR("PATIENT")="" D AE^HMPCORD1("Invalid Patient",.HMPVALUE) Q 0
"RTN","HMPCORD2",35,0)
 D NPHASKEY^ORWU(.HASKEY,USER,"PROVIDER") I HASKEY=0 D AE^HMPCORD1("DOES NOT HOLD THE PROVIDER KEY",.HMPVALUE) Q 0
"RTN","HMPCORD2",36,0)
 S FLDS=DFN_U_LOC_U_USER_U_VARSARR("ISINP")_U_VARSARR("SEX")_U_VARSARR("AGE")_U_"0;C;0;0^0^^^"
"RTN","HMPCORD2",37,0)
 I $P($G(^ORD(101.41,IEN,0)),U,4)="O" D  Q 1
"RTN","HMPCORD2",38,0)
 .S BLDRES(0)="^^^O"
"RTN","HMPCORD2",39,0)
 .D LOADSET^ORWDXM(.HMPLST,IEN)
"RTN","HMPCORD2",40,0)
 .S CNT=0 F  S CNT=$O(HMPLST(CNT)) Q:CNT'>0  D
"RTN","HMPCORD2",41,0)
 ..S BLDRES(CNT)=HMPLST(CNT)
"RTN","HMPCORD2",42,0)
 D BLDQRSP^ORWDXM1(.BLDRES,IEN,FLDS,VARSARR("ISIMO"),LOC)
"RTN","HMPCORD2",43,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","HMPCORD2",44,0)
 I +BLDRES(0)=8 D AE^HMPCORD1(BLDRES(.5),.HMPVALUE) Q 0
"RTN","HMPCORD2",45,0)
 Q 1
"RTN","HMPCORD2",46,0)
 ;
"RTN","HMPCORD2",47,0)
 ;builds multiple arrays from the ORDIALOG array.
"RTN","HMPCORD2",48,0)
 ;builds XML return structure of the dialog,
"RTN","HMPCORD2",49,0)
 ;ORDERCHK array for order checks when placing an order
"RTN","HMPCORD2",50,0)
 ;SAVEARR array for saving an order for QO
"RTN","HMPCORD2",51,0)
BLDARRS(RESULT,ORDIALOG,VARSARR,DFN,LOC,ORDERCHK,SAVEARR,POSS) ;
"RTN","HMPCORD2",52,0)
 ;D ADD("<dialog>")
"RTN","HMPCORD2",53,0)
 N CNT,DEF,DRUG,EXT,FILLER,INC,IEN,INST,NODE,PROMPT,SCH,STR,TEMP,VALUE,X,ZERO
"RTN","HMPCORD2",54,0)
 D SCHALL^ORWDPS1(.SCH,DFN,LOC)
"RTN","HMPCORD2",55,0)
 S RESULT("name")=VARSARR("DIALOG NAME"),RESULT("displayGroup")=VARSARR("DISPLAY GROUP")
"RTN","HMPCORD2",56,0)
 S IEN=$$PTR("ORDERABLE ITEM")
"RTN","HMPCORD2",57,0)
 S OI=ORDIALOG(IEN,1),FILLER=VARSARR("FILLER ID")
"RTN","HMPCORD2",58,0)
 D LOADPOSS(DFN,LOC,OI,FILLER,.VARSARR,.POSS)
"RTN","HMPCORD2",59,0)
 S CNT=0,IEN=0,INC=0 F  S IEN=$O(ORDIALOG(IEN)) Q:IEN'>0  D
"RTN","HMPCORD2",60,0)
 .S NODE=$G(ORDIALOG(IEN)),ZERO=ORDIALOG(IEN,0)
"RTN","HMPCORD2",61,0)
 .S PROMPT=$P(NODE,U,2),CNT=CNT+1,INC=INC+1
"RTN","HMPCORD2",62,0)
 .S RESULT("structure",INC,"name")=PROMPT,RESULT("structure",INC,"id")=$P(NODE,U)
"RTN","HMPCORD2",63,0)
 .S TEMP=$S(PROMPT="DOSE":"ALLDOSES",PROMPT="DRUG":"DISPENSE",1:PROMPT)
"RTN","HMPCORD2",64,0)
 .;I $D(POSS(TEMP)) D ADDPOSS(TEMP,.POSS)
"RTN","HMPCORD2",65,0)
 .I $P(ZERO,U)="S" D LOADPOSC(PROMPT,$P(ZERO,U,2),.POSS)
"RTN","HMPCORD2",66,0)
 .;D ADD("<instances>")
"RTN","HMPCORD2",67,0)
 .S X=$O(ORDIALOG(IEN,99),-1)
"RTN","HMPCORD2",68,0)
 .;I X=0 D  Q
"RTN","HMPCORD2",69,0)
 .;.S VALUE=$O(POSS(PROMPT,"DEFAULT","")) I VALUE="" D  Q
"RTN","HMPCORD2",70,0)
 .;..D ADD("</instances>")
"RTN","HMPCORD2",71,0)
 .;..D ADD("</prompt>")
"RTN","HMPCORD2",72,0)
 .;.D ADD("<default value='"_$$ESC^HMPD(VALUE)_"'/>")
"RTN","HMPCORD2",73,0)
 .;.D ADD("</instances>")
"RTN","HMPCORD2",74,0)
 .;.D ADD("</prompt>")
"RTN","HMPCORD2",75,0)
 .F INST=1:1:X D
"RTN","HMPCORD2",76,0)
 ..S VALUE=ORDIALOG(IEN,INST)
"RTN","HMPCORD2",77,0)
 ..I VALUE["^TMP(" D  Q
"RTN","HMPCORD2",78,0)
 ... I $G(@VALUE@(1,0))="" Q
"RTN","HMPCORD2",79,0)
 ...S SAVEARR(IEN,INST)="ORDIALOG(""WP"","_IEN_",1)"
"RTN","HMPCORD2",80,0)
 ...S SAVEARR("WP",IEN,INST,1,0)=@VALUE@(1,0)
"RTN","HMPCORD2",81,0)
 ..S SAVEARR(IEN,INST)=VALUE
"RTN","HMPCORD2",82,0)
 ..S EXT=$$EXT^ORCD(IEN,INST)
"RTN","HMPCORD2",83,0)
 ..S ORDERCHK(CNT)=FILLER_U_PROMPT_U_VALUE_U_EXT,CNT=CNT+1
"RTN","HMPCORD2",84,0)
 ..S RESULT("structure",INC,"instance",INST,"number")=INST
"RTN","HMPCORD2",85,0)
 ..S RESULT("structure",INC,"instance",INST,"value")=VALUE
"RTN","HMPCORD2",86,0)
 ..S RESULT("structure",INC,"instance",INST,"external")=EXT
"RTN","HMPCORD2",87,0)
 ..I PROMPT="ORDERABLE" S OI=VALUE
"RTN","HMPCORD2",88,0)
 ..W !,PROMPT_" "_$G(VALUE)
"RTN","HMPCORD2",89,0)
 ..I PROMPT="DRUG" S DRUG=$G(VALUE)
"RTN","HMPCORD2",90,0)
 W !,FILLER
"RTN","HMPCORD2",91,0)
 S ORDERCHK(1)=OI_U_FILLER_U_$S(FILLER["PS":$G(DRUG),1:"")
"RTN","HMPCORD2",92,0)
 Q
"RTN","HMPCORD2",93,0)
 ;
"RTN","HMPCORD2",94,0)
 ;build patient demographic variables
"RTN","HMPCORD2",95,0)
BLDVAR(DFN,LOC,DATE,OUTPUT) ;
"RTN","HMPCORD2",96,0)
 N IMO,TEMP
"RTN","HMPCORD2",97,0)
 I $L(DFN)'>0 S OUTPUT("PATIENT")="" Q
"RTN","HMPCORD2",98,0)
 S TEMP=$G(^DPT(DFN,0))
"RTN","HMPCORD2",99,0)
 I TEMP="" S OUTPUT("PATIENT")="" Q
"RTN","HMPCORD2",100,0)
 S OUTPUT("PATIENT")=$P(TEMP,U,1)
"RTN","HMPCORD2",101,0)
 S OUTPUT("SEX")=$P(TEMP,U,2)
"RTN","HMPCORD2",102,0)
 S OUTPUT("DOB")=$P(TEMP,U,3)
"RTN","HMPCORD2",103,0)
 S OUTPUT("SSN")=$P(TEMP,U,9)
"RTN","HMPCORD2",104,0)
 S OUTPUT("DOD")=$P($G(^DPT(DFN,.35)),U,1)
"RTN","HMPCORD2",105,0)
 I OUTPUT("DOD")>DATE S OUTPUT("DOD")=""
"RTN","HMPCORD2",106,0)
 S OUTPUT("DFN")=DFN
"RTN","HMPCORD2",107,0)
 S OUTPUT("AGE")=$$AGE^PXRMAGE(OUTPUT("DOB"),OUTPUT("DOD"),DATE)
"RTN","HMPCORD2",108,0)
 S OUTPUT("ISINP")=$S(+$G(^DPT(DFN,.1))>0:1,1:0)
"RTN","HMPCORD2",109,0)
 D IMOLOC^ORIMO(.IMO,LOC,DFN)
"RTN","HMPCORD2",110,0)
 S OUTPUT("ISIMO")=$S(IMO>0:1,1:0)
"RTN","HMPCORD2",111,0)
 Q
"RTN","HMPCORD2",112,0)
 ;
"RTN","HMPCORD2",113,0)
BLDJSON(RESULT,ORDARR,HMPPOSS,HMPVALUE,REAS,UID,DATA) ;
"RTN","HMPCORD2",114,0)
 N CNT,ERROR,STR,TEMP,TEXT
"RTN","HMPCORD2",115,0)
 S RESULT("success")="true"
"RTN","HMPCORD2",116,0)
 I REAS'="",UID'="" D ARRREAS(REAS,UID)
"RTN","HMPCORD2",117,0)
 I $D(HMPPOSS) D ADDPOSS(.HMPPOSS)
"RTN","HMPCORD2",118,0)
 I $D(ORDARR) D
"RTN","HMPCORD2",119,0)
 .S RESULT("ordered placed")="true"
"RTN","HMPCORD2",120,0)
 .S CNT=0 F  S CNT=$O(ORDARR(CNT)) Q:CNT'>0  D
"RTN","HMPCORD2",121,0)
 ..S TEMP=ORDARR(CNT),STR=""
"RTN","HMPCORD2",122,0)
 ..I $E(TEMP)="t" S STR=$E(TEMP,2,$L(TEMP))
"RTN","HMPCORD2",123,0)
 ..I STR'="" S RESULT("text")=$G(RESULT("text"))_STR_$C(13,10)
"RTN","HMPCORD2",124,0)
 I $D(^TMP($J,"ORDER CHECKS")) D
"RTN","HMPCORD2",125,0)
 .S CNT=0 F  S CNT=$O(^TMP($J,"ORDER CHECKS",CNT)) Q:CNT'>0  D
"RTN","HMPCORD2",126,0)
 ..S RESULT("orderChecks")=$G(RESULT("orderChecks"))_^TMP($J,"ORDER CHECKS",CNT)_$C(13,10)
"RTN","HMPCORD2",127,0)
 I $D(DATA) M RESULT("data")=DATA
"RTN","HMPCORD2",128,0)
 D ENCODE^HMPJSON("RESULT","HMPVALUE","HMPERR")
"RTN","HMPCORD2",129,0)
 I $D(HMPERR) D
"RTN","HMPCORD2",130,0)
 .K HMPVALUE S TEXT(1)="Problem encoding save order array. Check CPRS to see if the order was saved."
"RTN","HMPCORD2",131,0)
 .D SETERROR^HMPUTILS(.ERROR,.HMPERR,.TEXT,.DATA)
"RTN","HMPCORD2",132,0)
 .D ENCODE^HMPJSON("ERROR","HMPVALUE","HMPERR")
"RTN","HMPCORD2",133,0)
 Q
"RTN","HMPCORD2",134,0)
 ;
"RTN","HMPCORD2",135,0)
CHANGE(ORDIEN,DFN,LOC,USER,ERRARR) ;
"RTN","HMPCORD2",136,0)
 N TEXT,VALUE
"RTN","HMPCORD2",137,0)
 D VALID^ORWDXA(.VALUE,ORDIEN,"XX",USER) I VALUE'="" D AE^HMPCORD1(VALUE,.HMPVALUE) Q 0
"RTN","HMPCORD2",138,0)
 D OFCPLX^ORWDXA(.VALUE,ORDIEN) I VALUE'="" D AE^HMPCORD1("CANNOT CHANGE A COMPLEX ORDER",.HMPVALUE) Q 0
"RTN","HMPCORD2",139,0)
 Q 1
"RTN","HMPCORD2",140,0)
 ;
"RTN","HMPCORD2",141,0)
INFO(OCHKS) ;
"RTN","HMPCORD2",142,0)
 N INC,CNT,NUM,NODE,TEMP,HMPORCK
"RTN","HMPCORD2",143,0)
 S NUM=0,CNT=+$O(^TMP($J,"ORDER CHECKS",""),-1)
"RTN","HMPCORD2",144,0)
 F  S NUM=$O(OCHKS(NUM)) Q:NUM'>0  D
"RTN","HMPCORD2",145,0)
 .S NODE=$P(OCHKS(NUM),U,4)
"RTN","HMPCORD2",146,0)
 .I NODE="" S NODE=OCHKS(NUM)
"RTN","HMPCORD2",147,0)
 .S TEMP=""
"RTN","HMPCORD2",148,0)
 .I NODE["||",NODE["&" D
"RTN","HMPCORD2",149,0)
 ..S TEMP=$P(NODE,"&")
"RTN","HMPCORD2",150,0)
 ..S NODE=$P(NODE,"&",2)
"RTN","HMPCORD2",151,0)
 .S CNT=CNT+1
"RTN","HMPCORD2",152,0)
 .S ^TMP($J,"ORDER CHECKS",CNT)=NODE
"RTN","HMPCORD2",153,0)
 .I TEMP'="" D
"RTN","HMPCORD2",154,0)
 ..D GETXTRA^ORCHECK(.HMPORCK,$P(TEMP,"||",2),NODE)
"RTN","HMPCORD2",155,0)
 ..S INC=0 F  S INC=$O(HMPORCK(INC)) Q:INC'>0  D
"RTN","HMPCORD2",156,0)
 ...S CNT=CNT+1
"RTN","HMPCORD2",157,0)
 ...S ^TMP($J,"ORDER CHECKS",CNT)=HMPORCK(INC)
"RTN","HMPCORD2",158,0)
 Q
"RTN","HMPCORD2",159,0)
 ;
"RTN","HMPCORD2",160,0)
KILLALRT(DFN,TYPE) ;
"RTN","HMPCORD2",161,0)
 N HMPOUT
"RTN","HMPCORD2",162,0)
 D KILUNSNO^ORWORB(.HMPOUT,DFN) K HMPOUT
"RTN","HMPCORD2",163,0)
 I TYPE["PS" D
"RTN","HMPCORD2",164,0)
 . D KILEXMED^ORWORB(.HMPOUT,DFN) K HMPOUT
"RTN","HMPCORD2",165,0)
 . D KILUNVMD^ORWORB(.HMPOUT,DFN) K HMPOUT
"RTN","HMPCORD2",166,0)
 D KILUNVOR^ORWORB(.HMPOUT,DFN) K HMPOUT
"RTN","HMPCORD2",167,0)
 Q
"RTN","HMPCORD2",168,0)
 ;build a list of possible selection items for a prompt
"RTN","HMPCORD2",169,0)
LOADPOSS(DFN,LOC,OI,FILLER,VARSARR,POSS) ;
"RTN","HMPCORD2",170,0)
 N CNT,DGIEN,ID,NUM,PROMPT,STR,TYPE,HMPPOSS
"RTN","HMPCORD2",171,0)
 S TYPE=$S(FILLER="PSO":"O",1:"I")
"RTN","HMPCORD2",172,0)
 S NUM=0
"RTN","HMPCORD2",173,0)
 S DGIEN=VARSARR("DISPLAY GROUP IEN")
"RTN","HMPCORD2",174,0)
 I FILLER["PS" D OISLCT^ORWDPS2(.HMPPOSS,OI,TYPE,DFN,"Y","N")
"RTN","HMPCORD2",175,0)
 I FILLER["LR" D DEF^ORWDLR32(.HMPPOSS,LOC,"")
"RTN","HMPCORD2",176,0)
 I FILLER["RA" D DEF^ORWDRA32(.HMPPOSS,DFN,"",DGIEN)
"RTN","HMPCORD2",177,0)
 S CNT=0
"RTN","HMPCORD2",178,0)
 F  S CNT=$O(HMPPOSS(CNT)) Q:CNT'>0  D
"RTN","HMPCORD2",179,0)
 .S NODE=HMPPOSS(CNT)
"RTN","HMPCORD2",180,0)
 .S TEMP=$E($G(NODE),2,$L(NODE))
"RTN","HMPCORD2",181,0)
 .I $E(NODE)="~" D  Q
"RTN","HMPCORD2",182,0)
 ..S NUM=0,PROMPT=$$LOW^XLFSTR(TEMP)
"RTN","HMPCORD2",183,0)
 ..S PROMPT=$TR(PROMPT," ","_")
"RTN","HMPCORD2",184,0)
 ..S POSS(PROMPT)=""
"RTN","HMPCORD2",185,0)
 ..S NUM=0
"RTN","HMPCORD2",186,0)
 .I PROMPT="alldoses"!(PROMPT="route") D  Q
"RTN","HMPCORD2",187,0)
 ..S ID=TEMP
"RTN","HMPCORD2",188,0)
 ..S TEMP=$S(PROMPT="alldoses":$P(TEMP,U),PROMPT="route":$P(TEMP,U,2),1:TEMP)
"RTN","HMPCORD2",189,0)
 ..S POSS($$LOW^XLFSTR(PROMPT),NUM,"value")=TEMP
"RTN","HMPCORD2",190,0)
 ..S POSS($$LOW^XLFSTR(PROMPT),NUM,"id")=ID
"RTN","HMPCORD2",191,0)
 ..S POSS($$LOW^XLFSTR(PROMPT),NUM,"default")=$S($E(NODE)="d":"true",1:"false")
"RTN","HMPCORD2",192,0)
 ..S NUM=NUM+1
"RTN","HMPCORD2",193,0)
 .S POSS($$LOW^XLFSTR(PROMPT),NUM,"value")=TEMP
"RTN","HMPCORD2",194,0)
 .;S POSS($$LOW^XLFSTR(PROMPT),NUM,"id")=ID
"RTN","HMPCORD2",195,0)
 .S POSS($$LOW^XLFSTR(PROMPT),NUM,"default")=$S($E(NODE)="d":"true",1:"false")
"RTN","HMPCORD2",196,0)
 .S NUM=NUM+1
"RTN","HMPCORD2",197,0)
 ;build list of possible schedules
"RTN","HMPCORD2",198,0)
 I FILLER["PS" D
"RTN","HMPCORD2",199,0)
 .D SCHALL^ORWDPS1(.SCH,DFN,LOC)
"RTN","HMPCORD2",200,0)
 .S NUM=0
"RTN","HMPCORD2",201,0)
 .S CNT=0 F  S CNT=$O(SCH(CNT)) Q:CNT'>0  D
"RTN","HMPCORD2",202,0)
 ..S TEMP=SCH(CNT)
"RTN","HMPCORD2",203,0)
 ..S POSS("schedule",NUM,"value")=$P(TEMP,U)
"RTN","HMPCORD2",204,0)
 ..S POSS("schedule",NUM,"external")=$P(TEMP,U,2)
"RTN","HMPCORD2",205,0)
 ..S POSS("schedule",NUM,"type")=$P(TEMP,U,3)
"RTN","HMPCORD2",206,0)
 ..S POSS("schedule",NUM,"admin")=$P(TEMP,U,4)
"RTN","HMPCORD2",207,0)
 ..S NUM=NUM+1
"RTN","HMPCORD2",208,0)
 Q
"RTN","HMPCORD2",209,0)
 ;
"RTN","HMPCORD2",210,0)
 ;;add possible code values from the dialog to XML return for each prompt
"RTN","HMPCORD2",211,0)
LOADPOSC(PROMPT,CODES,POSS) ;
"RTN","HMPCORD2",212,0)
 N CNT,STR,NUM,TEMP
"RTN","HMPCORD2",213,0)
 S TEMP=$$LOW^XLFSTR(PROMPT),POSS(TEMP)="",NUM=0,CNT=0
"RTN","HMPCORD2",214,0)
 F X=1:1:$L(CODES) I $E(CODES,X)=";" D
"RTN","HMPCORD2",215,0)
 .S CNT=CNT+1,STR=$P(CODES,";",CNT) Q:STR=""
"RTN","HMPCORD2",216,0)
 .S POSS(TEMP,NUM,"value")=$P(STR,":",2),POSS(TEMP,NUM,"id")=$P(STR,":"),NUM=NUM+1
"RTN","HMPCORD2",217,0)
 Q
"RTN","HMPCORD2",218,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","HMPCORD2",219,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","HMPCORD2",220,0)
 ;
"RTN","HMPCORD2",221,0)
UNSIGNED(UIFN) ;queue unsigned order alert
"RTN","HMPCORD2",222,0)
 N ORVP,ORIFN,ORNP,A
"RTN","HMPCORD2",223,0)
 Q:$G(UIFN)=""  S A=$G(^OR(100,UIFN,0)),ORVP=$P(A,"^",2),ORNP=$P(A,"^",4),ORIFN=UIFN_";1"
"RTN","HMPCORD2",224,0)
 D NOTIF^ORCSIGN
"RTN","HMPCORD2",225,0)
 Q
"RTN","HMPCORD3")
0^9^B150904126
"RTN","HMPCORD3",1,0)
HMPCORD3 ;;SLC/AGP - Process Order Request from AVIVA System ; 1/4/13
"RTN","HMPCORD3",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPCORD3",3,0)
 ;
"RTN","HMPCORD3",4,0)
 ;
"RTN","HMPCORD3",5,0)
 Q
"RTN","HMPCORD3",6,0)
 ;
"RTN","HMPCORD3",7,0)
BLDDIAL(ORDIALOG,DG,DIAL) ;
"RTN","HMPCORD3",8,0)
 D GETDLG^ORCD(DIAL)
"RTN","HMPCORD3",9,0)
 Q
"RTN","HMPCORD3",10,0)
 ;
"RTN","HMPCORD3",11,0)
BLDROUTE(HMPROUTE) ;
"RTN","HMPCORD3",12,0)
 N IEN,NODE
"RTN","HMPCORD3",13,0)
 S IEN=0 F  S IEN=$O(^PS(51.2,IEN)) Q:IEN'>0  D
"RTN","HMPCORD3",14,0)
 .;I $L($G(^PS(51.2,IEN,1)))'="" Q
"RTN","HMPCORD3",15,0)
 .S NODE=$G(^PS(51.2,IEN,0))
"RTN","HMPCORD3",16,0)
 .S HMPROUTE($P(NODE,U))=IEN_U_$S($P(NODE,U)'="":$P(NODE,U),1:$P(NODE,U))
"RTN","HMPCORD3",17,0)
 .I $P(NODE,U,2)'="" S HMPROUTE($P(NODE,U,2))=IEN
"RTN","HMPCORD3",18,0)
 .I $P(NODE,U,3)'="" S HMPROUTE($P(NODE,U,3))=IEN
"RTN","HMPCORD3",19,0)
 Q
"RTN","HMPCORD3",20,0)
 ;
"RTN","HMPCORD3",21,0)
BLDVALS(IN,OUT,ERROR) ;
"RTN","HMPCORD3",22,0)
 N NUM,LAST,SPACES,STR,X
"RTN","HMPCORD3",23,0)
 S LAST=""
"RTN","HMPCORD3",24,0)
 S NUM=$L(IN,";")
"RTN","HMPCORD3",25,0)
 F X=1:1:NUM D
"RTN","HMPCORD3",26,0)
 .;W !,X_" "_$P(IN,":",X)
"RTN","HMPCORD3",27,0)
 .S STR=$P(IN,";",X)
"RTN","HMPCORD3",28,0)
 .I X=1 S OUT(STR)="" S LAST=STR Q
"RTN","HMPCORD3",29,0)
 .I X=NUM S OUT(LAST)=STR Q
"RTN","HMPCORD3",30,0)
 .S SPACES=$L(STR," ")
"RTN","HMPCORD3",31,0)
 .I LAST'="" S OUT(LAST)=$P(STR," ",1,SPACES-1)
"RTN","HMPCORD3",32,0)
 .S LAST=$P(STR," ",SPACES)
"RTN","HMPCORD3",33,0)
 Q
"RTN","HMPCORD3",34,0)
 ;
"RTN","HMPCORD3",35,0)
GETOCPKG(HMPTYPE) ;
"RTN","HMPCORD3",36,0)
 N RESULT
"RTN","HMPCORD3",37,0)
 S RESULT=$S(HMPTYPE="UD RX":"PSI",HMPTYPE="O RX":"PSO",HMPTYPE="NV RX":"PSH",1:HMPTYPE)
"RTN","HMPCORD3",38,0)
 Q RESULT
"RTN","HMPCORD3",39,0)
 ;
"RTN","HMPCORD3",40,0)
GETSET(TYPE) ;
"RTN","HMPCORD3",41,0)
 S RESULT=$S(TYPE="INPATIENT MEDS":"UD RX",TYPE="OUTPATIENT MEDS":"O RX",TYPE="MEDICATIONS":"RX",TYPE="NON-VA MEDS":"NV RX",1:TYPE)
"RTN","HMPCORD3",42,0)
 Q RESULT
"RTN","HMPCORD3",43,0)
 ;
"RTN","HMPCORD3",44,0)
EN(HMPVALUE,PARAMS) ;
"RTN","HMPCORD3",45,0)
 N DG,DIAL,DLGNAME,ERROR,FAIL,ISIMO,LOC,OIIEN,ORDERSTR,ORDIALOG,PAT,PARDG,TEMPTYPE,HMPCHECK,HMPOREST,HMPTEMP,HMPTYPE,TYPE,VALUES
"RTN","HMPCORD3",46,0)
 K ^TMP("HMPWORD",$J),^TMP("HMPSIG",$J),^TMP($J,"ORDER CHECKS")
"RTN","HMPCORD3",47,0)
 S ORDERSTR=$$UP^XLFSTR($G(PARAMS("orderString"))) I $G(ORDERSTR)="" D AE^HMPCORD1("No order string found",.ERROR) G ENX
"RTN","HMPCORD3",48,0)
 S TYPE=$$UP^XLFSTR($G(PARAMS("type"))) I TYPE="" D AE^HMPCORD1("No order type found",.HMPVALUE) G ENX
"RTN","HMPCORD3",49,0)
 S PAT=$G(PARAMS("patient")),LOC=$G(PARAMS("location")),USER=1089
"RTN","HMPCORD3",50,0)
 ;
"RTN","HMPCORD3",51,0)
 D IMOLOC^ORIMO(.HMPTEMP,LOC,PAT) S ISIMO=HMPTEMP
"RTN","HMPCORD3",52,0)
 ;builds order order values array this code needs to be enhanced somehow
"RTN","HMPCORD3",53,0)
 D BLDVALS(ORDERSTR,.VALUES,.ERROR) I $D(ERROR) G ENX
"RTN","HMPCORD3",54,0)
 S VALUES("LOCATION")=LOC
"RTN","HMPCORD3",55,0)
 I $D(PARAMS("COMMENTS")) M VALUES("COMMENTS")=PARAMS("COMMENTS")
"RTN","HMPCORD3",56,0)
 I $D(VALUES("QO")) D QO(.ERROR,.VALUES,LOC,PAT,ISIMO,.ORD) G ENX
"RTN","HMPCORD3",57,0)
 S HMPTYPE=$$GETSET(TYPE) I HMPTYPE="" D AE^HMPCORD1("Cannot find order package.",.ERROR) G ENX
"RTN","HMPCORD3",58,0)
 S DG=$O(^ORD(100.98,"B",HMPTYPE,"")) I DG="" D AE^HMPCORD1("Cannot find display group.",.ERROR) G ENX
"RTN","HMPCORD3",59,0)
 S TEMPTYPE="" I HMPTYPE=TYPE S TEMPTYPE=$P(^ORD(100.98,DG,0),U,3)
"RTN","HMPCORD3",60,0)
 S OIIEN=+$$VALIDOI(.VALUES,$S(TEMPTYPE'="":TEMPTYPE,1:HMPTYPE)) I OIIEN<1 D AE^HMPCORD1("Cannot find valid OI",.ERROR) G ENX
"RTN","HMPCORD3",61,0)
 S VALUES("ORDERABLE ITEM")=OIIEN_U_VALUES("OI")
"RTN","HMPCORD3",62,0)
 ;
"RTN","HMPCORD3",63,0)
 ;get display group info and dialog information
"RTN","HMPCORD3",64,0)
 S FAIL=0,DIAL=+$P($G(^ORD(100.98,DG,0)),U,4) I DIAL<1 D  I FAIL=1 D AE^HMPCORD1("Cannot find dialog.",.ERROR) G ENX
"RTN","HMPCORD3",65,0)
 .S PARDG=$O(^ORD(100.98,"AD",DG,"")) I PARDG'>0 S FAIL=1 Q
"RTN","HMPCORD3",66,0)
 .S DIAL=+$P($G(^ORD(100.98,PARDG,0)),U,4) I DIAL<1 S FAIL=1
"RTN","HMPCORD3",67,0)
 S DLGNAME=$P($G(^ORD(101.41,DIAL,0)),U)
"RTN","HMPCORD3",68,0)
 ;
"RTN","HMPCORD3",69,0)
 ;get package information
"RTN","HMPCORD3",70,0)
 S PKGID=$P(^ORD(101.41,DIAL,0),U,7) I PKGID<0 D AE^HMPCORD1("Cannot find package",.ERROR) G ENX
"RTN","HMPCORD3",71,0)
 S PKGNAME=$P(^DIC(9.4,PKGID,0),U,2) I PKGNAME="" D AE^HMPCORD1("Cannot find package name",.ERROR) G ENX
"RTN","HMPCORD3",72,0)
 ;
"RTN","HMPCORD3",73,0)
 ;create ORDIALOG array
"RTN","HMPCORD3",74,0)
 D BLDDIAL(.ORDIALOG,DG,DIAL) I '$D(ORDIALOG) D AE^HMPCORD1("Could not build ORDIALOG array",.ERROR) G ENX
"RTN","HMPCORD3",75,0)
 ;populate ORDIALOG array with values
"RTN","HMPCORD3",76,0)
 I $$POPDIAL(.ERROR,.ORDIALOG,.HMPCHECK,.VALUES,HMPTYPE,OIIEN,PAT,LOC)<1 G ENX
"RTN","HMPCORD3",77,0)
 ;
"RTN","HMPCORD3",78,0)
 D PERCHCKS(.ERROR,.ORDIALOG,.HMPCHECK,PAT,LOC,USER,DIAL,DLGNAME,DG,PKGID,PKGNAME,OIIEN,"N") I $D(ERROR) G ENX
"RTN","HMPCORD3",79,0)
 ;
"RTN","HMPCORD3",80,0)
 D SAVE(.HMPOREST,PAT,USER,LOC,DLGNAME,DG,OIIEN,0,.ORDIALOG,.ORD)
"RTN","HMPCORD3",81,0)
 ;
"RTN","HMPCORD3",82,0)
ENX ;
"RTN","HMPCORD3",83,0)
 I $D(ERROR) D ENCODE^HMPJSON("ERROR","HMPVALUE","HMPERR") Q
"RTN","HMPCORD3",84,0)
 ;I $D(ERROR) M HMPVALUE=ERROR Q
"RTN","HMPCORD3",85,0)
 D BLDJSON^HMPCORD2("",.HMPOREST,"",.HMPVALUE,"","",.ORD)
"RTN","HMPCORD3",86,0)
 Q
"RTN","HMPCORD3",87,0)
 ;
"RTN","HMPCORD3",88,0)
ORDRCHKS(PAT,HMPOIFN,HMPPKG,LOC,ORDIALOG,HMPCHECK) ;
"RTN","HMPCORD3",89,0)
 N A,OCO,OCLIST,ORINFO,ORL,OCHKS,PATTYPE,HMPREN,HMPPOSS
"RTN","HMPCORD3",90,0)
 S PATTYPE=$S(+$G(^DPT(PAT,.1))>0:"I",1:"O")
"RTN","HMPCORD3",91,0)
 D ON^ORWDXC(.OCO)
"RTN","HMPCORD3",92,0)
 D DISPLAY^ORWDXC(.OCLIST,PAT,HMPPKG) I $D(OCLIST) D INFO^HMPCORD2(.OCLIST)
"RTN","HMPCORD3",93,0)
 D ACCEPT^ORWDXC(.OCHKS,PAT,HMPPKG,PATTYPE,LOC,.HMPCHECK,HMPOIFN,0) I $D(OCHKS) D INFO^HMPCORD2(.OCHKS)
"RTN","HMPCORD3",94,0)
 Q
"RTN","HMPCORD3",95,0)
 ;
"RTN","HMPCORD3",96,0)
PERCHCKS(ERROR,ORDIALOG,HMPCHECK,PAT,LOC,USER,DIAL,DLGNAME,DG,PKGID,PKGNAME,OIIEN,ORTYPE) ;
"RTN","HMPCORD3",97,0)
 D NPHASKEY^ORWU(.HASKEY,USER,"PROVIDER") I HASKEY=0 D AE^HMPCORD1("DOES NOT HOLD THE PROVIDER KEY",.ERROR) Q
"RTN","HMPCORD3",98,0)
 D ALLWORD^ORALWORD(.HMPOK,USER,OIIEN,ORTYPE,USER) I $G(HMPOK)>0 D AEM^HMPCORD1(.HMPOK,.ERROR) Q
"RTN","HMPCORD3",99,0)
 D ORDRCHKS(PAT,OIIEN,PKGNAME,LOC,.ORDIALOG,.HMPCHECK)
"RTN","HMPCORD3",100,0)
 Q
"RTN","HMPCORD3",101,0)
 ;
"RTN","HMPCORD3",102,0)
POPDIAL(ERROR,ORDIALOG,HMPCHECK,VALUES,HMPTYPE,OIIEN,PAT,LOC) ;
"RTN","HMPCORD3",103,0)
 N CNT,NAME,NODE,NUM,OCPKG,PTR,RESULT,TEMP,WP
"RTN","HMPCORD3",104,0)
 S RESULT=0
"RTN","HMPCORD3",105,0)
 I HMPTYPE["RX" S RESULT=$$PS(.ERROR,.ORDIALOG,.VALUES,HMPTYPE,OIIEN,PAT,LOC) I RESULT=0 Q 0
"RTN","HMPCORD3",106,0)
 S RESULT=$$ORDDIAL(.ERROR,.ORDIALOG,.VALUES,HMPTYPE,OIIEN,PAT,LOC) I RESULT=0 Q 0
"RTN","HMPCORD3",107,0)
 ;
"RTN","HMPCORD3",108,0)
 S NAME="" F  S NAME=$O(VALUES(NAME)) Q:NAME=""  D
"RTN","HMPCORD3",109,0)
 .S PTR=+$$PTR(NAME) I PTR=0 Q
"RTN","HMPCORD3",110,0)
 .I '$D(ORDIALOG(PTR)) Q
"RTN","HMPCORD3",111,0)
 .S ORDIALOG(PTR,1)=$P(VALUES(NAME),U)
"RTN","HMPCORD3",112,0)
 .I NAME="SIG"!(NAME="WORD PROCESSING 1") S ORDIALOG(PTR,1)=VALUES(NAME)
"RTN","HMPCORD3",113,0)
 .S TEMP(PTR)=VALUES(NAME)
"RTN","HMPCORD3",114,0)
 ;
"RTN","HMPCORD3",115,0)
 D POPOC(.ERROR,.ORDIALOG,.TEMP,.HMPCHECK,HMPTYPE,OIIEN)
"RTN","HMPCORD3",116,0)
 Q RESULT
"RTN","HMPCORD3",117,0)
 ;
"RTN","HMPCORD3",118,0)
POPOC(ERROR,ORDIALOG,TEMP,HMPCHECK,HMPTYPE,OIIEN) ;
"RTN","HMPCORD3",119,0)
 N CNT,NAME,NODE,NUM,OCPKG,PTR,WP
"RTN","HMPCORD3",120,0)
 S OCPKG=$$GETOCPKG($G(HMPTYPE)) I OCPKG="" Q
"RTN","HMPCORD3",121,0)
 S CNT=1 S HMPCHECK(CNT)=OIIEN_U_OCPKG_U
"RTN","HMPCORD3",122,0)
 S PTR=0 F  S PTR=$O(ORDIALOG(PTR)) Q:PTR'>0  D
"RTN","HMPCORD3",123,0)
 .S NAME=$P(ORDIALOG(PTR),U,2) I NAME="COMMENT" Q
"RTN","HMPCORD3",124,0)
 .S CNT=CNT+1
"RTN","HMPCORD3",125,0)
 .S NUM=0 F  S NUM=$O(ORDIALOG(PTR,NUM)) Q:+NUM'>0  D
"RTN","HMPCORD3",126,0)
 ..S NODE=OCPKG_U_NAME_U_TEMP(PTR)
"RTN","HMPCORD3",127,0)
 ..I NAME="DRUG" S $P(HMPCHECK(1),U,3)=TEMP(PTR)
"RTN","HMPCORD3",128,0)
 ..I NAME="SIG" D
"RTN","HMPCORD3",129,0)
 ...S WP=TEMP(PTR)
"RTN","HMPCORD3",130,0)
 ...I '$D(@WP@(1,0)) Q
"RTN","HMPCORD3",131,0)
 ...S NODE=OCPKG_U_NAME_U_1_U_U_"WP"_U_U_@WP@(1,0)
"RTN","HMPCORD3",132,0)
 ..S HMPCHECK(CNT)=NODE
"RTN","HMPCORD3",133,0)
 ;
"RTN","HMPCORD3",134,0)
 Q RESULT
"RTN","HMPCORD3",135,0)
 ;
"RTN","HMPCORD3",136,0)
ORDDIAL(ERROR,ORDIALOG,VALUES,HMPTYPE,OIIEN,PAT,LOC) ;
"RTN","HMPCORD3",137,0)
 I $D(VALUES("STARTDATE")) S VALUES("START DATE/TIME")=VALUES("STARTDATE") K VALUES("STARTDATE")
"RTN","HMPCORD3",138,0)
 I $D(VALUES("PREOPDATE")) S VALUES("PRE-OP SCHEDULED DATE/TIME")=VALUES("PREOPDATE") K VALUES("PREOPDATE")
"RTN","HMPCORD3",139,0)
 I $D(VALUES("SUBMIT")) S VALUES("IMAGING LOCATION")=VALUES("SUBMIT") K VALUES("SUBMIT")
"RTN","HMPCORD3",140,0)
 I $D(VALUES("TRANSPORT")) S VALUES("MODE OF TRANSPORT")=VALUES("TRANSPORT") K VALUES("TRANSPORT")
"RTN","HMPCORD3",141,0)
 I $D(VALUES("ISOLATION")) S VALUES("YES/NO")=VALUES("ISOLATION") K VALUES("ISOLATION")
"RTN","HMPCORD3",142,0)
 I $D(VALUES("REASONSTUDY")) S VALUES("STUDY REASON")=VALUES("REASONSTUDY") K VALUES("REASONSTUDY")
"RTN","HMPCORD3",143,0)
 I '$D(VALUES("URGENCY")) S VALUES("URGENCY")=9
"RTN","HMPCORD3",144,0)
 I $D(VALUES("COMMENTS")) D
"RTN","HMPCORD3",145,0)
 .S ^TMP("HMPWORD",$J,1,0)=VALUES("COMMENTS")
"RTN","HMPCORD3",146,0)
 .S VALUES("WORD PROCESSING 1")=$NA(^TMP("HMPWORD",$J))
"RTN","HMPCORD3",147,0)
 .K VALUES("COMMENT")
"RTN","HMPCORD3",148,0)
 Q 1
"RTN","HMPCORD3",149,0)
 ;
"RTN","HMPCORD3",150,0)
PS(ERROR,ORDIALOG,VALUES,HMPTYPE,OIIEN,PAT,LOC) ;
"RTN","HMPCORD3",151,0)
 N ARRAY,CNT,DOSE,DOSENODE,DOSESTR,DRUG,FAIL,FOUND,NODE,PRIORITY,ROUTE,ROUTEIEN,SCH,TEMP,VAL,HMPLST,HMPPRIOR,HMPROUTE,HMPSCH
"RTN","HMPCORD3",152,0)
 S FAIL=0
"RTN","HMPCORD3",153,0)
 I $D(VALUES("STARTDATE")) S VALUES("START DATE/TIME")=VALUES("STARTDATE") K VALUES("STARTDATE")
"RTN","HMPCORD3",154,0)
 D SCHALL^ORWDPS1(.HMPSCH,PAT,LOC)
"RTN","HMPCORD3",155,0)
 D ODSLCT^ORWDPS1(.HMPPRIOR,$E(HMPTYPE),PAT,LOC)
"RTN","HMPCORD3",156,0)
 D OISLCT^ORWDPS2(.HMPLST,OIIEN,$E(HMPTYPE),PAT,"Y","N")
"RTN","HMPCORD3",157,0)
 D BLDROUTE(.HMPROUTE)
"RTN","HMPCORD3",158,0)
 S VALUES("INSTRUCTIONS")=$G(VALUES("DOSE"))_U_$G(VALUES("DOSE")) K VALUES("DOSES")
"RTN","HMPCORD3",159,0)
 ;
"RTN","HMPCORD3",160,0)
PSROUTE ;set route
"RTN","HMPCORD3",161,0)
 I '$D(VALUES("ROUTE")),HMPTYPE="NV RX" G PSSCH
"RTN","HMPCORD3",162,0)
 S TEMP=$G(VALUES("ROUTE"))
"RTN","HMPCORD3",163,0)
 S ROUTEIEN=+$G(HMPROUTE(TEMP)) I ROUTEIEN<1 D AE^HMPCORD1("Could not find a valid route",.ERROR) S FAIL=1
"RTN","HMPCORD3",164,0)
 S ROUTE=$S(HMPTYPE'["UD":$P(HMPROUTE(VALUES("ROUTE")),U,2),1:TEMP)
"RTN","HMPCORD3",165,0)
 I ROUTE="" S ROUTE=TEMP
"RTN","HMPCORD3",166,0)
 S VALUES("ROUTE")=ROUTEIEN_U_TEMP
"RTN","HMPCORD3",167,0)
 ;
"RTN","HMPCORD3",168,0)
PSURG ;build urgency value
"RTN","HMPCORD3",169,0)
 S CNT=0,FOUND=0,PRIOR=0 F  S CNT=$O(HMPPRIOR(CNT)) Q:CNT'>0!(FOUND=1)  D
"RTN","HMPCORD3",170,0)
 .S NODE=HMPPRIOR(CNT) I NODE="~Priority" S PRIOR=1
"RTN","HMPCORD3",171,0)
 .I PRIOR=0 Q
"RTN","HMPCORD3",172,0)
 .I $E(NODE)="~"
"RTN","HMPCORD3",173,0)
 .I $G(VALUES("URGENCY"))'="" D  Q
"RTN","HMPCORD3",174,0)
 ..I $P(NODE,U,2)'=VALUES("URGENCY") Q
"RTN","HMPCORD3",175,0)
 ..S TEMP=$P(NODE,U) S VALUES("URGENCY")=$E(TEMP,2,$L(TEMP)) S FOUND=1
"RTN","HMPCORD3",176,0)
 .I $E(NODE)="i" Q
"RTN","HMPCORD3",177,0)
 .S TEMP=$P(NODE,U) S VALUES("URGENCY")=$E(TEMP,2,$L(TEMP)) S FOUND=1
"RTN","HMPCORD3",178,0)
 ;
"RTN","HMPCORD3",179,0)
PSSCH ;populate additional schedule fields for inpatient meds
"RTN","HMPCORD3",180,0)
 ;TODO move to sub-routine to handle Days of Weeks schedules
"RTN","HMPCORD3",181,0)
 I '$D(VALUES("SCHEDULE")),HMPTYPE="NV RX" G PSSCOM
"RTN","HMPCORD3",182,0)
 S CNT=0,FOUND=0 F  S CNT=$O(HMPSCH(CNT)) Q:CNT'>0!(FOUND=1)  D
"RTN","HMPCORD3",183,0)
 .S NODE=$G(HMPSCH(CNT)) I $P(NODE,U)'=VALUES("SCHEDULE") Q
"RTN","HMPCORD3",184,0)
 .S VALUES("SCHEDULE TYPE")=$P(NODE,U,3)_U_$P(NODE,U,3),VALUES("ADMIN TIMES")=$P(NODE,U,4)_U_$P(NODE,U,4),VALUES("SCHEDULE")=VALUES("SCHEDULE")_U_VALUES("SCHEDULE")
"RTN","HMPCORD3",185,0)
 .S SCH=$S(HMPTYPE'["UD":$P(NODE,U,2),1:$P(NODE,U))
"RTN","HMPCORD3",186,0)
 .S FOUND=1
"RTN","HMPCORD3",187,0)
 ;
"RTN","HMPCORD3",188,0)
PSSCOM ;
"RTN","HMPCORD3",189,0)
 I $D(VALUES("COMMENTS")) D
"RTN","HMPCORD3",190,0)
 .S ^TMP("HMPWORD",$J,1,0)=VALUES("COMMENTS")
"RTN","HMPCORD3",191,0)
 .S VALUES("WORD PROCESSING 1")=$NA(^TMP("HMPWORD",$J))
"RTN","HMPCORD3",192,0)
 .K VALUES("COMMENT")
"RTN","HMPCORD3",193,0)
 ;
"RTN","HMPCORD3",194,0)
PSDRUG ;populate additional felds based off the dose
"RTN","HMPCORD3",195,0)
 S CNT=0,FOUND=0,DOSENODE=0 F  S CNT=$O(HMPLST(CNT)) Q:CNT'>0!(FOUND=1)  D
"RTN","HMPCORD3",196,0)
 .S NODE=HMPLST(CNT) I NODE="~AllDoses" S DOSENODE=1
"RTN","HMPCORD3",197,0)
 .I DOSENODE=0 Q
"RTN","HMPCORD3",198,0)
 .I $E(NODE)="~" Q
"RTN","HMPCORD3",199,0)
 .S DOSE=$P(NODE,U) S DOSE=$E(DOSE,2,$L(DOSE))
"RTN","HMPCORD3",200,0)
 .I $P(VALUES("INSTRUCTIONS"),U)'=DOSE Q
"RTN","HMPCORD3",201,0)
 .S VALUES("DISPENSE DRUG")=$P(NODE,U,2)
"RTN","HMPCORD3",202,0)
 .S VALUES("DOSE")=$P(NODE,U,3)
"RTN","HMPCORD3",203,0)
PSO ;handle outpatient meds
"RTN","HMPCORD3",204,0)
 I $D(VALUES("SUPPLY")) D
"RTN","HMPCORD3",205,0)
 .N CNT,DRG,PRIOR,PTR,QUANTITY,SUP,UPD,X
"RTN","HMPCORD3",206,0)
 .S DRG=$G(VALUES("DISPENSE DRUG")),SUP=VALUES("SUPPLY")
"RTN","HMPCORD3",207,0)
 .K VALUES("SUPPLY")
"RTN","HMPCORD3",208,0)
 .;get quantity do a check to determine if it is valid range or if one is not defined
"RTN","HMPCORD3",209,0)
 .;potentially need to add code to handle complex orders
"RTN","HMPCORD3",210,0)
 .S UPD=$P(VALUES("DOSE"),"&",3)
"RTN","HMPCORD3",211,0)
 .D DAY2QTY^ORWDPS2(.VAL,SUP,UPD_U,$P(VALUES("SCHEDULE"),U)_U,"~^",PAT,DRG)
"RTN","HMPCORD3",212,0)
 .S QUANTITY=+$G(VALUES("QUANTITY"))
"RTN","HMPCORD3",213,0)
 .I QUANTITY=0 S VALUES("QUANTITY")=+VAL
"RTN","HMPCORD3",214,0)
 .I QUANTITY>0 S VALUES("QUANTITY")=$S(QUANTITY<VAL:QUANTITY,+VAL=0:QUANTITY,1:VAL)
"RTN","HMPCORD3",215,0)
 .S VALUES("DAYS SUPPLY")=SUP
"RTN","HMPCORD3",216,0)
 .I +$G(VALUES("DAYS SUPPLY"))=0 D AE^HMPCORD1("Days Supply must be greater then zero",.ERROR) S FAIL=1
"RTN","HMPCORD3",217,0)
 .I +$G(VALUES("QUANTITY"))=0 D AE^HMPCORD1("Quantity must be greater then zero",.ERROR) S FAIL=1
"RTN","HMPCORD3",218,0)
 .;
"RTN","HMPCORD3",219,0)
 .;check refill values to make sure it is in range
"RTN","HMPCORD3",220,0)
 .I +$G(VALUES("REFILLS"))>0 D
"RTN","HMPCORD3",221,0)
 ..K VAL
"RTN","HMPCORD3",222,0)
 ..D MAXREF^ORWDPS2(.VAL,PAT,DRG,SUP,OIIEN,0)
"RTN","HMPCORD3",223,0)
 ..I VALUES("REFILLS")>VAL S VALUES("REFILLS")=VAL
"RTN","HMPCORD3",224,0)
 .I +$G(VALUES("REFILLS"))=0 S VALUES("REFILLS")=0
"RTN","HMPCORD3",225,0)
 .I $D(VALUES("ROUTINE")) D
"RTN","HMPCORD3",226,0)
 ..S PTR=$$PTR("ROUTING") I PTR'>0 Q
"RTN","HMPCORD3",227,0)
 ..S NODE=$P($G(^ORD(101.41,PTR,1)),U,2) I NODE="" Q
"RTN","HMPCORD3",228,0)
 ..S CNT=$L(NODE,";")-1
"RTN","HMPCORD3",229,0)
 ..F X=1:1:CNT D
"RTN","HMPCORD3",230,0)
 ...S TEMP=$P(NODE,";",X) I TEMP="" Q
"RTN","HMPCORD3",231,0)
 ...S ARRAY($P(TEMP,":",2))=$P(TEMP,":")
"RTN","HMPCORD3",232,0)
 ...I $D(ARRAY(VALUES("ROUTING"))) S VALUES("ROUTING")=ARRAY(VALUES("ROUTING"))
"RTN","HMPCORD3",233,0)
 .;
"RTN","HMPCORD3",234,0)
 .;check for valid routing value or set a default value
"RTN","HMPCORD3",235,0)
 .I '$D(VALUES("ROUTING")) D
"RTN","HMPCORD3",236,0)
 ..S CNT=0,FOUND=0,PRIOR=0 F  S CNT=$O(HMPPRIOR(CNT)) Q:CNT'>0!(FOUND=1)  D
"RTN","HMPCORD3",237,0)
 ...S NODE=HMPPRIOR(CNT) I NODE="~Pickup" S PRIOR=1
"RTN","HMPCORD3",238,0)
 ...I PRIOR=0 Q
"RTN","HMPCORD3",239,0)
 ...I $E(NODE)="~" Q
"RTN","HMPCORD3",240,0)
 ...S TEMP=$P(NODE,U) S VALUES("ROUTING")=$E(TEMP,2,$L(TEMP)) S FOUND=1
"RTN","HMPCORD3",241,0)
 ;
"RTN","HMPCORD3",242,0)
 I FAIL>0 Q 0
"RTN","HMPCORD3",243,0)
PSSIG ;build sig value
"RTN","HMPCORD3",244,0)
 N WP
"RTN","HMPCORD3",245,0)
 S ^TMP("HMPSIG",$J,0,0)=$P(VALUES("INSTRUCTIONS"),U)
"RTN","HMPCORD3",246,0)
 I $G(ROUTE)'="" S ^TMP("HMPSIG",$J,1,0)=ROUTE
"RTN","HMPCORD3",247,0)
 I $G(SCH) S ^TMP("HMPSIG",$J,1,0)=$S($G(^TMP("HMPSIG",$J,1,0))'="":^TMP("HMPSIG",$J,1,0)_" "_SCH,1:SCH)
"RTN","HMPCORD3",248,0)
 I $D(VALUES("WORD PROCESSING 1")) D
"RTN","HMPCORD3",249,0)
 .S WP=VALUES("WORD PROCESSING 1")
"RTN","HMPCORD3",250,0)
 .S CNT=1,NUM=1 F  S CNT=$O(@WP@(CNT)) Q:CNT'>0  D
"RTN","HMPCORD3",251,0)
 ..S NUM=NUM+1 S ^TMP("HMPSIG",$J,NUM,0)=@WP@(CNT,0)
"RTN","HMPCORD3",252,0)
 S VALUES("SIG")=$NA(^TMP("HMPSIG",$J))
"RTN","HMPCORD3",253,0)
 Q 1
"RTN","HMPCORD3",254,0)
 ;
"RTN","HMPCORD3",255,0)
QO(ERROR,VALUES,LOC,PAT,ISIMO,ORD) ;
"RTN","HMPCORD3",256,0)
 N BLDRES,DEFIEN,DIEN,IEN,PKGID,PKGNAME,VARSARR,HMPOREST,HMPCHECK
"RTN","HMPCORD3",257,0)
 S IEN=+$O(^ORD(101.41,"B",VALUES("QO"),"")) I IEN'>0 D AE^HMPCORD1("Could not find QO",.ERROR) Q
"RTN","HMPCORD3",258,0)
 ;
"RTN","HMPCORD3",259,0)
 D BEG^HMPCORD2(PAT,LOC,IEN,USER,.VARSARR,.BLDRES,.HMPVALUE) I $D(ERROR) Q
"RTN","HMPCORD3",260,0)
 S PKGID=+$P($G(^ORD(101.41,IEN,0)),U,7) I PKGID'>0 D AE^HMPCORD1("Could not find package for the QO",.ERROR) Q
"RTN","HMPCORD3",261,0)
 S PKGNAME=$P(^DIC(9.4,PKGID,0),U,2) I PKGNAME="" D AE^HMPCORD1("Cannot find package name",.HMPVALUE) Q
"RTN","HMPCORD3",262,0)
 ;
"RTN","HMPCORD3",263,0)
 I $P(BLDRES(0),U,4)'="Q" D AE^HMPCORD1("Item is not a QO",.ERROR) Q
"RTN","HMPCORD3",264,0)
 S ORDTYPE="Q"
"RTN","HMPCORD3",265,0)
 ;I $P(BLDRES(0),U)'=1,$P(BLDRES(0),U)'=2 D AE("Quick Order is not set to Auto-Accept",.HMPVALUE) S HMPOK=2 Q
"RTN","HMPCORD3",266,0)
 S RSPID=$P(BLDRES(0),U,2)
"RTN","HMPCORD3",267,0)
 S DEFIEN=$$DEFDLG^ORCD(IEN)
"RTN","HMPCORD3",268,0)
 S VARSARR("DISPLAY GROUP IEN")=$P($G(^ORD(101.41,DEFIEN,0)),U,5)
"RTN","HMPCORD3",269,0)
 S VARSARR("DISPLAY GROUP")=$P($G(^ORD(101.98,VARSARR("DISPLAY GROUP IEN"),0)),U)
"RTN","HMPCORD3",270,0)
 D BLDORDLG^HMPCORD1(.ORDIALOG,IEN,PAT,RSPID,ORDTYPE)
"RTN","HMPCORD3",271,0)
 ;S DIEN=VARSARR("DISPLAY GROUP IEN")
"RTN","HMPCORD3",272,0)
 D FILLID^ORWDXC(.FILLER,IEN)
"RTN","HMPCORD3",273,0)
 S VARSARR("FILLER ID")=FILLER
"RTN","HMPCORD3",274,0)
 ;I ORDTYPE="E" S DIEN=+$P($G(^OR(100,HMPOIFN,0)),U,5)
"RTN","HMPCORD3",275,0)
 ;I ORDTYPE="Q" S DIEN=HMPOIFN
"RTN","HMPCORD3",276,0)
 S DLGNAME=$P($G(^ORD(101.41,DEFIEN,0)),U)
"RTN","HMPCORD3",277,0)
 I DLGNAME="" D AE^HMPCORD1("INVALID DEFAULT DIALOG",.ERROR) Q
"RTN","HMPCORD3",278,0)
 S VARSARR("DIALOG NAME")=DLGNAME
"RTN","HMPCORD3",279,0)
 D DLGDEF^ORWDX(.DLGDEF,DLGNAME)
"RTN","HMPCORD3",280,0)
 ;build order check array,build dialog structure and build save array
"RTN","HMPCORD3",281,0)
 D BLDARRS^HMPCORD2(.RESULT,.ORDIALOG,.VARSARR,PAT,LOC,.HMPCHECK,.SAVEARR,.HMPPOSS)
"RTN","HMPCORD3",282,0)
 D PERCHCKS(.ERROR,.ORDIALOG,.HMPCHECK,PAT,LOC,USER,DEFIEN,DLGNAME,VARSARR("DISPLAY GROUP IEN"),PKGID,PKGNAME,IEN,"Q") I $D(ERROR) Q
"RTN","HMPCORD3",283,0)
 D SAVE(.HMPOREST,PAT,USER,LOC,DLGNAME,VARSARR("DISPLAY GROUP IEN"),0,IEN,.ORDIALOG,.ORD)
"RTN","HMPCORD3",284,0)
 Q
"RTN","HMPCORD3",285,0)
 ;
"RTN","HMPCORD3",286,0)
SAVE(HMPOREST,PAT,USER,LOC,DLGNAME,DGIEN,ORIFN,QOIEN,SAVEARR,ORD) ;
"RTN","HMPCORD3",287,0)
 ;SAVE(REC,ORVP,ORNP,ORL,DLG,ORDG,ORIT,ORIFN,ORDIALOG,ORDEA,ORAPPT,ORSRC,OREVTDF)
"RTN","HMPCORD3",288,0)
 I QOIEN>0 D SAVE^ORWDX(.HMPOREST,PAT,USER,LOC,DLGNAME,DGIEN,QOIEN,"",.SAVEARR,"",DT,"",0)
"RTN","HMPCORD3",289,0)
 I ORIFN>0 D SAVE^ORWDX(.HMPOREST,PAT,USER,LOC,DLGNAME,DGIEN,"","",.SAVEARR,"",DT,"",0)
"RTN","HMPCORD3",290,0)
 N CNT,DFN,IEN
"RTN","HMPCORD3",291,0)
 S CNT=0,IEN=0 F  S CNT=$O(HMPOREST(CNT)) Q:CNT'>0!(IEN>0)  D
"RTN","HMPCORD3",292,0)
 .I $E(HMPOREST(CNT))="~" S IEN=+$P($P(HMPOREST(CNT),U),"~",2)
"RTN","HMPCORD3",293,0)
 I IEN>0 S DFN=PAT D ORX^HMPDJ01(IEN,.ORD)
"RTN","HMPCORD3",294,0)
 Q
"RTN","HMPCORD3",295,0)
 ;
"RTN","HMPCORD3",296,0)
VALIDOI(VALUES,TYPE) ;
"RTN","HMPCORD3",297,0)
 N IEN,POSSOI
"RTN","HMPCORD3",298,0)
 S IEN=$P(VALUES("OI"),":",5) I IEN'>0 Q -1
"RTN","HMPCORD3",299,0)
 ;S IEN=$P(VALUES("OI"),":",5) I IEN'>0 Q -1
"RTN","HMPCORD3",300,0)
 S POSSOI=$P(^ORD(101.43,IEN,0),U)
"RTN","HMPCORD3",301,0)
 S VALUES("OI")=POSSOI
"RTN","HMPCORD3",302,0)
 ;S SETTYPE=$$GETSET(TYPE) I SETTYPE="" Q -1
"RTN","HMPCORD3",303,0)
 S RESULT=$O(^ORD(101.43,"S."_TYPE,POSSOI,""))
"RTN","HMPCORD3",304,0)
 Q RESULT
"RTN","HMPCORD3",305,0)
 ;
"RTN","HMPCORD3",306,0)
PTR(NAME) ;
"RTN","HMPCORD3",307,0)
 Q $O(^ORD(101.41,"B","OR GTX "_NAME,""))
"RTN","HMPCORD4")
0^10^B140947128
"RTN","HMPCORD4",1,0)
HMPCORD4 ;;SLC/AGP -Retreived Orderable Items ; 2/17/15 2:40pm
"RTN","HMPCORD4",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPCORD4",3,0)
 ;
"RTN","HMPCORD4",4,0)
 ;
"RTN","HMPCORD4",5,0)
 Q
"RTN","HMPCORD4",6,0)
 ;
"RTN","HMPCORD4",7,0)
ADDODG ;
"RTN","HMPCORD4",8,0)
 N CNT,IEN,NUM,NODE,PTR,RESULT,TEMP
"RTN","HMPCORD4",9,0)
 N ERRMSG S ERRMSG="A mumps error occurred while extaracting display groups"
"RTN","HMPCORD4",10,0)
 S IEN=0 F  S IEN=$O(^ORD(100.98,IEN)) Q:IEN'>0  D
"RTN","HMPCORD4",11,0)
 .N $ES,$ET
"RTN","HMPCORD4",12,0)
 .S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPCORD4",13,0)
 .I '$D(^ORD(100.98,IEN,1)) D  Q
"RTN","HMPCORD4",14,0)
 ..S NODE=$G(^ORD(100.98,IEN,0)) D SODGNODE(.RESULT,NODE)
"RTN","HMPCORD4",15,0)
 ..S RESULT("uid")=$$SETUID^HMPUTILS("displayGroup","",IEN),RESULT("internal")=IEN
"RTN","HMPCORD4",16,0)
 ..D ADD^HMPEF("RESULT") S HMPCNT=+$G(HMPCNT)+1,HMPLAST=IEN
"RTN","HMPCORD4",17,0)
 .D ADDODG1(IEN,.TEMP)
"RTN","HMPCORD4",18,0)
 .M RESULT=TEMP
"RTN","HMPCORD4",19,0)
 .D ADD^HMPEF("RESULT") S HMPCNT=+$G(HMPCNT)+1,HMPLAST=IEN
"RTN","HMPCORD4",20,0)
 I IEN'>0 S HMPFINI=1
"RTN","HMPCORD4",21,0)
 Q
"RTN","HMPCORD4",22,0)
 ;
"RTN","HMPCORD4",23,0)
ADDODG1(IEN,TEMP) ;
"RTN","HMPCORD4",24,0)
 N CNT,NODE,NUM,PTR
"RTN","HMPCORD4",25,0)
 S NODE=$G(^ORD(100.98,IEN,0)) D SODGNODE(.TEMP,NODE)
"RTN","HMPCORD4",26,0)
 S TEMP("uid")=$$SETUID^HMPUTILS("displayGroup","",IEN),TEMP("internal")=IEN
"RTN","HMPCORD4",27,0)
 I '$D(^ORD(100.98,IEN,1)) Q
"RTN","HMPCORD4",28,0)
 S NUM=0,CNT=0 F  S NUM=$O(^ORD(100.98,IEN,1,NUM)) Q:NUM'>0  D
"RTN","HMPCORD4",29,0)
 .N ARRAY
"RTN","HMPCORD4",30,0)
 .S PTR=$G(^ORD(100.98,IEN,1,NUM,0)) Q:PTR'>0
"RTN","HMPCORD4",31,0)
 .D ADDODG1(PTR,.ARRAY) I '$D(ARRAY) Q
"RTN","HMPCORD4",32,0)
 .S CNT=CNT+1 M TEMP("children",CNT,"item")=ARRAY
"RTN","HMPCORD4",33,0)
 Q
"RTN","HMPCORD4",34,0)
 ;
"RTN","HMPCORD4",35,0)
SODGNODE(RESULT,NODE) ;
"RTN","HMPCORD4",36,0)
 N NAME,TEMP,X
"RTN","HMPCORD4",37,0)
 F X=1:1:4 D
"RTN","HMPCORD4",38,0)
 .S TEMP=$P(NODE,U,X) I X<4,$L(TEMP)>1 S RESULT($S(X=1:"name",X=2:"displayName",X=3:"abbreviation"))=TEMP
"RTN","HMPCORD4",39,0)
 .I X=4,+TEMP>0 S NAME=$P($G(^ORD(101.41,TEMP,0)),U) S RESULT("defaultDialogUid")=$$SETUID^HMPUTILS("orderDialog","",TEMP),RESULT("defaultDialogName")=NAME
"RTN","HMPCORD4",40,0)
 Q
"RTN","HMPCORD4",41,0)
 ;
"RTN","HMPCORD4",42,0)
ADDROUTE ;
"RTN","HMPCORD4",43,0)
 N CNT,IEN,NAME,RESULT,ROUTES,X,UID,VALUE
"RTN","HMPCORD4",44,0)
 N ERRMSG
"RTN","HMPCORD4",45,0)
 S ERRMSG="A mumps error occurred while extaracting routes."
"RTN","HMPCORD4",46,0)
 S CNT=1,IEN=0
"RTN","HMPCORD4",47,0)
 I +$G(HMPLAST)>0 S IEN=HMPLAST
"RTN","HMPCORD4",48,0)
 F  S IEN=$O(^PS(51.2,IEN)) Q:IEN'>0  D
"RTN","HMPCORD4",49,0)
 .N $ES,$ET
"RTN","HMPCORD4",50,0)
 .S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPCORD4",51,0)
 .S NODE=$P($G(^PS(51.2,IEN,0)),U,1,6)
"RTN","HMPCORD4",52,0)
 .I $P(NODE,U,5)>0 Q
"RTN","HMPCORD4",53,0)
 .S UID=$$SETUID^HMPUTILS("route","",IEN)
"RTN","HMPCORD4",54,0)
 .S RESULT("uid")=UID,RESULT("internal")=IEN
"RTN","HMPCORD4",55,0)
 .F X=1,2,3,6 D
"RTN","HMPCORD4",56,0)
 ..S VALUE=$P(NODE,U,X) Q:VALUE=""
"RTN","HMPCORD4",57,0)
 ..S NAME=$S(X=1:"name",X=2:"externalName",X=3:"abbreviation",X=6:"useInIV",1:"")
"RTN","HMPCORD4",58,0)
 ..I NAME="" Q
"RTN","HMPCORD4",59,0)
 ..I X=6 S VALUE=$S(VALUE=1:"true",1:"false")
"RTN","HMPCORD4",60,0)
 ..S RESULT(NAME)=VALUE
"RTN","HMPCORD4",61,0)
 .D ADD^HMPEF("RESULT") S HMPCNT=+$G(HMPCNT)+1,HMPLAST=IEN
"RTN","HMPCORD4",62,0)
 .;S CNT=CNT+1
"RTN","HMPCORD4",63,0)
 .K RESULT
"RTN","HMPCORD4",64,0)
 I IEN'>0 S HMPFINI=1
"RTN","HMPCORD4",65,0)
 Q
"RTN","HMPCORD4",66,0)
 ;
"RTN","HMPCORD4",67,0)
ADDSCH ;
"RTN","HMPCORD4",68,0)
 N CNT,IEN,NAME,NODE,NUM,RESULT,UID,HMPSCH
"RTN","HMPCORD4",69,0)
 ;D SCHALL^ORWDPS1(.HMPSCH,0,0)
"RTN","HMPCORD4",70,0)
 D SCHED^PSS51P1(0,.HMPSCH)
"RTN","HMPCORD4",71,0)
 N ERRMSG
"RTN","HMPCORD4",72,0)
 S ERRMSG="A mumps error occurred while extaracting schedules."
"RTN","HMPCORD4",73,0)
 S CNT=0 F  S CNT=$O(HMPSCH(CNT)) Q:CNT'>0  D
"RTN","HMPCORD4",74,0)
 .N $ES,$ET
"RTN","HMPCORD4",75,0)
 .S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPCORD4",76,0)
 .S NODE=$G(HMPSCH(CNT))
"RTN","HMPCORD4",77,0)
 .S NAME=$P(NODE,U,2)
"RTN","HMPCORD4",78,0)
 .S IEN=$P(NODE,U)
"RTN","HMPCORD4",79,0)
 .;S IEN=$O(^PS(51.1,"B",NAME,"")) I IEN'>0 Q
"RTN","HMPCORD4",80,0)
 .S UID=$$SETUID^HMPUTILS("schedule","",IEN)
"RTN","HMPCORD4",81,0)
 .S RESULT("uid")=UID,RESULT("internal")=IEN
"RTN","HMPCORD4",82,0)
 .S RESULT("name")=NAME
"RTN","HMPCORD4",83,0)
 .I $P(NODE,U,3)'="" S RESULT("externalValue")=$P(NODE,U,3)
"RTN","HMPCORD4",84,0)
 .I $P(NODE,U,4)'="" S RESULT("scheduleType")=$P(NODE,U,4)
"RTN","HMPCORD4",85,0)
 .D ADD^HMPEF("RESULT") S HMPCNT=+$G(HMPCNT)+1,HMPLAST=IEN
"RTN","HMPCORD4",86,0)
 .K RESULT
"RTN","HMPCORD4",87,0)
 I CNT'>0 S HMPFINI=1
"RTN","HMPCORD4",88,0)
 Q
"RTN","HMPCORD4",89,0)
 ;
"RTN","HMPCORD4",90,0)
LAB(RESULT,OI) ;
"RTN","HMPCORD4",91,0)
 N CNT,I,IEN,NODE,SYN,TEMP,HMPLST
"RTN","HMPCORD4",92,0)
 S RESULT("dialogAdditionalInformation","sendPatientTimes",1,"internal")="LT",RESULT("dialogAdditionalInformation","sendPatientTimes",1,"name")="Today"
"RTN","HMPCORD4",93,0)
 S RESULT("dialogAdditionalInformation","sendPatientTimes",2,"internal")="LT+1",RESULT("dialogAdditionalInformation","sendPatientTimes",2,"name")="Tomorrow"
"RTN","HMPCORD4",94,0)
 ;
"RTN","HMPCORD4",95,0)
 D GETLST^XPAR(.HMPLST,"ALL","ORWD COMMON LAB INPT")  ;DBIA 2263
"RTN","HMPCORD4",96,0)
 S I=0 F  S I=$O(HMPLST(I)) Q:'I  D
"RTN","HMPCORD4",97,0)
 . S IEN=$P(HMPLST(I),U,2)
"RTN","HMPCORD4",98,0)
 . S P1="dialogAdditionalInformation"
"RTN","HMPCORD4",99,0)
 . S RESULT("dialogAdditionalInformation","common",I,"uid")=$$SETUID^HMPUTILS("orderable","",IEN)
"RTN","HMPCORD4",100,0)
 . S RESULT("dialogAdditionalInformation","common",I,"internal")=IEN
"RTN","HMPCORD4",101,0)
 . S RESULT("dialogAdditionalInformation","common",I,"name")=$P(^ORD(101.43,IEN,0),U,1)
"RTN","HMPCORD4",102,0)
 ;
"RTN","HMPCORD4",103,0)
 S NODE=$G(^ORD(101.43,OI,"LR"))
"RTN","HMPCORD4",104,0)
 S RESULT("labDetails","speciman")=$P(NODE,U),RESULT("labDetails","labCollect")=$S($P(NODE,U,2)=1:"true",1:"false"),RESULT("labDetails","sequence")=$P(NODE,U,3)
"RTN","HMPCORD4",105,0)
 S RESULT("labDetails","maxOrderFrequency")=$P(NODE,U,4),RESULT("labDetails","dailyOrderMax")=$P(NODE,U,5)
"RTN","HMPCORD4",106,0)
 ;
"RTN","HMPCORD4",107,0)
 S TEMP=$P(NODE,U,6)
"RTN","HMPCORD4",108,0)
 S RESULT("types",1,"abb")=TEMP,RESULT("types",1,"uid")=$$SETUID^HMPUTILS("labType","",TEMP),RESULT("types",1,"internal")=TEMP,RESULT("types",1,"type")=$$LABTYPE(TEMP)
"RTN","HMPCORD4",109,0)
 S TEMP=$P(NODE,U,7)
"RTN","HMPCORD4",110,0)
 I TEMP'="" S RESULT("labDetails","labTypeInternal")=TEMP,RESULT("labDetails","labTypeName")=$S(TEMP="I":"Input",TEMP="O":"Output",TEMP="B":"Both",TEMP="N":"Neither")
"RTN","HMPCORD4",111,0)
 I '$D(^ORD(101.43,OI,2)) Q
"RTN","HMPCORD4",112,0)
 S CNT=0
"RTN","HMPCORD4",113,0)
 S I=0 F  S I=$O(^ORD(101.43,OI,2,I)) Q:I'>0  D
"RTN","HMPCORD4",114,0)
 .S SYN=$G(^ORD(101.43,OI,2,I,0)) Q:SYN=""
"RTN","HMPCORD4",115,0)
 .S CNT=CNT+1,RESULT("synonym",CNT,"name")=SYN
"RTN","HMPCORD4",116,0)
 Q
"RTN","HMPCORD4",117,0)
 ;
"RTN","HMPCORD4",118,0)
LABTYPE(L) ;
"RTN","HMPCORD4",119,0)
 I L="CH" Q "Chemistry"
"RTN","HMPCORD4",120,0)
 I L="MI" Q "MICROBIOLOGY"
"RTN","HMPCORD4",121,0)
 I L="BB" Q "Blood Bank"
"RTN","HMPCORD4",122,0)
 I L="EM" Q "Electron Microscopy"
"RTN","HMPCORD4",123,0)
 I L="SP" Q "Surgical Pathology"
"RTN","HMPCORD4",124,0)
 I L="AU" Q "Autopsy"
"RTN","HMPCORD4",125,0)
 I L="CY" Q "Cytology"
"RTN","HMPCORD4",126,0)
 Q ""
"RTN","HMPCORD4",127,0)
 ;
"RTN","HMPCORD4",128,0)
OI(OITYPE) ;
"RTN","HMPCORD4",129,0)
 N CNT,ERROR,IEN,NAME,LINK,LINKTYPE,NODE,RADDET,RADTYPE,RESULT,TCNT,TYPE,UID,HMPTEMP
"RTN","HMPCORD4",130,0)
 N ERRMSG
"RTN","HMPCORD4",131,0)
 S ERRMSG="A mumps error occurred while extaracting orderable items."
"RTN","HMPCORD4",132,0)
 S CNT=1,IEN=0
"RTN","HMPCORD4",133,0)
 ;
"RTN","HMPCORD4",134,0)
 D RADTYPE(.RADTYPE,.RADDET)
"RTN","HMPCORD4",135,0)
 I +$G(HMPLAST)>0 S IEN=HMPLAST
"RTN","HMPCORD4",136,0)
 I +$G(HMPID)>0 S IEN=HMPID
"RTN","HMPCORD4",137,0)
 F  S IEN=$O(^ORD(101.43,IEN)) Q:IEN'>0  D  I HMPMAX>0,HMPI'<HMPMAX Q
"RTN","HMPCORD4",138,0)
 .N $ES,$ET
"RTN","HMPCORD4",139,0)
 .S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPCORD4",140,0)
 .K RESULT
"RTN","HMPCORD4",141,0)
 .S TYPE=$$VALIDOI(OITYPE,IEN)
"RTN","HMPCORD4",142,0)
 .I TYPE="" Q
"RTN","HMPCORD4",143,0)
 .S NAME=$P(^ORD(101.43,IEN,0),U),LINK=$P($P(^ORD(101.43,IEN,0),U,2),";99",1),LINKTYPE=$P($P(^ORD(101.43,IEN,0),U,2),";99",2)
"RTN","HMPCORD4",144,0)
 .S UID=$$SETUID^HMPUTILS("orderable","",IEN)
"RTN","HMPCORD4",145,0)
 .S RESULT("uid")=UID,RESULT("internal")=IEN
"RTN","HMPCORD4",146,0)
 .S RESULT("name")=NAME
"RTN","HMPCORD4",147,0)
 .S RESULT("link")=LINK
"RTN","HMPCORD4",148,0)
 .S RESULT("linktype")=LINKTYPE
"RTN","HMPCORD4",149,0)
 .I TYPE["PS" D PS(.RESULT,IEN,CNT)
"RTN","HMPCORD4",150,0)
 .I TYPE["RA" D RA(.RESULT,IEN,CNT,.RADTYPE,.RADDET)
"RTN","HMPCORD4",151,0)
 .I TYPE["LR" D LAB(.RESULT,IEN)
"RTN","HMPCORD4",152,0)
 .D ADD^HMPEF("RESULT") S HMPCNT=+$G(HMPCNT)+1,HMPLAST=IEN
"RTN","HMPCORD4",153,0)
 .S CNT=CNT+1
"RTN","HMPCORD4",154,0)
 I IEN'>0 S HMPFINI=1
"RTN","HMPCORD4",155,0)
 Q
"RTN","HMPCORD4",156,0)
 ;
"RTN","HMPCORD4",157,0)
PS(RESULT,IEN,PLACE) ;
"RTN","HMPCORD4",158,0)
 N CNT,COST,DOSE,DOSES,DRUG,MEDS,NAME,NODE,NUM,PSOI,SIZE,TYPE,UID,HMPDOSE
"RTN","HMPCORD4",159,0)
 S CNT=0
"RTN","HMPCORD4",160,0)
 I $D(^ORD(101.43,IEN,9,"B","NV RX")) S CNT=CNT+1 S RESULT("types",CNT,"type")="NON-VA MEDS" S MEDS("NV RX")=""
"RTN","HMPCORD4",161,0)
 I $D(^ORD(101.43,IEN,9,"B","O RX")) S CNT=CNT+1 S RESULT("types",CNT,"type")="OUTPATIENT MEDS" S MEDS("O RX")=""
"RTN","HMPCORD4",162,0)
 I $D(^ORD(101.43,IEN,9,"B","RX")) S CNT=CNT+1 S RESULT("types",CNT,"type")="MEDS" S MEDS("RX")=""
"RTN","HMPCORD4",163,0)
 I $D(^ORD(101.43,IEN,9,"B","UD RX")) S CNT=CNT+1 S RESULT("types",CNT,"type")="INPATIENT MEDS" S MEDS("UD RX")=""
"RTN","HMPCORD4",164,0)
 ;
"RTN","HMPCORD4",165,0)
 ;K DOSES
"RTN","HMPCORD4",166,0)
 S PSOI=+$P(^ORD(101.43,IEN,0),U,2)
"RTN","HMPCORD4",167,0)
 S TYPE="" F  S TYPE=$O(MEDS(TYPE)) Q:TYPE=""  D
"RTN","HMPCORD4",168,0)
 .D DOSE^PSSOPKI1(.HMPDOSE,PSOI,TYPE,0)
"RTN","HMPCORD4",169,0)
 .S CNT=0 F  S CNT=$O(HMPDOSE(CNT)) Q:CNT'>0  D
"RTN","HMPCORD4",170,0)
 ..S NODE=$G(HMPDOSE(CNT)),SIZE="",UID=0,DRUG="",COST=""
"RTN","HMPCORD4",171,0)
 ..S DOSE=$P(NODE,U,5)
"RTN","HMPCORD4",172,0)
 ..I $D(DOSES(DOSE)) Q
"RTN","HMPCORD4",173,0)
 ..I $P(NODE,U,3)'="",$P(NODE,U,4)'="" S SIZE=$P(NODE,U,3)_" "_$P(NODE,U,4)
"RTN","HMPCORD4",174,0)
 ..S DRUG=$P(NODE,U,6),COST=$P(NODE,U,7)
"RTN","HMPCORD4",175,0)
 ..S DOSES(DOSE)=$G(SIZE)_U_DRUG_U_COST
"RTN","HMPCORD4",176,0)
 ;
"RTN","HMPCORD4",177,0)
 S DOSE="",CNT=1 F  S DOSE=$O(DOSES(DOSE)) Q:DOSE=""  D
"RTN","HMPCORD4",178,0)
 .S NODE=DOSES(DOSE)
"RTN","HMPCORD4",179,0)
 .S RESULT("possibleDosages",CNT,"dose")=DOSE
"RTN","HMPCORD4",180,0)
 .I $P(NODE,U)'="" S RESULT("possibleDosages",CNT,"size")=$P(NODE,U)
"RTN","HMPCORD4",181,0)
 .I $P(NODE,U,2)>0 D
"RTN","HMPCORD4",182,0)
 ..S NAME=$P($G(^PSDRUG($P(NODE,U,2),0)),U)
"RTN","HMPCORD4",183,0)
 ..S RESULT("possibleDosages",CNT,"drugUid")=$$SETUID^HMPUTILS("drug","",$P(NODE,U,2))
"RTN","HMPCORD4",184,0)
 ..S RESULT("possibleDosages",CNT,"drugInternal")=$P(NODE,U,2)
"RTN","HMPCORD4",185,0)
 ..S RESULT("possibleDosages",CNT,"drugName")=NAME
"RTN","HMPCORD4",186,0)
 .;I $P(NODE,U,3)'="" S RESULT("possibleDosages",CNT,"cost")=$P(NODE,U,3) 
"RTN","HMPCORD4",187,0)
 .S CNT=CNT+1
"RTN","HMPCORD4",188,0)
 Q
"RTN","HMPCORD4",189,0)
 ;
"RTN","HMPCORD4",190,0)
RA(RESULT,IEN,PLACE,RADTYPE,RADDET) ;
"RTN","HMPCORD4",191,0)
 N CNT,NODE,TEMP
"RTN","HMPCORD4",192,0)
 S CNT=0
"RTN","HMPCORD4",193,0)
 S NODE=$G(^ORD(101.43,IEN,0))
"RTN","HMPCORD4",194,0)
 Q:$P(NODE,U,3)=""  ;BL;DE801 NULL SUBSCRIPT FOUND AT TEST SITES
"RTN","HMPCORD4",195,0)
 I $P(NODE,U,3)'="",$P(NODE,U,4)'="" S RESULT("code")=$$SETUID^HMPUTILS($$LOW^XLFSTR($P(NODE,U,4)),"",$P(NODE,U,3))
"RTN","HMPCORD4",196,0)
 S NODE=$G(^ORD(101.43,IEN,"RA"))
"RTN","HMPCORD4",197,0)
 S RESULT("imagingDetails","contractMedia")=$P(NODE,U)
"RTN","HMPCORD4",198,0)
 I $P(NODE,U,2)'="" S TEMP=$P(NODE,U,2),RESULT("imagingDetails","procedureType")=$S(TEMP="B":"Board",TEMP="D":"Detailed",TEMP="S":"Series",TEMP="P":"Parent")
"RTN","HMPCORD4",199,0)
 I $D(RADTYPE($P(NODE,U,3))) D
"RTN","HMPCORD4",200,0)
 .S TEMP=$G(RADTYPE($P(NODE,U,3))),RESULT("types",1,"type")=$P(TEMP,U,2),RESULT("types",1,"uid")=$$SETUID^HMPUTILS("radType","",$P(TEMP,U)),RESULT("internal")=$P(TEMP,U),RESULT("types",1,"abb")=$P(NODE,U,3)
"RTN","HMPCORD4",201,0)
 .S RESULT("imagingDetails","commonProcedure")=$S($P(NODE,U,4)=1:"true",1:"false")
"RTN","HMPCORD4",202,0)
 .I $D(RADTYPE($P(NODE,U,3))) M RESULT("dialogAdditionalInformation")=RADDET($P(NODE,U,3))
"RTN","HMPCORD4",203,0)
 Q
"RTN","HMPCORD4",204,0)
 ;
"RTN","HMPCORD4",205,0)
RADTYPE(RADTYPE,RADDET) ;
"RTN","HMPCORD4",206,0)
 ;build radiology type array for reused to load imaging types
"RTN","HMPCORD4",207,0)
 N ABB,CNT,IMGTYP,SUBMIT,TCNT,URG,VALUES,HMPTEMP,HMPX
"RTN","HMPCORD4",208,0)
 D IMTYPSEL^ORWDRA32(.HMPTEMP,"")
"RTN","HMPCORD4",209,0)
 D CAT(.VALUES),TRANS(.VALUES),URGENCY(.VALUES)
"RTN","HMPCORD4",210,0)
 S TCNT=""
"RTN","HMPCORD4",211,0)
 F  S TCNT=$O(HMPTEMP(TCNT)) Q:TCNT=""  D
"RTN","HMPCORD4",212,0)
 .S NODE=HMPTEMP(TCNT)
"RTN","HMPCORD4",213,0)
 .S IMGTYP=$P(NODE,U),ABB=$P(NODE,U,3)
"RTN","HMPCORD4",214,0)
 .D SUBMIT(.VALUES,ABB)
"RTN","HMPCORD4",215,0)
 .S RADTYPE(ABB)=IMGTYP_U_$P(NODE,U,2)_U_$P(NODE,U,4)
"RTN","HMPCORD4",216,0)
 .I $D(VALUES) M RADDET(ABB)=VALUES
"RTN","HMPCORD4",217,0)
 .;Radiology Modifier
"RTN","HMPCORD4",218,0)
 .S I=$O(^RA(79.2,"C",ABB,0)) Q:'I
"RTN","HMPCORD4",219,0)
 .S HMPX=0,CNT=0 F  S HMPX=$O(^RAMIS(71.2,"AB",I,HMPX)) Q:'HMPX  D
"RTN","HMPCORD4",220,0)
 ..S CNT=CNT+1
"RTN","HMPCORD4",221,0)
 ..S RADDET(ABB,"modifier",CNT,"uid")=$$SETUID^HMPUTILS("modifier","",HMPX),RADDET(ABB,"modifier",CNT,"internal")=HMPX
"RTN","HMPCORD4",222,0)
 ..S RADDET(ABB,"modifier",CNT,"name")=$P(^RAMIS(71.2,HMPX,0),U)
"RTN","HMPCORD4",223,0)
 Q
"RTN","HMPCORD4",224,0)
 ;
"RTN","HMPCORD4",225,0)
 ;Transport values
"RTN","HMPCORD4",226,0)
TRANS(RADDET) ;
"RTN","HMPCORD4",227,0)
 N CNT,HMPX
"RTN","HMPCORD4",228,0)
 S CNT=0
"RTN","HMPCORD4",229,0)
 F HMPX="A^AMBULATORY","P^PORTABLE","S^STRETCHER","W^WHEELCHAIR" D
"RTN","HMPCORD4",230,0)
 .S CNT=CNT+1,RADDET("transport",CNT,"uid")=$$SETUID^HMPUTILS("transport","",$P(HMPX,U)),RADDET("transport",CNT,"name")=$P(HMPX,U,2),RADDET("transport",CNT,"internal")=$P(HMPX,U)
"RTN","HMPCORD4",231,0)
 Q
"RTN","HMPCORD4",232,0)
 ;
"RTN","HMPCORD4",233,0)
CAT(RADDET) ;category values
"RTN","HMPCORD4",234,0)
 N CNT,HMPX
"RTN","HMPCORD4",235,0)
 S CNT=0
"RTN","HMPCORD4",236,0)
 F HMPX="I^INPATIENT","O^OUTPATIENT","E^EMPLOYEE","C^CONTRACT","S^SHARING","R^RESEARCH" D
"RTN","HMPCORD4",237,0)
 .S CNT=CNT+1,RADDET("category",CNT,"uid")=$$SETUID^HMPUTILS("transport","",$P(HMPX,U)),RADDET("category",CNT,"name")=$P(HMPX,U,2),RADDET("category",CNT,"internal")=$P(HMPX,U)
"RTN","HMPCORD4",238,0)
 Q
"RTN","HMPCORD4",239,0)
 ;
"RTN","HMPCORD4",240,0)
URGENCY(URG) ; Get the allowable urgencies and default
"RTN","HMPCORD4",241,0)
 N CNT,I,HMPX
"RTN","HMPCORD4",242,0)
 S HMPX="",I=0,CNT=0
"RTN","HMPCORD4",243,0)
 F  S ORX=$O(^ORD(101.42,"S.RA",HMPX)) Q:HMPX=""  D
"RTN","HMPCORD4",244,0)
 . S I=$O(^ORD(101.42,"S.RA",HMPX,0))
"RTN","HMPCORD4",245,0)
 . S URG("urgency",CNT,"uid")=$$SETUID^HMPUTILS("urgency","",I),URG("urgency",CNT,"internal")=I
"RTN","HMPCORD4",246,0)
 . S URG("urgency",CNT,"name")=HMPX
"RTN","HMPCORD4",247,0)
 . S URG("urgency",CNT,"default")="false"
"RTN","HMPCORD4",248,0)
 . S CNT=CNT+1
"RTN","HMPCORD4",249,0)
 S I=$O(^ORD(101.42,"B","ROUTINE",0)) I +I=0 Q
"RTN","HMPCORD4",250,0)
 S CNT=CNT+1
"RTN","HMPCORD4",251,0)
 S URG("urgency",CNT,"uid")=$$SETUID^HMPUTILS("urgency","",I),URG("urgency",CNT,"internal")=I
"RTN","HMPCORD4",252,0)
 S URG("urgency",CNT,"name")="Routine"
"RTN","HMPCORD4",253,0)
 S URG("urgency",CNT,"default")="true"
"RTN","HMPCORD4",254,0)
 Q
"RTN","HMPCORD4",255,0)
 ;
"RTN","HMPCORD4",256,0)
SUBMIT(SUBMIT,IMGTYP) ; Get the locations to which the request may be submitted
"RTN","HMPCORD4",257,0)
 N CNT,FIRST,TMPLST,ASK,HMPX
"RTN","HMPCORD4",258,0)
 S CNT=0
"RTN","HMPCORD4",259,0)
 D EN4^RAO7PC1(IMGTYP,"TMPLST")
"RTN","HMPCORD4",260,0)
 S FIRST=1
"RTN","HMPCORD4",261,0)
 S I=0 F  S I=$O(TMPLST(I)) Q:'I  D
"RTN","HMPCORD4",262,0)
 . S CNT=CNT+1,HMPX=$P(TMPLST(I),U,1,2),SUBMIT("submit",CNT,"name")=$P(HMPX,U,2)
"RTN","HMPCORD4",263,0)
 . S SUBMIT("submit",CNT,"default")=$S(FIRST=1:"true",1:"false")
"RTN","HMPCORD4",264,0)
 . S SUBMIT("submit",CNT,"uid")=$$SETUID^HMPUTILS("imagingLocation","",$P(HMPX,U)),SUBMIT("submit",CNT,"internal")=$P(HMPX,U),FIRST=0
"RTN","HMPCORD4",265,0)
 S HMPX=$$GET^XPAR("ALL","RA SUBMIT PROMPT",1,"Q")
"RTN","HMPCORD4",266,0)
 S ASK=$S($L(HMPX):HMPX,1:1)
"RTN","HMPCORD4",267,0)
 S SUBMIT("askSubmit")=$S(ASK=1:"true",ASK=0:"false",1:"true")
"RTN","HMPCORD4",268,0)
 Q
"RTN","HMPCORD4",269,0)
 ;
"RTN","HMPCORD4",270,0)
QO ;
"RTN","HMPCORD4",271,0)
 N IEN,NAME,NODE,RESULT
"RTN","HMPCORD4",272,0)
 N ERRMSG S ERRMSG="A mumps error occurred while extaracting orderable items."
"RTN","HMPCORD4",273,0)
 S IEN=0 F  S IEN=$O(^ORD(101.41,IEN)) Q:IEN'>0  D
"RTN","HMPCORD4",274,0)
 .N $ES,$ET
"RTN","HMPCORD4",275,0)
 .S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPCORD4",276,0)
 .S NODE=$G(^ORD(101.41,IEN,0)) I $P(NODE,U,4)'="Q" Q
"RTN","HMPCORD4",277,0)
 .S NAME=$S($P(NODE,U,2)'="":$P(NODE,U,2),1:$P(NODE,U))
"RTN","HMPCORD4",278,0)
 .S RESULT("name")=NAME
"RTN","HMPCORD4",279,0)
 .S RESULT("uid")=$$SETUID^HMPUTILS("qo","",IEN),RESULT("internal")=IEN
"RTN","HMPCORD4",280,0)
 .S HMPCNT=HMPCNT+1 D ADD^HMPEF("RESULT")
"RTN","HMPCORD4",281,0)
 I IEN'>0 S HMPFINI=1
"RTN","HMPCORD4",282,0)
 Q
"RTN","HMPCORD4",283,0)
 ;
"RTN","HMPCORD4",284,0)
VALIDOI(OITYPE,IEN) ;
"RTN","HMPCORD4",285,0)
 N TEMP,TYPE
"RTN","HMPCORD4",286,0)
 I $G(^ORD(101.43,IEN,0))'=""
"RTN","HMPCORD4",287,0)
 S TEMP=$P(^ORD(101.43,IEN,0),U,2)
"RTN","HMPCORD4",288,0)
 S TYPE=$P(TEMP,";",2)
"RTN","HMPCORD4",289,0)
 S TYPE=$E(TYPE,3,$L(TYPE))
"RTN","HMPCORD4",290,0)
 I OITYPE="" Q TYPE
"RTN","HMPCORD4",291,0)
 I TYPE["PS" Q TYPE
"RTN","HMPCORD4",292,0)
 I OITYPE[TYPE Q TYPE
"RTN","HMPCORD4",293,0)
 Q ""
"RTN","HMPCORD4",294,0)
 ;
"RTN","HMPCORD5")
0^11^B26286318
"RTN","HMPCORD5",1,0)
HMPCORD5 ;;EJK/AGP -Retreived Orderable Items ; 1/4/13
"RTN","HMPCORD5",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 53
"RTN","HMPCORD5",3,0)
 ;
"RTN","HMPCORD5",4,0)
 ;
"RTN","HMPCORD5",5,0)
IMMTYPE ;
"RTN","HMPCORD5",6,0)
 N ORWLST,ORDT
"RTN","HMPCORD5",7,0)
 S (ORWLST,ORDT)=""
"RTN","HMPCORD5",8,0)
 S (HMPCNT,HMPLAST,HMPI)=0
"RTN","HMPCORD5",9,0)
 N IMM
"RTN","HMPCORD5",10,0)
 ;D IMMTYPE^ORWPCE2(.ORWLST,ORDT)   ;use existing broker call ORWPCE GET IMMUNIZATION TYPE
"RTN","HMPCORD5",11,0)
 N IEN,CNT,BINDEX S (IEN,CNT)=0
"RTN","HMPCORD5",12,0)
 S:'$G(ORDT) ORDT=DT
"RTN","HMPCORD5",13,0)
 F  S IEN=$O(^AUTTIMM(IEN)) Q:IEN=""!(IEN'?1N.N)  D
"RTN","HMPCORD5",14,0)
 . I $D(^AUTTIMM(IEN,0))#2,+$P(^(0),"^",7)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$G(^(0))
"RTN","HMPCORD5",15,0)
 . Q
"RTN","HMPCORD5",16,0)
 S IMM="",HMPIMM=""
"RTN","HMPCORD5",17,0)
 F  S IMM=$O(ORWLST(IMM)) Q:IMM=""  D
"RTN","HMPCORD5",18,0)
 . S HMPIMM("localId")=$P(ORWLST(IMM),"^",1)  ;get the ien for each item found
"RTN","HMPCORD5",19,0)
 . S HMPIMM("name")=$P(ORWLST(IMM),"^",2) ;get the name for each item found
"RTN","HMPCORD5",20,0)
 . S HMPIMM("mnemonic")=$P(ORWLST(IMM),"^",3)  ;get the mnemonic for each entry
"RTN","HMPCORD5",21,0)
 . S HMPIMM("uid")=$$SETUID^HMPUTILS("immunization",,HMPIMM("localId"))  ;set the uid string
"RTN","HMPCORD5",22,0)
 . S HMPCNT=HMPCNT+1
"RTN","HMPCORD5",23,0)
 . D ADD^HMPEF("HMPIMM") S HMPLAST=HMPCNT  ;add it to the JSON results array
"RTN","HMPCORD5",24,0)
 . Q
"RTN","HMPCORD5",25,0)
 S HMPFINI=1
"RTN","HMPCORD5",26,0)
 Q
"RTN","HMPCORD5",27,0)
 ;
"RTN","HMPCORD5",28,0)
SIGNS ;
"RTN","HMPCORD5",29,0)
 N IEN,NAME,HMPSS
"RTN","HMPCORD5",30,0)
 S IEN=0,HMPCNT=0,HMPI=0
"RTN","HMPCORD5",31,0)
 F  S IEN=$O(^GMRD(120.83,IEN)) Q:IEN=""!(IEN'?1N.N)  D
"RTN","HMPCORD5",32,0)
 . S NAME=$P($G(^GMRD(120.83,IEN,0)),"^",1)
"RTN","HMPCORD5",33,0)
 . Q:NAME']""
"RTN","HMPCORD5",34,0)
 . S HMPSS("localId")=IEN
"RTN","HMPCORD5",35,0)
 . S HMPSS("name")=NAME
"RTN","HMPCORD5",36,0)
 . S HMPSS("uid")=$$SETUID^HMPUTILS("sign-symptom",,HMPSS("localId"))
"RTN","HMPCORD5",37,0)
 . S HMPCNT=HMPCNT+1
"RTN","HMPCORD5",38,0)
 . D ADD^HMPEF("HMPSS") S HMPLAST=HMPCNT
"RTN","HMPCORD5",39,0)
 . Q
"RTN","HMPCORD5",40,0)
 S HMPFINI=1
"RTN","HMPCORD5",41,0)
 Q
"RTN","HMPCORD5",42,0)
 ;
"RTN","HMPCORD5",43,0)
ALLTYPE ;
"RTN","HMPCORD5",44,0)
 N ORX,ROOT,XP,CNT,ORFILE,ORSRC,ORIEN,ORREAX,ALLCNT,ALLLAST S ORIEN=0,CNT=0,ORSRC=0,ORFILE="",ALLCNT=0,ALLLAST=0
"RTN","HMPCORD5",45,0)
 S X=""
"RTN","HMPCORD5",46,0)
 ;F ROOT="^GMRD(120.82)","^PSNDF(50.6)","^PSNDF(50.67)","^PSDRUG(""B"")","^PS(50.416)","^PS(50.605)" D
"RTN","HMPCORD5",47,0)
 ;F ROOT="^GMRD(120.82,""B"")","^GMRD(120.82,""D"")","^PSDRUG(""C"")","^PS(50.416,""P"")","^PS(50.605,""C"")",$$B^PSNAPIS,$$T^PSNAPIS,"^PSDRUG(""B"")" D
"RTN","HMPCORD5",48,0)
 F ROOT="^GMRD(120.82,""B"")","^PSDRUG(""C"")","^PS(50.416,""P"")","^PS(50.605,""C"")",$$B^PSNAPIS,$$T^PSNAPIS,"^PSDRUG(""B"")" D
"RTN","HMPCORD5",49,0)
 . S ORSRC=$G(ORSRC)+1,ORFILE=$P(ROOT,",",1)_")",ORSRC(ORSRC)=$P($T(FILENAME+ORSRC),";;",2)
"RTN","HMPCORD5",50,0)
 . I (ORSRC'=2),(ORSRC'=6) S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=ORSRC_U_ORSRC(ORSRC)_U_U_U_"TOP"_U_"+"
"RTN","HMPCORD5",51,0)
 . I ORSRC=1!(ORSRC=2) D
"RTN","HMPCORD5",52,0)
 .. F  S X=$O(@ROOT@(X)) Q:X=""  D
"RTN","HMPCORD5",53,0)
 ... I ORSRC=1,X="OTHER ALLERGY/ADVERSE REACTION" Q  ;don't send this entry
"RTN","HMPCORD5",54,0)
 ... S ORIEN=$O(@ROOT@(X,0))
"RTN","HMPCORD5",55,0)
 ... I $L($T(SCREEN^XTID)) I $$SCREEN^XTID(120.82,.01,ORIEN_",") Q  ;233 Is term active?
"RTN","HMPCORD5",56,0)
 ... I ORSRC=2 S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=ORIEN_U_$P($G(^GMRD(120.82,+ORIEN,0)),U,1)_" <"_X_">"_ROOT
"RTN","HMPCORD5",57,0)
 ... I ORSRC'=2  S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=ORIEN_U_X_ROOT
"RTN","HMPCORD5",58,0)
 ... S Y(ORIEN_";"_ROOT)=Y(ORIEN_";"_ROOT)_U_$P($G(^GMRD(120.82,+ORIEN,0)),U,2)_U_$S(ORSRC=2:1,1:ORSRC)
"RTN","HMPCORD5",59,0)
 .. S XP=X F  S XP=$O(@ROOT@(XP)) Q:XP=""  Q:$E(XP,1,$L(X))'=X  D
"RTN","HMPCORD5",60,0)
 ... I ORSRC=1,XP="OTHER ALLERGY/ADVERSE REACTION" Q  ;don't send this entry
"RTN","HMPCORD5",61,0)
 ... S ORIEN=$O(@ROOT@(XP,0))
"RTN","HMPCORD5",62,0)
 ... I $L($T(SCREEN^XTID)) I $$SCREEN^XTID(120.82,.01,ORIEN_",") Q  ;233 Is term active?
"RTN","HMPCORD5",63,0)
 ... I ORSRC=2 S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=ORIEN_U_$P($G(^GMRD(120.82,+ORIEN,0)),U,1)_" <"_XP_">"_ROOT ; partial matches
"RTN","HMPCORD5",64,0)
 ... I ORSRC'=2  S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=ORIEN_U_XP_ROOT
"RTN","HMPCORD5",65,0)
 ... S:'$D(Y(ORIEN_";"_ROOT)) Y(ORIEN_";"_ROOT)=Y(ORIEN_";"_ROOT)_U_$P($G(^GMRD(120.82,+ORIEN,0)),U,2)_U_$S(ORSRC=2:1,1:ORSRC)
"RTN","HMPCORD5",66,0)
 .. I (ORSRC>2),(ORSRC'=4),(ORSRC'=5),(ORSRC'=6) D
"RTN","HMPCORD5",67,0)
 .. N CODE,LIST,VAL,NAME
"RTN","HMPCORD5",68,0)
 .. S CODE=$S(ORSRC=3:"S VAL=$$TGTOG2^PSNAPIS(X,.LIST)",ORSRC=4:"D TRDNAME(X,.LIST)",ORSRC=7:"D INGSRCH(X,.LIST)",ORSRC=8:"D CLASRCH(X,.LIST)",1:"") Q:'$L(CODE)
"RTN","HMPCORD5",69,0)
 .. X CODE I $D(LIST) S ORIEN=0 F  S ORIEN=$O(LIST(ORIEN)) Q:'ORIEN  D
"RTN","HMPCORD5",70,0)
 ... S NAME=$P(LIST(ORIEN),U,2)
"RTN","HMPCORD5",71,0)
 ... Q:$E($P(LIST(ORIEN),U,2),1,$L(X))'=X
"RTN","HMPCORD5",72,0)
 ... I $L($T(SCREEN^XTID)) I $$SCREEN^XTID($S(ORSRC=3:50.6,(ORSRC=4):50.6,ORSRC=7:50.416,ORSRC=8:50.605,1:0),.01,ORIEN_",") Q
"RTN","HMPCORD5",73,0)
 ... S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=ORIEN_U_NAME_ROOT_U_"D"_U_ORSRC
"RTN","HMPCORD5",74,0)
 .. I ORSRC=4 D
"RTN","HMPCORD5",75,0)
 .. N CODE,LIST,VAL,NAME
"RTN","HMPCORD5",76,0)
 .. S CODE="D TRDNAME(X,.LIST)"
"RTN","HMPCORD5",77,0)
 .. X CODE I $D(LIST) S ORIEN=0 F  S ORIEN=$O(LIST(ORIEN)) Q:'ORIEN  D
"RTN","HMPCORD5",78,0)
 ... S NAME=$P(LIST(ORIEN),U,2)
"RTN","HMPCORD5",79,0)
 ... Q:$E($P(LIST(ORIEN),U,2),1,$L(X))'=X
"RTN","HMPCORD5",80,0)
 ... I $L($T(SCREEN^XTID)) I $$SCREEN^XTID(50.6,.01,+LIST(ORIEN)_",") Q
"RTN","HMPCORD5",81,0)
 ... S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=+LIST(ORIEN)_U_NAME_ROOT_U_"D"_U_ORSRC
"RTN","HMPCORD5",82,0)
 S CNT=""
"RTN","HMPCORD5",83,0)
 F  S CNT=$O(Y(CNT)) Q:CNT=""  D
"RTN","HMPCORD5",84,0)
 . K ALLERGY
"RTN","HMPCORD5",85,0)
 . S ALLITEM=$G(Y(CNT))
"RTN","HMPCORD5",86,0)
 . I Y(CNT)["^TOP^+" Q
"RTN","HMPCORD5",87,0)
 . I Y(CNT)'["^TOP^+" D
"RTN","HMPCORD5",88,0)
 .. S ALLERGY("localId")=$P(ALLITEM,"^",1)
"RTN","HMPCORD5",89,0)
 .. S ALLERGY("name")=$P(ALLITEM,"^",2)
"RTN","HMPCORD5",90,0)
 .. S ALLERGY("root")=$P(ALLITEM,"^",3)
"RTN","HMPCORD5",91,0)
 .. S ALLERGY("uid")=$$SETUID^HMPUTILS("allergy-list",,ALLERGY("localId")_";"_$TR(ALLERGY("root"),"""",""))  ;set the uid string
"RTN","HMPCORD5",92,0)
 .. S HMPCNT=$G(HMPCNT)+1 D ADD^HMPEF("ALLERGY") S HMPLAST=HMPCNT
"RTN","HMPCORD5",93,0)
 .. Q
"RTN","HMPCORD5",94,0)
 . Q
"RTN","HMPCORD5",95,0)
 S HMPFINI=1
"RTN","HMPCORD5",96,0)
 Q
"RTN","HMPCORD5",97,0)
 ;
"RTN","HMPCORD5",98,0)
VTYPE
"RTN","HMPCORD5",99,0)
 N IEN
"RTN","HMPCORD5",100,0)
 S (HMPCNT,HMPI,HMPLAST,IEN)=0
"RTN","HMPCORD5",101,0)
 F  S IEN=$O(^GMRD(120.51,IEN)) Q:IEN=""!(IEN'?1N.N)  D
"RTN","HMPCORD5",102,0)
 . S VTYPE("localId")=IEN
"RTN","HMPCORD5",103,0)
 . S VTYPE("name")=$P(^GMRD(120.51,IEN,0),"^",1)
"RTN","HMPCORD5",104,0)
 . S VTYPE("abbreviation")=$P(^GMRD(120.51,IEN,0),"^",2)
"RTN","HMPCORD5",105,0)
 . S VTYPE("rate")=$P(^GMRD(120.51,IEN,0),"^",4)
"RTN","HMPCORD5",106,0)
 . I VTYPE("rate")]"" S VTYPE("rate")=$S(VTYPE("rate")=1:"YES",1:"NO")
"RTN","HMPCORD5",107,0)
 . S VTYPE("pce")=$P(^GMRD(120.51,IEN,0),"^",7)
"RTN","HMPCORD5",108,0)
 . S VTYPE("vuid")="urn:va:vuid:"_$P($G(^GMRD(120.51,IEN,"VUID")),"^",1)
"RTN","HMPCORD5",109,0)
 . S VTYPE("masterVuid")=$P($G(^GMRD(120.51,IEN,"VUID")),"^",2)
"RTN","HMPCORD5",110,0)
 . I VTYPE("masterVuid")]"" S VTYPE("masterVuid")=$S(VTYPE("masterVuid")=1:"YES",1:"NO")
"RTN","HMPCORD5",111,0)
 . S VTYPE("effective")=$P($G(^GMRD(120.51,IEN,"TERMSTATUS",1,0)),"^",1)
"RTN","HMPCORD5",112,0)
 . I VTYPE("effective")]"" S VTYPE("effective")=$$JSONDT^HMPUTILS(VTYPE("effective"))
"RTN","HMPCORD5",113,0)
 . S VTYPE("status")=$P($G(^GMRD(120.51,IEN,"TERMSTATUS",1,0)),"^",2)
"RTN","HMPCORD5",114,0)
 . I VTYPE("status")]"" S VTYPE("status")=$S(VTYPE("status")=1:"ACTIVE",1:"INACTIVE")
"RTN","HMPCORD5",115,0)
 . S VTYPE("uid")=$$SETUID^HMPUTILS("vital-type",,VTYPE("localId"))
"RTN","HMPCORD5",116,0)
 . S HMPCNT=HMPCNT+1 D ADD^HMPEF("VTYPE") S HMPLAST=HMPCNT
"RTN","HMPCORD5",117,0)
 S HMPFINI=1
"RTN","HMPCORD5",118,0)
 Q
"RTN","HMPCORD5",119,0)
 ;
"RTN","HMPCORD5",120,0)
VQUAL
"RTN","HMPCORD5",121,0)
 N IEN,I
"RTN","HMPCORD5",122,0)
 S (HMPCNT,HMPI,HMPLAST,IEN)=0
"RTN","HMPCORD5",123,0)
 F  S IEN=$O(^GMRD(120.52,IEN)) Q:IEN=""!(IEN'?1N.N)  D
"RTN","HMPCORD5",124,0)
 . S VQUAL("localId")=IEN
"RTN","HMPCORD5",125,0)
 . S VQUAL("synonym")=$P(^GMRD(120.52,IEN,0),"^",2)
"RTN","HMPCORD5",126,0)
 . S I=0
"RTN","HMPCORD5",127,0)
 . K VQUAL("vtype") ;ejk - stop bleed over from previous extracts. 
"RTN","HMPCORD5",128,0)
 . F  S I=$O(^GMRD(120.52,IEN,1,I)) Q:I=""!(I'?1N.N)  D
"RTN","HMPCORD5",129,0)
 .. S VQUAL("vtype",I,"vitalType")=$P($G(^GMRD(120.52,IEN,1,I,0)),"^",1)
"RTN","HMPCORD5",130,0)
 .. S VQUAL("vtype",I,"category")=$P($G(^GMRD(120.52,IEN,1,I,0)),"^",2)
"RTN","HMPCORD5",131,0)
 .. ;ejk DE294 - vital type and vital category need to be presented as urn entries and not the name
"RTN","HMPCORD5",132,0)
 .. ;I VQUAL("vtype",I,"vitalType")]"" S VQUAL("vtype",I,"vitalType")=$P($G(^GMRD(120.51,I,0)),"^",1)
"RTN","HMPCORD5",133,0)
 .. ;I VQUAL("vtype",I,"category")]"" S VQUAL("vtype",I,"category")=$P($G(^GMRD(120.53,I,0)),"^",1)
"RTN","HMPCORD5",134,0)
 .. I VQUAL("vtype",I,"vitalType")]"" S VQUAL("vtype",I,"vitalType")=$$SETUID^HMPUTILS("vital-type",,VQUAL("vtype",I,"vitalType"))
"RTN","HMPCORD5",135,0)
 .. I VQUAL("vtype",I,"category")]"" S VQUAL("vtype",I,"category")=$$SETUID^HMPUTILS("vital-category",,VQUAL("vtype",I,"category"))
"RTN","HMPCORD5",136,0)
 .. Q
"RTN","HMPCORD5",137,0)
 . S VQUAL("vuid")="urn:va:vuid:"_$P($G(^GMRD(120.52,IEN,"VUID")),"^",1)
"RTN","HMPCORD5",138,0)
 . S VQUAL("masterVuid")=$P($G(^GMRD(120.52,IEN,"VUID")),"^",2)
"RTN","HMPCORD5",139,0)
 . I VQUAL("masterVuid")]"" S VQUAL("masterVuid")=$S(VQUAL("masterVuid")=1:"YES",1:"NO")
"RTN","HMPCORD5",140,0)
 . S VQUAL("effectiveDate")=$P($G(^GMRD(120.52,IEN,"TERMSTATUS",1,0)),"^",1)
"RTN","HMPCORD5",141,0)
 . I VQUAL("effectiveDate")]"" S VQUAL("effectiveDate")=$$JSONDT^HMPUTILS(VQUAL("effectiveDate"))
"RTN","HMPCORD5",142,0)
 . S VQUAL("status")=$P($G(^GMRD(120.52,IEN,"TERMSTATUS",1,0)),"^",2)
"RTN","HMPCORD5",143,0)
 . I VQUAL("status")]"" S VQUAL("status")=$S(VQUAL("status")=1:"ACTIVE",1:"INACTIVE")
"RTN","HMPCORD5",144,0)
 . S VQUAL("uid")=$$SETUID^HMPUTILS("vital-qualifier",,VQUAL("localId"))
"RTN","HMPCORD5",145,0)
 . S VQUAL("qualifier")=$$SETUID^HMPUTILS("vital-qualifier",,VQUAL("localId"))
"RTN","HMPCORD5",146,0)
 . ;ejk DE295 do not include qualifier if it is the same value as the uid
"RTN","HMPCORD5",147,0)
 . I VQUAL("uid")=VQUAL("qualifier") K VQUAL("qualifier")
"RTN","HMPCORD5",148,0)
 . S HMPCNT=HMPCNT+1 D ADD^HMPEF("VQUAL") S HMPLAST=HMPCNT
"RTN","HMPCORD5",149,0)
 S HMPFINI=1
"RTN","HMPCORD5",150,0)
 Q
"RTN","HMPCORD5",151,0)
 ;
"RTN","HMPCORD5",152,0)
VCAT
"RTN","HMPCORD5",153,0)
 N IEN,I
"RTN","HMPCORD5",154,0)
 S (HMPCNT,HMPI,HMPLAST,IEN)=0
"RTN","HMPCORD5",155,0)
 F  S IEN=$O(^GMRD(120.53,IEN)) Q:IEN=""!(IEN'?1N.N)  D
"RTN","HMPCORD5",156,0)
 . S VCAT("localId")=IEN
"RTN","HMPCORD5",157,0)
 . I $P($G(^GMRD(120.53,IEN,0)),"^",1)]"" S VCAT("category")=$P(^GMRD(120.53,IEN,0),"^",1)
"RTN","HMPCORD5",158,0)
 . I $P($G(^GMRD(120.53,IEN,0)),"^",2)]"" S VCAT("synonym")=$P(^GMRD(120.53,IEN,0),"^",2)
"RTN","HMPCORD5",159,0)
 . I $G(VCAT("synonym"))="" K VCAT("synonym")
"RTN","HMPCORD5",160,0)
 . S I=0
"RTN","HMPCORD5",161,0)
 . ;EJK - kill off vtype array to stop inheriting values from previous extracts
"RTN","HMPCORD5",162,0)
 . K VCAT("vtype")
"RTN","HMPCORD5",163,0)
 . F  S I=$O(^GMRD(120.53,IEN,1,I)) Q:I=""!(I'?1N.N)  D
"RTN","HMPCORD5",164,0)
 .. ;ejk DE298 do not send null values. 
"RTN","HMPCORD5",165,0)
 .. I $P($G(^GMRD(120.53,IEN,1,I,0)),"^",1)]"" S VCAT("vtype",I,"vitalType")=$P($G(^GMRD(120.53,IEN,1,I,0)),"^",1)
"RTN","HMPCORD5",166,0)
 .. I VCAT("vtype",I,"vitalType")]"" S VCAT("vtype",I,"vitalType")=$$SETUID^HMPUTILS("vital-type",,VCAT("vtype",I,"vitalType"))
"RTN","HMPCORD5",167,0)
 .. I $P($G(^GMRD(120.53,IEN,1,I,0)),"^",3)]"" S VCAT("vtype",I,"maxEntries")=$P($G(^GMRD(120.53,IEN,1,I,0)),"^",3)
"RTN","HMPCORD5",168,0)
 .. I $P($G(^GMRD(120.53,IEN,1,I,0)),"^",5)]"" S VCAT("vtype",I,"printOrder")=$P($G(^GMRD(120.53,IEN,1,I,0)),"^",5)
"RTN","HMPCORD5",169,0)
 .. I $P($G(^GMRD(120.53,IEN,1,I,0)),"^",6)]"" S VCAT("vtype",I,"editOrder")=$P($G(^GMRD(120.53,IEN,1,I,0)),"^",6)
"RTN","HMPCORD5",170,0)
 .. I $P($G(^GMRD(120.53,IEN,1,I,0)),"^",7)]"" S VCAT("vtype",I,"defaultQualifier")=$P($G(^GMRD(120.53,IEN,1,I,0)),"^",7),VCAT("vtype",I,"defaultQualifier")=$$SETUID^HMPUTILS("vital-qualifier",,VCAT("vtype",I,"defaultQualifier"))
"RTN","HMPCORD5",171,0)
 .. Q
"RTN","HMPCORD5",172,0)
 . S VCAT("vuid")="urn:va:vuid:"_$P($G(^GMRD(120.53,IEN,"VUID")),"^",1)
"RTN","HMPCORD5",173,0)
 . S VCAT("masterVuid")=$P($G(^GMRD(120.53,IEN,"VUID")),"^",2)
"RTN","HMPCORD5",174,0)
 . I VCAT("masterVuid")]"" S VCAT("masterVuid")=$S(VCAT("masterVuid")=1:"YES",1:"NO")
"RTN","HMPCORD5",175,0)
 . S VCAT("effectiveDate")=$P($G(^GMRD(120.53,IEN,"TERMSTATUS",1,0)),"^",1)
"RTN","HMPCORD5",176,0)
 . I VCAT("effectiveDate")]"" S VCAT("effectiveDate")=$$JSONDT^HMPUTILS(VCAT("effectiveDate"))
"RTN","HMPCORD5",177,0)
 . S VCAT("status")=$P($G(^GMRD(120.53,IEN,"TERMSTATUS",1,0)),"^",2)
"RTN","HMPCORD5",178,0)
 . I VCAT("status")]"" S VCAT("status")=$S(VCAT("status")=1:"ACTIVE",1:"INACTIVE")
"RTN","HMPCORD5",179,0)
 . S VCAT("uid")=$$SETUID^HMPUTILS("vital-category",,VCAT("localId"))
"RTN","HMPCORD5",180,0)
 . S HMPCNT=HMPCNT+1 D ADD^HMPEF("VCAT") S HMPLAST=HMPCNT
"RTN","HMPCORD5",181,0)
 . Q
"RTN","HMPCORD5",182,0)
 S HMPFINI=1
"RTN","HMPCORD5",183,0)
 Q
"RTN","HMPCORD5",184,0)
 ;
"RTN","HMPCORD5",185,0)
INGSRCH(NAME,LIST) ;
"RTN","HMPCORD5",186,0)
 K ^TMP($J,"ORWDAL32")
"RTN","HMPCORD5",187,0)
 D NAME^PSN50P41(NAME,"ORWDAL32")
"RTN","HMPCORD5",188,0)
 I $D(^TMP($J,"ORWDAL32","P")) D
"RTN","HMPCORD5",189,0)
 . N I S I="" F  S I=$O(^TMP($J,"ORWDAL32","P",I)) Q:I=""  D
"RTN","HMPCORD5",190,0)
 .. N J S J=0 F  S J=$O(^TMP($J,"ORWDAL32","P",I,J)) Q:'J  S LIST(J)=J_U_I
"RTN","HMPCORD5",191,0)
 K ^TMP($J,"ORWDAL32")
"RTN","HMPCORD5",192,0)
 Q
"RTN","HMPCORD5",193,0)
CLASRCH(NAME,LIST) ;
"RTN","HMPCORD5",194,0)
 K ^TMP($J,"ORWDAL32")
"RTN","HMPCORD5",195,0)
 D C^PSN50P65(,NAME,"ORWDAL32")
"RTN","HMPCORD5",196,0)
 I $D(^TMP($J,"ORWDAL32","C")) D
"RTN","HMPCORD5",197,0)
 . N I S I="" F  S I=$O(^TMP($J,"ORWDAL32","C",I)) Q:I=""  D
"RTN","HMPCORD5",198,0)
 .. N J S J=0 F  S J=$O(^TMP($J,"ORWDAL32","C",I,J)) Q:'J  S LIST(J)=J_U_$G(^TMP($J,"ORWDAL32",J,1))
"RTN","HMPCORD5",199,0)
 K ^TMP($J,"ORWDAL32")
"RTN","HMPCORD5",200,0)
 Q
"RTN","HMPCORD5",201,0)
TRDNAME(NAME,LIST) ;
"RTN","HMPCORD5",202,0)
 K ^TMP($J,"ORWDAL32")
"RTN","HMPCORD5",203,0)
 D ALL^PSN5067(,NAME,,"ORWDAL32")
"RTN","HMPCORD5",204,0)
 I $D(^TMP($J,"ORWDAL32","B")) D
"RTN","HMPCORD5",205,0)
 . N I S I="" F  S I=$O(^TMP($J,"ORWDAL32","B",I)) Q:I=""  D
"RTN","HMPCORD5",206,0)
 .. N J,K S J=$O(^TMP($J,"ORWDAL32","B",I,0)) Q:'J  S K=$$TGTOG^PSNAPIS(I),LIST(J)=K_U_$G(^TMP($J,"ORWDAL32",J,4))
"RTN","HMPCORD5",207,0)
 K ^TMP($J,"ORWDAL32")
"RTN","HMPCORD5",208,0)
 Q
"RTN","HMPCORD5",209,0)
FILENAME ; Display text of filenames for search treeview
"RTN","HMPCORD5",210,0)
 ;;VA Allergies File
"RTN","HMPCORD5",211,0)
 ;;VA Allergies File (Synonyms)  SPACER ONLY - NOT DISPLAYED
"RTN","HMPCORD5",212,0)
 ;;National Drug File - Generic Drug Name
"RTN","HMPCORD5",213,0)
 ;;National Drug file - Trade Name
"RTN","HMPCORD5",214,0)
 ;;Local Drug File
"RTN","HMPCORD5",215,0)
 ;;Local Drug File (Synonyms)  SPACER ONLY - NOT DISPLAYED
"RTN","HMPCORD5",216,0)
 ;;Drug Ingredients File
"RTN","HMPCORD5",217,0)
 ;;VA Drug Class File
"RTN","HMPCORD5",218,0)
 ;;
"RTN","HMPCPAT")
0^13^B1066536
"RTN","HMPCPAT",1,0)
HMPCPAT ;SLC/AGP - Patient Information Controller for HMP ; 12/12/13 8:52pm
"RTN","HMPCPAT",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPCPAT",3,0)
 ;
"RTN","HMPCPAT",4,0)
ADD(X) ; Add a line @NHIN@(n)=X
"RTN","HMPCPAT",5,0)
 S HMPCNT=$G(HMPCNT)+1
"RTN","HMPCPAT",6,0)
 S @HMPXML@(HMPCNT)=X
"RTN","HMPCPAT",7,0)
 Q
"RTN","HMPCPAT",8,0)
 ;
"RTN","HMPCPAT",9,0)
RPC(HMPXML,PARAMS) ; Process request via RPC instead of CSP
"RTN","HMPCPAT",10,0)
 N X,REQ,HMPCNT,HMPSITE,HMPUSER,HMPDBUG,HMPSTA
"RTN","HMPCPAT",11,0)
 S HMPXML=$NA(^TMP($J,"HMP RESULTS")) K @HMPXML
"RTN","HMPCPAT",12,0)
 S HMPCNT=0
"RTN","HMPCPAT",13,0)
 S HMPUSER=DUZ,HMPSITE=DUZ(2),HMPSTA=$$STA^XUAF4(DUZ(2))
"RTN","HMPCPAT",14,0)
 S X="" F  S X=$O(PARAMS(X)) Q:X=""  S REQ(X,1)=PARAMS(X)
"RTN","HMPCPAT",15,0)
 ;
"RTN","HMPCPAT",16,0)
COMMON ; Come here for both CSP and RPC Mode
"RTN","HMPCPAT",17,0)
 ;
"RTN","HMPCPAT",18,0)
 N CMD
"RTN","HMPCPAT",19,0)
 S CMD=$G(REQ("command",1))
"RTN","HMPCPAT",20,0)
 D ADD("<results>")
"RTN","HMPCPAT",21,0)
 ;
"RTN","HMPCPAT",22,0)
 I CMD="getPatPcmmInfo" D  G OUT
"RTN","HMPCPAT",23,0)
 . D GETPCMM^HMPCPAT1($$VAL("patient"))
"RTN","HMPCPAT",24,0)
 ;
"RTN","HMPCPAT",25,0)
OUT ; output the XML
"RTN","HMPCPAT",26,0)
 D ADD("</results>")
"RTN","HMPCPAT",27,0)
 ;I EDPDBUG D PUTXML^EDPCDBG(EDPDBUG,.EDPXML)
"RTN","HMPCPAT",28,0)
 ;I $L($G(EDPHTTP)) D        ; if in CSP mode
"RTN","HMPCPAT",29,0)
 ;. U EDPHTTP
"RTN","HMPCPAT",30,0)
 ;. W "<results>",!
"RTN","HMPCPAT",31,0)
 ;. N I S I=0 F  S I=$O(EDPXML(I)) Q:'I  W EDPXML(I),!
"RTN","HMPCPAT",32,0)
 ;. W "</results>",!
"RTN","HMPCPAT",33,0)
END Q
"RTN","HMPCPAT",34,0)
 ;
"RTN","HMPCPAT",35,0)
VAL(X) ; return value from request
"RTN","HMPCPAT",36,0)
 Q $G(REQ(X,1))
"RTN","HMPCPAT1")
0^12^B7016891
"RTN","HMPCPAT1",1,0)
HMPCPAT1 ; SLC/AGP,JLC - Process Patient Request from AVIVA System. ; 05/27/2011
"RTN","HMPCPAT1",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPCPAT1",3,0)
 Q
"RTN","HMPCPAT1",4,0)
 ;
"RTN","HMPCPAT1",5,0)
ADD(X) ; Add a line @NHIN@(n)=X
"RTN","HMPCPAT1",6,0)
 S HMPCNT=$G(HMPCNT)+1
"RTN","HMPCPAT1",7,0)
 S @HMPXML@(HMPCNT)=X
"RTN","HMPCPAT1",8,0)
 Q
"RTN","HMPCPAT1",9,0)
 ;
"RTN","HMPCPAT1",10,0)
AE(TEXT) ;
"RTN","HMPCPAT1",11,0)
 S HMPERCNT=HMPERCNT+1
"RTN","HMPCPAT1",12,0)
 S HMPERARR(HMPERCNT)=TEXT
"RTN","HMPCPAT1",13,0)
 Q
"RTN","HMPCPAT1",14,0)
 ;
"RTN","HMPCPAT1",15,0)
AEM(TEXT) ;
"RTN","HMPCPAT1",16,0)
 N NUM
"RTN","HMPCPAT1",17,0)
 S NUM=0 F  S NUM=$O(TEXT(NUM)) Q:NUM'>0  D
"RTN","HMPCPAT1",18,0)
 .S HMPERCNT=HMPERCNT+1
"RTN","HMPCPAT1",19,0)
 .S HMPERARR(HMPERCNT)=TEXT(NUM)
"RTN","HMPCPAT1",20,0)
 Q
"RTN","HMPCPAT1",21,0)
 ;
"RTN","HMPCPAT1",22,0)
GETPCMM(ICN) ;
"RTN","HMPCPAT1",23,0)
 N DFN,HMPDATA,HMPDCNT,HMPERARR,HMPERCNT
"RTN","HMPCPAT1",24,0)
 S HMPERCNT=0,HMPDCNT=0
"RTN","HMPCPAT1",25,0)
 S DFN=$$GETDFN^MPIF001(ICN) I DFN'>0 D AE("Cannot find patient dfn from ICN") G EXIT
"RTN","HMPCPAT1",26,0)
 N PCT,PCP,ATT,ASS
"RTN","HMPCPAT1",27,0)
 S PCT=$$OUTPTTM^SDUTL3(DFN,DT) I $P(PCT,U)>0 S HMPDCNT=HMPDCNT+1,HMPDATA(HMPDCNT)="<team id='"_$P(PCT,U)_"' value='"_$$ESC^HMPD($P(PCT,U,2))_"'/>"
"RTN","HMPCPAT1",28,0)
 S PCP=$$OUTPTPR^SDUTL3(DFN,DT) I $P(PCP,U)>0 S HMPDCNT=HMPDCNT+1,HMPDATA(HMPDCNT)="<primaryProvider id='"_$P(PCP,U)_"' value='"_$$ESC^HMPD($P(PCP,U,2))_"'/>"
"RTN","HMPCPAT1",29,0)
 S ATT=$G(^DPT(DFN,.1041)) I ATT S HMPDCNT=HMPDCNT+1,HMPDATA(HMPDCNT)="<attendingProvider id='"_ATT_"' value='"_$$ESC^HMPD($P($G(^VA(200,ATT,0)),U))_"'/>"
"RTN","HMPCPAT1",30,0)
 S ASS=$$OUTPTAP^SDUTL3(DFN,DT) I $P(ASS,U)>0 S HMPDCNT=HMPDCNT+1,HMPDATA(HMPDCNT)="<associateProvider id='"_$P(ASS,U)_"' value='"_$$ESC^HMPD($P(ASS,U,2))_"'/>"
"RTN","HMPCPAT1",31,0)
 G EXIT
"RTN","HMPCPAT1",32,0)
 Q
"RTN","HMPCPAT1",33,0)
 ;
"RTN","HMPCPAT1",34,0)
EXIT ;
"RTN","HMPCPAT1",35,0)
 N CNT
"RTN","HMPCPAT1",36,0)
 I $D(HMPERARR) D  Q
"RTN","HMPCPAT1",37,0)
 .D ADD("<success>false</success>")
"RTN","HMPCPAT1",38,0)
 .D ADD("<error>")
"RTN","HMPCPAT1",39,0)
 .D ADD("<message xml:space='preserve'/>")
"RTN","HMPCPAT1",40,0)
 .S CNT=0 F  S CNT=$O(HMPERARR(CNT)) Q:CNT'>0  D
"RTN","HMPCPAT1",41,0)
 ..D ADD($$ESC^HMPD(HMPERARR(CNT)))
"RTN","HMPCPAT1",42,0)
 .D ADD("</error>")
"RTN","HMPCPAT1",43,0)
 D ADD("<success>true</success>")
"RTN","HMPCPAT1",44,0)
 D ADD("<data>")
"RTN","HMPCPAT1",45,0)
 S CNT=0 F  S CNT=$O(HMPDATA(CNT)) Q:CNT'>0  D
"RTN","HMPCPAT1",46,0)
 .D ADD(HMPDATA(CNT))
"RTN","HMPCPAT1",47,0)
 D ADD("</data>")
"RTN","HMPCPAT1",48,0)
 Q
"RTN","HMPCPRS")
0^14^B4924700
"RTN","HMPCPRS",1,0)
HMPCPRS ;SLC/AGP - CPRS RPC for  ; 9/21/12 5:57pm
"RTN","HMPCPRS",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPCPRS",3,0)
 ;
"RTN","HMPCPRS",4,0)
 ;
"RTN","HMPCPRS",5,0)
RPC(HMPOUT,PARAMS) ; Process request via RPC instead of CSP
"RTN","HMPCPRS",6,0)
 N X,REQ,HMPCNT,HMPSITE,HMPUSER,HMPDBUG,HMPSTA
"RTN","HMPCPRS",7,0)
 S HMPCNT=0
"RTN","HMPCPRS",8,0)
 S HMPUSER=DUZ,HMPSITE=DUZ(2),HMPSTA=$$STA^XUAF4(DUZ(2))
"RTN","HMPCPRS",9,0)
 S X="" F  S X=$O(PARAMS(X)) Q:X=""  S REQ(X,1)=PARAMS(X)
"RTN","HMPCPRS",10,0)
 ;
"RTN","HMPCPRS",11,0)
COMMON ; Come here for both CSP and RPC Mode
"RTN","HMPCPRS",12,0)
 ;
"RTN","HMPCPRS",13,0)
 N CMD
"RTN","HMPCPRS",14,0)
 S CMD=$G(REQ("command",1))
"RTN","HMPCPRS",15,0)
 ;
"RTN","HMPCPRS",16,0)
 ; returns an order structure for change orders
"RTN","HMPCPRS",17,0)
 ; or places an order if auto-accept QO
"RTN","HMPCPRS",18,0)
 I CMD="alerts" D  G OUT
"RTN","HMPCPRS",19,0)
 . D ALERTS(.HMPOUT)
"RTN","HMPCPRS",20,0)
 ;
"RTN","HMPCPRS",21,0)
 I CMD="reminders" D  G OUT
"RTN","HMPCPRS",22,0)
 .D EVALLIST^HMPPXRM(.HMPOUT,$$VAL("patientId"),$$VAL("userId"),$$VAL("location"))
"RTN","HMPCPRS",23,0)
 ;
"RTN","HMPCPRS",24,0)
OUT ;
"RTN","HMPCPRS",25,0)
END ;
"RTN","HMPCPRS",26,0)
 ;
"RTN","HMPCPRS",27,0)
BLDINFO(INFO) ;
"RTN","HMPCPRS",28,0)
 N X
"RTN","HMPCPRS",29,0)
 S X="" F  S X=$O(REQ(X)) Q:X=""  D
"RTN","HMPCPRS",30,0)
 .S INFO(X)=REQ(X,1)
"RTN","HMPCPRS",31,0)
 Q
"RTN","HMPCPRS",32,0)
 ;
"RTN","HMPCPRS",33,0)
VAL(X) ; return value from request
"RTN","HMPCPRS",34,0)
 Q $G(REQ(X,1))
"RTN","HMPCPRS",35,0)
 ;
"RTN","HMPCPRS",36,0)
ALERTS(HMPOUT) ;
"RTN","HMPCPRS",37,0)
 N ALERT,CNT,ERROR,NODE,NUM,RESULT,HMPORY
"RTN","HMPCPRS",38,0)
 K ^TMP("HMPALERTS",$J),^TMP("HMPOUT",$J)
"RTN","HMPCPRS",39,0)
 ;S HMPOUT=$NA(^TMP("HMPOUT",$J))
"RTN","HMPCPRS",40,0)
 D FASTUSER^ORWORB(.HMPORY)
"RTN","HMPCPRS",41,0)
 ;ZW HMPORY
"RTN","HMPCPRS",42,0)
 S CNT=0,NUM=1 F  S CNT=$O(@HMPORY@(CNT)) Q:CNT'>0  D
"RTN","HMPCPRS",43,0)
 .S NODE=$G(@HMPORY@(CNT))
"RTN","HMPCPRS",44,0)
 .K ALERT
"RTN","HMPCPRS",45,0)
 .I $P(NODE,U)="I" S ALERT("infoOnly")="I"
"RTN","HMPCPRS",46,0)
 .S ALERT("patient")=$P(NODE,U,2),ALERT("urgency")=$P(NODE,U,4),ALERT("dateTime")=$P(NODE,U,5)
"RTN","HMPCPRS",47,0)
 .I $P(NODE,U,3)'="" S ALERT("location")=$P(NODE,U,3)
"RTN","HMPCPRS",48,0)
 .S ALERT("message")=$P(NODE,U,6)
"RTN","HMPCPRS",49,0)
 .I $P(NODE,U,8)'="" S ALERT("action")=$P(NODE,U,8)
"RTN","HMPCPRS",50,0)
 .S ALERT("mustBeProcess")=$S($P(NODE,U,9)="yes":"false",1:"true")
"RTN","HMPCPRS",51,0)
 .I $P(NODE,U,10)'="" S ALERT("forwardBy")="true"
"RTN","HMPCPRS",52,0)
 .M ^TMP("HMPALERTS",$J,"data","alerts",NUM,"alert")=ALERT S NUM=NUM+1
"RTN","HMPCPRS",53,0)
 D ENCODE^HMPJSON($NA(^TMP("HMPALERTS",$J)),"HMPOUT","ERROR")
"RTN","HMPCPRS",54,0)
 Q
"RTN","HMPCPRS",55,0)
 ;
"RTN","HMPCRPC")
0^15^B12934677
"RTN","HMPCRPC",1,0)
HMPCRPC ;SLC/AGP - Generic RPC controller for HMP ; 11/7/12 5:42pm
"RTN","HMPCRPC",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPCRPC",3,0)
 ;
"RTN","HMPCRPC",4,0)
 ;
"RTN","HMPCRPC",5,0)
CHAINRPC(HMPRES,PARAMS) ; Chain multiple rpcs into one call
"RTN","HMPCRPC",6,0)
 N CITER,RSP,PID
"RTN","HMPCRPC",7,0)
 S CITER="" F  S CITER=$O(PARAMS("commandList",CITER)) Q:CITER=""  D
"RTN","HMPCRPC",8,0)
 . N SUBCMD,SUBRSP,X
"RTN","HMPCRPC",9,0)
 . S X=""
"RTN","HMPCRPC",10,0)
 . F  S X=$O(PARAMS("commandList",CITER,X)) Q:X=""  M SUBCMD(X)=PARAMS("commandList",CITER,X)
"RTN","HMPCRPC",11,0)
 . D CHAINCMD(.SUBCMD,.SUBRSP)
"RTN","HMPCRPC",12,0)
 . I $D(SUBRSP) D DECODE^HMPJSON("SUBRSP","RSP(SUBCMD(""command""))","^JMCERR") I 1
"RTN","HMPCRPC",13,0)
 . I '$TEST S RSP(SUBCMD("command"))=""
"RTN","HMPCRPC",14,0)
 D ENCODE^HMPJSON("RSP","HMPRES","^JMCERR")
"RTN","HMPCRPC",15,0)
 Q
"RTN","HMPCRPC",16,0)
RPC(HMPRES,PARAMS) ; Process request via RPC instead of CSP
"RTN","HMPCRPC",17,0)
 N X,REQ,HMPVAL,HMPCNT,HMPSITE,HMPUSER,HMPDBUG,HMPSTA
"RTN","HMPCRPC",18,0)
 ;S HMPXML=$NA(^TMP($J,"HMP RESULTS")) K @HMPXML
"RTN","HMPCRPC",19,0)
 S HMPCNT=0
"RTN","HMPCRPC",20,0)
 ;S HMPUSER=DUZ,HMPSITE=DUZ(2),HMPSTA=$$STA^XUAF4(DUZ(2))
"RTN","HMPCRPC",21,0)
 S X="" F  S X=$O(PARAMS(X)) Q:X=""  I X'="value" S REQ(X,1)=PARAMS(X)
"RTN","HMPCRPC",22,0)
 I $D(PARAMS("value")) M HMPVAL=PARAMS("value")
"RTN","HMPCRPC",23,0)
 ;
"RTN","HMPCRPC",24,0)
COMMON ; Come here for both CSP and RPC Mode
"RTN","HMPCRPC",25,0)
 ; 
"RTN","HMPCRPC",26,0)
 N CMD
"RTN","HMPCRPC",27,0)
 S CMD=$G(REQ("command",1))
"RTN","HMPCRPC",28,0)
 ;
"RTN","HMPCRPC",29,0)
 I CMD="saveParam" D  G OUT
"RTN","HMPCRPC",30,0)
 . D PUTPARAM^HMPPARAM(.HMPRES,.HMPVAL,"")
"RTN","HMPCRPC",31,0)
 ;
"RTN","HMPCRPC",32,0)
 I CMD="saveParamByUid" D  G OUT
"RTN","HMPCRPC",33,0)
 . D PUTBYUID^HMPPARAM(.HMPRES,$$VAL("uid"),.HMPVAL)
"RTN","HMPCRPC",34,0)
 ;
"RTN","HMPCRPC",35,0)
 I CMD="getParam" D  G OUT
"RTN","HMPCRPC",36,0)
 . D GETBYUID^HMPPARAM(.HMPRES,$$VAL("uid"))
"RTN","HMPCRPC",37,0)
 ;
"RTN","HMPCRPC",38,0)
 I CMD="clearParam" D  G OUT
"RTN","HMPCRPC",39,0)
 . D DELPARAM^HMPPARAM(.HMPRES,$$VAL("uid"))
"RTN","HMPCRPC",40,0)
 ;
"RTN","HMPCRPC",41,0)
 I CMD="getAllParam" D  G OUT
"RTN","HMPCRPC",42,0)
 .D GETALPAR^HMPPARAM(.HMPRES,$$VAL("entity"),$$VAL("entityId"),$$VAL("getValues"))
"RTN","HMPCRPC",43,0)
 ;
"RTN","HMPCRPC",44,0)
 I CMD="getUserInfo" D  G OUT
"RTN","HMPCRPC",45,0)
 .D GETUSERI^HMPCRPC1(.HMPRES,$$VAL("userId"))
"RTN","HMPCRPC",46,0)
 ;
"RTN","HMPCRPC",47,0)
 I CMD="getPatientInfo" D  G OUT
"RTN","HMPCRPC",48,0)
 .D GETPATI^HMPCRPC1(.HMPRES,$$VAL("patientId"))
"RTN","HMPCRPC",49,0)
 ;
"RTN","HMPCRPC",50,0)
 I CMD="getPatientChecks" D  G OUT
"RTN","HMPCRPC",51,0)
 .D CHKS^HMPFPTC(.HMPRES,$$VAL("patientId"))
"RTN","HMPCRPC",52,0)
 ;
"RTN","HMPCRPC",53,0)
 I CMD="logPatientAccess" D  G OUT
"RTN","HMPCRPC",54,0)
 .D LOG^HMPFPTC(.HMPRES,$$VAL("patientId"))
"RTN","HMPCRPC",55,0)
 ;
"RTN","HMPCRPC",56,0)
 I CMD="addTask" D  G OUT
"RTN","HMPCRPC",57,0)
 .D PUT^HMPDJ1(.HMPRES,$$VAL("patientId"),$$VAL("type"),.HMPVAL)
"RTN","HMPCRPC",58,0)
 ;
"RTN","HMPCRPC",59,0)
 I CMD="getReminderList" D  G OUT
"RTN","HMPCRPC",60,0)
 .D REMLIST^HMPPXRM(.HMPRES,$$VAL("user"),$$VAL("location"))
"RTN","HMPCRPC",61,0)
 ;
"RTN","HMPCRPC",62,0)
 I CMD="evaluateReminder" D  G OUT
"RTN","HMPCRPC",63,0)
 .D EVALREM^HMPPXRM(.HMPRES,$$VAL("patientId"),$$VAL("uid"))
"RTN","HMPCRPC",64,0)
 ;
"RTN","HMPCRPC",65,0)
 I CMD="getDefaultPatientList" D  G OUT
"RTN","HMPCRPC",66,0)
 .D GETDLIST^HMPROS8(.HMPRES,$$VAL("server"))
"RTN","HMPCRPC",67,0)
 ;
"RTN","HMPCRPC",68,0)
 I CMD="getWardList" D  G OUT
"RTN","HMPCRPC",69,0)
 .D GETWLIST^HMPROS8(.HMPRES,$$VAL("server"),$$VAL("id"))
"RTN","HMPCRPC",70,0)
 ;
"RTN","HMPCRPC",71,0)
 I CMD="getClinicList" D  G OUT
"RTN","HMPCRPC",72,0)
 .D GETCLIST^HMPROS8(.HMPRES,$$VAL("server"),$$VAL("id"),$$VAL("start"),$$VAL("end"))
"RTN","HMPCRPC",73,0)
 ;
"RTN","HMPCRPC",74,0)
OUT ; output the XML
"RTN","HMPCRPC",75,0)
 ;S HMPRES=$G(RESULT)
"RTN","HMPCRPC",76,0)
 I '$D(HMPRES) S HMPRES="{}"
"RTN","HMPCRPC",77,0)
END Q
"RTN","HMPCRPC",78,0)
 ;
"RTN","HMPCRPC",79,0)
VAL(X) ; return value from request
"RTN","HMPCRPC",80,0)
 Q $G(REQ(X,1))
"RTN","HMPCRPC",81,0)
 ;
"RTN","HMPCRPC",82,0)
CHAINCMD(HMPCMD,HMPRSP) ; Do one command in chain
"RTN","HMPCRPC",83,0)
 ; 
"RTN","HMPCRPC",84,0)
 N CMD
"RTN","HMPCRPC",85,0)
 S CMD=$G(HMPCMD("command"))
"RTN","HMPCRPC",86,0)
 I CMD="getParam" D GETBYUID^HMPPARAM(.HMPRSP,$G(HMPCMD("uid")))
"RTN","HMPCRPC",87,0)
 I CMD="getPatientInfo" D GETPATI^HMPCRPC1(.HMPRSP,$G(HMPCMD("patientId")))
"RTN","HMPCRPC",88,0)
 I CMD="getPatientChecks" D CHKS^HMPFPTC(.HMPRSP,$G(HMPCMD("patientId")))
"RTN","HMPCRPC",89,0)
 I CMD="saveParam" D PUTPARAM^HMPPARAM(.HMPRSP,$G(HMPCMD("value")),"")
"RTN","HMPCRPC",90,0)
 I CMD="saveParamByUid" D PUTBYUID^HMPPARAM(.HMPRSP,$G(HMPCMD("uid")),$G(HMPCMD("value")))
"RTN","HMPCRPC",91,0)
 Q
"RTN","HMPCRPC1")
0^16^B110368005
"RTN","HMPCRPC1",1,0)
HMPCRPC1 ; SLC/AGP - Patient and User routine. ; 05/01/14
"RTN","HMPCRPC1",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPCRPC1",3,0)
 Q
"RTN","HMPCRPC1",4,0)
 ;
"RTN","HMPCRPC1",5,0)
GETADD(VALUES,DFN) ;
"RTN","HMPCRPC1",6,0)
 D ADD^VADPT
"RTN","HMPCRPC1",7,0)
 N INC,NUM,TEMP
"RTN","HMPCRPC1",8,0)
 I VAPA(12)=1 D
"RTN","HMPCRPC1",9,0)
 .I $L(VAPA(13))>0 S VALUES("confidentIalAddress","street",0)=VAPA(13)
"RTN","HMPCRPC1",10,0)
 .I $L(VAPA(14))>0 S VALUES("confidentIalAddress","street",1)=VAPA(14)
"RTN","HMPCRPC1",11,0)
 .I $L(VAPA(15))>0 S VALUES("confidentIalAddress","street",2)=VAPA(15)
"RTN","HMPCRPC1",12,0)
 .I $L(VAPA(16))>0 S VALUES("confidentIalAddress","city")=VAPA(16)
"RTN","HMPCRPC1",13,0)
 .I $L(VAPA(17))>0 S VALUES("confidentIalAddress","state")=$P(VAPA(17),U,2)
"RTN","HMPCRPC1",14,0)
 .I $L(VAPA(18))>0 S VALUES("confidentIalAddress","zip")=VAPA(18)
"RTN","HMPCRPC1",15,0)
 .I $L(VAPA(20))>0 S VALUES("confidentIalAddress","startDate")=$P(VAPA(20),U,2)
"RTN","HMPCRPC1",16,0)
 .I $L(VAPA(21))>0 S VALUES("confidentIalAddress","stopDate")=$P(VAPA(21),U,2)
"RTN","HMPCRPC1",17,0)
 .S INC=0,NUM=0 F  S INC=$O(VAPA(22,INC)) Q:INC=""  D
"RTN","HMPCRPC1",18,0)
 ..S NUM=NUM+1,VALUES("confidentIalAddress","catgories",NUM,"category")=$P(VAPA(22,INC),U,2)
"RTN","HMPCRPC1",19,0)
 ..S VALUES("confidentIalAddress","catgories",NUM,"status")=$S($P(VAPA(22,INC),U,3)="Y":"true",1:"false")
"RTN","HMPCRPC1",20,0)
 ;
"RTN","HMPCRPC1",21,0)
 ;I $L(VAPA(1))>0 S VALUES("address","street",0)=VAPA(1)
"RTN","HMPCRPC1",22,0)
 ;I $L(VAPA(2))>0 S VALUES("address","street",1)=VAPA(2)
"RTN","HMPCRPC1",23,0)
 ;I $L(VAPA(3))>0 S VALUES("address","street",2)=VAPA(3)
"RTN","HMPCRPC1",24,0)
 ;I $L(VAPA(4))>0 S VALUES("address","city")=VAPA(4)
"RTN","HMPCRPC1",25,0)
 ;I $L(VAPA(5))>0 S VALUES("address","state")=$P(VAPA(5),U,2)
"RTN","HMPCRPC1",26,0)
 ;I $L(VAPA(6))>0 S VALUES("address","zip")=VAPA(6)
"RTN","HMPCRPC1",27,0)
 I VAPA(9)]"" S VALUES("temporaryAddress","startDate")=$P(VAPA(9),U,2)
"RTN","HMPCRPC1",28,0)
 I VAPA(10)]"" S VALUES("temporaryAddress","stopDate")=$P(VAPA(10),U,2)
"RTN","HMPCRPC1",29,0)
ADDX ;
"RTN","HMPCRPC1",30,0)
 ;I $L(VAPA(8))>0 S VALUES("address","phone")=VAPA(8)
"RTN","HMPCRPC1",31,0)
 I $P($G(^DPT(DFN,.13)),U,3)'="" S VALUES("email")=$P($G(^DPT(DFN,.13)),U,3)
"RTN","HMPCRPC1",32,0)
 I +$P($G(^DPT(DFN,.11)),U,16)>0 S VALUES("badAddress")=$$GET1^DIQ(2,DFN_",",.121)
"RTN","HMPCRPC1",33,0)
 D KVAR^VADPT
"RTN","HMPCRPC1",34,0)
 Q
"RTN","HMPCRPC1",35,0)
 ;
"RTN","HMPCRPC1",36,0)
GETBSA(DFN) ;
"RTN","HMPCRPC1",37,0)
 N DATE,DATA,NFOUND,TEST,TEXT
"RTN","HMPCRPC1",38,0)
 S TEST=""
"RTN","HMPCRPC1",39,0)
 D BSA^PXRMBMI(DFN,1,0,DT,.NFOUND,.TEST,.DATE,.DATA,.TEXT)
"RTN","HMPCRPC1",40,0)
 Q +$G(DATA(1,"BSA"))
"RTN","HMPCRPC1",41,0)
 ;
"RTN","HMPCRPC1",42,0)
GETBMI(DFN) ;
"RTN","HMPCRPC1",43,0)
 ;  BMI(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) 
"RTN","HMPCRPC1",44,0)
 N DATE,DATA,NFOUND,TEST,TEXT
"RTN","HMPCRPC1",45,0)
 D BMI^PXRMBMI(DFN,1,0,DT,.NFOUND,.TEST,.DATE,.DATA,.TEXT)
"RTN","HMPCRPC1",46,0)
 Q +$G(DATA(1,"BMI"))
"RTN","HMPCRPC1",47,0)
 ;
"RTN","HMPCRPC1",48,0)
GETDEM(VALUES,DFN) ;
"RTN","HMPCRPC1",49,0)
 D DEM^VADPT
"RTN","HMPCRPC1",50,0)
 S VALUES("name")=VADM(1)
"RTN","HMPCRPC1",51,0)
 I VADM(2)]"" S VALUES("ssn")=$P(VADM(2),U,2)
"RTN","HMPCRPC1",52,0)
 I VADM(3)]"" S VALUES("dob")=$P(VADM(3),U,2)
"RTN","HMPCRPC1",53,0)
 I VADM(4)]"" S VALUES("age")=VADM(4)
"RTN","HMPCRPC1",54,0)
 I VADM(5)]"" S VALUES("gender")=$P(VADM(5),U,2)
"RTN","HMPCRPC1",55,0)
 I VADM(6)]"" S VALUES("dateDeath")=$P(VADM(6),U,2)
"RTN","HMPCRPC1",56,0)
 I VADM(7)]"" S VALUES("remarks")=VADM(7)
"RTN","HMPCRPC1",57,0)
 I VADM(8)]"" S VALUES("race")=$P(VADM(8),U,2)
"RTN","HMPCRPC1",58,0)
 D KVAR^VADPT
"RTN","HMPCRPC1",59,0)
 Q
"RTN","HMPCRPC1",60,0)
 ;
"RTN","HMPCRPC1",61,0)
GETKEYS(VALUES,USER) ;
"RTN","HMPCRPC1",62,0)
 N NAME,HMPERR,HMPLIST,CNT
"RTN","HMPCRPC1",63,0)
 D LIST^DIC(200.051,","_USER_",",".01",,,,,,,,"HMPLIST","HMPERR")
"RTN","HMPCRPC1",64,0)
 S CNT=0 F  S CNT=$O(HMPLIST("DILIST",1,CNT)) Q:CNT'>0  D
"RTN","HMPCRPC1",65,0)
 . S NAME=$G(HMPLIST("DILIST",1,CNT)) Q:NAME=""
"RTN","HMPCRPC1",66,0)
 . S VALUES("vistaKeys",NAME)="TRUE"
"RTN","HMPCRPC1",67,0)
 Q
"RTN","HMPCRPC1",68,0)
 ;
"RTN","HMPCRPC1",69,0)
GETNOK(VALUES,DFN,TYPE) ;
"RTN","HMPCRPC1",70,0)
 S VAOA("A")=TYPE
"RTN","HMPCRPC1",71,0)
 N CNT,CONTACT
"RTN","HMPCRPC1",72,0)
 S CONTACT=$S(TYPE=3:"secondary",1:"primary")
"RTN","HMPCRPC1",73,0)
 S CNT=$S(TYPE=3:2,1:1)
"RTN","HMPCRPC1",74,0)
 D OAD^VADPT
"RTN","HMPCRPC1",75,0)
 ;
"RTN","HMPCRPC1",76,0)
 I VAOA(9)]"" S VALUES("nok",CNT,"name")=VAOA(9)
"RTN","HMPCRPC1",77,0)
 I VAOA(10)]"" S VALUES("nok",CNT,"relationship")=VAOA(10)
"RTN","HMPCRPC1",78,0)
 I VAOA(1)]"" S VALUES("nok",CNT,"address","street",1)=VAOA(1)
"RTN","HMPCRPC1",79,0)
 I VAOA(2)]"" S VALUES("nok",CNT,"address","street",2)=VAOA(2)
"RTN","HMPCRPC1",80,0)
 I VAOA(3)]"" S VALUES("nok",CNT,"address","street",3)=VAOA(3)
"RTN","HMPCRPC1",81,0)
 I VAOA(4)]"" S VALUES("nok",CNT,"address","city")=VAOA(4)
"RTN","HMPCRPC1",82,0)
 I VAOA(5)]"" S VALUES("nok",CNT,"address","state")=$P(VAOA(5),U,2)
"RTN","HMPCRPC1",83,0)
 I VAOA(6)]"" S VALUES("nok",CNT,"address","zip")=VAOA(6)
"RTN","HMPCRPC1",84,0)
 I VAOA(8)]"" S VALUES("nok",CNT,"address","phone")=VAOA(8)
"RTN","HMPCRPC1",85,0)
 D KVAR^VADPT
"RTN","HMPCRPC1",86,0)
 Q
"RTN","HMPCRPC1",87,0)
 ;
"RTN","HMPCRPC1",88,0)
GETMEANS(VALUES,DFN) ;
"RTN","HMPCRPC1",89,0)
 D ELIG^VADPT
"RTN","HMPCRPC1",90,0)
 I VAEL(9)]"" S VALUES("meanStatus")=$P(VAEL(9),U,2)
"RTN","HMPCRPC1",91,0)
 D KVAR^VADPT
"RTN","HMPCRPC1",92,0)
 Q
"RTN","HMPCRPC1",93,0)
 ;
"RTN","HMPCRPC1",94,0)
GETPATI(RESULT,DFN) ;
"RTN","HMPCRPC1",95,0)
 N TYPE,VALUES,HMPERR,Y,HMPODEM,HMPSYS
"RTN","HMPCRPC1",96,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPCRPC1",97,0)
 D DPT1OD^HMPDJ00(.VALUES)
"RTN","HMPCRPC1",98,0)
 G GPQ
"RTN","HMPCRPC1",99,0)
 S VALUES("pid")=$$PID^HMPDJFS(DFN)
"RTN","HMPCRPC1",100,0)
 ;D BUILDUID^HMPPARAM(.VALUES,"patient",DFN)
"RTN","HMPCRPC1",101,0)
 ;D GETDEM(.VALUES,DFN)
"RTN","HMPCRPC1",102,0)
 D GETADD(.VALUES,DFN)
"RTN","HMPCRPC1",103,0)
 ;F TYPE=1,3 D GETNOK(.VALUES,DFN,TYPE)
"RTN","HMPCRPC1",104,0)
 D GETPATTM(.VALUES,DFN)
"RTN","HMPCRPC1",105,0)
 ;D GETPATVI(.VALUES,DFN)
"RTN","HMPCRPC1",106,0)
 D GETPATIP(.VALUES,DFN)
"RTN","HMPCRPC1",107,0)
 D GETMEANS(.VALUES,DFN)
"RTN","HMPCRPC1",108,0)
 D PRF^HMPFPTC(DFN,.VALUES)
"RTN","HMPCRPC1",109,0)
 S Y=$$CWAD^ORQPT2(DFN)
"RTN","HMPCRPC1",110,0)
 I Y]"" S VALUES("cwad")=Y
"RTN","HMPCRPC1",111,0)
 I $D(VALUES("patientRecordFlags")) S VALUES("cwad")=$G(VALUES("cwad"))_"F"
"RTN","HMPCRPC1",112,0)
 ;D PTINQ^ORWPT(.DEM,DFN)
"RTN","HMPCRPC1",113,0)
 ;S NUM=5,STR=""
"RTN","HMPCRPC1",114,0)
 ;F  S NUM=$O(@DEM@(NUM)) Q:NUM'>0  D
"RTN","HMPCRPC1",115,0)
 ;.S VALUES("patDemDetails","text","\",NUM)=@DEM@(NUM)_$C(13,10)
"RTN","HMPCRPC1",116,0)
 S VALUES("success")="true"
"RTN","HMPCRPC1",117,0)
GPQ D ENCODE^HMPJSON("VALUES","RESULT","HMPERR")
"RTN","HMPCRPC1",118,0)
 I $D(HMPERR) D
"RTN","HMPCRPC1",119,0)
 .K RESULT N TEMP,TXT
"RTN","HMPCRPC1",120,0)
 .S TXT(1)="Problem encoding json output."
"RTN","HMPCRPC1",121,0)
 .D SETERROR^HMPUTILS(.TEMP,.HMPERR,.TXT,.VALUES)
"RTN","HMPCRPC1",122,0)
 .K HMPERR D ENCODE^HMPJSON("TEMP","RESULT","HMPERR")
"RTN","HMPCRPC1",123,0)
 Q
"RTN","HMPCRPC1",124,0)
 ;
"RTN","HMPCRPC1",125,0)
GETPATIP(VALUES,DFN) ;
"RTN","HMPCRPC1",126,0)
 N HMPDATA
"RTN","HMPCRPC1",127,0)
 D INPLOC^ORWPT(.HMPDATA,DFN)
"RTN","HMPCRPC1",128,0)
 I +HMPDATA D
"RTN","HMPCRPC1",129,0)
 . S VALUES("shortInpatientLocation")=$P($G(^SC(+HMPDATA,0)),U,2)
"RTN","HMPCRPC1",130,0)
 . S VALUES("inpatientLocation")=$P(HMPDATA,U,2)
"RTN","HMPCRPC1",131,0)
 I $P($G(^DPT(DFN,.101)),U)'="" S VALUES("roomBed")=$P($G(^DPT(DFN,.101)),U)
"RTN","HMPCRPC1",132,0)
 Q
"RTN","HMPCRPC1",133,0)
 ;
"RTN","HMPCRPC1",134,0)
GETPATVI(VALUES,DFN) ;
"RTN","HMPCRPC1",135,0)
 N BMI,DAS,HT,LDATE,HMPTEMP,WT
"RTN","HMPCRPC1",136,0)
 ;get weight
"RTN","HMPCRPC1",137,0)
 S LDATE=$O(^PXRMINDX(120.5,"PI",DFN,9,""),-1)
"RTN","HMPCRPC1",138,0)
 I LDATE>0 D
"RTN","HMPCRPC1",139,0)
 .S DAS=$O(^PXRMINDX(120.5,"PI",DFN,9,LDATE,""))
"RTN","HMPCRPC1",140,0)
 .I DAS']"" Q
"RTN","HMPCRPC1",141,0)
 .D GETDATA^PXRMVITL(DAS,.HMPTEMP)
"RTN","HMPCRPC1",142,0)
 .S WT=HMPTEMP("VALUE")
"RTN","HMPCRPC1",143,0)
 .S VALUES("lastVitals","weight","value")=WT
"RTN","HMPCRPC1",144,0)
 .S VALUES("lastVitals","weight","lastDone")=$$FMTE^XLFDT(LDATE,"D")
"RTN","HMPCRPC1",145,0)
 ;get height
"RTN","HMPCRPC1",146,0)
 K LDATE,DAS
"RTN","HMPCRPC1",147,0)
 S LDATE=$O(^PXRMINDX(120.5,"PI",DFN,8,""),-1)
"RTN","HMPCRPC1",148,0)
 I LDATE>0 D
"RTN","HMPCRPC1",149,0)
 .S DAS=$O(^PXRMINDX(120.5,"PI",DFN,8,LDATE,""))
"RTN","HMPCRPC1",150,0)
 .I DAS']"" Q
"RTN","HMPCRPC1",151,0)
 .D GETDATA^PXRMVITL(DAS,.HMPTEMP)
"RTN","HMPCRPC1",152,0)
 .S HT=HMPTEMP("VALUE")
"RTN","HMPCRPC1",153,0)
 .S VALUES("lastVitals","height","value")=HT
"RTN","HMPCRPC1",154,0)
 .S VALUES("lastVitals","height","lastDone")=$$FMTE^XLFDT(LDATE,"D")
"RTN","HMPCRPC1",155,0)
 S BMI=$$GETBMI(DFN)
"RTN","HMPCRPC1",156,0)
 I BMI>0 S VALUES("lastVitals","bmi")=BMI
"RTN","HMPCRPC1",157,0)
 S BSA=$$GETBSA(DFN)
"RTN","HMPCRPC1",158,0)
 I BSA>0 S VALUES("lastVitals","bsa")=BSA
"RTN","HMPCRPC1",159,0)
 Q
"RTN","HMPCRPC1",160,0)
 ;
"RTN","HMPCRPC1",161,0)
GETPATTM(VALUES,DFN) ; -- returns treating team info
"RTN","HMPCRPC1",162,0)
 N CNT,PROV,TEAM,MH,HMPTEAM,MHTEAM
"RTN","HMPCRPC1",163,0)
 S PROV=$$OUTPTPR^SDUTL3(DFN) D NP(+PROV,"primaryProvider")
"RTN","HMPCRPC1",164,0)
 S PROV=$$OUTPTAP^SDUTL3(DFN) D NP(+PROV,"associateProvider")
"RTN","HMPCRPC1",165,0)
 S PROV=$G(^DPT(DFN,.1041)) D NP(+PROV,"attendingProvider")
"RTN","HMPCRPC1",166,0)
 S PROV=$G(^DPT(DFN,.104)) D NP(+PROV,"inpatientProvider")
"RTN","HMPCRPC1",167,0)
 ;
"RTN","HMPCRPC1",168,0)
 S TEAM=$$OUTPTTM^SDUTL3(DFN) I TEAM D
"RTN","HMPCRPC1",169,0)
 . S VALUES("teamInfo","team","uid")=$$SETUID^HMPUTILS("team",,+TEAM)
"RTN","HMPCRPC1",170,0)
 . S VALUES("teamInfo","team","name")=$P(TEAM,U,2)
"RTN","HMPCRPC1",171,0)
 . S VALUES("teamInfo","team","phone")=$P($G(^SCTM(404.51,+TEAM,0)),U,2)
"RTN","HMPCRPC1",172,0)
 I 'TEAM S VALUES("teamInfo","team","name")="unassigned"
"RTN","HMPCRPC1",173,0)
 ;
"RTN","HMPCRPC1",174,0)
 S MH=$$START^SCMCMHTC(DFN) D NP(+MH,"mhCoordinator")
"RTN","HMPCRPC1",175,0)
 S VALUES("teamInfo","mhCoordinator","mhPosition")=$S(MH:$P(MH,U,3),1:"unassigned")
"RTN","HMPCRPC1",176,0)
 S VALUES("teamInfo","mhCoordinator","mhTeam")=$S(MH:$P(MH,U,5),1:"unassigned")
"RTN","HMPCRPC1",177,0)
 ;US5234 - Add Mental Health Team Office Phone - TW
"RTN","HMPCRPC1",178,0)
 I $P($G(MH),U,5)'="" D
"RTN","HMPCRPC1",179,0)
 . S MHTEAM=$O(^SCTM(404.51,"B",$P(MH,U,5),""))
"RTN","HMPCRPC1",180,0)
 . S VALUES("teamInfo","mhCoordinator","mhTeamOfficePhone")=$$GET1^DIQ(404.51,MHTEAM_",",.02)
"RTN","HMPCRPC1",181,0)
 ;
"RTN","HMPCRPC1",182,0)
 D PCDETAIL^ORWPT1(.HMPTEAM,DFN)
"RTN","HMPCRPC1",183,0)
 S CNT=0 F  S CNT=$O(HMPTEAM(CNT)) Q:CNT'>0  D
"RTN","HMPCRPC1",184,0)
 . S VALUES("teamInfo","text","\",CNT)=HMPTEAM(CNT)_$C(13,10)
"RTN","HMPCRPC1",185,0)
 Q
"RTN","HMPCRPC1",186,0)
NP(X,TYPE) ; -- add New Person data to teamInfo array
"RTN","HMPCRPC1",187,0)
 Q:$G(TYPE)=""
"RTN","HMPCRPC1",188,0)
 I $G(X)'>0 S VALUES("teamInfo",TYPE,"name")="unassigned" Q
"RTN","HMPCRPC1",189,0)
 S VALUES("teamInfo",TYPE,"uid")=$$SETUID^HMPUTILS("user",,+X)
"RTN","HMPCRPC1",190,0)
 S VALUES("teamInfo",TYPE,"name")=$P($G(^VA(200,+X,0)),U)
"RTN","HMPCRPC1",191,0)
 S VALUES("teamInfo",TYPE,"analogPager")=$P($G(^VA(200,+X,.13)),U,7)
"RTN","HMPCRPC1",192,0)
 S VALUES("teamInfo",TYPE,"digitalPager")=$P($G(^VA(200,+X,.13)),U,8)
"RTN","HMPCRPC1",193,0)
 S VALUES("teamInfo",TYPE,"officePhone")=$P($G(^VA(200,+X,.13)),U,2)
"RTN","HMPCRPC1",194,0)
 Q
"RTN","HMPCRPC1",195,0)
 ;
"RTN","HMPCRPC1",196,0)
GETPOS(VALUES,USER) ;
"RTN","HMPCRPC1",197,0)
 ; this returns the list of position for an user
"RTN","HMPCRPC1",198,0)
 N CNT,NODE,NUM,ROLEIEN,ROLE,TEAM,TEAMIEN,TEAMPHN,HMPLIST,HMPERR
"RTN","HMPCRPC1",199,0)
 ;$$TPPR^SCAPMC(DUZ,SCDATES,SCPURPA,SCROLEA,"LIST",HMPERR)
"RTN","HMPCRPC1",200,0)
 S NUM=$$TPPR^SCAPMC(USER,"","","","",.HMPERR)
"RTN","HMPCRPC1",201,0)
 F CNT=1:1:NUM D
"RTN","HMPCRPC1",202,0)
 .S NODE=$G(^TMP("SC TMP LIST",$J,CNT))
"RTN","HMPCRPC1",203,0)
 .S VALUES("vistaPositions",CNT,"position")=$P(NODE,U,2)
"RTN","HMPCRPC1",204,0)
 .S VALUES("vistaPositions",CNT,"effectiveDate")=$P(NODE,U,5)
"RTN","HMPCRPC1",205,0)
 .S VALUES("vistaPositions",CNT,"inactiveDate")=$P(NODE,U,6)
"RTN","HMPCRPC1",206,0)
 .S TEAMIEN=$P(NODE,U,3)
"RTN","HMPCRPC1",207,0)
 .S TEAM=$$GET1^DIQ(404.51,(+TEAMIEN_","),.01)
"RTN","HMPCRPC1",208,0)
 .S TEAMPHN=$$GET1^DIQ(404.51,(+TEAMIEN_","),.02)
"RTN","HMPCRPC1",209,0)
 .S VALUES("vistaPositions",CNT,"teamName")=TEAM
"RTN","HMPCRPC1",210,0)
 .S VALUES("vistaPositions",CNT,"teamPhone")=TEAMPHN
"RTN","HMPCRPC1",211,0)
 .I $P(NODE,U,9)>0 D
"RTN","HMPCRPC1",212,0)
 .S VALUES("vistaPositions",CNT,"role")=$$GET1^DIQ(8930,($P(NODE,U,9)_","),.01)
"RTN","HMPCRPC1",213,0)
 Q
"RTN","HMPCRPC1",214,0)
 ;
"RTN","HMPCRPC1",215,0)
GETUSERC(VALUES,USER) ;
"RTN","HMPCRPC1",216,0)
 N ARRAY,CNT,EFFDATE,EXPDATE,ID,IND,LIST,NODE
"RTN","HMPCRPC1",217,0)
 D WHATIS^USRLM(USER,"LIST",1)
"RTN","HMPCRPC1",218,0)
 ;LIST(Uppername_indicator)=UserClassIEN^MembershipIEN^name^EffectDt^ExpireDt
"RTN","HMPCRPC1",219,0)
 S IND=0,CNT=0 F  S IND=$O(LIST(IND)) Q:IND=""  D
"RTN","HMPCRPC1",220,0)
 .S NODE=LIST(IND)
"RTN","HMPCRPC1",221,0)
 .S EFFDATE=$P(NODE,U,4),EXPDATE=$P(NODE,U,5)
"RTN","HMPCRPC1",222,0)
 .I EFFDATE>0,EFFDATE>DT Q
"RTN","HMPCRPC1",223,0)
 .I EXPDATE>0,EXPDATE<DT Q
"RTN","HMPCRPC1",224,0)
 .S CNT=CNT+1
"RTN","HMPCRPC1",225,0)
 .S ID=$P(NODE,U)
"RTN","HMPCRPC1",226,0)
 .S ARRAY(ID)=""
"RTN","HMPCRPC1",227,0)
 .S VALUES("vistaUserClass",CNT,"role")=$P(NODE,U,3)
"RTN","HMPCRPC1",228,0)
 .S VALUES("vistaUserClass",CNT,"uid")=$$SETUID^HMPUTILS("asu-class","",ID,"")
"RTN","HMPCRPC1",229,0)
 .S VALUES("vistaUserClass",CNT,"effectiveDate")=EFFDATE
"RTN","HMPCRPC1",230,0)
 .S VALUES("vistaUserClass",CNT,"expirationDate")=EXPDATE
"RTN","HMPCRPC1",231,0)
 .I $D(^USR(8930,"AD",ID)) D GETUCPAR(.VALUES,ID,.CNT,.ARRAY)
"RTN","HMPCRPC1",232,0)
 I CNT=0 D
"RTN","HMPCRPC1",233,0)
 .S ID=$O(^USR(8930,"B","USER","")) I +ID'>0 Q
"RTN","HMPCRPC1",234,0)
 .S CNT=CNT+1
"RTN","HMPCRPC1",235,0)
 .S VALUES("vistaUserClass",CNT,"role")=$P($G(^USR(8930,ID,0)),U)
"RTN","HMPCRPC1",236,0)
 .S VALUES("vistaUserClass",CNT,"uid")=$$SETUID^HMPUTILS("asu-class","",ID,"")
"RTN","HMPCRPC1",237,0)
 Q
"RTN","HMPCRPC1",238,0)
GETUCPAR(VALUES,ID,CNT,ARRAY) ;
"RTN","HMPCRPC1",239,0)
 N IEN,ROLE
"RTN","HMPCRPC1",240,0)
 S IEN=0 F  S IEN=$O(^USR(8930,"AD",ID,IEN)) Q:IEN'>0  D
"RTN","HMPCRPC1",241,0)
 .I $D(ARRAY(IEN)) Q
"RTN","HMPCRPC1",242,0)
 .S ARRAY(IEN)=""
"RTN","HMPCRPC1",243,0)
 .S ROLE=$P($G(^USR(8930,IEN,0)),U)
"RTN","HMPCRPC1",244,0)
 .S CNT=CNT+1
"RTN","HMPCRPC1",245,0)
 .S VALUES("vistaUserClass",CNT,"role")=ROLE
"RTN","HMPCRPC1",246,0)
 .S VALUES("vistaUserClass",CNT,"uid")=$$SETUID^HMPUTILS("asu-class","",IEN,"")
"RTN","HMPCRPC1",247,0)
 .I $D(^USR(8930,"AD",ID)) D GETUCPAR(.VALUES,IEN,.CNT,.ARRAY)
"RTN","HMPCRPC1",248,0)
 Q
"RTN","HMPCRPC1",249,0)
 ;
"RTN","HMPCRPC1",250,0)
GETUSERI(RESULT,USER) ;
"RTN","HMPCRPC1",251,0)
 N RPCOPT,VALUES,HMPERR,HMPLIST
"RTN","HMPCRPC1",252,0)
 D BUILDUID^HMPPARAM(.VALUES,"user",USER)
"RTN","HMPCRPC1",253,0)
 S VALUES("timeout")=$$GET^XPAR("USR^SYS","ORWOR TIMEOUT CHART",1,"I")
"RTN","HMPCRPC1",254,0)
 S VALUES("timeoutCounter")=$$GET^XPAR("USR^SYS^PKG","ORWOR TIMEOUT COUNTDOWN",1,"I")
"RTN","HMPCRPC1",255,0)
 S CPRSPATH=$$GET^XPAR("USR^SYS","HMP CPRS PATH",1,"I")
"RTN","HMPCRPC1",256,0)
 S VALUES("cprsPath")=$S($L($G(CPRSPATH))>0:CPRSPATH,1:"")
"RTN","HMPCRPC1",257,0)
 D FIND^DIC(19,"",1,"X","HMP UI CONTEXT",1,,,,"HMPLIST")
"RTN","HMPCRPC1",258,0)
 S RPCOPT=$S($D(^HMPLIST("DILIST",0)):-1,1:$P(HMPLIST("DILIST","ID",1,1),"version ",2))
"RTN","HMPCRPC1",259,0)
 ;S VALUES("signingPriv")=$S($D(^XUSEC("ORES",DUZ)):3,$D(^XUSEC("ORELSE",DUZ)):2,$D(^XUSEC("OREMAS",DUZ)):1,1:0)
"RTN","HMPCRPC1",260,0)
 S VALUES("orderingRole")=$$ORDROLE(USER)
"RTN","HMPCRPC1",261,0)
 S VALUES("hmpVersion")=RPCOPT
"RTN","HMPCRPC1",262,0)
 S VALUES("domain")=$$KSP^XUPARAM("WHERE")  ; domain
"RTN","HMPCRPC1",263,0)
 S VALUES("service")=+$G(^VA(200,USER,5))     ; service/section
"RTN","HMPCRPC1",264,0)
 D GETUSERC(.VALUES,USER)
"RTN","HMPCRPC1",265,0)
 D GETPOS(.VALUES,USER)
"RTN","HMPCRPC1",266,0)
 D GETKEYS(.VALUES,USER)
"RTN","HMPCRPC1",267,0)
 S VALUES("productionAccount")=$S($$PROD^XUPROD=1:"true",1:"false")
"RTN","HMPCRPC1",268,0)
 ;S RESULT=$$ENCODE^HMPJSON("VALUES","HMPERR")
"RTN","HMPCRPC1",269,0)
 D ENCODE^HMPJSON("VALUES","RESULT","HMPERR")
"RTN","HMPCRPC1",270,0)
 Q
"RTN","HMPCRPC1",271,0)
 ;
"RTN","HMPCRPC1",272,0)
ORDROLE(USER) ; returns the role a person takes in ordering
"RTN","HMPCRPC1",273,0)
 ; VAL: 0=nokey, 1=clerk, 2=nurse, 3=physician, 4=student, 5=bad keys
"RTN","HMPCRPC1",274,0)
 ;I '$G(ORWCLVER) Q 0  ; version of client is to old for ordering
"RTN","HMPCRPC1",275,0)
 I ($D(^XUSEC("OREMAS",USER))+$D(^XUSEC("ORELSE",USER))+$D(^XUSEC("ORES",USER)))>1 Q 5
"RTN","HMPCRPC1",276,0)
 I $D(^XUSEC("OREMAS",USER)) Q 1                           ; clerk
"RTN","HMPCRPC1",277,0)
 I $D(^XUSEC("ORELSE",USER)) Q 2                           ; nurse
"RTN","HMPCRPC1",278,0)
 I $D(^XUSEC("ORES",USER)),$D(^XUSEC("PROVIDER",USER)) Q 3  ; doctor
"RTN","HMPCRPC1",279,0)
 I $D(^XUSEC("PROVIDER",USER)) Q 4                         ; student
"RTN","HMPCRPC1",280,0)
 Q 0
"RTN","HMPCRPC1",281,0)
 ;
"RTN","HMPD")
0^17^B28800925
"RTN","HMPD",1,0)
HMPD ;SLC/MKB -- Serve VistA data as XML via RPC ;8/2/11  15:29
"RTN","HMPD",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPD",4,0)
 ;
"RTN","HMPD",5,0)
 ; External References          DBIA#
"RTN","HMPD",6,0)
 ; -------------------          -----
"RTN","HMPD",7,0)
 ; ^DPT                         10035
"RTN","HMPD",8,0)
 ; ^SC                          10040
"RTN","HMPD",9,0)
 ; DIQ                           2056
"RTN","HMPD",10,0)
 ; MPIF001                       2701
"RTN","HMPD",11,0)
 ; VASITE                       10112
"RTN","HMPD",12,0)
 ; XLFDT                        10103
"RTN","HMPD",13,0)
 ; XLFSTR                       10104
"RTN","HMPD",14,0)
 ; XUAF4                         2171
"RTN","HMPD",15,0)
 ;
"RTN","HMPD",16,0)
GET(HMP,DFN,TYPE,START,STOP,MAX,ID,FILTER) ; -- Return search results as XML in @HMP@(n) 
"RTN","HMPD",17,0)
 ; RPC = HMP GET PATIENT DATA
"RTN","HMPD",18,0)
 N ICN,HMPI,HMPTOTL,HMPTEXT
"RTN","HMPD",19,0)
 S HMP=$NA(^TMP("HMP",$J)) K @HMP
"RTN","HMPD",20,0)
 S HMPTEXT=+$G(FILTER("text")) ;include report/document text?
"RTN","HMPD",21,0)
 ;
"RTN","HMPD",22,0)
 ; parse & validate input parameters
"RTN","HMPD",23,0)
 S ICN=+$P($G(DFN),";",2),DFN=+$G(DFN),ID=$G(ID)
"RTN","HMPD",24,0)
 I DFN<1,ICN S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","HMPD",25,0)
 S TYPE=$$LOW^XLFSTR($G(TYPE)) I TYPE="" S TYPE=$$ALL
"RTN","HMPD",26,0)
 I TYPE'="new",DFN<1!'$D(^DPT(DFN)) D ERR(1,DFN) G GTQ
"RTN","HMPD",27,0)
 S:'$G(START) START=1410102 S:'$G(STOP) STOP=4141015 S:'$G(MAX) MAX=9999
"RTN","HMPD",28,0)
 I START,STOP,STOP<START N X S X=START,START=STOP,STOP=X  ;switch
"RTN","HMPD",29,0)
 I STOP,$L(STOP,".")<2 S STOP=STOP_".24"
"RTN","HMPD",30,0)
 I ID="",$D(FILTER("id")) S ID=FILTER("id")
"RTN","HMPD",31,0)
 ;
"RTN","HMPD",32,0)
 ; extract data
"RTN","HMPD",33,0)
 N HMPTYPE,HMPP,HMPHDR,HMPTAG,HMPTN
"RTN","HMPD",34,0)
 S HMPTYPE=TYPE D ADD("<results version='1.1' timeZone='"_$$TZ^XLFDT_"' >")
"RTN","HMPD",35,0)
 F HMPP=1:1:$L(HMPTYPE,";") S HMPTAG=$P(HMPTYPE,";",HMPP) I $L(HMPTAG) D
"RTN","HMPD",36,0)
 . S HMPTN="EN^"_$$RTN(.HMPTAG) Q:'$L($T(@HMPTN))  ;D ERR(2) Q
"RTN","HMPD",37,0)
 . D ADD("<"_HMPTAG) S HMPHDR=HMPI,HMPTOTL=0
"RTN","HMPD",38,0)
 . D @(HMPTN_"(DFN,START,STOP,MAX,ID)")
"RTN","HMPD",39,0)
 . S @HMP@(HMPHDR)=@HMP@(HMPHDR)_" total='"_+$G(HMPTOTL)_"' >" D ADD("</"_HMPTAG_">")
"RTN","HMPD",40,0)
 D ADD("</results>")
"RTN","HMPD",41,0)
 ;
"RTN","HMPD",42,0)
GTQ ; end
"RTN","HMPD",43,0)
 Q
"RTN","HMPD",44,0)
 ;
"RTN","HMPD",45,0)
RTN(X) ; -- Return name of HMPDxxxx routine for clinical domain X
"RTN","HMPD",46,0)
 ;  X is also enforced as expected group tag name, if passed by ref
"RTN","HMPD",47,0)
 N Y S Y="HMPD",X=$G(X) I X="" Q Y
"RTN","HMPD",48,0)
 I X["accession"    S Y="HMPDLRA",X="accessions"
"RTN","HMPD",49,0)
 I X["allerg"       S Y="HMPDGMRA",X="reactions"
"RTN","HMPD",50,0)
 I X["appointment"  S Y="HMPDSDAM",X="appointments"
"RTN","HMPD",51,0)
 I X["clinicalProc" S Y="HMPDMC",X="clinicalProcedures"
"RTN","HMPD",52,0)
 I X["consult"      S Y="HMPDGMRC",X="consults"
"RTN","HMPD",53,0)
 I X["demograph"    S Y="HMPDPT",X="demographics"
"RTN","HMPD",54,0)
 I X["document"     S Y="HMPDTIU",X="documents"
"RTN","HMPD",55,0)
 I X["factor"       S Y="HMPDPXHF",X="healthFactors"
"RTN","HMPD",56,0)
 I X["flag"         S Y="HMPDGPF",X="flags"
"RTN","HMPD",57,0)
 I X["immunization" S Y="HMPDPXIM",X="immunizations"
"RTN","HMPD",58,0)
 I X["skin"         S Y="HMPDPXSK",X="skinTests"
"RTN","HMPD",59,0)
 I X?1"exam".E      S Y="HMPDPXAM",X="exams"
"RTN","HMPD",60,0)
 I X["educat"       S Y="HMPDPXED",X="educationTopics"
"RTN","HMPD",61,0)
 I X["insur"        S Y="HMPDIB",X="insurancePolicies"
"RTN","HMPD",62,0)
 I X["polic"        S Y="HMPDIB",X="insurancePolicies"
"RTN","HMPD",63,0)
 I X["lab"          S Y="HMPDLR",X="labs"
"RTN","HMPD",64,0)
 I X["panel"        S Y="HMPDLRO",X="panels"
"RTN","HMPD",65,0)
 I X["med"          S Y="HMPDPS",X="meds"
"RTN","HMPD",66,0)
 I X["pharm"        S Y="HMPDPSOR",X="meds"
"RTN","HMPD",67,0)
 I X["observ"       S Y="HMPDMDC",X="observations"
"RTN","HMPD",68,0)
 I X["order"        S Y="HMPDOR",X="orders"
"RTN","HMPD",69,0)
 I X["patient"      S Y="HMPDPT",X="demographics"
"RTN","HMPD",70,0)
 I X["problem"      S Y="HMPDGMPL",X="problems"
"RTN","HMPD",71,0)
 I X["procedure"    S Y="HMPDPROC",X="procedures"
"RTN","HMPD",72,0)
 I X["reaction"     S Y="HMPDGMRA",X="reactions"
"RTN","HMPD",73,0)
 I X["surg"         S Y="HMPDSR",X="surgeries"
"RTN","HMPD",74,0)
 I X["visit"        S Y="HMPDVSIT",X="visits"
"RTN","HMPD",75,0)
 I X["vital"        S Y="HMPDGMV",X="vitals"
"RTN","HMPD",76,0)
 I X["rad"          S Y="HMPDRA",X="radiologyExams"
"RTN","HMPD",77,0)
 I X["xray"         S Y="HMPDRA",X="radiologyExams"
"RTN","HMPD",78,0)
 I X["new"          S Y="HMPDX",X="patients"
"RTN","HMPD",79,0)
 Q Y
"RTN","HMPD",80,0)
 ;
"RTN","HMPD",81,0)
TAG(X) ; -- return plural name for group tags
"RTN","HMPD",82,0)
 N Y S:X'?1.L X=$$LOW^XLFSTR(X)
"RTN","HMPD",83,0)
 I $E(X,$L(X))="s" S Y=X
"RTN","HMPD",84,0)
 I $E(X,$L(X))="y" S Y=$E(X,1,$L(X)-1)_"ies"
"RTN","HMPD",85,0)
 E  S Y=X_"s"
"RTN","HMPD",86,0)
 Q Y
"RTN","HMPD",87,0)
 ;
"RTN","HMPD",88,0)
ALL() ; -- return string for all types of data
"RTN","HMPD",89,0)
 Q "demographics;reactions;problems;vitals;labs;meds;immunizations;observation;visits;appointments;documents;procedures;consults;flags;factors;skinTests;exams;education;insurance"
"RTN","HMPD",90,0)
 ;
"RTN","HMPD",91,0)
ERR(X,VAL) ; -- return error message
"RTN","HMPD",92,0)
 N MSG  S MSG="Error"
"RTN","HMPD",93,0)
 I X=1  S MSG="Patient with dfn '"_$G(VAL)_"' not found"
"RTN","HMPD",94,0)
 I X=2  S MSG="Requested domain type '"_$G(VAL)_"' not recognized"
"RTN","HMPD",95,0)
 I X=99 S MSG="Unknown request"
"RTN","HMPD",96,0)
 ;
"RTN","HMPD",97,0)
 D ADD("<error>")
"RTN","HMPD",98,0)
 D ADD("<message>"_MSG_"</message>")
"RTN","HMPD",99,0)
 D ADD("</error>")
"RTN","HMPD",100,0)
 Q
"RTN","HMPD",101,0)
 ;
"RTN","HMPD",102,0)
ESC(X) ; -- escape outgoing XML
"RTN","HMPD",103,0)
 ; Q $ZCONVERT(X,"O","HTML")  ; uncomment for fastest performance on Cache
"RTN","HMPD",104,0)
 ;
"RTN","HMPD",105,0)
 N I,Y,QOT S QOT=""""
"RTN","HMPD",106,0)
 S Y=$P(X,"&") F I=2:1:$L(X,"&") S Y=Y_"&amp;"_$P(X,"&",I)
"RTN","HMPD",107,0)
 S X=Y,Y=$P(X,"<") F I=2:1:$L(X,"<") S Y=Y_"&lt;"_$P(X,"<",I)
"RTN","HMPD",108,0)
 S X=Y,Y=$P(X,">") F I=2:1:$L(X,">") S Y=Y_"&gt;"_$P(X,">",I)
"RTN","HMPD",109,0)
 S X=Y,Y=$P(X,"'") F I=2:1:$L(X,"'") S Y=Y_"&apos;"_$P(X,"'",I)
"RTN","HMPD",110,0)
 S X=Y,Y=$P(X,QOT) F I=2:1:$L(X,QOT) S Y=Y_"&quot;"_$P(X,QOT,I)
"RTN","HMPD",111,0)
 Q Y
"RTN","HMPD",112,0)
 ;
"RTN","HMPD",113,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPD",114,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPD",115,0)
 S @HMP@(HMPI)=X
"RTN","HMPD",116,0)
 Q
"RTN","HMPD",117,0)
 ;
"RTN","HMPD",118,0)
STRING(ARRAY) ; -- Return text in ARRAY(n) or ARRAY(n,0) as a string
"RTN","HMPD",119,0)
 N I,X,Y S Y=""
"RTN","HMPD",120,0)
 S I=+$O(ARRAY("")) I I=0 S I=+$O(ARRAY(0))
"RTN","HMPD",121,0)
 S Y=$S($D(ARRAY(I,0)):ARRAY(I,0),1:$G(ARRAY(I)))
"RTN","HMPD",122,0)
 F  S I=$O(ARRAY(I)) Q:I<1  D
"RTN","HMPD",123,0)
 . S X=$S($D(ARRAY(I,0)):ARRAY(I,0),1:ARRAY(I))
"RTN","HMPD",124,0)
 . I $E(X)=" " S Y=Y_$C(13,10)_X Q
"RTN","HMPD",125,0)
 . S Y=Y_$S($E(Y,$L(Y))=" ":"",1:" ")_X
"RTN","HMPD",126,0)
 Q Y
"RTN","HMPD",127,0)
 ;
"RTN","HMPD",128,0)
FAC(X) ; -- return Institution file station# for location X
"RTN","HMPD",129,0)
 N HLOC,FAC,Y0,Y S Y=""
"RTN","HMPD",130,0)
 S HLOC=$G(^SC(+$G(X),0)),FAC=$P(HLOC,U,4)
"RTN","HMPD",131,0)
 ; Get P:4 via Med Ctr Div, if not directly linked
"RTN","HMPD",132,0)
 I 'FAC,$P(HLOC,U,15) S FAC=$$GET1^DIQ(44,+$G(X)_",","3.5:.07","I")
"RTN","HMPD",133,0)
 S Y0=$S(FAC:$$NS^XUAF4(FAC),1:$P($$SITE^VASITE,U,2,3)) ;name^stn#
"RTN","HMPD",134,0)
 S:$L(Y0) Y=$P(Y0,U,2)_U_$P(Y0,U) ;switch to stn#^name
"RTN","HMPD",135,0)
 I $L(Y),'Y S $P(Y,U)=FAC
"RTN","HMPD",136,0)
 Q Y
"RTN","HMPD",137,0)
 ;
"RTN","HMPD",138,0)
VUID(IEN,FILE) ; -- Return VUID for item
"RTN","HMPD",139,0)
 Q $$GET1^DIQ(FILE,IEN_",",99.99)
"RTN","HMPD",140,0)
 ;
"RTN","HMPD",141,0)
VERSION(RET) ; -- Return current version of data extracts
"RTN","HMPD",142,0)
 S RET="1.01"
"RTN","HMPD",143,0)
 Q
"RTN","HMPDCRC")
0^18^B46664807
"RTN","HMPDCRC",1,0)
HMPDCRC ;SLC/MKB,AGP -- Compute CRC32 for VistA data ;7/26/13 11:09am
"RTN","HMPDCRC",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDCRC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDCRC",4,0)
 ;
"RTN","HMPDCRC",5,0)
 ; External References          DBIA#
"RTN","HMPDCRC",6,0)
 ; -------------------          -----
"RTN","HMPDCRC",7,0)
 ; ^DPT                         10035
"RTN","HMPDCRC",8,0)
 ; %ZTLOAD                      10063
"RTN","HMPDCRC",9,0)
 ; MPIF001                       2701
"RTN","HMPDCRC",10,0)
 ; XLFCRC                        3156
"RTN","HMPDCRC",11,0)
 ; XLFDT                        10103
"RTN","HMPDCRC",12,0)
 ;
"RTN","HMPDCRC",13,0)
CHECK(HMPCRC,FILTER) ; -- Return CRC32 checksums of VistA data
"RTN","HMPDCRC",14,0)
 ; RPC = HMP GET CHECKSUM
"RTN","HMPDCRC",15,0)
 ; where FILTER("system")    = name of calling/client system
"RTN","HMPDCRC",16,0)
 ;       FILTER("patientId") = DFN or DFN;ICN
"RTN","HMPDCRC",17,0)
 ;       FILTER("domain")    = name of desired data type (see HMPDJ0)
"RTN","HMPDCRC",18,0)
 ;       FILTER("uid")       = single item id to return  [opt]
"RTN","HMPDCRC",19,0)
 ;       FILTER("start")     = start date.time of search [opt]
"RTN","HMPDCRC",20,0)
 ;       FILTER("stop")      = stop date.time of search  [opt]
"RTN","HMPDCRC",21,0)
 ;       FILTER("queued")    = true or false
"RTN","HMPDCRC",22,0)
 ;
"RTN","HMPDCRC",23,0)
 ; HMPCRC returns the name of the ^TMP array containing the results
"RTN","HMPDCRC",24,0)
 ;
"RTN","HMPDCRC",25,0)
 N DFN,NODE,QUEUED,SYS,HMPSYS
"RTN","HMPDCRC",26,0)
 K ^TMP("HMPDCRC",$J),HMPCRC
"RTN","HMPDCRC",27,0)
 S SYS=$G(FILTER("system")) I SYS="" Q
"RTN","HMPDCRC",28,0)
 S DFN=$G(FILTER("patientId")) I DFN="" Q
"RTN","HMPDCRC",29,0)
 S QUEUED=$G(FILTER("queued"))
"RTN","HMPDCRC",30,0)
 S NODE="HMPDCRC "_SYS_"-"_"-"_DFN
"RTN","HMPDCRC",31,0)
 S FILTER("node")=NODE
"RTN","HMPDCRC",32,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPDCRC",33,0)
 ;
"RTN","HMPDCRC",34,0)
 ; - if not queued, generate checksums and exit w/values in ^TMP
"RTN","HMPDCRC",35,0)
 I QUEUED'="true" D  Q
"RTN","HMPDCRC",36,0)
 . S ^XTMP(NODE,0)=$$FMADD^XLFDT(DT,1)_U_DT_U_"Checksum for Server "_SYS_" patient "_DFN
"RTN","HMPDCRC",37,0)
 . D EN(.FILTER)
"RTN","HMPDCRC",38,0)
 . M ^TMP("HMPDCRC",$J)=^XTMP(NODE,"data")
"RTN","HMPDCRC",39,0)
 . S HMPCRC=$NA(^TMP("HMPDCRC",$J))
"RTN","HMPDCRC",40,0)
 . K ^XTMP(NODE)
"RTN","HMPDCRC",41,0)
 ;
"RTN","HMPDCRC",42,0)
 ; - Queue job if not started, else return data if done
"RTN","HMPDCRC",43,0)
 I +$G(^XTMP(NODE,"start"))=0 D QUEUED(.FILTER,NODE,SYS,DFN) Q
"RTN","HMPDCRC",44,0)
 I +$G(^XTMP(NODE,"stop"))>0 D  K ^XTMP(NODE)
"RTN","HMPDCRC",45,0)
 . I $G(^XTMP(NODE,"error"))'=""  S HMPCRC=^XTMP(NODE,"error") Q
"RTN","HMPDCRC",46,0)
 . S HMPCRC=$NA(^TMP("HMPDCRC",$J))
"RTN","HMPDCRC",47,0)
 . M ^TMP("HMPDCRC",$J)=^XTMP(NODE,"data")
"RTN","HMPDCRC",48,0)
 Q
"RTN","HMPDCRC",49,0)
 ;
"RTN","HMPDCRC",50,0)
QUEUED(FILTER,NODE,SYS,DFN) ; -- start job to generate checksums
"RTN","HMPDCRC",51,0)
 N ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTDTH,ZTSK
"RTN","HMPDCRC",52,0)
 S ^XTMP(NODE,0)=$$FMADD^XLFDT(DT,1)_U_DT_U_"Checksum for Server "_SYS_" patient "_DFN
"RTN","HMPDCRC",53,0)
 S ZTRTN="EN1^HMPDCRC",ZTDESC="Patient Checksum Extract for "_DFN
"RTN","HMPDCRC",54,0)
 S ZTDTH=$$NOW^XLFDT(),ZTIO="",ZTSAVE("FILTER(")=""
"RTN","HMPDCRC",55,0)
 S ^XTMP(NODE,"start")=$$NOW^XLFDT()
"RTN","HMPDCRC",56,0)
 D ^%ZTLOAD I +$G(ZTSK)>0  S ^XTMP(NODE,"task")=+$G(ZTSK) Q    ;success
"RTN","HMPDCRC",57,0)
 S ^XTMP(NODE,"error")="Cannot start a task job"
"RTN","HMPDCRC",58,0)
 S ^XTMP(NODE,"stop")=$$NOW^XLFDT()
"RTN","HMPDCRC",59,0)
 S ^XTMP(NODE,"task")=ZTSK
"RTN","HMPDCRC",60,0)
 Q
"RTN","HMPDCRC",61,0)
 ;
"RTN","HMPDCRC",62,0)
EN(FILTER) ; -- Return CRC values of requested data in ^XTMP(node,"data") as JSON
"RTN","HMPDCRC",63,0)
EN1 ;           [entry point for queued job]
"RTN","HMPDCRC",64,0)
 ;
"RTN","HMPDCRC",65,0)
 N ICN,DFN,NODE,UID,HMPP,TYPE,HMPTN,CRC
"RTN","HMPDCRC",66,0)
 N HMPCRC,HMPSTART,HMPSTOP,HMPMAX,HMPI,HMPID,HMPTYPE ;for HMPDJ0
"RTN","HMPDCRC",67,0)
 K ^TMP("HMPCRC",$J),^TMP("HMPCRCF",$J)
"RTN","HMPDCRC",68,0)
 ;
"RTN","HMPDCRC",69,0)
 ; parse & validate input parameters
"RTN","HMPDCRC",70,0)
 S DFN=$G(FILTER("patientId")),HMPCRC=""
"RTN","HMPDCRC",71,0)
 S ICN=+$P($G(DFN),";",2),DFN=+$G(DFN)
"RTN","HMPDCRC",72,0)
 I DFN<1,ICN S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","HMPDCRC",73,0)
 Q:DFN<1!'$D(^DPT(DFN))
"RTN","HMPDCRC",74,0)
 S NODE=$G(FILTER("node")) I NODE="" S NODE="HMPDCRC"
"RTN","HMPDCRC",75,0)
 ;
"RTN","HMPDCRC",76,0)
 S HMPMAX=9999,HMPI=0                                ;for HMPDJ0
"RTN","HMPDCRC",77,0)
 S HMPSTART=+$G(FILTER("start"),1410102)
"RTN","HMPDCRC",78,0)
 S HMPSTOP=+$G(FILTER("stop"),4141015)
"RTN","HMPDCRC",79,0)
 S UID=$G(FILTER("uid")),HMPTYPE=$G(FILTER("domain"))
"RTN","HMPDCRC",80,0)
 I $L(UID) S HMPTYPE=$P(UID,":",3),HMPID=$P(UID,":",6)
"RTN","HMPDCRC",81,0)
 E  S:HMPTYPE="" HMPTYPE=$$ALL
"RTN","HMPDCRC",82,0)
 ;
"RTN","HMPDCRC",83,0)
 F HMPP=1:1:$L(HMPTYPE,";") S TYPE=$P(HMPTYPE,";",HMPP) I $L(TYPE) D
"RTN","HMPDCRC",84,0)
 . S HMPTN=$$TAG^HMPDJ(TYPE)_"^HMPDJ0" Q:'$L($T(@HMPTN))
"RTN","HMPDCRC",85,0)
 . D @HMPTN
"RTN","HMPDCRC",86,0)
 ;
"RTN","HMPDCRC",87,0)
 I $L(UID) D  G ENQ ;single item
"RTN","HMPDCRC",88,0)
 . S CRC=$G(^TMP("HMPCRC",$J,HMPTYPE,UID))
"RTN","HMPDCRC",89,0)
 . S ^XTMP(NODE,"data",1)=CRC,^XTMP(NODE,"stop")=$$NOW^XLFDT()
"RTN","HMPDCRC",90,0)
 ; generate checksum for each domain requested
"RTN","HMPDCRC",91,0)
 S TYPE="" F  S TYPE=$O(^TMP("HMPCRC",$J,TYPE)) Q:TYPE=""  D
"RTN","HMPDCRC",92,0)
 . S CRC="" D GET($NA(^TMP("HMPCRC",$J,TYPE)),.CRC)
"RTN","HMPDCRC",93,0)
 . S ^TMP("HMPCRC",$J,TYPE)=CRC
"RTN","HMPDCRC",94,0)
 I $L(HMPTYPE,";")>1 D  ;get whole-chart checksum
"RTN","HMPDCRC",95,0)
 . S CRC="" D GET($NA(^TMP("HMPCRC",$J)),.CRC)
"RTN","HMPDCRC",96,0)
 . S ^TMP("HMPCRC",$J,"patient")=CRC
"RTN","HMPDCRC",97,0)
 ;
"RTN","HMPDCRC",98,0)
ENCODE ; -- return list(s) of checksums as JSON
"RTN","HMPDCRC",99,0)
 D PREP
"RTN","HMPDCRC",100,0)
 D ENCODE^HMPJSON($NA(^TMP("HMPCRCF",$J)),$NA(^XTMP(NODE,"data")),"ERROR")
"RTN","HMPDCRC",101,0)
 S ^XTMP(NODE,"stop")=$$NOW^XLFDT()
"RTN","HMPDCRC",102,0)
 ;
"RTN","HMPDCRC",103,0)
ENQ K ^TMP("HMPCRC",$J),^TMP("HMPCRCF",$J)
"RTN","HMPDCRC",104,0)
 Q
"RTN","HMPDCRC",105,0)
 ;
"RTN","HMPDCRC",106,0)
PREP ; -- reformat ^TMP("HMPCRC",$J) for JSON utility -> ^TMP("HMPCRCF",$J)
"RTN","HMPDCRC",107,0)
 N DCNT,DOMAIN,UID,UCNT
"RTN","HMPDCRC",108,0)
 S DOMAIN="",DCNT=0
"RTN","HMPDCRC",109,0)
 F  S DOMAIN=$O(^TMP("HMPCRC",$J,DOMAIN)) Q:DOMAIN=""  D
"RTN","HMPDCRC",110,0)
 . S ^TMP("HMPCRCF",$J,DOMAIN,"crc")=^TMP("HMPCRC",$J,DOMAIN)
"RTN","HMPDCRC",111,0)
 . S UCNT=0,UID="" F  S UID=$O(^TMP("HMPCRC",$J,DOMAIN,UID)) Q:UID=""  D
"RTN","HMPDCRC",112,0)
 .. S UCNT=UCNT+1,^TMP("HMPCRCF",$J,DOMAIN,"uids",UCNT,UID)=^TMP("HMPCRC",$J,DOMAIN,UID)
"RTN","HMPDCRC",113,0)
 Q
"RTN","HMPDCRC",114,0)
 ;
"RTN","HMPDCRC",115,0)
GET(LIST,CRC) ; -- compute CRC32 value for LIST of strings
"RTN","HMPDCRC",116,0)
 N I S CRC=$G(CRC),I=""
"RTN","HMPDCRC",117,0)
 F  S I=$O(@LIST@(I)) Q:I=""  I $G(@LIST@(I))'="" S CRC=$$CRC32^XLFCRC(I_":"_@LIST@(I),CRC)
"RTN","HMPDCRC",118,0)
 Q
"RTN","HMPDCRC",119,0)
 ;
"RTN","HMPDCRC",120,0)
ONE(ARRAY,COLL) ; -- process one data item [save result in ^TMP]
"RTN","HMPDCRC",121,0)
 N LIST,UID,ATTR,CRC
"RTN","HMPDCRC",122,0)
 S LIST=$$ATTR(COLL),UID=$G(@ARRAY@("uid")) Q:UID=""
"RTN","HMPDCRC",123,0)
 S ATTR="" F  S ATTR=$O(@ARRAY@(ATTR)) Q:ATTR=""  I LIST'[(U_ATTR_U) K @ARRAY@(ATTR)
"RTN","HMPDCRC",124,0)
 D GET(ARRAY,.CRC)
"RTN","HMPDCRC",125,0)
 S ^TMP("HMPCRC",$J,COLL,UID)=CRC
"RTN","HMPDCRC",126,0)
 S HMPI=HMPI+1
"RTN","HMPDCRC",127,0)
 Q
"RTN","HMPDCRC",128,0)
 ;
"RTN","HMPDCRC",129,0)
GET1(ARRAY,COLL) ; -- process one data item [return result]
"RTN","HMPDCRC",130,0)
 N LIST,ATTR,ITEM,CRC
"RTN","HMPDCRC",131,0)
 S LIST=$$ATTR(COLL)
"RTN","HMPDCRC",132,0)
 S ATTR="" F  S ATTR=$O(@ARRAY@(ATTR)) Q:ATTR=""  I LIST[(U_ATTR_U) S ITEM(ATTR)=@ARRAY@(ATTR)
"RTN","HMPDCRC",133,0)
 D GET(ITEM,.CRC)
"RTN","HMPDCRC",134,0)
 Q CRC
"RTN","HMPDCRC",135,0)
 ;
"RTN","HMPDCRC",136,0)
ALL() ; -- return string for all types of data
"RTN","HMPDCRC",137,0)
 Q "problem;allergy;consult;vital;lab;procedure;obs;order;treatment;med;ptf;factor;immunization;exam;cpt;education;pov;skin;image;appointment;surgery;document;visit;mh"
"RTN","HMPDCRC",138,0)
 ;
"RTN","HMPDCRC",139,0)
ATTR(X) ; -- return list of attributes needed for collection X
"RTN","HMPDCRC",140,0)
 N Y S Y=""
"RTN","HMPDCRC",141,0)
 I X="vital"        S Y="^observed^typeName^result^"
"RTN","HMPDCRC",142,0)
 I X="problem"      S Y="^onset^problemText^statusName^"
"RTN","HMPDCRC",143,0)
 I X="allergy"      S Y="^entered^summary^"
"RTN","HMPDCRC",144,0)
 I X="order"        S Y="^start^name^statusName^"
"RTN","HMPDCRC",145,0)
 I X="treatment"    S Y="^start^name^statusName^"
"RTN","HMPDCRC",146,0)
 I X="med"          S Y="^overallstart^name^vaStatus^"
"RTN","HMPDCRC",147,0)
 I X="consult"      S Y="^startDate^typeName^statusName^"
"RTN","HMPDCRC",148,0)
 I X="procedure"    S Y="^dateTime^name^statusName^"
"RTN","HMPDCRC",149,0)
 I X="obs"          S Y="^observed^typeName^result^"
"RTN","HMPDCRC",150,0)
 I X="lab"          S Y="^observed^typeName^"
"RTN","HMPDCRC",151,0)
 I X="image"        S Y="^dateTime^name^statusName^"
"RTN","HMPDCRC",152,0)
 I X="surgery"      S Y="^dateTime^typeName^statusName^"
"RTN","HMPDCRC",153,0)
 I X="document"     S Y="^referenceDateTime^localTitle^statusName^"
"RTN","HMPDCRC",154,0)
 I X="mh"           S Y="^administeredDateTime^name^"
"RTN","HMPDCRC",155,0)
 I X="immunization" S Y="^administeredDateTime^name^"
"RTN","HMPDCRC",156,0)
 I X="pov"          S Y="^entered^name^"
"RTN","HMPDCRC",157,0)
 I X="skin"         S Y="^entered^name^result^"
"RTN","HMPDCRC",158,0)
 I X="exam"         S Y="^entered^name^result^"
"RTN","HMPDCRC",159,0)
 I X="cpt"          S Y="^entered^name^"
"RTN","HMPDCRC",160,0)
 I X="education"    S Y="^entered^name^result^"
"RTN","HMPDCRC",161,0)
 I X="factor"       S Y="^entered^name^"
"RTN","HMPDCRC",162,0)
 I X="appointment"  S Y="^dateTime^typeName^appointmentStatus^"
"RTN","HMPDCRC",163,0)
 I X="visit"        S Y="^dateTime^typeName^"
"RTN","HMPDCRC",164,0)
 I X="ptf"          S Y="^arrivalDateTime^icdCode^"
"RTN","HMPDCRC",165,0)
 Q Y
"RTN","HMPDCRC",166,0)
 ;
"RTN","HMPDCRC",167,0)
 ;
"RTN","HMPDCRC",168,0)
TEST(FILTER) ;
"RTN","HMPDCRC",169,0)
 N DONE,OUT
"RTN","HMPDCRC",170,0)
 S DONE=0
"RTN","HMPDCRC",171,0)
 F  D  Q:DONE=1
"RTN","HMPDCRC",172,0)
 .D CHECK(.OUT,.FILTER)
"RTN","HMPDCRC",173,0)
 .H 1 W !,$D(OUT)
"RTN","HMPDCRC",174,0)
 .I $D(OUT)>0 S DONE=1
"RTN","HMPDCRC",175,0)
 Q
"RTN","HMPDE811")
0^133^B19118401
"RTN","HMPDE811",1,0)
HMPDE811 ;Agilex/Hrubovcak - post-installation processing ;May 12, 2015@13:58:53
"RTN","HMPDE811",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDE811",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDE811",4,0)
 ;
"RTN","HMPDE811",5,0)
 Q
"RTN","HMPDE811",6,0)
 ;
"RTN","HMPDE811",7,0)
POST ; make HMP DGPF ASSIGN FLAG protocol an ITEM
"RTN","HMPDE811",8,0)
 ;
"RTN","HMPDE811",9,0)
 N HMPDGIEN,HMPERR,HMPEXIT,HMPFDA,HMPIEN,HMPRTCL,HMPTRGT,J,PRTCLITM,V,X,Y
"RTN","HMPDE811",10,0)
 ;
"RTN","HMPDE811",11,0)
 D MES^XPDUTL($T(+0)_" post-init routine started "_$$HTE^XLFDT($H))
"RTN","HMPDE811",12,0)
 S V=$$SVDATA D MES^XPDUTL("Old data saved in "_V)
"RTN","HMPDE811",13,0)
 S HMPTRGT="HMP DGPF ASSIGN FLAG",HMPTRGT("IEN")=$O(^ORD(101,"B",HMPTRGT,0))
"RTN","HMPDE811",14,0)
 I '(HMPTRGT("IEN")>0) D MES^XPDUTL(HMPTRGT_" protocol not found. It must be installed to proceed.") Q
"RTN","HMPDE811",15,0)
 ;
"RTN","HMPDE811",16,0)
 ; update protocols
"RTN","HMPDE811",17,0)
 D PRTCLUPD("DGPF ADD FLAG",HMPTRGT("IEN"))
"RTN","HMPDE811",18,0)
 D PRTCLUPD("DGPF ASSIGN FLAG",HMPTRGT("IEN"))
"RTN","HMPDE811",19,0)
 ;
"RTN","HMPDE811",20,0)
 Q
"RTN","HMPDE811",21,0)
 ;
"RTN","HMPDE811",22,0)
PRTCLUPD(HMPRTCL,HMPIEN) ; update HMPRTCL with HMPIEN protocol as ITEM
"RTN","HMPDE811",23,0)
 ;
"RTN","HMPDE811",24,0)
 S HMPDGIEN=$O(^ORD(101,"B",HMPRTCL,0))
"RTN","HMPDE811",25,0)
 ; protocol missing, write message and exit
"RTN","HMPDE811",26,0)
 I '(HMPDGIEN>0) D MES^XPDUTL(HMPRTCL_" protocol not found.  No ITEM update performed.") Q
"RTN","HMPDE811",27,0)
 D MES^XPDUTL("updating "_HMPRTCL)
"RTN","HMPDE811",28,0)
 ; make protocol an extended action
"RTN","HMPDE811",29,0)
 S HMPFDA(101,HMPDGIEN_",",4)="X"
"RTN","HMPDE811",30,0)
 D UPDATE^DIE("","HMPFDA","","HMPERR")
"RTN","HMPDE811",31,0)
 I $D(HMPERR) D  Q  ; something went wrong
"RTN","HMPDE811",32,0)
 .D MES^XPDUTL("FileMan error when editing "_HMPRTCL_" protocol")
"RTN","HMPDE811",33,0)
 .N V S V="HMPERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","HMPDE811",34,0)
 ;
"RTN","HMPDE811",35,0)
 ; is protocol already an item?
"RTN","HMPDE811",36,0)
 S J=$O(^ORD(101,HMPDGIEN,10,"B",HMPIEN,0))
"RTN","HMPDE811",37,0)
 I J D MES^XPDUTL(HMPRTCL_" already an ITEM in IEN "_HMPIEN_".  No update needed.") Q
"RTN","HMPDE811",38,0)
 ; add protocol as ITEM
"RTN","HMPDE811",39,0)
 K HMPFDA,HMPERR,PRTCLITM
"RTN","HMPDE811",40,0)
 S HMPFDA(101.01,"+1,"_HMPDGIEN_",",.01)=HMPIEN
"RTN","HMPDE811",41,0)
 D UPDATE^DIE("","HMPFDA","PRTCLITM","HMPERR")
"RTN","HMPDE811",42,0)
 I $D(HMPERR) D  Q  ; something went wrong
"RTN","HMPDE811",43,0)
 .D MES^XPDUTL("FileMan error when adding ITEM to DGPF ASSIGN FLAG protocol")
"RTN","HMPDE811",44,0)
 .N V S V="HMPERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","HMPDE811",45,0)
 ; new ITEM sub-file IEN will be in PRTCLITM(1)
"RTN","HMPDE811",46,0)
 D MES^XPDUTL(HMPRTCL_" protocol update finished "_$$HTE^XLFDT($H))
"RTN","HMPDE811",47,0)
 ;
"RTN","HMPDE811",48,0)
 Q
"RTN","HMPDE811",49,0)
 ;
"RTN","HMPDE811",50,0)
SVDATA() ; extrinsic variable, save original FileMan data, returns storage node
"RTN","HMPDE811",51,0)
 ;
"RTN","HMPDE811",52,0)
 N FMERRCNT,HMPXTMP,HMPIEN,HMPLOGND,HMPLGRT,LN,NTRY,TXT,V,X,Y
"RTN","HMPDE811",53,0)
 D DT^DICRW  ; kernel variables
"RTN","HMPDE811",54,0)
 S HMPLOGND="HMP INSTALL LOG"  ; HMP log data stored here in ^XTMP
"RTN","HMPDE811",55,0)
 S HMPLGRT=$NA(^XTMP(HMPLOGND,DT))  ; log root node
"RTN","HMPDE811",56,0)
 S Y=$$NOW^XLFDT
"RTN","HMPDE811",57,0)
 ; ^XTMP log data expires in 90 days
"RTN","HMPDE811",58,0)
 S X=$G(@HMPLGRT@(0)) S:X="" @HMPLGRT@(0)=$$FMADD^XLFDT(DT,90)_U_Y_"^HMP installation "_$$FMTE^XLFDT(Y)
"RTN","HMPDE811",59,0)
 ;
"RTN","HMPDE811",60,0)
 S X=$G(@HMPLGRT@(0,"CNTR"))+1,^("CNTR")=X  ; counter for multiple installations per day
"RTN","HMPDE811",61,0)
 S HMPXTMP=$NA(@HMPLGRT@(X))  ; XTMP storage node for this installation
"RTN","HMPDE811",62,0)
 S @HMPXTMP@(0,"begun")=$$NOW^XLFDT  ; when?
"RTN","HMPDE811",63,0)
 S @HMPXTMP@(0,"DUZ")=$G(DUZ)  ; who?
"RTN","HMPDE811",64,0)
 S FMERRCNT=0  ; FileMan error counter
"RTN","HMPDE811",65,0)
 ; save entries in FileMan items list
"RTN","HMPDE811",66,0)
 F LN=1:1 S TXT=$P($T(FMITMS+LN),";;",2,99) Q:TXT=""  D
"RTN","HMPDE811",67,0)
 .N FLNO,FMARRY,FMERR  ; file #, FileMan returned value and error message arrays
"RTN","HMPDE811",68,0)
 .S FLNO=+$P(TXT,U),X=$P(TXT,U,2,99)  ; file number and target entry
"RTN","HMPDE811",69,0)
 .Q:'(FLNO>1)!(X="")  ; file and entry required
"RTN","HMPDE811",70,0)
 .S HMPIEN=$$FIND1^DIC(FLNO,"","",X,"","","FMERR")  ; lookup value in X is external format
"RTN","HMPDE811",71,0)
 .I $D(FMERR) D  Q  ; log error message and quit
"RTN","HMPDE811",72,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @HMPXTMP@("FM LOOKUP ERROR",FMERRCNT,V)=@V
"RTN","HMPDE811",73,0)
 .;
"RTN","HMPDE811",74,0)
 .S:'(HMPIEN>0) FMERRCNT=FMERRCNT+1,@HMPXTMP@("FM ENTRY NOT FOUND",FMERRCNT)=TXT  ; entry
"RTN","HMPDE811",75,0)
 .S:HMPIEN>0 @HMPXTMP@("ENTRY",FLNO,HMPIEN)="entry found"
"RTN","HMPDE811",76,0)
 .K FMERR  ; just in case
"RTN","HMPDE811",77,0)
 .D GETS^DIQ(FLNO,HMPIEN_",","**","EN","FMARRY","FMERR")  ; data including sub-files, ignore null values
"RTN","HMPDE811",78,0)
 .I $D(FMERR) D  ; log error message
"RTN","HMPDE811",79,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @HMPXTMP@("FM DATA ERROR",FMERRCNT,V)=@V
"RTN","HMPDE811",80,0)
 .; save the data
"RTN","HMPDE811",81,0)
 .M @HMPXTMP@("ENTRY")=FMARRY
"RTN","HMPDE811",82,0)
 ;
"RTN","HMPDE811",83,0)
 S @HMPXTMP@(0,"ended")=$$NOW^XLFDT
"RTN","HMPDE811",84,0)
 Q HMPXTMP  ; return ^XTMP storage location
"RTN","HMPDE811",85,0)
 ;
"RTN","HMPDE811",86,0)
FMITMS ; list of FileMan entries: "file # ^ .01 field value"
"RTN","HMPDE811",87,0)
 ;;101^DGPF ASSIGN FLAG
"RTN","HMPDE811",88,0)
 ;;101^DGPF ADD FLAG
"RTN","HMPDE811",89,0)
 ;
"RTN","HMPDERRH")
0^19^B1975041
"RTN","HMPDERRH",1,0)
HMPDERRH ;SLC/AGP -- HMP Error Handler ;3/21/12 5:44pm
"RTN","HMPDERRH",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDERRH",3,0)
 ;
"RTN","HMPDERRH",4,0)
 ;
"RTN","HMPDERRH",5,0)
ERRHDLR ; -- save errors to return in JSON [Expects ERRPAT, ERRMSG]
"RTN","HMPDERRH",6,0)
 N ERROR S ERROR=$$EC^%ZOSV
"RTN","HMPDERRH",7,0)
 ;
"RTN","HMPDERRH",8,0)
 ;Ignore the "errors" the unwinder creates.
"RTN","HMPDERRH",9,0)
 I ERROR["ZTER" D UNWIND^%ZTER
"RTN","HMPDERRH",10,0)
 ;
"RTN","HMPDERRH",11,0)
 ;Make sure we don't loop if there is an error during processing of
"RTN","HMPDERRH",12,0)
 ;the error handler.
"RTN","HMPDERRH",13,0)
 N $ET S $ET="D ^%ZTER,UNWIND^%ZTER"
"RTN","HMPDERRH",14,0)
 ;
"RTN","HMPDERRH",15,0)
 ;Save the error then put it in the error trap, this saves the correct
"RTN","HMPDERRH",16,0)
 ;last global reference.
"RTN","HMPDERRH",17,0)
 D ^%ZTER
"RTN","HMPDERRH",18,0)
 ;
"RTN","HMPDERRH",19,0)
 N CNT,MSGCNT
"RTN","HMPDERRH",20,0)
 S CNT=+$G(^TMP($J,"HMP ERROR","# of Errors"))
"RTN","HMPDERRH",21,0)
 S CNT=CNT+1,^TMP($J,"HMP ERROR","# of Errors")=CNT
"RTN","HMPDERRH",22,0)
 S MSGCNT=+$O(^TMP($J,"HMP ERROR","ERROR MESSAGE",""))
"RTN","HMPDERRH",23,0)
 I $G(ERRPAT)>0,MSGCNT=0 S MSGCNT=MSGCNT+1,^TMP($J,"HMP ERROR","ERROR MESSAGE",MSGCNT)="An error occurred on patient: "_$G(ERRPAT)
"RTN","HMPDERRH",24,0)
 I $L($G(ERRMSG))>0 S MSGCNT=MSGCNT+1,^TMP($J,"HMP ERROR","ERROR MESSAGE",MSGCNT)=ERRMSG
"RTN","HMPDERRH",25,0)
 ;I $D(ERRARRY) D
"RTN","HMPDERRH",26,0)
 ;.S DOMCNT=$O(^TMP($J,"HMP ERROR",ERRPAT,ERRDOM,"DATA",""))+1
"RTN","HMPDERRH",27,0)
 ;.I $D(ERRARRY)>0 M ^TMP($J,"HMP ERROR",ERRPAT,ERRDOM,"DATA",DOMCNT)=ERRARRY
"RTN","HMPDERRH",28,0)
 ;if unwind I lose the entire process, which returns incomplete data to the extract return value.
"RTN","HMPDERRH",29,0)
 ;D GTQ^HMPDJ
"RTN","HMPDERRH",30,0)
 D UNWIND^%ZTER
"RTN","HMPDERRH",31,0)
 Q
"RTN","HMPDGMPL")
0^20^B27694389
"RTN","HMPDGMPL",1,0)
HMPDGMPL ;SLC/MKB -- Problem extract ;8/2/11  15:29
"RTN","HMPDGMPL",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDGMPL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDGMPL",4,0)
 ;
"RTN","HMPDGMPL",5,0)
 ; External References          DBIA#
"RTN","HMPDGMPL",6,0)
 ; -------------------          -----
"RTN","HMPDGMPL",7,0)
 ; ^AUPNPROB                     5703
"RTN","HMPDGMPL",8,0)
 ; ^DPT                         10035
"RTN","HMPDGMPL",9,0)
 ; ^VA(200                      10060
"RTN","HMPDGMPL",10,0)
 ; ^WV(790.05                    5772
"RTN","HMPDGMPL",11,0)
 ; %DT                          10003
"RTN","HMPDGMPL",12,0)
 ; DIQ                           2056
"RTN","HMPDGMPL",13,0)
 ; GMPLUTL2                      2741
"RTN","HMPDGMPL",14,0)
 ; SDUTL3                        1252
"RTN","HMPDGMPL",15,0)
 ; XLFDT                        10103
"RTN","HMPDGMPL",16,0)
 ; XUAF4                         2171
"RTN","HMPDGMPL",17,0)
 ;
"RTN","HMPDGMPL",18,0)
 ; ------------ Get problems from VistA ------------
"RTN","HMPDGMPL",19,0)
 ;
"RTN","HMPDGMPL",20,0)
EN(DFN,BEG,END,MAX,IFN) ; -- find patient's problems
"RTN","HMPDGMPL",21,0)
 N HMPSTS,HMPPROB,HMPN,HMPITM,HMPCNT,X
"RTN","HMPDGMPL",22,0)
 ;
"RTN","HMPDGMPL",23,0)
 ; get one problem
"RTN","HMPDGMPL",24,0)
 I $G(IFN)="WV" D WV(.HMPITM,1),XML(.HMPITM):$D(HMPITM) Q
"RTN","HMPDGMPL",25,0)
 I $G(IFN) D EN1(IFN,.HMPITM),XML(.HMPITM) Q
"RTN","HMPDGMPL",26,0)
 ;
"RTN","HMPDGMPL",27,0)
 ; get all patient problems
"RTN","HMPDGMPL",28,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDGMPL",29,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999),HMPCNT=0
"RTN","HMPDGMPL",30,0)
 S HMPSTS=$G(FILTER("status")) ;default = all problems
"RTN","HMPDGMPL",31,0)
 D LIST^GMPLUTL2(.HMPPROB,DFN,HMPSTS)
"RTN","HMPDGMPL",32,0)
 S HMPN=0 F  S HMPN=$O(HMPPROB(HMPN)) Q:(HMPN<1)!(HMPCNT'<MAX)  D
"RTN","HMPDGMPL",33,0)
 . S X=$P(HMPPROB(HMPN),U,5) I X,(X<BEG)!(X>END) Q  ;onset
"RTN","HMPDGMPL",34,0)
 . S X=+HMPPROB(HMPN) K HMPITM ;ien
"RTN","HMPDGMPL",35,0)
 . D EN1(X,.HMPITM),XML(.HMPITM)
"RTN","HMPDGMPL",36,0)
 . S HMPCNT=HMPCNT+1
"RTN","HMPDGMPL",37,0)
 I $P($G(^DPT(DFN,0)),U,2)="F" D WV(.HMPITM),XML(.HMPITM):$D(HMPITM)
"RTN","HMPDGMPL",38,0)
 Q
"RTN","HMPDGMPL",39,0)
 ;
"RTN","HMPDGMPL",40,0)
EN1(ID,PROB) ; -- return a problem in PROB("attribute")=value
"RTN","HMPDGMPL",41,0)
 N HMPL,X,I,J K PROB
"RTN","HMPDGMPL",42,0)
 S ID=+$G(ID) Q:ID<1  ;invalid ien
"RTN","HMPDGMPL",43,0)
 D DETAIL^GMPLUTL2(ID,.HMPL) Q:'$D(HMPL)  ;doesn't exist
"RTN","HMPDGMPL",44,0)
 S PROB("id")=ID ;,PROB("lexiconID")=+X1 ;SNOMED?
"RTN","HMPDGMPL",45,0)
 S PROB("name")=$G(HMPL("NARRATIVE"))
"RTN","HMPDGMPL",46,0)
 S X=$G(HMPL("MODIFIED")) S:$L(X) PROB("updated")=$$DATE(X)
"RTN","HMPDGMPL",47,0)
 S PROB("icd")=$G(HMPL("DIAGNOSIS"))
"RTN","HMPDGMPL",48,0)
 S X=$G(HMPL("STATUS")) S:$L(X) PROB("status")=$E(X)_U_X
"RTN","HMPDGMPL",49,0)
 S X=$G(HMPL("HISTORY"))  S:$L(X) PROB("history")=$E(X)_U_X
"RTN","HMPDGMPL",50,0)
 S X=$G(HMPL("PRIORITY")) S:$L(X) PROB("acuity")=$E(X)_U_X
"RTN","HMPDGMPL",51,0)
 S X=$G(HMPL("ONSET")) S:$L(X) PROB("onset")=$$DATE(X)
"RTN","HMPDGMPL",52,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.07,"I") S:X PROB("resolved")=X
"RTN","HMPDGMPL",53,0)
 S X=$P($G(HMPL("ENTERED")),U)  S:$L(X) PROB("entered")=$$DATE(X)
"RTN","HMPDGMPL",54,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.02,"I")
"RTN","HMPDGMPL",55,0)
 S:X="P" PROB("unverified")=0,PROB("removed")=0
"RTN","HMPDGMPL",56,0)
 S:X="T" PROB("unverified")=1,PROB("removed")=0
"RTN","HMPDGMPL",57,0)
 S:X="H" PROB("unverified")=0,PROB("removed")=1
"RTN","HMPDGMPL",58,0)
 S X=$G(HMPL("SC")),X=$S(X="YES":1,X="NO":0,1:"")
"RTN","HMPDGMPL",59,0)
 S:$L(X) PROB("sc")=X I $G(HMPL("EXPOSURE")) D   ;ao^rad^pgulf^hnc^mst^cv
"RTN","HMPDGMPL",60,0)
 . S I=0 F  S I=$O(HMPL("EXPOSURE",I)) Q:I<1  D
"RTN","HMPDGMPL",61,0)
 .. S X=$G(HMPL("EXPOSURE",I))
"RTN","HMPDGMPL",62,0)
 .. S PROB("exposure",I)=$$EXP(X)
"RTN","HMPDGMPL",63,0)
 S X=$G(HMPL("PROVIDER")) S:$L(X) PROB("provider")=$$GET1^DIQ(9000011,ID_",",1.05,"I")_U_X
"RTN","HMPDGMPL",64,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.06) S:$L(X) PROB("service")=X
"RTN","HMPDGMPL",65,0)
 S X=$G(HMPL("CLINIC")) S:$L(X) PROB("location")=X
"RTN","HMPDGMPL",66,0)
 S X=+$$GET1^DIQ(9000011,ID_",",.06,"I")
"RTN","HMPDGMPL",67,0)
 S:X PROB("facility")=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","HMPDGMPL",68,0)
 I 'X S PROB("facility")=$$FAC^HMPD ;local stn#^name
"RTN","HMPDGMPL",69,0)
CMT ; comments
"RTN","HMPDGMPL",70,0)
 Q:'$G(HMPL("COMMENT"))
"RTN","HMPDGMPL",71,0)
 S I=0 F  S I=$O(HMPL("COMMENT",I)) Q:I<1  D
"RTN","HMPDGMPL",72,0)
 . S X=$G(HMPL("COMMENT",I))
"RTN","HMPDGMPL",73,0)
 . S PROB("comment",I)=$$DATE($P(X,U))_U_$P(X,U,2,3)
"RTN","HMPDGMPL",74,0)
 . ; = date ^ name of author ^ text
"RTN","HMPDGMPL",75,0)
 Q
"RTN","HMPDGMPL",76,0)
 ;
"RTN","HMPDGMPL",77,0)
WV(PROB,UPD) ; -- return a pregnancy log entry in PROB("attribute")=value
"RTN","HMPDGMPL",78,0)
 N I,X0,Y K PROB
"RTN","HMPDGMPL",79,0)
 S I=$O(^WV(790.05,"C",DFN,""),-1) Q:'I    ;last entry
"RTN","HMPDGMPL",80,0)
 S X0=$G(^WV(790.05,I,0)),Y=0
"RTN","HMPDGMPL",81,0)
 ; status=YES, future due date (allow past 14 days)
"RTN","HMPDGMPL",82,0)
 I $P(X0,U,3),$P(X0,U,4)'<$$FMADD^XLFDT(DT,-14) S Y=1
"RTN","HMPDGMPL",83,0)
 I 'Y,'$G(UPD) Q
"RTN","HMPDGMPL",84,0)
 ; continue if pregnant, or update requested
"RTN","HMPDGMPL",85,0)
 S PROB("id")="WV",PROB("entered")=+X0
"RTN","HMPDGMPL",86,0)
 S PROB("name")="Pregnancy",PROB("icd")="V22.2"
"RTN","HMPDGMPL",87,0)
 ; PROB("problemType")=64572001            ;HITSP/Condition
"RTN","HMPDGMPL",88,0)
 S PROB("status")=$S(Y:"A^ACTIVE",1:"I^INACTIVE")
"RTN","HMPDGMPL",89,0)
 S PROB("resolved")=$P(X0,U,4)             ;due date
"RTN","HMPDGMPL",90,0)
 S PROB("provider")=$$OUTPTPR^SDUTL3(DFN)  ;primary care
"RTN","HMPDGMPL",91,0)
 S PROB("facility")=$$FAC^HMPD
"RTN","HMPDGMPL",92,0)
 Q
"RTN","HMPDGMPL",93,0)
 ;
"RTN","HMPDGMPL",94,0)
DATE(X) ; -- Return internal form of date X
"RTN","HMPDGMPL",95,0)
 N %DT,Y
"RTN","HMPDGMPL",96,0)
 S %DT="" D ^%DT S:Y<1 Y=X
"RTN","HMPDGMPL",97,0)
 Q Y
"RTN","HMPDGMPL",98,0)
 ;
"RTN","HMPDGMPL",99,0)
VA200(X) ; -- Return ien of New Person X
"RTN","HMPDGMPL",100,0)
 N Y S Y=$S($L($G(X)):+$O(^VA(200,"B",X,0)),1:"")
"RTN","HMPDGMPL",101,0)
 Q Y
"RTN","HMPDGMPL",102,0)
 ;
"RTN","HMPDGMPL",103,0)
EXP(X) ; -- Return code for exposure name X
"RTN","HMPDGMPL",104,0)
 N Y S Y="",X=$E($G(X))
"RTN","HMPDGMPL",105,0)
 I X="A" S Y="AO"  ;agent orange
"RTN","HMPDGMPL",106,0)
 I X="R" S Y="IR"  ;ionizing radiation
"RTN","HMPDGMPL",107,0)
 I X="E" S Y="PG"  ;persian gulf
"RTN","HMPDGMPL",108,0)
 I X="H" S Y="HNC" ;head/neck cancer
"RTN","HMPDGMPL",109,0)
 I X="M" S Y="MST" ;military sexual trauma
"RTN","HMPDGMPL",110,0)
 I X="C" S Y="CV"  ;combat vet
"RTN","HMPDGMPL",111,0)
 I X="S" S Y="SHAD"
"RTN","HMPDGMPL",112,0)
 Q Y
"RTN","HMPDGMPL",113,0)
 ;
"RTN","HMPDGMPL",114,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDGMPL",115,0)
 ;
"RTN","HMPDGMPL",116,0)
XML(PROB) ; -- Return patient problem as XML in @HMP@(I)
"RTN","HMPDGMPL",117,0)
 N ATT,I,X,Y,P,TAG
"RTN","HMPDGMPL",118,0)
 D ADD("<problem>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDGMPL",119,0)
 S ATT="" F  S ATT=$O(PROB(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDGMPL",120,0)
 . I ATT="exposure" D  S Y="" Q
"RTN","HMPDGMPL",121,0)
 .. S Y="<exposures>" D ADD(Y)
"RTN","HMPDGMPL",122,0)
 .. S I=0 F  S I=$O(PROB(ATT,I)) Q:I<1  S X=$G(PROB(ATT,I)) S:$L(X) Y="<exposure value='"_X_"' />" D ADD(Y)
"RTN","HMPDGMPL",123,0)
 .. D ADD("</exposures>")
"RTN","HMPDGMPL",124,0)
 . I ATT="comment" D  S Y="" Q
"RTN","HMPDGMPL",125,0)
 .. D ADD("<comments>")
"RTN","HMPDGMPL",126,0)
 .. S I=0 F  S I=$O(PROB(ATT,I)) Q:I<1  S X=$G(PROB(ATT,I)) D
"RTN","HMPDGMPL",127,0)
 ... S Y="<comment id='"_I
"RTN","HMPDGMPL",128,0)
 ... S:$L($P(X,U,1)) Y=Y_"' entered='"_$P(X,U)
"RTN","HMPDGMPL",129,0)
 ... S:$L($P(X,U,2)) Y=Y_"' enteredBy='"_$$ESC^HMPD($P(X,U,2))
"RTN","HMPDGMPL",130,0)
 ... S:$L($P(X,U,3)) Y=Y_"' commentText='"_$$ESC^HMPD($P(X,U,3))
"RTN","HMPDGMPL",131,0)
 ... S Y=Y_"' />" D ADD(Y)
"RTN","HMPDGMPL",132,0)
 .. D ADD("</comments>")
"RTN","HMPDGMPL",133,0)
 . S X=$G(PROB(ATT)),Y="" Q:'$L(X)
"RTN","HMPDGMPL",134,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDGMPL",135,0)
 . I $L(X)>1 D  S Y=""
"RTN","HMPDGMPL",136,0)
 .. S Y="<"_ATT_" "
"RTN","HMPDGMPL",137,0)
 .. F P=1:1 S TAG=$P("code^name^Z",U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDGMPL",138,0)
 .. S Y=Y_"/>" D ADD(Y)
"RTN","HMPDGMPL",139,0)
 D ADD("</problem>")
"RTN","HMPDGMPL",140,0)
 Q
"RTN","HMPDGMPL",141,0)
 ;
"RTN","HMPDGMPL",142,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDGMPL",143,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDGMPL",144,0)
 S @HMP@(HMPI)=X
"RTN","HMPDGMPL",145,0)
 Q
"RTN","HMPDGMRA")
0^21^B22292681
"RTN","HMPDGMRA",1,0)
HMPDGMRA ;SLC/MKB -- Allergy/Reaction extract ;8/2/11  15:29
"RTN","HMPDGMRA",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDGMRA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDGMRA",4,0)
 ;
"RTN","HMPDGMRA",5,0)
 ; External References          DBIA#
"RTN","HMPDGMRA",6,0)
 ; -------------------          -----
"RTN","HMPDGMRA",7,0)
 ; ^VA(200                      10060
"RTN","HMPDGMRA",8,0)
 ; %DT                          10003
"RTN","HMPDGMRA",9,0)
 ; GMRADPT                      10099
"RTN","HMPDGMRA",10,0)
 ; EN1^GMRAOR2                   2422
"RTN","HMPDGMRA",11,0)
 ; PSN50P41                      4531
"RTN","HMPDGMRA",12,0)
 ; PSN50P65                      4543
"RTN","HMPDGMRA",13,0)
 ;
"RTN","HMPDGMRA",14,0)
 ; ------------ Get reactions from VistA ------------
"RTN","HMPDGMRA",15,0)
 ;
"RTN","HMPDGMRA",16,0)
EN(DFN,BEG,END,MAX,IFN) ; -- find patient's allergies/reactions
"RTN","HMPDGMRA",17,0)
 N GMRA,GMRAL,HMPN,HMPITM,HMPCNT
"RTN","HMPDGMRA",18,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDGMRA",19,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999),HMPCNT=0
"RTN","HMPDGMRA",20,0)
 D EN1^GMRADPT
"RTN","HMPDGMRA",21,0)
 ;
"RTN","HMPDGMRA",22,0)
 ; get one reaction
"RTN","HMPDGMRA",23,0)
 I $G(IFN) D EN1(IFN,.HMPITM),XML(.HMPITM) Q
"RTN","HMPDGMRA",24,0)
 ;
"RTN","HMPDGMRA",25,0)
 ; get all reactions
"RTN","HMPDGMRA",26,0)
 I 'GMRAL D  Q
"RTN","HMPDGMRA",27,0)
 . S HMPITM("assessment")=$S(GMRAL=0:"nka",1:"not done")
"RTN","HMPDGMRA",28,0)
 . S HMPITM("facility")=$$FAC^HMPD ;local stn#^name
"RTN","HMPDGMRA",29,0)
 . D XML(.HMPITM)
"RTN","HMPDGMRA",30,0)
 S HMPN=0 F  S HMPN=+$O(GMRAL(HMPN)) Q:HMPN<1  D  Q:HMPCNT'<MAX
"RTN","HMPDGMRA",31,0)
 . K HMPITM D EN1(HMPN,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDGMRA",32,0)
 . D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDGMRA",33,0)
 Q
"RTN","HMPDGMRA",34,0)
 ;
"RTN","HMPDGMRA",35,0)
EN1(ID,REAC) ; -- return a reaction in REAC("attribute")=value
"RTN","HMPDGMRA",36,0)
 ;          from EN: expects GMRAL(ID)
"RTN","HMPDGMRA",37,0)
 N HMPY,GMRA,I,J,X,Y,SEV,TXT,SEV K REAC
"RTN","HMPDGMRA",38,0)
 S GMRA=$G(GMRAL(ID)) D EN1^GMRAOR2(ID,"HMPY")
"RTN","HMPDGMRA",39,0)
 S X=$P(HMPY,U,10) I $L(X) S X=$$DATE(X) Q:X<BEG  Q:X>END  S REAC("entered")=X
"RTN","HMPDGMRA",40,0)
 S REAC("facility")=$$FAC^HMPD ;local stn#^name
"RTN","HMPDGMRA",41,0)
 S REAC("id")=ID,REAC("name")=$P(HMPY,U) I $P(GMRA,U,9) D
"RTN","HMPDGMRA",42,0)
 . S X=$P(GMRA,U,9),Y=+$P(X,"(",2) I 'Y,X["PSDRUG" S Y=50
"RTN","HMPDGMRA",43,0)
 . S REAC("localCode")=X,REAC("vuid")=$$VUID^HMPD(+X,Y)
"RTN","HMPDGMRA",44,0)
 S X=$P(HMPY,U,6) S:$L(X) REAC("mechanism")=X
"RTN","HMPDGMRA",45,0)
 S X=$P(HMPY,U,5),REAC("source")=$E(X)
"RTN","HMPDGMRA",46,0)
 S REAC("type")=$S($L(GMRA):$P(GMRA,U,7),1:$$DFO($P(HMPY,U,7)))_U_$P(HMPY,U,7)
"RTN","HMPDGMRA",47,0)
 I $P(HMPY,U,4)="VERIFIED",$P(HMPY,U,9) S REAC("verified")=$P(HMPY,U,9)
"RTN","HMPDGMRA",48,0)
 S I=0,SEV="" F  S I=$O(HMPY("O",I)) Q:I<1  S X=$P(HMPY("O",I),U,2) S:X]SEV SEV=X ;find highest severity
"RTN","HMPDGMRA",49,0)
 S:$L(SEV) REAC("severity")=SEV
"RTN","HMPDGMRA",50,0)
 ; reactions
"RTN","HMPDGMRA",51,0)
 S I=0 F  S I=$O(GMRAL(ID,"S",I)) Q:I<1  D
"RTN","HMPDGMRA",52,0)
 . S X=$G(GMRAL(ID,"S",I)),Y=+$P(X,";",2)
"RTN","HMPDGMRA",53,0)
 . S REAC("reaction",I)=$P(X,";")_U_$$VUID^HMPD(Y,120.83)
"RTN","HMPDGMRA",54,0)
 ; comments
"RTN","HMPDGMRA",55,0)
 S I=0 F  S I=$O(HMPY("C",I)) Q:I<1  D
"RTN","HMPDGMRA",56,0)
 . S X=$G(HMPY("C",I)) K TXT
"RTN","HMPDGMRA",57,0)
 . S Y=$$VA200($P(X,U,3))_U_$P(X,U)
"RTN","HMPDGMRA",58,0)
 . S Y=Y_U_$S($L($P(X,U,2)):$E($P(X,U,2)),1:"E")
"RTN","HMPDGMRA",59,0)
 . S J=0 F  S J=$O(HMPY("C",I,J)) Q:J<1  S X=$G(HMPY("C",I,J,0)),TXT(J)=X
"RTN","HMPDGMRA",60,0)
 . K X S X=$$STRING^HMPD(.TXT)
"RTN","HMPDGMRA",61,0)
 . S REAC("comment",I)=Y_U_X ;ien^name^date^type^text
"RTN","HMPDGMRA",62,0)
 ; drug info
"RTN","HMPDGMRA",63,0)
 I $D(HMPY("I")) D
"RTN","HMPDGMRA",64,0)
 . N ROOT S ROOT=$$B^PSN50P41
"RTN","HMPDGMRA",65,0)
 . S I=0 F  S I=$O(HMPY("I",I)) Q:I<1  S X=$G(HMPY("I",I)) D
"RTN","HMPDGMRA",66,0)
 .. N IEN S IEN=$O(@ROOT@(X,0))
"RTN","HMPDGMRA",67,0)
 .. S REAC("drugIngredient",I)=X_U_$$VUID^HMPD(IEN,50.416)
"RTN","HMPDGMRA",68,0)
 I $D(HMPY("V")) D
"RTN","HMPDGMRA",69,0)
 . S I=0 F  S I=$O(HMPY("V",I)) Q:I<1  S X=$G(HMPY("V",I)) D
"RTN","HMPDGMRA",70,0)
 .. D C^PSN50P65("",$P(X,U,2),"PSN")
"RTN","HMPDGMRA",71,0)
 .. N IEN S IEN=+$O(^TMP($J,"PSN","C",$P(X,U),0))
"RTN","HMPDGMRA",72,0)
 .. S REAC("drugClass",I)=$P(X,U,2)_U_$$VUID^HMPD(IEN,50.605)
"RTN","HMPDGMRA",73,0)
 I GMRA="" S REAC("removed")=1 ;entered in error
"RTN","HMPDGMRA",74,0)
 Q
"RTN","HMPDGMRA",75,0)
 ;
"RTN","HMPDGMRA",76,0)
VA200(NAME) ; -- Return ien^name from #200
"RTN","HMPDGMRA",77,0)
 N Y S NAME=$G(NAME),Y="^"
"RTN","HMPDGMRA",78,0)
 I $L(NAME) S Y=+$O(^VA(200,"B",NAME,0))_U_NAME
"RTN","HMPDGMRA",79,0)
 Q Y
"RTN","HMPDGMRA",80,0)
 ;
"RTN","HMPDGMRA",81,0)
DATE(X) ; -- Return internal form of date X
"RTN","HMPDGMRA",82,0)
 N %DT,Y
"RTN","HMPDGMRA",83,0)
 S %DT="TX" D ^%DT
"RTN","HMPDGMRA",84,0)
 Q Y
"RTN","HMPDGMRA",85,0)
 ;
"RTN","HMPDGMRA",86,0)
DFO(X) ; -- Return 'DFO' string for mechanism name(s)
"RTN","HMPDGMRA",87,0)
 N I,P,Y S Y=""
"RTN","HMPDGMRA",88,0)
 F I=1:1:$L(X,",") S P=$P(X,",",I),Y=Y_$S($E(P)=" ":$E(P,2),1:$E(P))
"RTN","HMPDGMRA",89,0)
 S:Y="" Y=$G(X)
"RTN","HMPDGMRA",90,0)
 Q Y
"RTN","HMPDGMRA",91,0)
 ;
"RTN","HMPDGMRA",92,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDGMRA",93,0)
 ;
"RTN","HMPDGMRA",94,0)
XML(REAC) ; -- Return patient reaction as XML
"RTN","HMPDGMRA",95,0)
 ;  as <element code='123' displayName='ABC' />
"RTN","HMPDGMRA",96,0)
 N ATT,X,Y,I,P,NM,TAG
"RTN","HMPDGMRA",97,0)
 D ADD("<allergy>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDGMRA",98,0)
 S ATT="" F  S ATT=$O(REAC(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDGMRA",99,0)
 . I ATT="comment" D  S Y="" Q
"RTN","HMPDGMRA",100,0)
 .. S I=0,Y="<comments>" D ADD(Y)
"RTN","HMPDGMRA",101,0)
 .. F  S I=$O(REAC(ATT,I)) Q:I<1  S X=$G(REAC(ATT,I)) D
"RTN","HMPDGMRA",102,0)
 ... S Y="<comment id='"_I
"RTN","HMPDGMRA",103,0)
 ... S:$L($P(X,U,3)) Y=Y_"' entered='"_$P(X,U,3)
"RTN","HMPDGMRA",104,0)
 ... S:$L($P(X,U,2)) Y=Y_"' enteredBy='"_$$ESC^HMPD($P(X,U,2))
"RTN","HMPDGMRA",105,0)
 ... S:$L($P(X,U,4)) Y=Y_"' commentType='"_$P(X,U,4)
"RTN","HMPDGMRA",106,0)
 ... S:$L($P(X,U,5)) Y=Y_"' commentText='"_$$ESC^HMPD($P(X,U,5))
"RTN","HMPDGMRA",107,0)
 ... S Y=Y_"' />" D ADD(Y)
"RTN","HMPDGMRA",108,0)
 .. D ADD("</comments>")
"RTN","HMPDGMRA",109,0)
 . I $O(REAC(ATT,0)) D  S Y="" Q
"RTN","HMPDGMRA",110,0)
 .. S NM=ATT_$S($E(ATT,$L(ATT))="s":"es",1:"s") D ADD("<"_NM_">")
"RTN","HMPDGMRA",111,0)
 .. S I=0 F  S I=$O(REAC(ATT,I)) Q:I<1  D
"RTN","HMPDGMRA",112,0)
 ... S X=$G(REAC(ATT,I)),Y="<"_ATT_" "
"RTN","HMPDGMRA",113,0)
 ... F P=1:1 S TAG=$P("name^vuid^severity^Z",U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDGMRA",114,0)
 ... S Y=Y_"/>" D ADD(Y)
"RTN","HMPDGMRA",115,0)
 .. D ADD("</"_NM_">")
"RTN","HMPDGMRA",116,0)
 . S X=$G(REAC(ATT)),Y="" Q:'$L(X)
"RTN","HMPDGMRA",117,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDGMRA",118,0)
 . I $L(X)>1 D  S Y=""
"RTN","HMPDGMRA",119,0)
 .. S Y="<"_ATT_" "
"RTN","HMPDGMRA",120,0)
 .. F P=1:1 S TAG=$P("code^name^Z",U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDGMRA",121,0)
 .. S Y=Y_"/>" D ADD(Y)
"RTN","HMPDGMRA",122,0)
 D ADD("</allergy>")
"RTN","HMPDGMRA",123,0)
 Q
"RTN","HMPDGMRA",124,0)
 ;
"RTN","HMPDGMRA",125,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDGMRA",126,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDGMRA",127,0)
 S @HMP@(HMPI)=X
"RTN","HMPDGMRA",128,0)
 Q
"RTN","HMPDGMRC")
0^22^B10807786
"RTN","HMPDGMRC",1,0)
HMPDGMRC ;SLC/MKB -- Consult extract ;8/2/11  15:29
"RTN","HMPDGMRC",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDGMRC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDGMRC",4,0)
 ;
"RTN","HMPDGMRC",5,0)
 ; External References          DBIA#
"RTN","HMPDGMRC",6,0)
 ; -------------------          -----
"RTN","HMPDGMRC",7,0)
 ; ^TIU(8925.1                   5677
"RTN","HMPDGMRC",8,0)
 ; DIQ                           2056
"RTN","HMPDGMRC",9,0)
 ; GMRCGUIB                      2980
"RTN","HMPDGMRC",10,0)
 ; GMRCSLM1,^TMP("GMRCR",$J)     2740
"RTN","HMPDGMRC",11,0)
 ; TIULQ                         2693
"RTN","HMPDGMRC",12,0)
 ; XUAF4                         2171
"RTN","HMPDGMRC",13,0)
 ;
"RTN","HMPDGMRC",14,0)
 ; ------------ Get consults from VistA ------------
"RTN","HMPDGMRC",15,0)
 ;
"RTN","HMPDGMRC",16,0)
EN(DFN,BEG,END,MAX,IFN) ; -- find patient's consults
"RTN","HMPDGMRC",17,0)
 N HMPN,HMPX,HMPITM K ^TMP("GMRCR",$J,"CS")
"RTN","HMPDGMRC",18,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDGMRC",19,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDGMRC",20,0)
 ;
"RTN","HMPDGMRC",21,0)
 D OER^GMRCSLM1(DFN,"",BEG,END,"")
"RTN","HMPDGMRC",22,0)
 S HMPN=0 F  S HMPN=$O(^TMP("GMRCR",$J,"CS",HMPN)) Q:HMPN<1!(HMPN>MAX)  S HMPX=$G(^(HMPN,0)) Q:$E(HMPX)="<"  D
"RTN","HMPDGMRC",23,0)
 . I $G(IFN),IFN'=+HMPX Q
"RTN","HMPDGMRC",24,0)
 . K HMPITM D EN1(+HMPX,.HMPITM),XML(.HMPITM)
"RTN","HMPDGMRC",25,0)
 K ^TMP("GMRCR",$J,"CS"),^TMP("HMPTEXT",$J)
"RTN","HMPDGMRC",26,0)
 Q
"RTN","HMPDGMRC",27,0)
 ;
"RTN","HMPDGMRC",28,0)
EN1(ID,CONS) ; -- return a consult in CONS("attribute")=value
"RTN","HMPDGMRC",29,0)
 ;     Expects DFN, HMPX=^TMP("GMRCR",$J,"CS",HMPN,0) [from EN]
"RTN","HMPDGMRC",30,0)
 N HMPD,X0,HMPJ,X,HMPTIU,LT,NT
"RTN","HMPDGMRC",31,0)
 K CONS,^TMP("HMPTEXT",$J)
"RTN","HMPDGMRC",32,0)
 S CONS("id")=ID,CONS("requested")=$P(HMPX,U,2)
"RTN","HMPDGMRC",33,0)
 S CONS("status")=$P(HMPX,U,3),CONS("service")=$P(HMPX,U,4)
"RTN","HMPDGMRC",34,0)
 S CONS("procedure")=$P(HMPX,U,5),CONS("name")=$P(HMPX,U,7)
"RTN","HMPDGMRC",35,0)
 I $P(HMPX,U,6)="*" S CONS("result")="SIGNIFICANT FINDINGS"
"RTN","HMPDGMRC",36,0)
 S CONS("orderID")=$P(HMPX,U,8),CONS("type")=$P(HMPX,U,9)
"RTN","HMPDGMRC",37,0)
 D DOCLIST^GMRCGUIB(.HMPD,ID) S X0=$G(HMPD(0)) ;=^GMR(123,ID,0)
"RTN","HMPDGMRC",38,0)
 S HMPJ=0 F  S HMPJ=$O(HMPD(50,HMPJ)) Q:HMPJ<1  S X=$G(HMPD(50,HMPJ)) D
"RTN","HMPDGMRC",39,0)
 . Q:'$D(@(U_$P(X,";",2)_+X_")"))  ;text deleted
"RTN","HMPDGMRC",40,0)
 . D EXTRACT^TIULQ(+X,"HMPTIU",,.01)
"RTN","HMPDGMRC",41,0)
 . S LT=$G(HMPTIU(+X,.01,"E")) ;print name
"RTN","HMPDGMRC",42,0)
 . S NT=$$GET1^DIQ(8925.1,+$G(HMPTIU(+X,.01,"I"))_",",1501)
"RTN","HMPDGMRC",43,0)
 . S CONS("document",HMPJ)=+X_U_LT_U_NT
"RTN","HMPDGMRC",44,0)
 . S:$G(HMPTEXT) CONS("document",HMPJ,"content")=$$TEXT^HMPDTIU(X)
"RTN","HMPDGMRC",45,0)
 S X=$P(X0,U,21),CONS("facility")=$S(X:$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U),1:$$FAC^HMPD)
"RTN","HMPDGMRC",46,0)
 Q
"RTN","HMPDGMRC",47,0)
 ;
"RTN","HMPDGMRC",48,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDGMRC",49,0)
 ;
"RTN","HMPDGMRC",50,0)
XML(CONS) ; -- Return patient consult as XML
"RTN","HMPDGMRC",51,0)
 ;  as <element code='123' displayName='ABC' />
"RTN","HMPDGMRC",52,0)
 N ATT,X,Y,I,J,NAMES
"RTN","HMPDGMRC",53,0)
 D ADD("<consult>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDGMRC",54,0)
 S ATT="" F  S ATT=$O(CONS(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDGMRC",55,0)
 . S NAMES=$S(ATT="document":"id^localTitle^nationalTitle^Z",1:"code^name^Z")
"RTN","HMPDGMRC",56,0)
 . I $O(CONS(ATT,0)) D  S Y="" Q  ;multiples
"RTN","HMPDGMRC",57,0)
 .. D ADD("<"_ATT_"s>")
"RTN","HMPDGMRC",58,0)
 .. S I=0 F  S I=$O(CONS(ATT,I)) Q:I<1  D
"RTN","HMPDGMRC",59,0)
 ... S X=$G(CONS(ATT,I)),Y="<"_ATT_" "_$$LOOP
"RTN","HMPDGMRC",60,0)
 ... S X=$G(CONS(ATT,I,"content")) I '$L(X) S Y=Y_"/>" D ADD(Y) Q
"RTN","HMPDGMRC",61,0)
 ... S Y=Y_">" D ADD(Y)
"RTN","HMPDGMRC",62,0)
 ... S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","HMPDGMRC",63,0)
 ... S J=0 F  S J=$O(@X@(J)) Q:J<1  S Y=$$ESC^HMPD(@X@(J)) D ADD(Y)
"RTN","HMPDGMRC",64,0)
 ... D ADD("</content>"),ADD("</"_ATT_">")
"RTN","HMPDGMRC",65,0)
 .. D ADD("</"_ATT_"s>")
"RTN","HMPDGMRC",66,0)
 . S X=$G(CONS(ATT)),Y="" Q:'$L(X)
"RTN","HMPDGMRC",67,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDGMRC",68,0)
 . I $L(X)>1 S Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","HMPDGMRC",69,0)
 D ADD("</consult>")
"RTN","HMPDGMRC",70,0)
 Q
"RTN","HMPDGMRC",71,0)
 ;
"RTN","HMPDGMRC",72,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDGMRC",73,0)
 N STR,P,TAG S STR=""
"RTN","HMPDGMRC",74,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDGMRC",75,0)
 Q STR
"RTN","HMPDGMRC",76,0)
 ;
"RTN","HMPDGMRC",77,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDGMRC",78,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDGMRC",79,0)
 S @HMP@(HMPI)=X
"RTN","HMPDGMRC",80,0)
 Q
"RTN","HMPDGMV")
0^23^B41514540
"RTN","HMPDGMV",1,0)
HMPDGMV ;SLC/MKB -- Vitals extract ;8/2/11  15:29
"RTN","HMPDGMV",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDGMV",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDGMV",4,0)
 ;
"RTN","HMPDGMV",5,0)
 ; External References          DBIA#
"RTN","HMPDGMV",6,0)
 ; -------------------          -----
"RTN","HMPDGMV",7,0)
 ; ^SC                          10040
"RTN","HMPDGMV",8,0)
 ; ^VA(200                      10060
"RTN","HMPDGMV",9,0)
 ; DILFD                         2055
"RTN","HMPDGMV",10,0)
 ; GMRVUT0,^UTILITY($J,"GMRVD")  1446
"RTN","HMPDGMV",11,0)
 ; GMVGETQL                      5048
"RTN","HMPDGMV",12,0)
 ; GMVGETVT                      5047
"RTN","HMPDGMV",13,0)
 ; GMVRPCM                       5702
"RTN","HMPDGMV",14,0)
 ; GMVUTL                        5046
"RTN","HMPDGMV",15,0)
 ;
"RTN","HMPDGMV",16,0)
 ; ------------ Get vitals from VistA ------------
"RTN","HMPDGMV",17,0)
 ;
"RTN","HMPDGMV",18,0)
EN(DFN,BEG,END,MAX,IFN) ; -- find patient's vitals
"RTN","HMPDGMV",19,0)
 N HMPITM,HMPPARAM,GMRVSTR,IDT,TYPE,VIT,CNT,X0,X,Y,I,N
"RTN","HMPDGMV",20,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDGMV",21,0)
 ;
"RTN","HMPDGMV",22,0)
 ; get one measurement
"RTN","HMPDGMV",23,0)
 I $G(IFN),IFN?7N1"."1.6N S (BEG,END)=IFN K IFN
"RTN","HMPDGMV",24,0)
 I $G(IFN) D EN1(IFN,.HMPITM),XML(.HMPITM) Q
"RTN","HMPDGMV",25,0)
 ;
"RTN","HMPDGMV",26,0)
 ; get all measurements
"RTN","HMPDGMV",27,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDGMV",28,0)
 S GMRVSTR="BP;T;R;P;HT;WT;CVP;CG;PO2;PN",GMRVSTR(0)=BEG_U_END_U_MAX_"^1"
"RTN","HMPDGMV",29,0)
 K ^UTILITY($J,"GMRVD") D EN1^GMRVUT0
"RTN","HMPDGMV",30,0)
 S (IDT,CNT)=0 F  S IDT=$O(^UTILITY($J,"GMRVD",IDT)) Q:IDT<1  D  Q:CNT'<MAX
"RTN","HMPDGMV",31,0)
 . K VIT S VIT("taken")=9999999-IDT,CNT=CNT+1,N=0
"RTN","HMPDGMV",32,0)
 . S TYPE="" F  S TYPE=$O(^UTILITY($J,"GMRVD",IDT,TYPE)) Q:TYPE=""  D
"RTN","HMPDGMV",33,0)
 .. N NAME,VUID,RESULT,UNIT,MRES,MUNT,HIGH,LOW,QUAL
"RTN","HMPDGMV",34,0)
 .. S IFN=+$O(^UTILITY($J,"GMRVD",IDT,TYPE,0)),X0=$G(^(IFN))
"RTN","HMPDGMV",35,0)
 .. S X=+$P(X0,U,3),NAME=$$FIELD^GMVGETVT(X,1)
"RTN","HMPDGMV",36,0)
 .. S VUID=$$FIELD^GMVGETVT(X,4),RESULT=$P(X0,U,8),UNIT=$$UNIT(TYPE)
"RTN","HMPDGMV",37,0)
 .. S (MRES,MUNT)="" I $L($P(X0,U,13)) D
"RTN","HMPDGMV",38,0)
 ... S X=$S(TYPE="T":"C",TYPE="HT":"cm",TYPE="WT":"kg",TYPE="CG":"cm",1:"")
"RTN","HMPDGMV",39,0)
 ... S MRES=$P(X0,U,13) S:$L(X) MUNT=X
"RTN","HMPDGMV",40,0)
 .. S X=$$RANGE(TYPE),(HIGH,LOW)="" I $L(X) S HIGH=$P(X,U),LOW=$P(X,U,2)
"RTN","HMPDGMV",41,0)
 .. S N=N+1,VIT("measurement",N)=IFN_U_VUID_U_NAME_U_RESULT_U_UNIT_U_MRES_U_MUNT_U_HIGH_U_LOW
"RTN","HMPDGMV",42,0)
 .. S QUAL=$P(X0,U,17) I $L(QUAL) F I=1:1:$L(QUAL,";") D
"RTN","HMPDGMV",43,0)
 ... S X=$P(QUAL,";",I),Y=$$GETIEN^GMVGETQL(X,1)
"RTN","HMPDGMV",44,0)
 ... I Y S VIT("measurement",N,"qualifier",I)=X_U_$$FIELD^GMVGETQL(Y,3)
"RTN","HMPDGMV",45,0)
 . S VIT("entered")=$P($G(X0),U,4) ;use last one
"RTN","HMPDGMV",46,0)
 . S X=+$P($G(X0),U,5) S:X VIT("location")=$$LOC(X)
"RTN","HMPDGMV",47,0)
 . S VIT("facility")=$$FAC^HMPD(X)
"RTN","HMPDGMV",48,0)
 . D XML(.VIT)
"RTN","HMPDGMV",49,0)
 K ^UTILITY($J,"GMRVD")
"RTN","HMPDGMV",50,0)
 Q
"RTN","HMPDGMV",51,0)
 ;
"RTN","HMPDGMV",52,0)
EN1(ID,VIT) ; -- return a vital/measurement in VIT("attribute")
"RTN","HMPDGMV",53,0)
 K VIT S ID=+$G(ID) Q:ID<1  ;invalid ien
"RTN","HMPDGMV",54,0)
 N HMPY,X0,DFN,TYPE,X,Y,NAME,VUID,RESULT,UNIT,MRES,MUNT,HIGH,LOW,I
"RTN","HMPDGMV",55,0)
 D GETREC^GMVUTL(.HMPY,ID,1) S X0=$G(HMPY(0))
"RTN","HMPDGMV",56,0)
 S DFN=+$P(X0,U,2) Q:DFN<1
"RTN","HMPDGMV",57,0)
 S TYPE=$$FIELD^GMVGETVT(+$P(X0,U,3),2)
"RTN","HMPDGMV",58,0)
 S X=+$P(X0,U,5),VIT("location")=$$LOC(X)
"RTN","HMPDGMV",59,0)
 S VIT("facility")=$$FAC^HMPD(X)
"RTN","HMPDGMV",60,0)
 S NAME=$$FIELD^GMVGETVT($P(X0,U,3),1),VUID=$$FIELD^GMVGETVT($P(X0,U,3),4)
"RTN","HMPDGMV",61,0)
 S X=$P(X0,U,8),RESULT=X,UNIT=$$UNIT(TYPE),(MRES,MUNT)=""
"RTN","HMPDGMV",62,0)
 I TYPE="T"  S MUNT="C",MRES=$J(X-32*5/9,0,1) ;EN1^GMRVUTL
"RTN","HMPDGMV",63,0)
 I TYPE="HT" S MUNT="cm",MRES=$J(2.54*X,0,2)  ;EN2^GMRVUTL
"RTN","HMPDGMV",64,0)
 I TYPE="WT" S MUNT="kg",MRES=$J(X/2.2,0,2)   ;EN3^GMRVUTL
"RTN","HMPDGMV",65,0)
 I TYPE="CG" S MUNT="cm",MRES=$J(2.54*X,0,2)
"RTN","HMPDGMV",66,0)
 S VIT("taken")=+X0,VIT("entered")=+$P(X0,U,4),(HIGH,LOW)=""
"RTN","HMPDGMV",67,0)
 S X=$$RANGE(TYPE) I $L(X) S HIGH=$P(X,U),LOW=$P(X,U,2)
"RTN","HMPDGMV",68,0)
 S VIT("measurement",1)=ID_U_VUID_U_NAME_U_RESULT_U_UNIT_U_MRES_U_MUNT_U_HIGH_U_LOW
"RTN","HMPDGMV",69,0)
 F I=1:1:$L(HMPY(5),U) S X=$P(HMPY(5),U,I),VIT("measurement",1,"qualifier",I)=$$FIELD^GMVGETQL(X,1)_U_$$FIELD^GMVGETQL(X,3) ;name^VUID
"RTN","HMPDGMV",70,0)
 I $G(HMPY(2)) D  ;entered in error/reasons
"RTN","HMPDGMV",71,0)
 . S X=$P(HMPY(2),U,3)
"RTN","HMPDGMV",72,0)
 . F I=1:1:$L(X,"~") S VIT("removed",I)=$$EXTERNAL^DILFD(120.506,.01,,$P(X,"~",I))
"RTN","HMPDGMV",73,0)
 Q
"RTN","HMPDGMV",74,0)
 ;
"RTN","HMPDGMV",75,0)
UNIT(X) ; -- Return unit for vital type X
"RTN","HMPDGMV",76,0)
 N Y S Y=""
"RTN","HMPDGMV",77,0)
 I TYPE="BP"  S Y="mm[Hg]"
"RTN","HMPDGMV",78,0)
 I TYPE="T"   S Y="F"
"RTN","HMPDGMV",79,0)
 I TYPE="R"   S Y="/min"
"RTN","HMPDGMV",80,0)
 I TYPE="P"   S Y="/min"
"RTN","HMPDGMV",81,0)
 I TYPE="HT"  S Y="in"
"RTN","HMPDGMV",82,0)
 I TYPE="WT"  S Y="lb"
"RTN","HMPDGMV",83,0)
 I TYPE="CVP" S Y="cmH2O"
"RTN","HMPDGMV",84,0)
 I TYPE="CG"  S Y="in"
"RTN","HMPDGMV",85,0)
 I TYPE="PO2" S Y="%"
"RTN","HMPDGMV",86,0)
 Q Y
"RTN","HMPDGMV",87,0)
 ;
"RTN","HMPDGMV",88,0)
USER(X) ; -- Return ien^name for person# X
"RTN","HMPDGMV",89,0)
 N Y S X=+$G(X)
"RTN","HMPDGMV",90,0)
 S Y=$S(X:X_U_$P($G(^VA(200,X,0)),U),1:"^")
"RTN","HMPDGMV",91,0)
 Q Y
"RTN","HMPDGMV",92,0)
 ;
"RTN","HMPDGMV",93,0)
LOC(X) ; -- Return ien^name for hospital location X
"RTN","HMPDGMV",94,0)
 N Y S X=+$G(X)
"RTN","HMPDGMV",95,0)
 S Y=$S(X:X_U_$P($G(^SC(X,0)),U),1:"^")
"RTN","HMPDGMV",96,0)
 Q Y
"RTN","HMPDGMV",97,0)
 ;
"RTN","HMPDGMV",98,0)
RANGE(TYPE) ; -- return high^low range of values for TYPE
"RTN","HMPDGMV",99,0)
 N Y I '$D(HMPPARAM(TYPE)) D  ;get parameter values
"RTN","HMPDGMV",100,0)
 . N HMPFLDS,HMPI,HMPY,HMPN,HMPX,X
"RTN","HMPDGMV",101,0)
 . S HMPFLDS=$S(TYPE="T":"5.1^5.2",TYPE="P":"5.3^5.4",TYPE="R":"5.5^5.6",TYPE="CVP":"6.1^6.2",TYPE="PO2":6.3,TYPE="BP":"5.7^5.71^5.8^5.81",1:"") Q:HMPFLDS=""
"RTN","HMPDGMV",102,0)
 . F HMPI=1:1:$L(HMPFLDS,U) S HMPN=$P(HMPFLDS,U,HMPI) D RPC^GMVRPCM(.HMPY,"GETHILO",HMPN) S HMPX(HMPN)=$G(@HMPY@(0))
"RTN","HMPDGMV",103,0)
 . I TYPE="T" S HMPPARAM(TYPE)=$G(HMPX(5.1))_U_$G(HMPX(5.2))
"RTN","HMPDGMV",104,0)
 . I TYPE="P" S HMPPARAM(TYPE)=$G(HMPX(5.3))_U_$G(HMPX(5.4))
"RTN","HMPDGMV",105,0)
 . I TYPE="R" S HMPPARAM(TYPE)=$G(HMPX(5.5))_U_$G(HMPX(5.6))
"RTN","HMPDGMV",106,0)
 . I TYPE="CVP" S HMPPARAM(TYPE)=$G(HMPX(6.1))_U_$G(HMPX(6.2))
"RTN","HMPDGMV",107,0)
 . I TYPE="PO2" S HMPPARAM(TYPE)="100^"_$G(HMPX(6.3))
"RTN","HMPDGMV",108,0)
 . I TYPE="BP" S HMPPARAM(TYPE)=$G(HMPX(5.7))_"/"_$G(HMPX(5.71))_U_$G(HMPX(5.8))_"/"_$G(HMPX(5.81))
"RTN","HMPDGMV",109,0)
 S Y=$G(HMPPARAM(TYPE))
"RTN","HMPDGMV",110,0)
 Q Y
"RTN","HMPDGMV",111,0)
 ;
"RTN","HMPDGMV",112,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDGMV",113,0)
 ;
"RTN","HMPDGMV",114,0)
NAME(X) ; -- Return name of measurement type X for XML element
"RTN","HMPDGMV",115,0)
 N Y S X=$G(X),Y=""
"RTN","HMPDGMV",116,0)
 S Y=$S(X="BP":"bloodPressure",X="T":"temperature",X="R":"respiration",X="P":"pulse",X="HT":"height",X="WT":"weight",X="CVP":"centralVenousPressure",X="CG":"circumferenceGirth",X="PO2":"pulseOximetry",X="PN":"pain",1:"")
"RTN","HMPDGMV",117,0)
 Q Y
"RTN","HMPDGMV",118,0)
 ;
"RTN","HMPDGMV",119,0)
XML(VIT) ; -- Return vital measurement as XML in @HMP@(#)
"RTN","HMPDGMV",120,0)
 N ATT,X,Y,I,J,P,NAMES,TAG
"RTN","HMPDGMV",121,0)
 D ADD("<vital>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDGMV",122,0)
 S ATT="" F  S ATT=$O(VIT(ATT)) Q:ATT=""  D
"RTN","HMPDGMV",123,0)
 . I ATT="measurement" D  Q
"RTN","HMPDGMV",124,0)
 .. D ADD("<measurements>")
"RTN","HMPDGMV",125,0)
 .. S NAMES="id^vuid^name^value^units^metricValue^metricUnits^high^low^Z"
"RTN","HMPDGMV",126,0)
 .. S I=0 F  S I=$O(VIT(ATT,I)) Q:I<1  D
"RTN","HMPDGMV",127,0)
 ... S X=$G(VIT(ATT,I)),Y="<"_ATT_" "
"RTN","HMPDGMV",128,0)
 ... F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDGMV",129,0)
 ... I '$D(VIT(ATT,I,"qualifier")) S Y=Y_"/>" D ADD(Y) Q
"RTN","HMPDGMV",130,0)
 ... S Y=Y_">" D ADD(Y),ADD("<qualifiers>")
"RTN","HMPDGMV",131,0)
 ... S J=0 F  S J=$O(VIT(ATT,I,"qualifier",J)) Q:J<1  D
"RTN","HMPDGMV",132,0)
 .... S Y="<qualifier ",X=$G(VIT(ATT,I,"qualifier",J))
"RTN","HMPDGMV",133,0)
 .... F P=1:1 S TAG=$P("name^vuid^Z",U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDGMV",134,0)
 .... S Y=Y_"/>" D ADD(Y)
"RTN","HMPDGMV",135,0)
 ... D ADD("</qualifiers>"),ADD("</measurement>")
"RTN","HMPDGMV",136,0)
 .. D ADD("</measurements>")
"RTN","HMPDGMV",137,0)
 . I ATT="removed" D  Q
"RTN","HMPDGMV",138,0)
 .. D ADD("<removed>")
"RTN","HMPDGMV",139,0)
 .. S I=0 F  S I=$O(VIT(ATT,I)) Q:I<1  S Y="<reason value='"_$G(VIT(ATT,I))_"' />" D ADD(Y)
"RTN","HMPDGMV",140,0)
 .. D ADD("</removed>")
"RTN","HMPDGMV",141,0)
 . S X=$G(VIT(ATT)),Y="" Q:'$L(X)
"RTN","HMPDGMV",142,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" D ADD(Y) Q
"RTN","HMPDGMV",143,0)
 . I $L(X)>1 D
"RTN","HMPDGMV",144,0)
 .. S Y="<"_ATT_" "
"RTN","HMPDGMV",145,0)
 .. F P=1:1 S TAG=$P("code^name^Z",U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDGMV",146,0)
 .. S Y=Y_"/>" D ADD(Y)
"RTN","HMPDGMV",147,0)
 D ADD("</vital>")
"RTN","HMPDGMV",148,0)
 Q
"RTN","HMPDGMV",149,0)
 ;
"RTN","HMPDGMV",150,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDGMV",151,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDGMV",152,0)
 S @HMP@(HMPI)=X
"RTN","HMPDGMV",153,0)
 Q
"RTN","HMPDGPF")
0^24^B5516892
"RTN","HMPDGPF",1,0)
HMPDGPF ;SLC/MKB -- Patient Record Flags ;8/2/11  15:29
"RTN","HMPDGPF",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDGPF",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDGPF",4,0)
 ;
"RTN","HMPDGPF",5,0)
 ; External References          DBIA#
"RTN","HMPDGPF",6,0)
 ; -------------------          -----
"RTN","HMPDGPF",7,0)
 ; DGPFAPI                       3860
"RTN","HMPDGPF",8,0)
 ; XUAF4                         2171
"RTN","HMPDGPF",9,0)
 ;
"RTN","HMPDGPF",10,0)
 ; ------------ Get data from VistA ------------
"RTN","HMPDGPF",11,0)
 ;
"RTN","HMPDGPF",12,0)
EN(DFN,BEG,END,MAX,ID) ; -- find active flags
"RTN","HMPDGPF",13,0)
 ; [BEG,END,MAX not currently used]
"RTN","HMPDGPF",14,0)
 S DFN=+$G(DFN) Q:DFN<1  ;invalid patient
"RTN","HMPDGPF",15,0)
 N NUM,HMPF,HMPN,X,TEXT,HMPITM
"RTN","HMPDGPF",16,0)
 S NUM=$$GETACT^DGPFAPI(DFN,"HMPF")
"RTN","HMPDGPF",17,0)
 ;
"RTN","HMPDGPF",18,0)
 S HMPN=0 F  S HMPN=$O(HMPF(HMPN)) Q:HMPN<1  D  D:$D(HMPITM) XML(.HMPITM)
"RTN","HMPDGPF",19,0)
 . K HMPITM S X=$G(HMPF(HMPN,"FLAG"))
"RTN","HMPDGPF",20,0)
 . I $G(ID),$P(ID,"~",2)'=$P(X,U) Q
"RTN","HMPDGPF",21,0)
 . S HMPITM("id")=DFN_"~"_$P(X,U),HMPITM("name")=$P(X,U,2)
"RTN","HMPDGPF",22,0)
 . S HMPITM("approvedBy")=$G(HMPF(HMPN,"APPRVBY"))
"RTN","HMPDGPF",23,0)
 . S HMPITM("assigned")=$P($G(HMPF(HMPN,"ASSIGNDT")),U)
"RTN","HMPDGPF",24,0)
 . S HMPITM("reviewDue")=$P($G(HMPF(HMPN,"REVIEWDT")),U)
"RTN","HMPDGPF",25,0)
 . S HMPITM("type")=$P($G(HMPF(HMPN,"FLAGTYPE")),U,2)
"RTN","HMPDGPF",26,0)
 . S HMPITM("category")=$P($G(HMPF(HMPN,"CATEGORY")),U,2)
"RTN","HMPDGPF",27,0)
 . S X=$G(HMPF(HMPN,"ORIGSITE"))
"RTN","HMPDGPF",28,0)
 . S:X HMPITM("origSite")=$$STA^XUAF4(+X)_U_$P(X,U,2)
"RTN","HMPDGPF",29,0)
 . S X=$G(HMPF(HMPN,"OWNER"))
"RTN","HMPDGPF",30,0)
 . S:X HMPITM("ownSite")=$$STA^XUAF4(+X)_U_$P(X,U,2)
"RTN","HMPDGPF",31,0)
 . S X=$G(HMPF(HMPN,"TIULINK")) S:X HMPITM("document")=X
"RTN","HMPDGPF",32,0)
 . M TEXT=HMPF(HMPN,"NARR") S HMPITM("content")=$$STRING^HMPD(.TEXT)
"RTN","HMPDGPF",33,0)
 I $G(ID),'$D(HMPITM) D INACT(ID)
"RTN","HMPDGPF",34,0)
 Q
"RTN","HMPDGPF",35,0)
 ;
"RTN","HMPDGPF",36,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDGPF",37,0)
 ;
"RTN","HMPDGPF",38,0)
XML(FLAG) ; -- Return patient data as XML in @HMP@(n)
"RTN","HMPDGPF",39,0)
 ; as <element code='123' displayName='ABC' />
"RTN","HMPDGPF",40,0)
 N ATT,X,Y,I,ID
"RTN","HMPDGPF",41,0)
 D ADD("<flag>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDGPF",42,0)
 S ATT="" F  S ATT=$O(FLAG(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDGPF",43,0)
 . S X=$G(FLAG(ATT)),Y="" Q:'$L(X)
"RTN","HMPDGPF",44,0)
 . I ATT="content" S Y="<"_ATT_" xml:space='preserve'>"_$$ESC^HMPD(X)_"</"_ATT_">" Q
"RTN","HMPDGPF",45,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDGPF",46,0)
 . S Y="<"_ATT_" code='"_$P(X,U)_"' name='"_$$ESC^HMPD($P(X,U,2))_"' />"
"RTN","HMPDGPF",47,0)
 D ADD("</flag>")
"RTN","HMPDGPF",48,0)
 Q
"RTN","HMPDGPF",49,0)
 ;
"RTN","HMPDGPF",50,0)
INACT(ID) ; -- inactivated flag
"RTN","HMPDGPF",51,0)
 D ADD("<flag id='"_ID_"' inactivated='1' />")
"RTN","HMPDGPF",52,0)
 Q
"RTN","HMPDGPF",53,0)
 ;
"RTN","HMPDGPF",54,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDGPF",55,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDGPF",56,0)
 S @HMP@(HMPI)=X
"RTN","HMPDGPF",57,0)
 Q
"RTN","HMPDIB")
0^25^B12628696
"RTN","HMPDIB",1,0)
HMPDIB ;SLC/MKB -- Integrated Billing (insurance) ;3/14/12  09:01
"RTN","HMPDIB",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01,2011;Build 53
"RTN","HMPDIB",3,0)
 ;
"RTN","HMPDIB",4,0)
 ; External References          DBIA#
"RTN","HMPDIB",5,0)
 ; -------------------          -----
"RTN","HMPDIB",6,0)
 ;   IBBAPI                      4419
"RTN","HMPDIB",7,0)
 ;
"RTN","HMPDIB",8,0)
 ;
"RTN","HMPDIB",9,0)
 ; ------------ Get data from VistA ------------
"RTN","HMPDIB",10,0)
 ;
"RTN","HMPDIB",11,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's insurance data
"RTN","HMPDIB",12,0)
 N X,I,HMPX,HMPITM,HMPCNT,HMPINS
"RTN","HMPDIB",13,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDIB",14,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDIB",15,0)
 ;
"RTN","HMPDIB",16,0)
 ; get one policy
"RTN","HMPDIB",17,0)
 ;I $G(ID) D EN1(ID,.HMPITM),XML(.HMPITM) Q
"RTN","HMPDIB",18,0)
 ;
"RTN","HMPDIB",19,0)
 ; get all policies
"RTN","HMPDIB",20,0)
 S X=$$INSUR^IBBAPI(DFN,,,.HMPX,"*") Q:X<1
"RTN","HMPDIB",21,0)
 S (I,HMPCNT)=0 F  S I=$O(HMPX("IBBAPI","INSUR",I)) Q:I<1  D  Q:HMPCNT'<MAX
"RTN","HMPDIB",22,0)
 . M HMPINS=HMPX("IBBAPI","INSUR",I) K HMPITM
"RTN","HMPDIB",23,0)
 . I $G(ID),DFN'=+ID!(+HMPINS(1)'=$P(ID,";",2))!(+HMPINS(8)'=$P(ID,";",3)) Q
"RTN","HMPDIB",24,0)
 . S HMPITM("id")=DFN_";"_+HMPINS(1)_";"_+HMPINS(8) ; = DFN;COMPANY;POLICY
"RTN","HMPDIB",25,0)
 . S HMPITM("company")=HMPINS(1),X=HMPINS(2)
"RTN","HMPDIB",26,0)
 . F J=23,24,3,4,5 S X=X_U_HMPINS(J)
"RTN","HMPDIB",27,0)
 . S HMPITM("company","address")=X
"RTN","HMPDIB",28,0)
 . S X=HMPINS(6) S:$L(X) HMPITM("company","telecom")=$$FORMAT(X)
"RTN","HMPDIB",29,0)
 . S HMPITM("effectiveDate")=HMPINS(10)
"RTN","HMPDIB",30,0)
 . S HMPITM("expirationDate")=HMPINS(11)
"RTN","HMPDIB",31,0)
 . S HMPITM("groupName")=$P(HMPINS(8),U,2)
"RTN","HMPDIB",32,0)
 . S HMPITM("groupNumber")=HMPINS(18)
"RTN","HMPDIB",33,0)
 . S X=HMPINS(21),HMPITM("insuranceType")=X
"RTN","HMPDIB",34,0)
 . ; HMPITM("insuranceType")=$$GET^XPAR(355.1,+X_",",.03) ;Maj Catg
"RTN","HMPDIB",35,0)
 . S HMPITM("relationship")=$P(HMPINS(19),U,2)
"RTN","HMPDIB",36,0)
 . S HMPITM("subscriber")=HMPINS(14)_U_HMPINS(13)
"RTN","HMPDIB",37,0)
 . ; HMPITM("subscriber","address")
"RTN","HMPDIB",38,0)
 . ; HMPITM("subscriber","telecom")
"RTN","HMPDIB",39,0)
 . ; HMPITM("memberID")
"RTN","HMPDIB",40,0)
 . S HMPITM("facility")=$$FAC^HMPD ;local stn#^name
"RTN","HMPDIB",41,0)
 . D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDIB",42,0)
 Q
"RTN","HMPDIB",43,0)
 ;
"RTN","HMPDIB",44,0)
FORMAT(X) ; -- enforce (xxx)xxx-xxxx phone format
"RTN","HMPDIB",45,0)
 S X=$G(X) I X?1"("3N1")"3N1"-"4N.E Q X
"RTN","HMPDIB",46,0)
 N P,N,I,Y S P=""
"RTN","HMPDIB",47,0)
 F I=1:1:$L(X) S N=$E(X,I) I N=+N S P=P_N
"RTN","HMPDIB",48,0)
 S:$L(P)<10 P=$E("0000000000",1,10-$L(P))_P
"RTN","HMPDIB",49,0)
 S Y=$S(P:"("_$E(P,1,3)_")"_$E(P,4,6)_"-"_$E(P,7,10),1:"")
"RTN","HMPDIB",50,0)
 Q Y
"RTN","HMPDIB",51,0)
 ;
"RTN","HMPDIB",52,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDIB",53,0)
 ;
"RTN","HMPDIB",54,0)
XML(ITEM) ; -- Return patient data as XML in @HMP@(n)
"RTN","HMPDIB",55,0)
 ; as <element code='123' displayName='ABC' />
"RTN","HMPDIB",56,0)
 N ATT,X,Y,I,SUB
"RTN","HMPDIB",57,0)
 D ADD("<insurancePolicy>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDIB",58,0)
 S ATT="" F  S ATT=$O(ITEM(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDIB",59,0)
 . S X=$G(ITEM(ATT)),Y="" Q:'$L(X)
"RTN","HMPDIB",60,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)
"RTN","HMPDIB",61,0)
 . I $L(X,"^")>1 S Y="<"_ATT_" code='"_$P(X,U)_"' name='"_$$ESC^HMPD($P(X,U,2))
"RTN","HMPDIB",62,0)
 . S SUB=$O(ITEM(ATT,"")) I SUB="" S Y=Y_"' />" Q
"RTN","HMPDIB",63,0)
 . S Y=Y_"' >" D ADD(Y) S X=$G(ITEM(ATT,SUB))
"RTN","HMPDIB",64,0)
 . I SUB="address" D ADDR(X)
"RTN","HMPDIB",65,0)
 . I SUB="telecom" D PHONE(X)
"RTN","HMPDIB",66,0)
 . S Y="</"_ATT_">"
"RTN","HMPDIB",67,0)
 D ADD("</insurancePolicy>")
"RTN","HMPDIB",68,0)
 Q
"RTN","HMPDIB",69,0)
 ;
"RTN","HMPDIB",70,0)
ADDR(X) ; -- XML address node from X=street1^st2^st3^city^state^zip
"RTN","HMPDIB",71,0)
 N I,Y Q:$L(X)'>5  ;no data
"RTN","HMPDIB",72,0)
 S Y="<address"
"RTN","HMPDIB",73,0)
 F I=1,2,3 I $L($P(X,U,I)) S Y=Y_" streetLine"_I_"='"_$$ESC^HMPD($P(X,U,I))_"'"
"RTN","HMPDIB",74,0)
 I $L($P(X,U,4)) S Y=Y_" city='"_$$ESC^HMPD($P(X,U,4))_"'"
"RTN","HMPDIB",75,0)
 I $L($P(X,U,5)) S Y=Y_" stateProvince='"_$P(X,U,5)_"'"
"RTN","HMPDIB",76,0)
 I $L($P(X,U,6)) S Y=Y_" postalCode='"_$P(X,U,6)_"'"
"RTN","HMPDIB",77,0)
 S Y=Y_" />" D ADD(Y)
"RTN","HMPDIB",78,0)
 Q
"RTN","HMPDIB",79,0)
 ;
"RTN","HMPDIB",80,0)
PHONE(X) ; -- XML telecom node from X=home^cell^work numbers
"RTN","HMPDIB",81,0)
 N I,Y Q:$L(X)'>2  ;no data
"RTN","HMPDIB",82,0)
 D ADD("<telecomList>")
"RTN","HMPDIB",83,0)
 I $L($P(X,U,1)) S Y="<telecom usageType='H' value='"_$P(X,U,1)_"' />" D ADD(Y)
"RTN","HMPDIB",84,0)
 I $L($P(X,U,2)) S Y="<telecom usageType='MC' value='"_$P(X,U,2)_"' />" D ADD(Y)
"RTN","HMPDIB",85,0)
 I $L($P(X,U,3)) S Y="<telecom usageType='WP' value='"_$P(X,U,3)_"' />" D ADD(Y)
"RTN","HMPDIB",86,0)
 D ADD("</telecomList>")
"RTN","HMPDIB",87,0)
 Q
"RTN","HMPDIB",88,0)
 ;
"RTN","HMPDIB",89,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDIB",90,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDIB",91,0)
 S @HMP@(HMPI)=X
"RTN","HMPDIB",92,0)
 Q
"RTN","HMPDJ")
0^132^B33824834
"RTN","HMPDJ",1,0)
HMPDJ ;SLC/MKB -- Serve VistA data as JSON via RPC ;10/18/12 6:26pm
"RTN","HMPDJ",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ",4,0)
 ;
"RTN","HMPDJ",5,0)
 ; External References          DBIA#
"RTN","HMPDJ",6,0)
 ; -------------------          -----
"RTN","HMPDJ",7,0)
 ; ^DPT                         10035
"RTN","HMPDJ",8,0)
 ; MPIF001                       2701
"RTN","HMPDJ",9,0)
 ; XLFDT                        10103
"RTN","HMPDJ",10,0)
 ; XLFSTR                       10104
"RTN","HMPDJ",11,0)
 ; XUPARAM                       2541
"RTN","HMPDJ",12,0)
 ;
"RTN","HMPDJ",13,0)
GET(HMP,FILTER) ; -- Return search results as JSON in @HMP@(n)
"RTN","HMPDJ",14,0)
 ; RPC = HMP GET PATIENT DATA JSON
"RTN","HMPDJ",15,0)
 ; where FILTER("patientId") = DFN or DFN;ICN
"RTN","HMPDJ",16,0)
 ;       FILTER("domain")    = name of desired data type  (see HMPDJ0)
"RTN","HMPDJ",17,0)
 ;       FILTER("text")      = boolean, to include document text [opt]
"RTN","HMPDJ",18,0)
 ;       FILTER("start")     = start date.time of search         [opt]
"RTN","HMPDJ",19,0)
 ;       FILTER("stop")      = stop date.time of search          [opt]
"RTN","HMPDJ",20,0)
 ;       FILTER("max")       = maximum number of items to return [opt]
"RTN","HMPDJ",21,0)
 ;       FILTER("id")        = single item id to return          [opt]
"RTN","HMPDJ",22,0)
 ;       FILTER("uid")       = single record uid to return       [opt]
"RTN","HMPDJ",23,0)
 ;       FILTER("noHead")    = flag, to omit header and commas   [opt]
"RTN","HMPDJ",24,0)
 ;
"RTN","HMPDJ",25,0)
 N ICN,DFN,HMPI,HMPSYS,HMPTYPE,HMPSTART,HMPSTOP,HMPMAX,HMPID,HMPTEXT,HMPP,TYPE,HMPTN,HMPERR
"RTN","HMPDJ",26,0)
 S HMP=$NA(^TMP("HMP",$J)),HMPI=0 K @HMP
"RTN","HMPDJ",27,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPDJ",28,0)
 S DT=$$DT^XLFDT             ;for crossing midnight boundary
"RTN","HMPDJ",29,0)
 ;
"RTN","HMPDJ",30,0)
 ; parse & validate input parameters
"RTN","HMPDJ",31,0)
 I $G(FILTER("uid"))'="" D SEPUID(.FILTER)
"RTN","HMPDJ",32,0)
 ;
"RTN","HMPDJ",33,0)
 S DFN=$G(FILTER("patientId"))
"RTN","HMPDJ",34,0)
 ;
"RTN","HMPDJ",35,0)
 S ICN=+$P($G(DFN),";",2),DFN=+$G(DFN)
"RTN","HMPDJ",36,0)
 I DFN<1,ICN S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","HMPDJ",37,0)
 ;
"RTN","HMPDJ",38,0)
 S HMPTYPE=$G(FILTER("domain")) S:HMPTYPE="" HMPTYPE=$$ALL
"RTN","HMPDJ",39,0)
 I $D(ZTQUEUED) S HMP=$NA(^XTMP(HMPBATCH,HMPFZTSK,HMPTYPE)) K @HMP
"RTN","HMPDJ",40,0)
 I HMPTYPE'="new",DFN<1!'$D(^DPT(DFN)) S HMPERR=$$ERR(1,DFN) G GTQ
"RTN","HMPDJ",41,0)
 ;
"RTN","HMPDJ",42,0)
 S HMPSTART=+$G(FILTER("start"),1410102)
"RTN","HMPDJ",43,0)
 S HMPSTOP=+$G(FILTER("stop"),4141015)
"RTN","HMPDJ",44,0)
 S HMPMAX=+$G(FILTER("max"),999999)
"RTN","HMPDJ",45,0)
 I HMPSTART,HMPSTOP,HMPSTOP<HMPSTART D
"RTN","HMPDJ",46,0)
 . N X S X=HMPSTART,HMPSTART=HMPSTOP,HMPSTOP=X
"RTN","HMPDJ",47,0)
 I HMPSTOP,$L(HMPSTOP,".")<2 S HMPSTOP=HMPSTOP_".24"
"RTN","HMPDJ",48,0)
 ;
"RTN","HMPDJ",49,0)
 S HMPID=$G(FILTER("id"))
"RTN","HMPDJ",50,0)
 S HMPTEXT=+$G(FILTER("text"),1) ;default = true/text
"RTN","HMPDJ",51,0)
 ;
"RTN","HMPDJ",52,0)
 ;set error trap
"RTN","HMPDJ",53,0)
 K ^TMP($J,"HMP ERROR")
"RTN","HMPDJ",54,0)
 ;
"RTN","HMPDJ",55,0)
 ; extract data
"RTN","HMPDJ",56,0)
 I HMPTYPE="new",$L($T(EN^HMPDJX)),'$G(^XTMP("HMP-off","GET")) D EN^HMPDJX(HMPID,HMPMAX) Q  ;data updates
"RTN","HMPDJ",57,0)
 F HMPP=1:1:$L(HMPTYPE,";") S TYPE=$P(HMPTYPE,";",HMPP) I $L(TYPE) D
"RTN","HMPDJ",58,0)
 . S HMPTN=$$TAG(TYPE)_"^HMPDJ0" Q:'$L($T(@HMPTN))  ;D ERR(2) Q
"RTN","HMPDJ",59,0)
 . N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ",60,0)
 . S $ET="D ERRHDLR^HMPDERRH",ERRMSG="A problem occurred when trying to load patient data from an API."
"RTN","HMPDJ",61,0)
 . D @HMPTN
"RTN","HMPDJ",62,0)
 ;
"RTN","HMPDJ",63,0)
GTQ ; add item count and terminating characters
"RTN","HMPDJ",64,0)
 N ERROR I $D(^TMP($J,"HMP ERROR"))>0 D BUILDERR(.ERROR)
"RTN","HMPDJ",65,0)
 I +$G(FILTER("noHead"))=1 D  Q
"RTN","HMPDJ",66,0)
 .S @HMP@("total")=+$G(HMPI)
"RTN","HMPDJ",67,0)
 .I $L($G(ERROR(1)))>1 S @HMP@("error")=ERROR(1)
"RTN","HMPDJ",68,0)
 S @HMP@(.5)="{""apiVersion"":""1.01"",""params"":{"_$$SYS_"},"
"RTN","HMPDJ",69,0)
 I $D(HMPERR) S @HMP@(1)="""error"":{""message"":"""_HMPERR_"""}}" Q
"RTN","HMPDJ",70,0)
 I '$D(@HMP)!'$G(HMPI) D  Q
"RTN","HMPDJ",71,0)
 . I '$D(ERROR) S @HMP@(1)="""data"":{""totalItems"":0,""items"":[]}}" Q
"RTN","HMPDJ",72,0)
 . S @HMP@(1)="""data"":{""totalItems"":0,""items"":[]},"
"RTN","HMPDJ",73,0)
 . S @HMP@(2,1)=ERROR(1)_"}"
"RTN","HMPDJ",74,0)
 ;
"RTN","HMPDJ",75,0)
 S @HMP@(.6)="""data"":{""updated"":"""_$$HL7NOW_""",""totalItems"":"_HMPI_",""items"":["
"RTN","HMPDJ",76,0)
 S HMPI=HMPI+1,@HMP@(HMPI)=$S($D(ERROR):"]}",1:"]}}")
"RTN","HMPDJ",77,0)
 I $D(ERROR)>0 S HMPI=HMPI+1,@HMP@(HMPI,.3)=",",@HMP@(HMPI,1)=ERROR(1)_"}"
"RTN","HMPDJ",78,0)
 K ^TMP($J,"HMP ERROR"),^TMP("HMPTEXT",$J)
"RTN","HMPDJ",79,0)
 Q
"RTN","HMPDJ",80,0)
 ;
"RTN","HMPDJ",81,0)
SEPUID(FILTER) ; -- separate uid into FILTER pieces
"RTN","HMPDJ",82,0)
 N UID
"RTN","HMPDJ",83,0)
 S UID=$G(FILTER("uid")) K FILTER("uid") Q:UID=""
"RTN","HMPDJ",84,0)
 I $P(UID,":",4)'=HMPSYS Q
"RTN","HMPDJ",85,0)
 S FILTER("patientId")=$P(UID,":",5)
"RTN","HMPDJ",86,0)
 S FILTER("domain")=$P(UID,":",3)
"RTN","HMPDJ",87,0)
 S FILTER("id")=$P(UID,":",6)
"RTN","HMPDJ",88,0)
 Q
"RTN","HMPDJ",89,0)
 ;
"RTN","HMPDJ",90,0)
SYS() ; -- return system info for JSON header
"RTN","HMPDJ",91,0)
 Q """domain"":"""_$$KSP^XUPARAM("WHERE")_""",""systemId"":"""_HMPSYS_""""
"RTN","HMPDJ",92,0)
 ;
"RTN","HMPDJ",93,0)
BUILDERR(RESULT,DFN) ; -- build error array
"RTN","HMPDJ",94,0)
 N COUNT,MESSAGE,MSGCNT
"RTN","HMPDJ",95,0)
 S COUNT=$G(^TMP($J,"HMP ERROR","# of Errors"))
"RTN","HMPDJ",96,0)
 S MESSAGE="A mumps error occurred when extracting patient data. A total of "_COUNT_" occurred.\n\r"
"RTN","HMPDJ",97,0)
 S MSGCNT=0 F  S MSGCNT=$O(^TMP($J,"HMP ERROR","ERROR MESSAGE",MSGCNT)) Q:MSGCNT'>0  D
"RTN","HMPDJ",98,0)
 . S MESSAGE=MESSAGE_$G(^TMP($J,"HMP ERROR","ERROR MESSAGE",MSGCNT))_"\n\r"
"RTN","HMPDJ",99,0)
 S RESULT(1)="""error"":{""message"":"""_MESSAGE_"""}"
"RTN","HMPDJ",100,0)
 Q
"RTN","HMPDJ",101,0)
 ;
"RTN","HMPDJ",102,0)
TAG(X) ; -- Return linetag in HMPDJ0 routine for clinical domain X
"RTN","HMPDJ",103,0)
 N Y S X=$G(X,"Z")
"RTN","HMPDJ",104,0)
 S Y=$E($$UP^XLFSTR(X),1,8)
"RTN","HMPDJ",105,0)
 S:'$L($T(@(Y_"^HMPDJ0"))) Y="HMP"
"RTN","HMPDJ",106,0)
 Q Y
"RTN","HMPDJ",107,0)
 ;
"RTN","HMPDJ",108,0)
ALL() ; -- return string for all types of data
"RTN","HMPDJ",109,0)
 Q "patient;problem;allergy;consult;vital;lab;procedure;obs;order;treatment;med;ptf;factor;immunization;exam;cpt;education;pov;skin;image;appointment;surgery;document;visit;mh"
"RTN","HMPDJ",110,0)
 ;
"RTN","HMPDJ",111,0)
ERR(X,VAL) ; -- return error message
"RTN","HMPDJ",112,0)
 N MSG  S MSG="Error"
"RTN","HMPDJ",113,0)
 I X=1  S MSG="Patient with dfn '"_$G(VAL)_"' not found"
"RTN","HMPDJ",114,0)
 I X=2  S MSG="Domain type '"_$G(VAL)_"' not recognized"
"RTN","HMPDJ",115,0)
 I X=3  S MSG="UID '"_$G(VAL)_"' not found"
"RTN","HMPDJ",116,0)
 I X=4  S MSG="Unable to create new object"
"RTN","HMPDJ",117,0)
 I X=99 S MSG="Unknown request"
"RTN","HMPDJ",118,0)
 Q MSG
"RTN","HMPDJ",119,0)
 ;
"RTN","HMPDJ",120,0)
HL7NOW() ; -- Return current time in HL7 format
"RTN","HMPDJ",121,0)
 Q $P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")
"RTN","HMPDJ",122,0)
 ;
"RTN","HMPDJ",123,0)
ADD(ITEM,COLL) ; -- add ITEM to results
"RTN","HMPDJ",124,0)
 I $D(HMPCRC),$D(COLL) D ONE^HMPDCRC(ITEM,COLL) Q  ;checksum
"RTN","HMPDJ",125,0)
 ; -- add ITEM to @HMP@(HMPI) to return JSON
"RTN","HMPDJ",126,0)
 N HMPY,HMPERR
"RTN","HMPDJ",127,0)
 D ENCODE^HMPJSON(ITEM,"HMPY","HMPERR")
"RTN","HMPDJ",128,0)
 I $D(HMPERR) D  ;return ERRor instead of ITEM
"RTN","HMPDJ",129,0)
 . N HMPTMP,HMPTXT,HMPITM
"RTN","HMPDJ",130,0)
 . M HMPITM=@ITEM K HMPY
"RTN","HMPDJ",131,0)
 . S HMPTXT(1)="Problem encoding json output."
"RTN","HMPDJ",132,0)
 . D SETERROR^HMPUTILS(.HMPTMP,.HMPERR,.HMPTXT,.HMPITM)
"RTN","HMPDJ",133,0)
 . K HMPERR D ENCODE^HMPJSON("HMPTMP","HMPY","HMPERR")
"RTN","HMPDJ",134,0)
 I $D(HMPY) D
"RTN","HMPDJ",135,0)
 . S HMPI=HMPI+1
"RTN","HMPDJ",136,0)
 . ;I HMPI>1,'$G(FILTER("noHead")) S @HMP@(HMPI,.3)=","
"RTN","HMPDJ",137,0)
 . I HMPI>1 S @HMP@(HMPI,.3)=","
"RTN","HMPDJ",138,0)
 . M @HMP@(HMPI)=HMPY
"RTN","HMPDJ",139,0)
 Q
"RTN","HMPDJ",140,0)
 ;
"RTN","HMPDJ",141,0)
TEST(DFN,TYPE,ID,TEXT,IN) ; -- test GET, write results to screen
"RTN","HMPDJ",142,0)
 N OUT,IDX S U="^"
"RTN","HMPDJ",143,0)
 S:'$D(IN("systemID")) IN("systemID")=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPDJ",144,0)
 S IN("patientId")=+$G(DFN)
"RTN","HMPDJ",145,0)
 S IN("domain")=$G(TYPE)
"RTN","HMPDJ",146,0)
 S:$D(ID) IN("id")=ID
"RTN","HMPDJ",147,0)
 S:$D(TEXT) IN("text")=TEXT
"RTN","HMPDJ",148,0)
 D GET(.OUT,.IN)
"RTN","HMPDJ",149,0)
 ;
"RTN","HMPDJ",150,0)
 S IDX=OUT
"RTN","HMPDJ",151,0)
 F  S IDX=$Q(@IDX) Q:IDX'?1"^TMP(""HMP"","1.N.E  Q:+$P(IDX,",",2)'=$J  W !,@IDX
"RTN","HMPDJ",152,0)
 Q
"RTN","HMPDJ0")
0^26^B95408526
"RTN","HMPDJ0",1,0)
HMPDJ0 ;SLC/MKB -- Serve VistA data as JSON cont ; 2/12/15 11:42am
"RTN","HMPDJ0",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ0",4,0)
 ;
"RTN","HMPDJ0",5,0)
 ; External References          DBIA#
"RTN","HMPDJ0",6,0)
 ; -------------------          -----
"RTN","HMPDJ0",7,0)
 ; ^DPT                         10035  <see HMPDJ0* for others>
"RTN","HMPDJ0",8,0)
 ;
"RTN","HMPDJ0",9,0)
 ; All tags expect DFN, HMPSTART, HMPSTOP, HMPMAX, HMPID, HMPTEXT
"RTN","HMPDJ0",10,0)
 ;
"RTN","HMPDJ0",11,0)
PATIENT ; -- Patient Registration
"RTN","HMPDJ0",12,0)
 D DPT1^HMPDJ00
"RTN","HMPDJ0",13,0)
 Q
"RTN","HMPDJ0",14,0)
 ;
"RTN","HMPDJ0",15,0)
PROBLEM ; -- Problem List
"RTN","HMPDJ0",16,0)
 I $G(HMPID) D GMPL1^HMPDJ02(HMPID) Q
"RTN","HMPDJ0",17,0)
 N ID,HMPSTS,HMPPROB,HMPN,X,POVLST
"RTN","HMPDJ0",18,0)
 S HMPSTS=$G(FILTER("status")) ;default = all problems
"RTN","HMPDJ0",19,0)
 D LIST^GMPLUTL2(.HMPPROB,DFN,HMPSTS)
"RTN","HMPDJ0",20,0)
 D DIAGLIST^HMPDJ02(.POVLST,DFN)
"RTN","HMPDJ0",21,0)
 S HMPN=0 F  S HMPN=$O(HMPPROB(HMPN)) Q:(HMPN<1)!(HMPI'<HMPMAX)  D
"RTN","HMPDJ0",22,0)
 . S X=$P(HMPPROB(HMPN),U,6) I X,(X<HMPSTART)!(X>HMPSTOP) Q  ;last updated
"RTN","HMPDJ0",23,0)
 . S ID=+HMPPROB(HMPN) D GMPL1^HMPDJ02(ID,.POVLST)
"RTN","HMPDJ0",24,0)
 Q
"RTN","HMPDJ0",25,0)
 ;
"RTN","HMPDJ0",26,0)
ALLERGY ; -- Allergies/Adverse Reactions
"RTN","HMPDJ0",27,0)
 N GMRAL,ID D EN1^GMRADPT
"RTN","HMPDJ0",28,0)
 ; This IF statement was disabled to prevent getting "deletes" in the
"RTN","HMPDJ0",29,0)
 ; JSON during a fetch if ALL allergies for a given patient have been marked
"RTN","HMPDJ0",30,0)
 ; as "entered in error". US6021
"RTN","HMPDJ0",31,0)
 ;I 'GMRAL Q  ;D NKA^HMPDJ02 Q
"RTN","HMPDJ0",32,0)
 I $G(HMPID) D GMRA1^HMPDJ02(HMPID) Q
"RTN","HMPDJ0",33,0)
 S ID=0 F  S ID=+$O(GMRAL(ID)) Q:ID<1  D GMRA1^HMPDJ02(ID) Q:HMPI'<HMPMAX
"RTN","HMPDJ0",34,0)
 Q
"RTN","HMPDJ0",35,0)
 ;
"RTN","HMPDJ0",36,0)
CONSULT ; -- Consult/Request Tracking
"RTN","HMPDJ0",37,0)
 N HMPN,HMPX,ID
"RTN","HMPDJ0",38,0)
 D OER^GMRCSLM1(DFN,"",HMPSTART,HMPSTOP,"")
"RTN","HMPDJ0",39,0)
 S HMPN=0 F  S HMPN=$O(^TMP("GMRCR",$J,"CS",HMPN)) Q:HMPN<1!(HMPN>HMPMAX)  S HMPX=$G(^(HMPN,0)) Q:$E(HMPX)="<"  D
"RTN","HMPDJ0",40,0)
 . I $G(HMPID),HMPID'=+HMPX Q
"RTN","HMPDJ0",41,0)
 . D GMRC1^HMPDJ03(+HMPX)
"RTN","HMPDJ0",42,0)
 K ^TMP("GMRCR",$J,"CS")
"RTN","HMPDJ0",43,0)
 Q
"RTN","HMPDJ0",44,0)
 ;
"RTN","HMPDJ0",45,0)
VITAL ; -- GMR Vital Measurements
"RTN","HMPDJ0",46,0)
 I $L($G(HMPID)) D GMV1^HMPDJ02(HMPID) Q
"RTN","HMPDJ0",47,0)
 N GMRVSTR,HMPIDT,HMPTYP,ID
"RTN","HMPDJ0",48,0)
 S GMRVSTR="BP;T;R;P;HT;WT;CVP;CG;PO2;PN"
"RTN","HMPDJ0",49,0)
 S GMRVSTR(0)=HMPSTART_U_HMPSTOP_U_HMPMAX_"^1"
"RTN","HMPDJ0",50,0)
 D EN1^GMRVUT0
"RTN","HMPDJ0",51,0)
 S HMPIDT=0 F  S HMPIDT=$O(^UTILITY($J,"GMRVD",HMPIDT)) Q:HMPIDT<1  D  Q:HMPI'<HMPMAX
"RTN","HMPDJ0",52,0)
 . S HMPTYP="" F  S HMPTYP=$O(^UTILITY($J,"GMRVD",HMPIDT,HMPTYP)) Q:HMPTYP=""  D
"RTN","HMPDJ0",53,0)
 .. S ID=$O(^UTILITY($J,"GMRVD",HMPIDT,HMPTYP,0)) D GMV1^HMPDJ02(ID)
"RTN","HMPDJ0",54,0)
 K ^UTILITY($J,"GMRVD")
"RTN","HMPDJ0",55,0)
 Q
"RTN","HMPDJ0",56,0)
 ;
"RTN","HMPDJ0",57,0)
LAB ; -- Lab Results
"RTN","HMPDJ0",58,0)
 N LRDFN,LRID,HMPSUB,HMPIDT,HMPN,HMPP,HMPACC,BEG,END,SUB,ORPK,ID,X
"RTN","HMPDJ0",59,0)
 S LRDFN=$G(^DPT(DFN,"LR")),HMPSUB=$G(FILTER("category"))
"RTN","HMPDJ0",60,0)
 S BEG=HMPSTART,END=HMPSTOP,LRID=$G(HMPID),ORPK=""
"RTN","HMPDJ0",61,0)
 I $L(LRID) D  ;reset for LR7OR1
"RTN","HMPDJ0",62,0)
 . I LRID S ORPK=LRID,LRID=$P(LRID,";",4,99) Q:LRID=""  ;order
"RTN","HMPDJ0",63,0)
 . S HMPSUB=$P(LRID,";"),HMPIDT=+$P(LRID,";",2)
"RTN","HMPDJ0",64,0)
 . S:HMPIDT (BEG,END)=9999999-HMPIDT
"RTN","HMPDJ0",65,0)
 S SUB=HMPSUB I $L(SUB),"CH^MI"'[SUB S SUB="AP"
"RTN","HMPDJ0",66,0)
 D RR^LR7OR1(DFN,ORPK,BEG,END,SUB,,,HMPMAX)
"RTN","HMPDJ0",67,0)
 S HMPSUB="" F  S HMPSUB=$O(^TMP("LRRR",$J,DFN,HMPSUB)) Q:HMPSUB=""  D
"RTN","HMPDJ0",68,0)
 . S HMPIDT=0 F  S HMPIDT=$O(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT)) Q:HMPIDT<1  I $O(^(HMPIDT,0)) D  Q:HMPI'<HMPMAX
"RTN","HMPDJ0",69,0)
 .. I HMPSUB="MI"  S ID=HMPSUB_";"_HMPIDT D MI^HMPDJ06 Q
"RTN","HMPDJ0",70,0)
 .. I HMPSUB'="CH" S ID=HMPSUB_";"_HMPIDT D AP^HMPDJ06 Q
"RTN","HMPDJ0",71,0)
 .. D ACC^HMPDJ06 ;get chem accession data
"RTN","HMPDJ0",72,0)
 .. S HMPP=0 F  S HMPP=$O(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT,HMPP)) Q:HMPP<1  S X=+$G(^(HMPP)) D
"RTN","HMPDJ0",73,0)
 ... S HMPN=$$LRDN^LRPXAPIU(X) I $L(LRID,";")>2,HMPN'=$P(LRID,";",3) Q
"RTN","HMPDJ0",74,0)
 ... S ID=HMPSUB_";"_HMPIDT_";"_HMPN D CH1^HMPDJ06
"RTN","HMPDJ0",75,0)
 K ^TMP("LRRR",$J),^TMP("LRX",$J)
"RTN","HMPDJ0",76,0)
 Q
"RTN","HMPDJ0",77,0)
 ;
"RTN","HMPDJ0",78,0)
PROCEDUR ; -- Clinical Procedures
"RTN","HMPDJ0",79,0)
 N HMPN,HMPX,BEG,END,ID
"RTN","HMPDJ0",80,0)
 S BEG=HMPSTART,END=HMPSTOP
"RTN","HMPDJ0",81,0)
 I $G(HMPID) D  ;reset dates for HMPID only
"RTN","HMPDJ0",82,0)
 . N HMPMC,IEN,FILE,X
"RTN","HMPDJ0",83,0)
 . S IEN=+HMPID,FILE=+$P(HMPID,"(",2)  Q:FILE=702  Q:'FILE
"RTN","HMPDJ0",84,0)
 . D MEDLKUP^MCARUTL3(.HMPMC,FILE,IEN)
"RTN","HMPDJ0",85,0)
 . S X=$P(HMPMC,U,6) S:X (BEG,END)=X
"RTN","HMPDJ0",86,0)
 D MDPS1^HMPDJ03(DFN,BEG,END,HMPMAX)    ;gets ^TMP("MDHSP",$J)
"RTN","HMPDJ0",87,0)
 S HMPN=0 F  S HMPN=$O(^TMP("MDHSP",$J,HMPN)) Q:HMPN<1  S HMPX=$G(^(HMPN)) D
"RTN","HMPDJ0",88,0)
 . I $G(HMPID),+HMPID'=+$P(HMPX,U,2) Q  ;update 1 procedure
"RTN","HMPDJ0",89,0)
 . D MC1^HMPDJ03($G(HMPID))             ;uses HMPX
"RTN","HMPDJ0",90,0)
 K ^TMP("MDHSP",$J)
"RTN","HMPDJ0",91,0)
 Q
"RTN","HMPDJ0",92,0)
 ;
"RTN","HMPDJ0",93,0)
OBS ; -- Clinical Observations (CLiO)
"RTN","HMPDJ0",94,0)
 N HMPCLIO,HMPN,ID,X
"RTN","HMPDJ0",95,0)
 I $L($G(HMPID)) D MDC1^HMPDJ03(HMPID) Q
"RTN","HMPDJ0",96,0)
 D QRYPT^HMPDMDC("HMPCLIO",DFN,HMPSTART,HMPSTOP) ;all [verified] observations
"RTN","HMPDJ0",97,0)
 S HMPN=0 F  S HMPN=$O(HMPCLIO(HMPN)) Q:(HMPN<1)!(HMPI'<HMPMAX)  D
"RTN","HMPDJ0",98,0)
 . S ID=$G(HMPCLIO(HMPN)) ;GUID
"RTN","HMPDJ0",99,0)
 . D MDC1^HMPDJ03(ID)
"RTN","HMPDJ0",100,0)
 Q
"RTN","HMPDJ0",101,0)
 ;
"RTN","HMPDJ0",102,0)
ORDER ; -- Order Entry
"RTN","HMPDJ0",103,0)
 N ORLIST,HMPN,DAD,ID,X,X3,X4
"RTN","HMPDJ0",104,0)
 I $G(HMPID) S ORLIST=$H D OR1^HMPDJ01(HMPID) G ORQ
"RTN","HMPDJ0",105,0)
 D EN^ORQ1(DFN_";DPT(",,6,,HMPSTART,HMPSTOP,,,,1)
"RTN","HMPDJ0",106,0)
 S HMPN=0 F  S HMPN=$O(^TMP("ORR",$J,ORLIST,HMPN)) Q:HMPN<1  S ID=$G(^(HMPN)) D  Q:HMPI'<HMPMAX
"RTN","HMPDJ0",107,0)
 . Q:$D(^TMP("ORGOTIT",$J,+ID))  Q:$P(ID,";",2)>1  S ID=+ID    ;actions
"RTN","HMPDJ0",108,0)
 . S X3=$G(^OR(100,ID,3)),X4=$G(^(4))
"RTN","HMPDJ0",109,0)
 . Q:$P(X3,U,3)=13  I X4["P",$P(X3,U,3)=1!($P(X3,U,3)=12) Q  ;cancelled
"RTN","HMPDJ0",110,0)
 . S DAD=+$P(X3,U,9) I DAD D:'$D(^TMP("ORGOTIT",$J,DAD)) OR1^HMPDJ01(DAD) Q
"RTN","HMPDJ0",111,0)
 . D OR1^HMPDJ01(ID)
"RTN","HMPDJ0",112,0)
ORQ ; end
"RTN","HMPDJ0",113,0)
 K ^TMP("ORR",$J),^TMP("ORGOTIT",$J)
"RTN","HMPDJ0",114,0)
 Q
"RTN","HMPDJ0",115,0)
 ;
"RTN","HMPDJ0",116,0)
TREATMEN ; -- Nursing Treatments (orders)
"RTN","HMPDJ0",117,0)
 N ORLIST,ORDG,HMPN,ID,X,X3,X4
"RTN","HMPDJ0",118,0)
 I $G(HMPID) S ORLIST=$H D NTX1^HMPDJ01(HMPID) G TXQ
"RTN","HMPDJ0",119,0)
 S ORDG=+$O(^ORD(100.98,"B","NTX",0))
"RTN","HMPDJ0",120,0)
 D EN^ORQ1(DFN_";DPT(",ORDG,6,,HMPSTART,HMPSTOP,,,,1)
"RTN","HMPDJ0",121,0)
 S HMPN=0 F  S HMPN=$O(^TMP("ORR",$J,ORLIST,HMPN)) Q:HMPN<1  S ID=$G(^(HMPN)) D  Q:HMPI'<HMPMAX
"RTN","HMPDJ0",122,0)
 . Q:$D(^TMP("ORGOTIT",$J,+ID))  Q:$P(ID,";",2)>1  S ID=+ID  ;actions
"RTN","HMPDJ0",123,0)
 . S X3=$G(^OR(100,ID,3)),X4=$G(^(4))
"RTN","HMPDJ0",124,0)
 . Q:$P(X3,U,3)=13  I X4["P",$P(X3,U,3)=1!($P(X3,U,3)=12) Q  ;cancelled
"RTN","HMPDJ0",125,0)
 . D NTX1^HMPDJ01(ID)
"RTN","HMPDJ0",126,0)
TXQ ; end
"RTN","HMPDJ0",127,0)
 K ^TMP("ORR",$J),^TMP("ORGOTIT",$J)
"RTN","HMPDJ0",128,0)
 Q
"RTN","HMPDJ0",129,0)
 ;
"RTN","HMPDJ0",130,0)
MED ; -- Pharmacy
"RTN","HMPDJ0",131,0)
 N ORDIALOG I $G(HMPID),$D(^OR(100,+HMPID)) D PS1^HMPDJ05(HMPID) Q       ;get 1 order
"RTN","HMPDJ0",132,0)
 N TYPE,ORDG,ORVP,ORLIST,HMPN,ORLIST,X3,X4,DAD,ID
"RTN","HMPDJ0",133,0)
 S TYPE=$G(FILTER("vaType")) S:$L(TYPE) TYPE=$S(TYPE="N":"NV",TYPE="V":"IV",1:TYPE)_" "
"RTN","HMPDJ0",134,0)
 S ORDG=+$O(^ORD(100.98,"B",TYPE_"RX",0)),ORVP=DFN_";DPT("
"RTN","HMPDJ0",135,0)
 D EN^ORQ1(ORVP,ORDG,6,,HMPSTART,HMPSTOP)
"RTN","HMPDJ0",136,0)
 K ^TMP("HMPOR",$J) S HMPN=0
"RTN","HMPDJ0",137,0)
 F  S HMPN=$O(^TMP("ORR",$J,ORLIST,HMPN)) Q:HMPN<1  S ID=$G(^(HMPN)) D  Q:HMPI'<HMPMAX
"RTN","HMPDJ0",138,0)
 . Q:$D(^TMP("HMPOR",$J,+ID))  Q:$P(ID,";",2)>1  S ID=+ID
"RTN","HMPDJ0",139,0)
 . S X3=$G(^OR(100,ID,3)),X4=$G(^(4))
"RTN","HMPDJ0",140,0)
 . Q:$P(X3,U,3)=13  I X4["P",$P(X3,U,3)=1!($P(X3,U,3)=12) Q  ;cancelled
"RTN","HMPDJ0",141,0)
 . S DAD=$P(X3,U,9) I DAD Q:$D(^TMP("HMPOR",$J,DAD))  S ID=DAD
"RTN","HMPDJ0",142,0)
 . D PS1^HMPDJ05(ID) S ^TMP("HMPOR",$J,ID)=""
"RTN","HMPDJ0",143,0)
 K ^TMP("HMPOR",$J),^TMP("ORR",$J),^TMP("ORGOTIT",$J),^TMP($J,"PSOI")
"RTN","HMPDJ0",144,0)
 Q
"RTN","HMPDJ0",145,0)
 ;
"RTN","HMPDJ0",146,0)
PTF ; -- Patient Treatment File
"RTN","HMPDJ0",147,0)
 ;Purpose - Main Patient Treatment File (PTF) RPC
"RTN","HMPDJ0",148,0)
 ;
"RTN","HMPDJ0",149,0)
 ;Called by - PTF RPC
"RTN","HMPDJ0",150,0)
 ;
"RTN","HMPDJ0",151,0)
 ;Assumptions - Expects variables DFN, HMPSTART, HMPSTOP, HMPMAX
"RTN","HMPDJ0",152,0)
 ;
"RTN","HMPDJ0",153,0)
 ;Modification History -
"RTN","HMPDJ0",154,0)
 ;US5630 (TW) - Namespaced variables and enhanced newing
"RTN","HMPDJ0",155,0)
 ;
"RTN","HMPDJ0",156,0)
 N HMPRDT,HMPX,HMPAPI,HMPLID
"RTN","HMPDJ0",157,0)
 K ^TMP("HMPPX",$J)
"RTN","HMPDJ0",158,0)
 ;
"RTN","HMPDJ0",159,0)
 I $G(HMPID),HMPID'=+HMPID D PTFA^HMPDJ04A(HMPID) Q  ; If HMPID and dx type, process and quit
"RTN","HMPDJ0",160,0)
 ;
"RTN","HMPDJ0",161,0)
 I $G(HMPID) D  Q:'$D(^TMP("HMPPX",$J))  ; If HMPID only, set one ^TMP("HMPPX") entry
"RTN","HMPDJ0",162,0)
 . S HMPRDT=9999999
"RTN","HMPDJ0",163,0)
 . D RPC^DGPTFAPI(.HMPAPI,HMPID)
"RTN","HMPDJ0",164,0)
 . S HMPX=$P($G(HMPAPI(1)),U,3)
"RTN","HMPDJ0",165,0)
 . I $L(HMPX) S ^TMP("HMPPX",$J,HMPRDT,HMPID_";70;DXLS")=HMPX_U
"RTN","HMPDJ0",166,0)
 . F HMPAPI=1:1:9 S HMPX=$P($G(HMPY(2)),U,HMPAPI) I $L(HMPX) S ^TMP("HMPPX",$J,HMPRDT,HMPID_";70;D SD"_HMPAPI)=HMPX_U_$G(DISDAT)
"RTN","HMPDJ0",167,0)
 ;
"RTN","HMPDJ0",168,0)
 I '$G(HMPID) D PTF^HMPDJ09  ; If no HMPID, set up ^TMP("HMPPX") for all dx
"RTN","HMPDJ0",169,0)
 ;
"RTN","HMPDJ0",170,0)
 ;Loop through ^TMP("HMPPX",$J) and do PTF1^HMPDJ04A to set PTF array, ^TMP
"RTN","HMPDJ0",171,0)
 S HMPRDT="" F  S HMPRDT=$O(^TMP("HMPPX",$J,HMPRDT)) Q:HMPRDT=""  D
"RTN","HMPDJ0",172,0)
 . S HMPLID="" F  S HMPLID=$O(^TMP("HMPPX",$J,HMPRDT,HMPLID)) Q:HMPLID=""!(HMPI'<HMPMAX)  D
"RTN","HMPDJ0",173,0)
 .. D PTF1^HMPDJ04A
"RTN","HMPDJ0",174,0)
 K ^TMP("HMPPX",$J)
"RTN","HMPDJ0",175,0)
 Q
"RTN","HMPDJ0",176,0)
 ;
"RTN","HMPDJ0",177,0)
FACTOR   D PX^HMPDJ09(9000010.23) Q   ; -- PCE Health Factors
"RTN","HMPDJ0",178,0)
IMMUNIZA D PX^HMPDJ09(9000010.11) Q   ; -- PCE Immunizations
"RTN","HMPDJ0",179,0)
EXAM     D PX^HMPDJ09(9000010.13) Q   ; -- PCE Exams
"RTN","HMPDJ0",180,0)
CPT      D PX^HMPDJ09(9000010.18) Q   ; -- PCE CPT
"RTN","HMPDJ0",181,0)
EDUCATIO D PX^HMPDJ09(9000010.16) Q   ; -- PCE Patient Education
"RTN","HMPDJ0",182,0)
POV      D PX^HMPDJ09(9000010.07) Q   ; -- PCE Purpose of Visit (POV)
"RTN","HMPDJ0",183,0)
SKIN     D PX^HMPDJ09(9000010.12) Q   ; -- PCE Skin Tests
"RTN","HMPDJ0",184,0)
 ;
"RTN","HMPDJ0",185,0)
IMAGE ; -- Radiology/Nuclear Medicine
"RTN","HMPDJ0",186,0)
 D EN1^RAO7PC1(DFN,HMPSTART,HMPSTOP,HMPMAX_"P")
"RTN","HMPDJ0",187,0)
 I $G(HMPID) D RA1^HMPDJ07(HMPID) G IMQ
"RTN","HMPDJ0",188,0)
 N ID S ID=""
"RTN","HMPDJ0",189,0)
 F  S ID=$O(^TMP($J,"RAE1",DFN,ID)) Q:ID=""  D RA1^HMPDJ07(ID)  Q:HMPI'<+HMPMAX
"RTN","HMPDJ0",190,0)
IMQ ; end
"RTN","HMPDJ0",191,0)
 K ^TMP($J,"RAE1")
"RTN","HMPDJ0",192,0)
 Q
"RTN","HMPDJ0",193,0)
 ;
"RTN","HMPDJ0",194,0)
APPOINTM ; -- Scheduling/Appointment Mgt
"RTN","HMPDJ0",195,0)
 N HMPX,HMPNUM,HMPDT,X,HMPA,ID
"RTN","HMPDJ0",196,0)
 S HMPX(1)=HMPSTART_";"_HMPSTOP,HMPX(4)=DFN,ID=$G(HMPID)
"RTN","HMPDJ0",197,0)
 S HMPX("FLDS")="1;2;3;6;9;10;11;13",HMPX("SORT")="P"
"RTN","HMPDJ0",198,0)
 I $L(ID) G:$E(ID)="H" DGS^HMPDJ04 D  Q
"RTN","HMPDJ0",199,0)
 . S HMPDT=$P(ID,";",2),HMPX(1)=$P(ID,";",2)_";"_$P(ID,";",2)
"RTN","HMPDJ0",200,0)
 . S HMPX(2)=$P(ID,";",3)
"RTN","HMPDJ0",201,0)
 . S HMPNUM=$$SDAPI^SDAMA301(.HMPX)
"RTN","HMPDJ0",202,0)
 . D:HMPNUM>0 SDAM1^HMPDJ04
"RTN","HMPDJ0",203,0)
 . K ^TMP($J,"SDAMA301",DFN)
"RTN","HMPDJ0",204,0)
 ; appointments
"RTN","HMPDJ0",205,0)
 S HMPX(3)="R;I;NS;NSR;NT" ;no cancelled appt's
"RTN","HMPDJ0",206,0)
 S HMPNUM=$$SDAPI^SDAMA301(.HMPX),HMPDT=0
"RTN","HMPDJ0",207,0)
 F  S HMPDT=$O(^TMP($J,"SDAMA301",DFN,HMPDT)) Q:HMPDT<1  D  Q:HMPI'<HMPMAX
"RTN","HMPDJ0",208,0)
 . S X=$P($G(^TMP($J,"SDAMA301",DFN,HMPDT)),U,3)
"RTN","HMPDJ0",209,0)
 . ;I HMPDT<DT,$P(X,";")'["NS" Q   ;no prior kept appt's
"RTN","HMPDJ0",210,0)
 . D SDAM1^HMPDJ04
"RTN","HMPDJ0",211,0)
 K ^TMP($J,"SDAMA301",DFN)
"RTN","HMPDJ0",212,0)
 Q
"RTN","HMPDJ0",213,0)
 ;
"RTN","HMPDJ0",214,0)
SURGERY ; -- Surgery
"RTN","HMPDJ0",215,0)
 I $G(HMPID) D SR1^HMPDJ07(HMPID) Q
"RTN","HMPDJ0",216,0)
 Q:'$L($T(LIST^SROESTV))
"RTN","HMPDJ0",217,0)
 N SHOWADD S SHOWADD=1 ;to omit leading '+' with note titles
"RTN","HMPDJ0",218,0)
 N HMPN,HMPY,ID D LIST^SROESTV(.HMPY,DFN,HMPSTART,HMPSTOP,HMPMAX,1)
"RTN","HMPDJ0",219,0)
 S HMPN=0 F  S HMPN=$O(@HMPY@(HMPN)) Q:HMPN<1  D
"RTN","HMPDJ0",220,0)
 . S ID=+$G(@HMPY@(HMPN)) D:ID SR1^HMPDJ07(ID)
"RTN","HMPDJ0",221,0)
 K @HMPY
"RTN","HMPDJ0",222,0)
 Q
"RTN","HMPDJ0",223,0)
 ;
"RTN","HMPDJ0",224,0)
DOCUMENT ; -- Text Integration Utilities
"RTN","HMPDJ0",225,0)
 N HMPC,CLS,HMPS,CTXT,HMPY,HMPN,HMPX,ID
"RTN","HMPDJ0",226,0)
 I $L($G(HMPID)) D TIU1^HMPDJ08(HMPID) Q
"RTN","HMPDJ0",227,0)
 N CLASS,SUBCLASS,STATUS
"RTN","HMPDJ0",228,0)
 D SETUP^HMPDJ08 ;define search criteria
"RTN","HMPDJ0",229,0)
 F HMPC=1:1:$L(CLASS,U) S CLS=$P(CLASS,U,HMPC) D  Q:HMPI'<HMPMAX
"RTN","HMPDJ0",230,0)
 . I CLS="CP" D CP^HMPDJ08A(DFN,HMPSTART,HMPSTOP,HMPMAX) Q
"RTN","HMPDJ0",231,0)
 . I CLS="RA" D RA^HMPDJ08A(DFN,HMPSTART,HMPSTOP,HMPMAX) Q
"RTN","HMPDJ0",232,0)
 . I CLS="LR" D LR^HMPDJ08A(DFN,HMPSTART,HMPSTOP,HMPMAX) Q
"RTN","HMPDJ0",233,0)
 . ; TIU document classes, by sig status
"RTN","HMPDJ0",234,0)
 . F HMPS=1:1:$L(STATUS,U) S CTXT=$P(STATUS,U,HMPS) D  Q:HMPI'<HMPMAX
"RTN","HMPDJ0",235,0)
 .. ;I $L($G(HMPBATCH)) D GET^TIUHMP(.HMPY,DFN,CLS,HMPSTART,HMPSTOP) I 1 ; <<<< 12.3
"RTN","HMPDJ0",236,0)
 .. I $L($G(HMPBATCH)) D GET^TIUVPR(.HMPY,DFN,CLS,HMPSTART,HMPSTOP) I 1 ;  <<<< 12.3
"RTN","HMPDJ0",237,0)
 .. E  D CONTEXT^TIUSRVLO(.HMPY,CLS,CTXT,DFN,HMPSTART,HMPSTOP,,HMPMAX,,1)
"RTN","HMPDJ0",238,0)
 .. S HMPN=0 F  S HMPN=$O(@HMPY@(HMPN)) Q:HMPN<1  D  Q:HMPI'<HMPMAX
"RTN","HMPDJ0",239,0)
 ... S HMPX=$G(@HMPY@(HMPN)) ;Q:'$$MATCH^HMPDJ08(HMPX,CTXT)
"RTN","HMPDJ0",240,0)
 ... Q:$D(^TMP("HMPD",$J,+HMPX))  ;already included
"RTN","HMPDJ0",241,0)
 ... D EN1^HMPDJ08(HMPX,CLS)
"RTN","HMPDJ0",242,0)
 .. K @HMPY
"RTN","HMPDJ0",243,0)
 Q
"RTN","HMPDJ0",244,0)
 ;
"RTN","HMPDJ0",245,0)
VISIT ; -- Visits
"RTN","HMPDJ0",246,0)
 I $L($G(HMPID)) D VSIT1^HMPDJ04(HMPID) Q
"RTN","HMPDJ0",247,0)
 N HMPIDT,BEG,END,ID
"RTN","HMPDJ0",248,0)
 N HMPADMIT S HMPADMIT=+$G(^DPT(DFN,.105)) ;current admission
"RTN","HMPDJ0",249,0)
 S BEG=HMPSTART,END=HMPSTOP D IDT^HMPDVSIT ;invert dates
"RTN","HMPDJ0",250,0)
 S HMPIDT=BEG F  S HMPIDT=$O(^AUPNVSIT("AA",DFN,HMPIDT)) Q:HMPIDT<1!(HMPIDT>END)  D  Q:HMPI'<HMPMAX
"RTN","HMPDJ0",251,0)
 . S ID=0 F  S ID=$O(^AUPNVSIT("AA",DFN,HMPIDT,ID)) Q:ID<1  D VSIT1^HMPDJ04(ID)
"RTN","HMPDJ0",252,0)
 ; kill HMPADMIT in VSIT1 if adm is included, but add unless filtered
"RTN","HMPDJ0",253,0)
 I $G(HMPADMIT),HMPMAX'<9999,HMPSTART'>1410102 D VSIT1^HMPDJ04("H"_HMPADMIT)
"RTN","HMPDJ0",254,0)
 Q
"RTN","HMPDJ0",255,0)
 ;I HMPSTOP,HMPSTOP'["." S END=HMPSTOP_".24" ;assume end of day
"RTN","HMPDJ0",256,0)
 ;S HMPDT=END F  S HMPDT=$O(^AUPNVSIT("AET",DFN,HMPDT),-1)  Q:HMPDT<HMPSTART  D  Q:HMPI'<HMPMAX
"RTN","HMPDJ0",257,0)
 ;. S HMPLOC=0 F  S HMPLOC=$O(^AUPNVSIT("AET",DFN,HMPDT,HMPLOC)) Q:HMPLOC<1  D
"RTN","HMPDJ0",258,0)
 ;.. S ID=0 F  S ID=$O(^AUPNVSIT("AET",DFN,HMPDT,HMPLOC,"P",ID)) Q:ID<1  D VSIT1^HMPDJ04(ID)
"RTN","HMPDJ0",259,0)
 ;
"RTN","HMPDJ0",260,0)
HMP ; -- HMP Patient Objects
"RTN","HMPDJ0",261,0)
 D HMP^HMPDJ02($G(TYPE))
"RTN","HMPDJ0",262,0)
 Q
"RTN","HMPDJ0",263,0)
 ;
"RTN","HMPDJ0",264,0)
MH ; -- Mental Health
"RTN","HMPDJ0",265,0)
 I $L($T(MH^HMPDJ09M)) D MH^HMPDJ09M
"RTN","HMPDJ0",266,0)
 Q
"RTN","HMPDJ0",267,0)
 ;
"RTN","HMPDJ0",268,0)
ERRQ ; -- Quit for error handling
"RTN","HMPDJ0",269,0)
 Q
"RTN","HMPDJ00")
0^27^B138223324
"RTN","HMPDJ00",1,0)
HMPDJ00 ;SLC/MKB -- Patient demographics ;8/11/11  15:29
"RTN","HMPDJ00",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ00",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ00",4,0)
 ;
"RTN","HMPDJ00",5,0)
 ; External References          DBIA#
"RTN","HMPDJ00",6,0)
 ; -------------------          -----
"RTN","HMPDJ00",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDJ00",8,0)
 ; ^DPT                         10035
"RTN","HMPDJ00",9,0)
 ; DGACT                         2248
"RTN","HMPDJ00",10,0)
 ; DGCV                          4156
"RTN","HMPDJ00",11,0)
 ; DGMSTAPI                      2716
"RTN","HMPDJ00",12,0)
 ; DGNTAPI                       3457
"RTN","HMPDJ00",13,0)
 ; DGPFAPI                       3860
"RTN","HMPDJ00",14,0)
 ; DGRPDB                        4807
"RTN","HMPDJ00",15,0)
 ; DIQ                           2056
"RTN","HMPDJ00",16,0)
 ; IBBAPI                        4419
"RTN","HMPDJ00",17,0)
 ; MPIF001                       2701
"RTN","HMPDJ00",18,0)
 ; SDUTL3                        1252
"RTN","HMPDJ00",19,0)
 ; VADPT                        10061
"RTN","HMPDJ00",20,0)
 ; VAFCTFU1                      2990
"RTN","HMPDJ00",21,0)
 ; VASITE                       10112
"RTN","HMPDJ00",22,0)
 ; XUAF4                         2171
"RTN","HMPDJ00",23,0)
 ;
"RTN","HMPDJ00",24,0)
 ; All tags expect DFN
"RTN","HMPDJ00",25,0)
 ; [HMPID, HMPSTART, HMPSTOP, HMPMAX, HMPTEXT not currently used here]
"RTN","HMPDJ00",26,0)
 ;
"RTN","HMPDJ00",27,0)
DPT1 ; -- Demographics
"RTN","HMPDJ00",28,0)
 N PAT D DPT1OD(.PAT)
"RTN","HMPDJ00",29,0)
 I $D(PAT)>9 D ADD^HMPDJ("PAT")
"RTN","HMPDJ00",30,0)
 Q
"RTN","HMPDJ00",31,0)
 ;
"RTN","HMPDJ00",32,0)
DPT1OD(PAT) ; -- Demographics (data array only)
"RTN","HMPDJ00",33,0)
 N SYS S SYS=$$SITE^VASITE
"RTN","HMPDJ00",34,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ00",35,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ00",36,0)
 S ERRMSG="A problem occurred building the patient "_DFN_" demographic extract."
"RTN","HMPDJ00",37,0)
 D DEM,SVC,PRF,ATC,SUPP,ALIAS,FAC,PC,INPT,INS
"RTN","HMPDJ00",38,0)
 D KVAR^VADPT
"RTN","HMPDJ00",39,0)
 S PAT("stampTime")=$G(ARGS("stampTime"),$$EN^HMPSTMP("NOW"))
"RTN","HMPDJ00",40,0)
 S PAT("lastUpdateTime")=PAT("stampTime")
"RTN","HMPDJ00",41,0)
 Q
"RTN","HMPDJ00",42,0)
 ;
"RTN","HMPDJ00",43,0)
LKUP ; patient lookup data
"RTN","HMPDJ00",44,0)
 ; expects HMPSYS,DFN
"RTN","HMPDJ00",45,0)
 N X,X0
"RTN","HMPDJ00",46,0)
 S X0=^DPT(DFN,0),X=$P(X0,U)
"RTN","HMPDJ00",47,0)
 S PAT("fullName")=X
"RTN","HMPDJ00",48,0)
 S PAT("familyName")=$P(X,",")
"RTN","HMPDJ00",49,0)
 S PAT("givenNames")=$P(X,",",2,99)
"RTN","HMPDJ00",50,0)
 S X=$P(X0,U,2)
"RTN","HMPDJ00",51,0)
 S PAT("genderCode")="urn:va:pat-gender:"_X
"RTN","HMPDJ00",52,0)
 S PAT("genderName")=$$NAME(X,"gender")
"RTN","HMPDJ00",53,0)
 S PAT("localId")=DFN
"RTN","HMPDJ00",54,0)
 S PAT("pid")=HMPSYS_";"_DFN
"RTN","HMPDJ00",55,0)
 S PAT("uid")=$$SETUID^HMPUTILS("pt-select",DFN,DFN)
"RTN","HMPDJ00",56,0)
 S X=$$GETICN^MPIF001(DFN)
"RTN","HMPDJ00",57,0)
 S:X>0 PAT("icn")=X
"RTN","HMPDJ00",58,0)
 S PAT("ssn")=$P(X0,U,9)
"RTN","HMPDJ00",59,0)
 S PAT("birthDate")=$$JSONDT^HMPUTILS($P(X0,U,3))
"RTN","HMPDJ00",60,0)
 S PAT("sensitive")=$$BOOL($$SCREEN^DPTLK1(DFN))
"RTN","HMPDJ00",61,0)
 S X=$P($G(^DPT(DFN,.35)),U)
"RTN","HMPDJ00",62,0)
 S:X PAT("deceased")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ00",63,0)
 I $D(PAT)>9 D ADD^HMPDJ("PAT")
"RTN","HMPDJ00",64,0)
 Q
"RTN","HMPDJ00",65,0)
 ;
"RTN","HMPDJ00",66,0)
DEM ;-demographic data
"RTN","HMPDJ00",67,0)
 N VADM,VA,VAERR,X,I
"RTN","HMPDJ00",68,0)
 S PAT("pid")=$$PID^HMPDJFS(DFN)
"RTN","HMPDJ00",69,0)
 S X=$$GETICN^MPIF001(DFN) S:X>1 PAT("icn")=X
"RTN","HMPDJ00",70,0)
 D DEM^VADPT S X=VADM(1),PAT("fullName")=X
"RTN","HMPDJ00",71,0)
 S PAT("familyName")=$P(X,","),PAT("givenNames")=$P(X,",",2,99)
"RTN","HMPDJ00",72,0)
 S PAT("ssn")=$P(VADM(2),U),PAT("localId")=DFN
"RTN","HMPDJ00",73,0)
 S PAT("uid")=$$SETUID^HMPUTILS("patient",DFN,DFN)
"RTN","HMPDJ00",74,0)
 S:$D(VA("BID")) PAT("briefId")=$E(X)_VA("BID")
"RTN","HMPDJ00",75,0)
 S X=+$P($P(VADM(3),U),"."),PAT("birthDate")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ00",76,0)
 S X=$P(VADM(5),U) S:X="" X="UNK"
"RTN","HMPDJ00",77,0)
 S PAT("genderCode")="urn:va:pat-gender:"_X,PAT("genderName")=$$NAME(X,"gender")
"RTN","HMPDJ00",78,0)
 S X=+$P($P(VADM(6),U),".") S:X PAT("deceased")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ00",79,0)
 S PAT("sensitive")=$$BOOL($$SCREEN^DPTLK1(DFN))
"RTN","HMPDJ00",80,0)
 ;S X=$$GET1^DIQ(38.1,DFN_",",2,"I") S:$L(X) PAT("sensitive")=$$BOOL(X)
"RTN","HMPDJ00",81,0)
 S X=+VADM(9) S:X PAT("religionCode")="urn:va:pat-religion:"_X,PAT("religionName")=$$NAME(X,"religion")
"RTN","HMPDJ00",82,0)
 S X=$P(VADM(10),U,2) I $L(X) D
"RTN","HMPDJ00",83,0)
 . S X=$E(X),X=$S(X="S":"L",X="N":"S",1:X)
"RTN","HMPDJ00",84,0)
 . S PAT("maritalStatusCode")="urn:va:pat-maritalStatus:"_X
"RTN","HMPDJ00",85,0)
 . S PAT("maritalStatusName")=$$NAME(X,"maritalStatus")
"RTN","HMPDJ00",86,0)
 I VADM(11) S I=0 F  S I=$O(VADM(11,I)) Q:I<1  D
"RTN","HMPDJ00",87,0)
 . S X=+VADM(11,I)
"RTN","HMPDJ00",88,0)
 . S PAT("ethnicity",X,"code")=$$GET1^DIQ(2.06,X_","_DFN_",",".01:3")
"RTN","HMPDJ00",89,0)
 I VADM(12) S I=0 F  S I=$O(VADM(12,I)) Q:I<1  D
"RTN","HMPDJ00",90,0)
 . S X=+VADM(12,I)
"RTN","HMPDJ00",91,0)
 . S PAT("race",X,"code")=$$GET1^DIQ(2.02,X_","_DFN_",",".01:3")
"RTN","HMPDJ00",92,0)
 Q
"RTN","HMPDJ00",93,0)
 ;
"RTN","HMPDJ00",94,0)
SVC ;-service data
"RTN","HMPDJ00",95,0)
 N VAEL,VASV,VAERR,X,Y,I,P,AO,IR,PGF,HNC,MST,CV,HMPSC
"RTN","HMPDJ00",96,0)
 D 7^VADPT
"RTN","HMPDJ00",97,0)
 S PAT("veteran")=$$BOOL(VAEL(4))
"RTN","HMPDJ00",98,0)
 S PAT("serviceConnected")=$$BOOL(+VAEL(3)) I VAEL(3) D
"RTN","HMPDJ00",99,0)
 . S PAT("scPercent")=+$P(VAEL(3),U,2)
"RTN","HMPDJ00",100,0)
 . D GETS^DIQ(2,DFN_",",".3731*",,"HMPSC")
"RTN","HMPDJ00",101,0)
 . S I="" F  S I=$O(HMPSC(2.05,I)) Q:I=""  D
"RTN","HMPDJ00",102,0)
 .. S PAT("scCondition",+I,"name")=HMPSC(2.05,I,.01)
"RTN","HMPDJ00",103,0)
 .. S PAT("scCondition",+I,"scPercent")=HMPSC(2.05,I,.02)
"RTN","HMPDJ00",104,0)
 S X=+$G(^DPT(DFN,"LR")) S:X PAT("lrdfn")=X
"RTN","HMPDJ00",105,0)
 I VAEL(9)]"" S PAT("meanStatus")=$P(VAEL(9),U,2)
"RTN","HMPDJ00",106,0)
 ;
"RTN","HMPDJ00",107,0)
 ; exposures
"RTN","HMPDJ00",108,0)
 S AO=VASV(2),IR=VASV(3)
"RTN","HMPDJ00",109,0)
 S PGF=VASV(11)!VASV(12)!VASV(13) ;OIF/OEF
"RTN","HMPDJ00",110,0)
 S X=$$GETCUR^DGNTAPI(DFN,"HNC"),X=+($G(HNC("STAT")))
"RTN","HMPDJ00",111,0)
 S HNC=$S(X=4:1,X=5:1,X=1:0,X=6:0,1:"")
"RTN","HMPDJ00",112,0)
 S X=$P($$GETSTAT^DGMSTAPI(DFN),U,2),MST=$S(X="Y":1,X="N":0,1:"")
"RTN","HMPDJ00",113,0)
 S X=$$CVEDT^DGCV(DFN),CV=$S(+X<0:"",+X=0:0,$P(X,U,3):1,1:0)
"RTN","HMPDJ00",114,0)
 S X=AO_U_IR_U_PGF_U_HNC_U_MST_U_CV
"RTN","HMPDJ00",115,0)
 F P=1:1:6 S I=$P(X,U,P),$P(X,U,P)=$S(I:"Yes",I=0:"No",1:"Unknown")
"RTN","HMPDJ00",116,0)
 S NM="agent-orange^ionizing-radiation^sw-asia^head-neck-cancer^mst^combat-vet"
"RTN","HMPDJ00",117,0)
 F P=1:1:6 S PAT("exposure",P,"uid")="urn:va:"_$P(NM,U,P)_":"_$E($P(X,U,P)),PAT("exposure",P,"name")=$P(X,U,P)
"RTN","HMPDJ00",118,0)
 ;
"RTN","HMPDJ00",119,0)
 ; rated disabilities [DGRPDB]
"RTN","HMPDJ00",120,0)
 N HMPDIS,DIS,NM,DX
"RTN","HMPDJ00",121,0)
 D RDIS^DGRPDB(DFN,.HMPDIS)
"RTN","HMPDJ00",122,0)
 S I=0 F  S I=$O(HMPDIS(I)) Q:I<1  D
"RTN","HMPDJ00",123,0)
 . S DIS=HMPDIS(I)
"RTN","HMPDJ00",124,0)
 . S NM=$$GET1^DIQ(31,+DIS_",",.01),DX=$$GET1^DIQ(31,+DIS_",",2)
"RTN","HMPDJ00",125,0)
 . S PAT("disability",+DX,"name")=NM
"RTN","HMPDJ00",126,0)
 . S PAT("disability",+DX,"disPercent")=$P(DIS,U,2)
"RTN","HMPDJ00",127,0)
 . S PAT("disability",+DX,"serviceConnected")=$$BOOL($P(DIS,U,3))
"RTN","HMPDJ00",128,0)
 Q
"RTN","HMPDJ00",129,0)
 ;
"RTN","HMPDJ00",130,0)
PRF ;-patient record flags
"RTN","HMPDJ00",131,0)
 N HMPF,I,N,X
"RTN","HMPDJ00",132,0)
 S X=$$GETACT^DGPFAPI(DFN,"HMPF")
"RTN","HMPDJ00",133,0)
 S I=0 F  S I=$O(HMPF(I)) Q:I<1  D
"RTN","HMPDJ00",134,0)
 . S PAT("patientRecordFlag",I,"assignmentStatus")="Active"
"RTN","HMPDJ00",135,0)
 . S PAT("patientRecordFlag",I,"assignTS")=$$JSONDT^HMPUTILS($P($G(HMPF(I,"ASSIGNDT")),U))
"RTN","HMPDJ00",136,0)
 . S PAT("patientRecordFlag",I,"approved")=$P($G(HMPF(I,"APPRVBY")),U,2)
"RTN","HMPDJ00",137,0)
 . S PAT("patientRecordFlag",I,"nextReviewDT")=$$JSONDT^HMPUTILS($P($G(HMPF(I,"REVIEWDT")),U))
"RTN","HMPDJ00",138,0)
 . S PAT("patientRecordFlag",I,"name")=$P($G(HMPF(I,"FLAG")),U,2)
"RTN","HMPDJ00",139,0)
 . S PAT("patientRecordFlag",I,"type")=$P($G(HMPF(I,"FLAGTYPE")),U,2)
"RTN","HMPDJ00",140,0)
 . S PAT("patientRecordFlag",I,"category")=$P($G(HMPF(I,"CATEGORY")),U,2)
"RTN","HMPDJ00",141,0)
 . S PAT("patientRecordFlag",I,"ownerSite")=$P($G(HMPF(I,"OWNER")),U,2)
"RTN","HMPDJ00",142,0)
 . S PAT("patientRecordFlag",I,"originatingSite")=$P($G(HMPF(I,"ORIGSITE")),U,2)
"RTN","HMPDJ00",143,0)
 . S N=1,X=$G(HMPF(I,"NARR",1,0))
"RTN","HMPDJ00",144,0)
 . F  S N=$O(HMPF(I,"NARR",N)) Q:N<1  S X=X_$C(13,10)_$G(HMPF(I,"NARR",N,0))
"RTN","HMPDJ00",145,0)
 . S PAT("patientRecordFlag",I,"text")=X
"RTN","HMPDJ00",146,0)
 S X=$$CWAD^ORQPT2(DFN)
"RTN","HMPDJ00",147,0)
 I X]"" S PAT("cwadf")=X
"RTN","HMPDJ00",148,0)
 I $D(PAT("patientRecordFlag")) S PAT("cwadf")=$G(PAT("cwadf"))_"F"
"RTN","HMPDJ00",149,0)
 Q
"RTN","HMPDJ00",150,0)
 ;
"RTN","HMPDJ00",151,0)
ATC ;-address & telecom
"RTN","HMPDJ00",152,0)
 N VAPA,CNT,X,I,P,NM
"RTN","HMPDJ00",153,0)
 ; VAPA("P")="" ;permanent address
"RTN","HMPDJ00",154,0)
 D ADD^VADPT S CNT=0 I $$VAPA(1,5) D
"RTN","HMPDJ00",155,0)
 . S CNT=CNT+1
"RTN","HMPDJ00",156,0)
 . D ADD(1,2,3,4,5,11,9,10)
"RTN","HMPDJ00",157,0)
 . S PAT("address",CNT,"use")=$S($L(VAPA(9)):"TMP",1:"H")
"RTN","HMPDJ00",158,0)
 I VAPA(12) D   ;confidential address
"RTN","HMPDJ00",159,0)
 . S CNT=CNT+1
"RTN","HMPDJ00",160,0)
 . D ADD(13,14,15,16,17,18,20,21)
"RTN","HMPDJ00",161,0)
 . S PAT("address",CNT,"use")="CONF"
"RTN","HMPDJ00",162,0)
 . S I=0 F  S I=$O(VAPA(22,I)) Q:I=""  S X=VAPA(22,I) D
"RTN","HMPDJ00",163,0)
 .. S PAT("address",CNT,"category",I,"name")=$P(X,U,2)
"RTN","HMPDJ00",164,0)
 .. S PAT("address",CNT,"category",I,"status")=$$BOOL($P(X,U,3))
"RTN","HMPDJ00",165,0)
 ; 
"RTN","HMPDJ00",166,0)
 ; X=home^cell^work phones
"RTN","HMPDJ00",167,0)
 S X=$$FORMAT(VAPA(8))_U_$$FORMAT($$GET1^DIQ(2,DFN_",",.134))_U_$$FORMAT($$GET1^DIQ(2,DFN_",",.132))
"RTN","HMPDJ00",168,0)
 S NM="H^MC^WP" F P=1:1:3 I $L($P(X,U,P)) D
"RTN","HMPDJ00",169,0)
 . S I=$P(NM,U,P),PAT("telecom",P,"use")=I
"RTN","HMPDJ00",170,0)
 . S PAT("telecom",P,"value")=$P(X,U,P)
"RTN","HMPDJ00",171,0)
 S X=$P($G(^DPT(DFN,.13)),U,3) S:X'="" PAT("email")=X
"RTN","HMPDJ00",172,0)
 I +$P($G(^DPT(DFN,.11)),U,16)>0 S PAT("badAddress")=$$GET1^DIQ(2,DFN_",",.121)
"RTN","HMPDJ00",173,0)
 Q
"RTN","HMPDJ00",174,0)
 ;
"RTN","HMPDJ00",175,0)
ADD(LINE1,LINE2,LINE3,CITY,STATE,ZIP,START,STOP) ; -- address set
"RTN","HMPDJ00",176,0)
 S:$L(VAPA(LINE1)) PAT("address",CNT,"line1")=VAPA(LINE1)
"RTN","HMPDJ00",177,0)
 S:$L(VAPA(LINE2)) PAT("address",CNT,"line2")=VAPA(LINE2)
"RTN","HMPDJ00",178,0)
 S:$L(VAPA(LINE3)) PAT("address",CNT,"line3")=VAPA(LINE3)
"RTN","HMPDJ00",179,0)
 S:$L(VAPA(CITY)) PAT("address",CNT,"city")=VAPA(CITY)
"RTN","HMPDJ00",180,0)
 S X=$P(VAPA(STATE),U) S:X PAT("address",CNT,"state")=$$GET1^DIQ(5,+X_",",1)
"RTN","HMPDJ00",181,0)
 S X=$P(VAPA(ZIP),U,2) S:$L(X) PAT("address",CNT,"zip")=X
"RTN","HMPDJ00",182,0)
 S X=+VAPA(START) S:X PAT("address",CNT,"start")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ00",183,0)
 S X=+VAPA(STOP) S:X PAT("address",CNT,"end")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ00",184,0)
 Q
"RTN","HMPDJ00",185,0)
 ;
"RTN","HMPDJ00",186,0)
VAPA(BEG,END) ; -- VAPA nodes have data?
"RTN","HMPDJ00",187,0)
 N I,Y S Y=0
"RTN","HMPDJ00",188,0)
 F I=BEG:1:END I $L($G(VAPA(I))) S Y=1 Q
"RTN","HMPDJ00",189,0)
 Q Y
"RTN","HMPDJ00",190,0)
 ;
"RTN","HMPDJ00",191,0)
SUPP ;-support contacts
"RTN","HMPDJ00",192,0)
 N VAOA,A,I,X,TYPE,S
"RTN","HMPDJ00",193,0)
 S S=0 F A="",1 K VAOA D
"RTN","HMPDJ00",194,0)
 . S:A VAOA("A")=A D OAD^VADPT Q:'$L($G(VAOA(9)))
"RTN","HMPDJ00",195,0)
 . S S=S+1,TYPE=$S(A=1:"ECON^Emergency Contact",1:"NOK^Next of Kin")
"RTN","HMPDJ00",196,0)
 . S PAT("contact",S,"typeCode")="urn:va:pat-contact:"_$P(TYPE,U)
"RTN","HMPDJ00",197,0)
 . S PAT("contact",S,"typeName")=$P(TYPE,U,2)
"RTN","HMPDJ00",198,0)
 . S:$L(VAOA(9)) PAT("contact",S,"name")=VAOA(9)
"RTN","HMPDJ00",199,0)
 . S:$L(VAOA(10)) PAT("contact",S,"relationship")=VAOA(10)
"RTN","HMPDJ00",200,0)
 . S:$L(VAOA(1)) PAT("contact",S,"address",1,"line1")=VAOA(1)
"RTN","HMPDJ00",201,0)
 . S:$L(VAOA(2)) PAT("contact",S,"address",1,"line2")=VAOA(2)
"RTN","HMPDJ00",202,0)
 . S:$L(VAOA(3)) PAT("contact",S,"address",1,"line3")=VAOA(3)
"RTN","HMPDJ00",203,0)
 . S:$L(VAOA(4)) PAT("contact",S,"address",1,"city")=VAOA(4)
"RTN","HMPDJ00",204,0)
 . S X=$P(VAOA(5),U) S:X PAT("contact",S,"address",1,"state")=$$GET1^DIQ(5,+X_",",1)
"RTN","HMPDJ00",205,0)
 . S X=$P(VAOA(11),U,2) S:$L(X) PAT("contact",S,"address",1,"zip")=X
"RTN","HMPDJ00",206,0)
 . S I=$S(A=1:.33011,1:.21011),X=$$FORMAT(VAOA(8))_U_U_$$FORMAT($$GET1^DIQ(2,DFN_",",I))
"RTN","HMPDJ00",207,0)
 . ; X=home^cell^work phones
"RTN","HMPDJ00",208,0)
 . S NM="H^MC^WP" F P=1:1:3 I $L($P(X,U,P)) D
"RTN","HMPDJ00",209,0)
 .. S I=$P(NM,U,P),PAT("contact",S,"telecom",P,"use")=I
"RTN","HMPDJ00",210,0)
 .. S PAT("contact",S,"telecom",P,"value")=$P(X,U,P)
"RTN","HMPDJ00",211,0)
 Q
"RTN","HMPDJ00",212,0)
 ;
"RTN","HMPDJ00",213,0)
ALIAS ;-other names used
"RTN","HMPDJ00",214,0)
 N I,X
"RTN","HMPDJ00",215,0)
 S I=0 F  S I=$O(^DPT(DFN,.01,I)) Q:I<1  S X=$G(^(I,0)) D
"RTN","HMPDJ00",216,0)
 . S PAT("alias",I,"fullName")=$P(X,U)
"RTN","HMPDJ00",217,0)
 Q
"RTN","HMPDJ00",218,0)
 ;
"RTN","HMPDJ00",219,0)
FAC ;-treating facilities [see FACLIST^ORWCIRN]
"RTN","HMPDJ00",220,0)
 N IFN S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDJ00",221,0)
 N HMPY,HOME,LAST,I,X,IEN,VASITE
"RTN","HMPDJ00",222,0)
 S X=$$ALL^VASITE ;VASITE(stn#)=stn# for all local
"RTN","HMPDJ00",223,0)
 I $L($T(TFL^VAFCTFU1)) D TFL^VAFCTFU1(.HMPY,DFN)
"RTN","HMPDJ00",224,0)
 S HOME=+$P($G(^DPT(DFN,"MPI")),U,3) ;home facility
"RTN","HMPDJ00",225,0)
 I $P($G(HMPY(1)),U)<0 D  ;not setup
"RTN","HMPDJ00",226,0)
 . S X=$O(^AUPNVSIT("AA",DFN,0)),LAST=$S(X:9999999-$P(X,"."),1:"")
"RTN","HMPDJ00",227,0)
 . S X=$$SITE^VASITE
"RTN","HMPDJ00",228,0)
 . S HMPY(1)=$P(X,U,3)_U_$P(X,U,2)_U_LAST_U_$$GET1^DIQ(4,+X_",",60)
"RTN","HMPDJ00",229,0)
 S I=0 F  S I=$O(HMPY(I)) Q:I<1  D
"RTN","HMPDJ00",230,0)
 . S X=HMPY(I) Q:$P(X,U)=""  ;unknown
"RTN","HMPDJ00",231,0)
 . S IEN=+$$IEN^XUAF4($P(X,U))
"RTN","HMPDJ00",232,0)
 . I +X=776!(+X=200) S $P(X,U,2)="DEPT. OF DEFENSE"
"RTN","HMPDJ00",233,0)
 . S PAT("facility",I,"code")=$P(X,U)    ;stn#
"RTN","HMPDJ00",234,0)
 . S PAT("facility",I,"name")=$P(X,U,2)  ;name
"RTN","HMPDJ00",235,0)
 . S:IEN=HOME PAT("facility",I,"homeSite")="true"
"RTN","HMPDJ00",236,0)
 . S:$L($P(X,U,3)) PAT("facility",I,"latestDate")=$$JSONDT^HMPUTILS($P($P(X,U,3),"."))
"RTN","HMPDJ00",237,0)
 . I $D(VASITE(+X)) D
"RTN","HMPDJ00",238,0)
 .. S PAT("facility",I,"localPatientId")=DFN
"RTN","HMPDJ00",239,0)
 .. S PAT("facility",I,"systemId")=HMPSYS
"RTN","HMPDJ00",240,0)
 Q
"RTN","HMPDJ00",241,0)
 ;
"RTN","HMPDJ00",242,0)
PC ;-primary care assignments
"RTN","HMPDJ00",243,0)
 D GETPATTM^HMPCRPC1(.PAT,DFN)
"RTN","HMPDJ00",244,0)
 Q
"RTN","HMPDJ00",245,0)
 N X S X=$$OUTPTPR^SDUTL3(DFN) I X D
"RTN","HMPDJ00",246,0)
 . S PAT("pcProviderUid")=$$SETUID^HMPUTILS("user",,+X)
"RTN","HMPDJ00",247,0)
 . S PAT("pcProviderName")=$P(X,U,2)
"RTN","HMPDJ00",248,0)
 S X=$$OUTPTTM^SDUTL3(DFN) I X D
"RTN","HMPDJ00",249,0)
 . S PAT("pcTeamUid")=$$SETUID^HMPUTILS("team",,+X)
"RTN","HMPDJ00",250,0)
 . S PAT("pcTeamName")=$P(X,U,2)
"RTN","HMPDJ00",251,0)
 Q
"RTN","HMPDJ00",252,0)
 ;
"RTN","HMPDJ00",253,0)
INPT ;-inpatient information
"RTN","HMPDJ00",254,0)
 N ADM,X,Y,Z,I,HL,TS
"RTN","HMPDJ00",255,0)
 S ADM=+$G(^DPT(DFN,.105)) Q:ADM<1  ;current admission mvt
"RTN","HMPDJ00",256,0)
 S PAT("admissionUid")=$$SETUID^HMPUTILS("visit",DFN,"H"_ADM)
"RTN","HMPDJ00",257,0)
 S X=$P($G(^DPT(DFN,.101)),U) S:X]"" PAT("roomBed")=X
"RTN","HMPDJ00",258,0)
 S X=$P($G(^DPT(DFN,.1)),U) I X]"" D
"RTN","HMPDJ00",259,0)
 . S PAT("inpatientLocation")=X
"RTN","HMPDJ00",260,0)
 . S I=+$O(^DIC(42,"B",X,0)),HL=+$G(^DIC(42,I,44)) Q:HL<1
"RTN","HMPDJ00",261,0)
 . S X=$P($G(^SC(HL,0)),U,2) S:X]"" PAT("shortInpatientLocation")=X
"RTN","HMPDJ00",262,0)
 ;
"RTN","HMPDJ00",263,0)
 S TS=$G(^DPT(DFN,.103)) I TS D  ;treating specialty
"RTN","HMPDJ00",264,0)
 . S X=$$TSDATA^DGACT(45.7,+TS,.Y) Q:X<1
"RTN","HMPDJ00",265,0)
 . S PAT("specialty")=$G(Y(1)),X=""
"RTN","HMPDJ00",266,0)
 . I +$G(Y(2))>0 S X=$$TSDATA^DGACT(42.4,+Y(2),.Z)
"RTN","HMPDJ00",267,0)
 . I X>0,$G(Z(3))]"" S PAT("specialtyService")=$P(Z(3),U)
"RTN","HMPDJ00",268,0)
 Q
"RTN","HMPDJ00",269,0)
 ;
"RTN","HMPDJ00",270,0)
INS ;-insurance information
"RTN","HMPDJ00",271,0)
 N X,I,HMPX,HMPINS
"RTN","HMPDJ00",272,0)
 S X=$$INSUR^IBBAPI(DFN,,,.HMPX,"*") Q:X<1
"RTN","HMPDJ00",273,0)
 S I=0 F  S I=$O(HMPX("IBBAPI","INSUR",I)) Q:I<1  D
"RTN","HMPDJ00",274,0)
 . K HMPINS M HMPINS=HMPX("IBBAPI","INSUR",I)
"RTN","HMPDJ00",275,0)
 . S PAT("insurance",I,"id")=DFN_";"_+$G(HMPINS(1))_";"_+$G(HMPINS(8))
"RTN","HMPDJ00",276,0)
 . ; = DFN;COMPANY;POLICY
"RTN","HMPDJ00",277,0)
 . S PAT("insurance",I,"companyName")=$P(HMPINS(1),U,2)
"RTN","HMPDJ00",278,0)
 . ;DE942 - Convert effective and expiration dates to JSON format - TW
"RTN","HMPDJ00",279,0)
 . S:$G(HMPINS(10))]"" PAT("insurance",I,"effectiveDate")=$$JSONDT^HMPUTILS(HMPINS(10))
"RTN","HMPDJ00",280,0)
 . S:$G(HMPINS(11))]"" PAT("insurance",I,"expirationDate")=$$JSONDT^HMPUTILS(HMPINS(11))
"RTN","HMPDJ00",281,0)
 . S:$G(HMPINS(18))]"" PAT("insurance",I,"groupNumber")=HMPINS(18)
"RTN","HMPDJ00",282,0)
 . S:$G(HMPINS(21))]"" PAT("insurance",I,"policyType")=$P(HMPINS(21),U,2)
"RTN","HMPDJ00",283,0)
 . S X=$P($G(HMPINS(12)),U,2) S:X="PATIENT" X="SELF"
"RTN","HMPDJ00",284,0)
 . S:X]"" PAT("insurance",I,"policyHolder")=X
"RTN","HMPDJ00",285,0)
 Q
"RTN","HMPDJ00",286,0)
 ;
"RTN","HMPDJ00",287,0)
FORMAT(X) ; -- enforce (xxx)xxx-xxxx phone format
"RTN","HMPDJ00",288,0)
 S X=$G(X) I X?1"("3N1")"3N1"-"4N.E Q X
"RTN","HMPDJ00",289,0)
 N P,N,I,Y S P=""
"RTN","HMPDJ00",290,0)
 F I=1:1:$L(X) S N=$E(X,I) I N=+N S P=P_N
"RTN","HMPDJ00",291,0)
 S:$L(P)<10 P=$E("0000000000",1,10-$L(P))_P
"RTN","HMPDJ00",292,0)
 S Y=$S(P:"("_$E(P,1,3)_")"_$E(P,4,6)_"-"_$E(P,7,10),1:"")
"RTN","HMPDJ00",293,0)
 Q Y
"RTN","HMPDJ00",294,0)
 ;
"RTN","HMPDJ00",295,0)
NAME(CODE,SET) ; -- Return expanded name for code set
"RTN","HMPDJ00",296,0)
 N Y S Y="",CODE=$G(CODE)
"RTN","HMPDJ00",297,0)
 I $G(SET)="gender" S Y=$S(CODE="F":"Female",CODE="M":"Male",1:"Unknown")
"RTN","HMPDJ00",298,0)
 I $G(SET)="maritalStatus" S Y=$S(CODE="D":"Divorced",CODE="M":"Married",CODE="W":"Widowed",CODE="L":"Legally Separated",CODE="S":"Never Married",1:"Unknown")
"RTN","HMPDJ00",299,0)
 I $G(SET)="religion" S Y=$$GET1^DIQ(13,CODE_",",.01)
"RTN","HMPDJ00",300,0)
 Q Y
"RTN","HMPDJ00",301,0)
 ;
"RTN","HMPDJ00",302,0)
BOOL(X) ;
"RTN","HMPDJ00",303,0)
 I X>0 Q "true"
"RTN","HMPDJ00",304,0)
 S X=$E(X) I X="Y"!(X="y") Q "true"
"RTN","HMPDJ00",305,0)
 Q "false"
"RTN","HMPDJ00A")
0^28^B113564667
"RTN","HMPDJ00A",1,0)
HMPDJ00A ;SLC/MKB -- Patient demographics ;8/11/11  15:29
"RTN","HMPDJ00A",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ00A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ00A",4,0)
 ;
"RTN","HMPDJ00A",5,0)
 ; External References          DBIA#
"RTN","HMPDJ00A",6,0)
 ; -------------------          -----
"RTN","HMPDJ00A",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDJ00A",8,0)
 ; ^DPT                         10035
"RTN","HMPDJ00A",9,0)
 ; DGCV                          4156
"RTN","HMPDJ00A",10,0)
 ; DGMSTAPI                      2716
"RTN","HMPDJ00A",11,0)
 ; DGNTAPI                       3457
"RTN","HMPDJ00A",12,0)
 ; DGPFAPI                       3860
"RTN","HMPDJ00A",13,0)
 ; DGRPDB                        4807
"RTN","HMPDJ00A",14,0)
 ; DIQ                           2056
"RTN","HMPDJ00A",15,0)
 ; MPIF001                       2701
"RTN","HMPDJ00A",16,0)
 ; SDUTL3                        1252
"RTN","HMPDJ00A",17,0)
 ; VADPT                        10061
"RTN","HMPDJ00A",18,0)
 ; VAFCTFU1                      2990
"RTN","HMPDJ00A",19,0)
 ; VASITE                       10112
"RTN","HMPDJ00A",20,0)
 ; XUAF4                         2171
"RTN","HMPDJ00A",21,0)
 ;
"RTN","HMPDJ00A",22,0)
 ; All tags expect DFN
"RTN","HMPDJ00A",23,0)
 ; [HMPID, HMPSTART, HMPSTOP, HMPMAX, HMPTEXT not currently used here]
"RTN","HMPDJ00A",24,0)
 ;
"RTN","HMPDJ00A",25,0)
DPT1 ; -- Demographics
"RTN","HMPDJ00A",26,0)
 N PAT D DPT1OD(.PAT)
"RTN","HMPDJ00A",27,0)
 I $D(PAT)>9 D ADD^HMPDJ("PAT")
"RTN","HMPDJ00A",28,0)
 Q
"RTN","HMPDJ00A",29,0)
 ;
"RTN","HMPDJ00A",30,0)
TEST(DFN) ; -- look at array values
"RTN","HMPDJ00A",31,0)
 N PAT D DPT1OD(.PAT)
"RTN","HMPDJ00A",32,0)
 ;ZW PAT
"RTN","HMPDJ00A",33,0)
 Q
"RTN","HMPDJ00A",34,0)
 ;
"RTN","HMPDJ00A",35,0)
DPT1OD(PAT) ;
"RTN","HMPDJ00A",36,0)
 N SYS S SYS=$$SITE^VASITE
"RTN","HMPDJ00A",37,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ00A",38,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ00A",39,0)
 S ERRMSG="A problem occurred building the patient "_DFN_" demographic extract."
"RTN","HMPDJ00A",40,0)
 D DEM,SVC,PRF,ATC,SUPP,ALIAS,FAC,PC,INPT
"RTN","HMPDJ00A",41,0)
 D KVAR^VADPT
"RTN","HMPDJ00A",42,0)
 Q
"RTN","HMPDJ00A",43,0)
 ;
"RTN","HMPDJ00A",44,0)
LKUP ; patient lookup data
"RTN","HMPDJ00A",45,0)
 ; expects HMPSYS,DFN
"RTN","HMPDJ00A",46,0)
 N X,X0
"RTN","HMPDJ00A",47,0)
 S X0=^DPT(DFN,0),X=$P(X0,U)
"RTN","HMPDJ00A",48,0)
 S PAT("fullName")=X
"RTN","HMPDJ00A",49,0)
 S PAT("familyName")=$P(X,",")
"RTN","HMPDJ00A",50,0)
 S PAT("givenNames")=$P(X,",",2,99)
"RTN","HMPDJ00A",51,0)
 S X=$P(X0,U,2)
"RTN","HMPDJ00A",52,0)
 S PAT("genderCode")="urn:va:pat-gender:"_X
"RTN","HMPDJ00A",53,0)
 S PAT("genderName")=$$NAME(X,"gender")
"RTN","HMPDJ00A",54,0)
 S PAT("localId")=DFN
"RTN","HMPDJ00A",55,0)
 S PAT("pid")=HMPSYS_";"_DFN
"RTN","HMPDJ00A",56,0)
 S PAT("uid")=$$SETUID^HMPUTILS("pt-select",DFN,DFN)
"RTN","HMPDJ00A",57,0)
 S X=$$GETICN^MPIF001(DFN)
"RTN","HMPDJ00A",58,0)
 S:X>0 PAT("icn")=X
"RTN","HMPDJ00A",59,0)
 S PAT("ssn")=$P(X0,U,9)
"RTN","HMPDJ00A",60,0)
 S PAT("birthDate")=$$JSONDT^HMPUTILS($P(X0,U,3))
"RTN","HMPDJ00A",61,0)
 S PAT("sensitive")=$$BOOL($$SCREEN^DPTLK1(DFN))
"RTN","HMPDJ00A",62,0)
 S X=$P($G(^DPT(DFN,.35)),U)
"RTN","HMPDJ00A",63,0)
 S:X PAT("deceased")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ00A",64,0)
 I $D(PAT)>9 D ADD^HMPDJ("PAT")
"RTN","HMPDJ00A",65,0)
 Q
"RTN","HMPDJ00A",66,0)
 ;
"RTN","HMPDJ00A",67,0)
DEM ;-demographic data
"RTN","HMPDJ00A",68,0)
 N VADM,VA,VAERR,X,I
"RTN","HMPDJ00A",69,0)
 S PAT("pid")=$$PID^HMPDJFS(DFN)
"RTN","HMPDJ00A",70,0)
 S X=$$GETICN^MPIF001(DFN) S:X>1 PAT("icn")=X
"RTN","HMPDJ00A",71,0)
 D DEM^VADPT S X=VADM(1),PAT("fullName")=X
"RTN","HMPDJ00A",72,0)
 S PAT("familyName")=$P(X,","),PAT("givenNames")=$P(X,",",2,99)
"RTN","HMPDJ00A",73,0)
 S PAT("ssn")=$P(VADM(2),U),PAT("localId")=DFN
"RTN","HMPDJ00A",74,0)
 S PAT("uid")=$$SETUID^HMPUTILS("patient",DFN,DFN)
"RTN","HMPDJ00A",75,0)
 S:$D(VA("BID")) PAT("briefId")=$E(X)_VA("BID")
"RTN","HMPDJ00A",76,0)
 S X=+$P($P(VADM(3),U),"."),PAT("birthDate")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ00A",77,0)
 S X=$P(VADM(5),U),PAT("genderCode")="urn:va:pat-gender:"_X,PAT("genderName")=$$NAME(X,"gender")
"RTN","HMPDJ00A",78,0)
 S X=+$P($P(VADM(6),U),".") S:X PAT("deceased")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ00A",79,0)
 S PAT("sensitive")=$$BOOL($$SCREEN^DPTLK1(DFN))
"RTN","HMPDJ00A",80,0)
 ;S X=$$GET1^DIQ(38.1,DFN_",",2,"I") S:$L(X) PAT("sensitive")=$$BOOL(X)
"RTN","HMPDJ00A",81,0)
 S X=+VADM(9) S:X PAT("religionCode")="urn:va:pat-religion:"_X,PAT("religionName")=$$NAME(X,"religion")
"RTN","HMPDJ00A",82,0)
 S X=$P(VADM(10),U,2) I $L(X) D
"RTN","HMPDJ00A",83,0)
 . S X=$E(X),X=$S(X="S":"L",X="N":"S",1:X)
"RTN","HMPDJ00A",84,0)
 . S PAT("maritalStatusCode")="urn:va:pat-maritalStatus:"_X
"RTN","HMPDJ00A",85,0)
 . S PAT("maritalStatusName")=$$NAME(X,"maritalStatus")
"RTN","HMPDJ00A",86,0)
 I VADM(11) S I=0 F  S I=$O(VADM(11,I)) Q:I<1  D
"RTN","HMPDJ00A",87,0)
 . S X=+VADM(11,I)
"RTN","HMPDJ00A",88,0)
 . S PAT("ethnicity",X,"code")=$$GET1^DIQ(2.06,X_","_DFN_",",".01:3")
"RTN","HMPDJ00A",89,0)
 I VADM(12) S I=0 F  S I=$O(VADM(12,I)) Q:I<1  D
"RTN","HMPDJ00A",90,0)
 . S X=+VADM(12,I)
"RTN","HMPDJ00A",91,0)
 . S PAT("race",X,"code")=$$GET1^DIQ(2.02,X_","_DFN_",",".01:3")
"RTN","HMPDJ00A",92,0)
 Q
"RTN","HMPDJ00A",93,0)
 ;
"RTN","HMPDJ00A",94,0)
SVC ;-service data
"RTN","HMPDJ00A",95,0)
 N VAEL,VASV,VAERR,X,Y,I,P,AO,IR,PGF,HNC,MST,CV,HMPSC
"RTN","HMPDJ00A",96,0)
 D 7^VADPT
"RTN","HMPDJ00A",97,0)
 S PAT("veteran")=$$BOOL(VAEL(4))
"RTN","HMPDJ00A",98,0)
 S PAT("serviceConnected")=$$BOOL(+VAEL(3)) I VAEL(3) D
"RTN","HMPDJ00A",99,0)
 . S PAT("scPercent")=+$P(VAEL(3),U,2)
"RTN","HMPDJ00A",100,0)
 . D GETS^DIQ(2,DFN_",",".3731*",,"HMPSC")
"RTN","HMPDJ00A",101,0)
 . S I="" F  S I=$O(HMPSC(2.05,I)) Q:I=""  D
"RTN","HMPDJ00A",102,0)
 .. S PAT("scCondition",+I,"name")=HMPSC(2.05,I,.01)
"RTN","HMPDJ00A",103,0)
 .. S PAT("scCondition",+I,"scPercent")=HMPSC(2.05,I,.02)
"RTN","HMPDJ00A",104,0)
 S X=+$G(^DPT(DFN,"LR")) S:X PAT("lrdfn")=X
"RTN","HMPDJ00A",105,0)
 I VAEL(9)]"" S PAT("meanStatus")=$P(VAEL(9),U,2)
"RTN","HMPDJ00A",106,0)
 ;
"RTN","HMPDJ00A",107,0)
 ; exposures
"RTN","HMPDJ00A",108,0)
 S AO=VASV(2),IR=VASV(3)
"RTN","HMPDJ00A",109,0)
 S PGF=VASV(11)!VASV(12)!VASV(13) ;OIF/OEF
"RTN","HMPDJ00A",110,0)
 S X=$$GETCUR^DGNTAPI(DFN,"HNC"),X=+($G(HNC("STAT")))
"RTN","HMPDJ00A",111,0)
 S HNC=$S(X=4:1,X=5:1,X=1:0,X=6:0,1:"")
"RTN","HMPDJ00A",112,0)
 S X=$P($$GETSTAT^DGMSTAPI(DFN),U,2),MST=$S(X="Y":1,X="N":0,1:"")
"RTN","HMPDJ00A",113,0)
 S X=$$CVEDT^DGCV(DFN),CV=$S(+X<0:"",+X=0:0,$P(X,U,3):1,1:0)
"RTN","HMPDJ00A",114,0)
 S X=AO_U_IR_U_PGF_U_HNC_U_MST_U_CV
"RTN","HMPDJ00A",115,0)
 F P=1:1:6 S I=$P(X,U,P),$P(X,U,P)=$S(I:"Yes",I=0:"No",1:"Unknown")
"RTN","HMPDJ00A",116,0)
 S NM="agent-orange^ionizing-radiation^sw-asia^head-neck-cancer^mst^combat-vet"
"RTN","HMPDJ00A",117,0)
 F P=1:1:6 S PAT("exposure",P,"uid")="urn:va:"_$P(NM,U,P)_":"_$E($P(X,U,P)),PAT("exposure",P,"name")=$P(X,U,P)
"RTN","HMPDJ00A",118,0)
 ;
"RTN","HMPDJ00A",119,0)
 ; rated disabilities [DGRPDB]
"RTN","HMPDJ00A",120,0)
 N HMPDIS,DIS,NM,DX
"RTN","HMPDJ00A",121,0)
 D RDIS^DGRPDB(DFN,.HMPDIS)
"RTN","HMPDJ00A",122,0)
 S I=0 F  S I=$O(HMPDIS(I)) Q:I<1  D
"RTN","HMPDJ00A",123,0)
 . S DIS=HMPDIS(I)
"RTN","HMPDJ00A",124,0)
 . S NM=$$GET1^DIQ(31,+DIS_",",.01),DX=$$GET1^DIQ(31,+DIS_",",2)
"RTN","HMPDJ00A",125,0)
 . S PAT("disability",+DX,"name")=NM
"RTN","HMPDJ00A",126,0)
 . S PAT("disability",+DX,"disPercent")=$P(DIS,U,2)
"RTN","HMPDJ00A",127,0)
 . S PAT("disability",+DX,"serviceConnected")=$$BOOL($P(DIS,U,3))
"RTN","HMPDJ00A",128,0)
 Q
"RTN","HMPDJ00A",129,0)
 ;
"RTN","HMPDJ00A",130,0)
PRF ;-patient record flags
"RTN","HMPDJ00A",131,0)
 N HMPF,I,N,X
"RTN","HMPDJ00A",132,0)
 S X=$$GETACT^DGPFAPI(DFN,"HMPF")
"RTN","HMPDJ00A",133,0)
 S I=0 F  S I=$O(HMPF(I)) Q:I<1  D
"RTN","HMPDJ00A",134,0)
 . S PAT("patientRecordFlag",I,"assignmentStatus")="Active"
"RTN","HMPDJ00A",135,0)
 . S PAT("patientRecordFlag",I,"assignTS")=$$JSONDT^HMPUTILS($P($G(HMPF(I,"ASSIGNDT")),U))
"RTN","HMPDJ00A",136,0)
 . S PAT("patientRecordFlag",I,"approved")=$P($G(HMPF(I,"APPRVBY")),U,2)
"RTN","HMPDJ00A",137,0)
 . S PAT("patientRecordFlag",I,"nextReviewDT")=$$JSONDT^HMPUTILS($P($G(HMPF(I,"REVIEWDT")),U))
"RTN","HMPDJ00A",138,0)
 . S PAT("patientRecordFlag",I,"name")=$P($G(HMPF(I,"FLAG")),U,2)
"RTN","HMPDJ00A",139,0)
 . S PAT("patientRecordFlag",I,"type")=$P($G(HMPF(I,"FLAGTYPE")),U,2)
"RTN","HMPDJ00A",140,0)
 . S PAT("patientRecordFlag",I,"category")=$P($G(HMPF(I,"CATEGORY")),U,2)
"RTN","HMPDJ00A",141,0)
 . S PAT("patientRecordFlag",I,"ownerSite")=$P($G(HMPF(I,"OWNER")),U,2)
"RTN","HMPDJ00A",142,0)
 . S PAT("patientRecordFlag",I,"originatingSite")=$P($G(HMPF(I,"ORIGSITE")),U,2)
"RTN","HMPDJ00A",143,0)
 . S N=1,X=$G(HMPF(I,"NARR",1,0))
"RTN","HMPDJ00A",144,0)
 . F  S N=$O(HMPF(I,"NARR",N)) Q:N<1  S X=X_$C(13,10)_$G(HMPF(I,"NARR",N,0))
"RTN","HMPDJ00A",145,0)
 . S PAT("patientRecordFlag",I,"text")=X
"RTN","HMPDJ00A",146,0)
 S X=$$CWAD^ORQPT2(DFN)
"RTN","HMPDJ00A",147,0)
 I X]"" S PAT("cwadf")=X
"RTN","HMPDJ00A",148,0)
 I $D(PAT("patientRecordFlag")) S PAT("cwadf")=$G(PAT("cwadf"))_"F"
"RTN","HMPDJ00A",149,0)
 Q
"RTN","HMPDJ00A",150,0)
 ;
"RTN","HMPDJ00A",151,0)
ATC ;-address & telecom
"RTN","HMPDJ00A",152,0)
 N VAPA,CNT,X,I,P,NM
"RTN","HMPDJ00A",153,0)
 ; VAPA("P")="" ;permanent address
"RTN","HMPDJ00A",154,0)
 D ADD^VADPT S CNT=0 I $$VAPA(1,5) D
"RTN","HMPDJ00A",155,0)
 . S CNT=CNT+1
"RTN","HMPDJ00A",156,0)
 . D ADD(1,2,3,4,5,11,9,10)
"RTN","HMPDJ00A",157,0)
 . S PAT("address",CNT,"use")=$S($L(VAPA(9)):"TMP",1:"H")
"RTN","HMPDJ00A",158,0)
 I VAPA(12) D   ;confidential address
"RTN","HMPDJ00A",159,0)
 . S CNT=CNT+1
"RTN","HMPDJ00A",160,0)
 . D ADD(13,14,15,16,17,18,20,21)
"RTN","HMPDJ00A",161,0)
 . S PAT("address",CNT,"use")="CONF"
"RTN","HMPDJ00A",162,0)
 . S I=0 F  S I=$O(VAPA(22,I)) Q:I=""  S X=VAPA(22,I) D
"RTN","HMPDJ00A",163,0)
 .. S PAT("address",CNT,"category",I,"name")=$P(X,U,2)
"RTN","HMPDJ00A",164,0)
 .. S PAT("address",CNT,"category",I,"status")=$$BOOL($P(X,U,3))
"RTN","HMPDJ00A",165,0)
 ; 
"RTN","HMPDJ00A",166,0)
 ; X=home^cell^work phones
"RTN","HMPDJ00A",167,0)
 S X=$$FORMAT(VAPA(8))_U_$$FORMAT($$GET1^DIQ(2,DFN_",",.134))_U_$$FORMAT($$GET1^DIQ(2,DFN_",",.132))
"RTN","HMPDJ00A",168,0)
 S NM="H^MC^WP" F P=1:1:3 I $L($P(X,U,P)) D
"RTN","HMPDJ00A",169,0)
 . S I=$P(NM,U,P),PAT("telecom",P,"use")=I
"RTN","HMPDJ00A",170,0)
 . S PAT("telecom",P,"value")=$P(X,U,P)
"RTN","HMPDJ00A",171,0)
 S X=$P($G(^DPT(DFN,.13)),U,3) S:X'="" PAT("email")=X
"RTN","HMPDJ00A",172,0)
 I +$P($G(^DPT(DFN,.11)),U,16)>0 S PAT("badAddress")=$$GET1^DIQ(2,DFN_",",.121)
"RTN","HMPDJ00A",173,0)
 Q
"RTN","HMPDJ00A",174,0)
 ;
"RTN","HMPDJ00A",175,0)
ADD(LINE1,LINE2,LINE3,CITY,STATE,ZIP,START,STOP) ; -- address set
"RTN","HMPDJ00A",176,0)
 S:$L(VAPA(LINE1)) PAT("address",CNT,"line1")=VAPA(LINE1)
"RTN","HMPDJ00A",177,0)
 S:$L(VAPA(LINE2)) PAT("address",CNT,"line2")=VAPA(LINE2)
"RTN","HMPDJ00A",178,0)
 S:$L(VAPA(LINE3)) PAT("address",CNT,"line3")=VAPA(LINE3)
"RTN","HMPDJ00A",179,0)
 S:$L(VAPA(CITY)) PAT("address",CNT,"city")=VAPA(CITY)
"RTN","HMPDJ00A",180,0)
 S X=$P(VAPA(STATE),U) S:X PAT("address",CNT,"state")=$$GET1^DIQ(5,+X_",",1)
"RTN","HMPDJ00A",181,0)
 S X=$P(VAPA(ZIP),U,2) S:$L(X) PAT("address",CNT,"zip")=X
"RTN","HMPDJ00A",182,0)
 S X=+VAPA(START) S:X PAT("address",CNT,"start")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ00A",183,0)
 S X=+VAPA(STOP) S:X PAT("address",CNT,"end")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ00A",184,0)
 Q
"RTN","HMPDJ00A",185,0)
 ;
"RTN","HMPDJ00A",186,0)
VAPA(BEG,END) ; -- VAPA nodes have data?
"RTN","HMPDJ00A",187,0)
 N I,Y S Y=0
"RTN","HMPDJ00A",188,0)
 F I=BEG:1:END I $L($G(VAPA(I))) S Y=1 Q
"RTN","HMPDJ00A",189,0)
 Q Y
"RTN","HMPDJ00A",190,0)
 ;
"RTN","HMPDJ00A",191,0)
SUPP ;-support contacts
"RTN","HMPDJ00A",192,0)
 N VAOA,A,I,X,TYPE,S
"RTN","HMPDJ00A",193,0)
 S S=0 F A="",1 K VAOA D
"RTN","HMPDJ00A",194,0)
 . S:A VAOA("A")=A D OAD^VADPT Q:'$L($G(VAOA(9)))
"RTN","HMPDJ00A",195,0)
 . S S=S+1,TYPE=$S(A=1:"ECON^Emergency Contact",1:"NOK^Next of Kin")
"RTN","HMPDJ00A",196,0)
 . S PAT("contact",S,"typeCode")="urn:va:pat-contact:"_$P(TYPE,U)
"RTN","HMPDJ00A",197,0)
 . S PAT("contact",S,"typeName")=$P(TYPE,U,2)
"RTN","HMPDJ00A",198,0)
 . S:$L(VAOA(9)) PAT("contact",S,"name")=VAOA(9)
"RTN","HMPDJ00A",199,0)
 . S:$L(VAOA(10)) PAT("contact",S,"relationship")=VAOA(10)
"RTN","HMPDJ00A",200,0)
 . S:$L(VAOA(1)) PAT("contact",S,"address",1,"line1")=VAOA(1)
"RTN","HMPDJ00A",201,0)
 . S:$L(VAOA(2)) PAT("contact",S,"address",1,"line2")=VAOA(2)
"RTN","HMPDJ00A",202,0)
 . S:$L(VAOA(3)) PAT("contact",S,"address",1,"line3")=VAOA(3)
"RTN","HMPDJ00A",203,0)
 . S:$L(VAOA(4)) PAT("contact",S,"address",1,"city")=VAOA(4)
"RTN","HMPDJ00A",204,0)
 . S X=$P(VAOA(5),U) S:X PAT("contact",S,"address",1,"state")=$$GET1^DIQ(5,+X_",",1)
"RTN","HMPDJ00A",205,0)
 . S X=$P(VAOA(11),U,2) S:$L(X) PAT("contact",S,"address",1,"zip")=X
"RTN","HMPDJ00A",206,0)
 . S I=$S(A=1:.33011,1:.21011),X=$$FORMAT(VAOA(8))_U_U_$$FORMAT($$GET1^DIQ(2,DFN_",",I))
"RTN","HMPDJ00A",207,0)
 . ; X=home^cell^work phones
"RTN","HMPDJ00A",208,0)
 . S NM="H^MC^WP" F P=1:1:3 I $L($P(X,U,P)) D
"RTN","HMPDJ00A",209,0)
 .. S I=$P(NM,U,P),PAT("contact",S,"telecom",P,"use")=I
"RTN","HMPDJ00A",210,0)
 .. S PAT("contact",S,"telecom",P,"value")=$P(X,U,P)
"RTN","HMPDJ00A",211,0)
 Q
"RTN","HMPDJ00A",212,0)
 ;
"RTN","HMPDJ00A",213,0)
ALIAS ;-other names used
"RTN","HMPDJ00A",214,0)
 N I,X
"RTN","HMPDJ00A",215,0)
 S I=0 F  S I=$O(^DPT(DFN,.01,I)) Q:I<1  S X=$G(^(I,0)) D
"RTN","HMPDJ00A",216,0)
 . S PAT("alias",I,"fullName")=$P(X,U)
"RTN","HMPDJ00A",217,0)
 Q
"RTN","HMPDJ00A",218,0)
 ;
"RTN","HMPDJ00A",219,0)
FAC ;-treating facilities [see FACLIST^ORWCIRN]
"RTN","HMPDJ00A",220,0)
 N IFN S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDJ00A",221,0)
 N HMPY,HOME,LAST,I,X,IEN,VASITE
"RTN","HMPDJ00A",222,0)
 S X=$$ALL^VASITE ;VASITE(stn#)=stn# for all local
"RTN","HMPDJ00A",223,0)
 I $L($T(TFL^VAFCTFU1)) D TFL^VAFCTFU1(.HMPY,DFN)
"RTN","HMPDJ00A",224,0)
 S HOME=+$P($G(^DPT(DFN,"MPI")),U,3) ;home facility
"RTN","HMPDJ00A",225,0)
 I $P($G(HMPY(1)),U)<0 D  ;not setup
"RTN","HMPDJ00A",226,0)
 . S X=$O(^AUPNVSIT("AA",DFN,0)),LAST=$S(X:9999999-$P(X,"."),1:"")
"RTN","HMPDJ00A",227,0)
 . S X=$$SITE^VASITE
"RTN","HMPDJ00A",228,0)
 . S HMPY(1)=$P(X,U,3)_U_$P(X,U,2)_U_LAST_U_$$GET1^DIQ(4,+X_",",60)
"RTN","HMPDJ00A",229,0)
 S I=0 F  S I=$O(HMPY(I)) Q:I<1  D
"RTN","HMPDJ00A",230,0)
 . S X=HMPY(I) Q:$P(X,U)=""  ;unknown
"RTN","HMPDJ00A",231,0)
 . S IEN=+$$IEN^XUAF4($P(X,U))
"RTN","HMPDJ00A",232,0)
 . I +X=776!(+X=200) S $P(X,U,2)="DEPT. OF DEFENSE"
"RTN","HMPDJ00A",233,0)
 . S PAT("facility",I,"code")=$P(X,U)    ;stn#
"RTN","HMPDJ00A",234,0)
 . S PAT("facility",I,"name")=$P(X,U,2)  ;name
"RTN","HMPDJ00A",235,0)
 . S:IEN=HOME PAT("facility",I,"homeSite")="true"
"RTN","HMPDJ00A",236,0)
 . S:$L($P(X,U,3)) PAT("facility",I,"latestDate")=$$JSONDT^HMPUTILS($P($P(X,U,3),"."))
"RTN","HMPDJ00A",237,0)
 . I $D(VASITE(+X)) D
"RTN","HMPDJ00A",238,0)
 .. S PAT("facility",I,"localPatientId")=DFN
"RTN","HMPDJ00A",239,0)
 .. S PAT("facility",I,"systemId")=HMPSYS
"RTN","HMPDJ00A",240,0)
 Q
"RTN","HMPDJ00A",241,0)
 ;
"RTN","HMPDJ00A",242,0)
PC ;-primary care assignments
"RTN","HMPDJ00A",243,0)
 D GETPATTM^HMPCRPC1(.PAT,DFN)
"RTN","HMPDJ00A",244,0)
 Q
"RTN","HMPDJ00A",245,0)
 N X S X=$$OUTPTPR^SDUTL3(DFN) I X D
"RTN","HMPDJ00A",246,0)
 . S PAT("pcProviderUid")=$$SETUID^HMPUTILS("user",,+X)
"RTN","HMPDJ00A",247,0)
 . S PAT("pcProviderName")=$P(X,U,2)
"RTN","HMPDJ00A",248,0)
 S X=$$OUTPTTM^SDUTL3(DFN) I X D
"RTN","HMPDJ00A",249,0)
 . S PAT("pcTeamUid")=$$SETUID^HMPUTILS("team",,+X)
"RTN","HMPDJ00A",250,0)
 . S PAT("pcTeamName")=$P(X,U,2)
"RTN","HMPDJ00A",251,0)
 Q
"RTN","HMPDJ00A",252,0)
 ;
"RTN","HMPDJ00A",253,0)
INPT ;-inpatient location
"RTN","HMPDJ00A",254,0)
 N X,I,HL
"RTN","HMPDJ00A",255,0)
 I $G(^DPT(DFN,.102)) D  ;current admission mvt
"RTN","HMPDJ00A",256,0)
 . S X=$P($G(^DPT(DFN,.101)),U) S:X]"" PAT("roomBed")=X
"RTN","HMPDJ00A",257,0)
 . S X=$P($G(^DPT(DFN,.1)),U) Q:X=""  S PAT("inpatientLocation")=X
"RTN","HMPDJ00A",258,0)
 . S I=+$O(^DIC(42,"B",X,0)),HL=+$G(^DIC(42,I,44))
"RTN","HMPDJ00A",259,0)
 . S X=$P($G(^SC(HL,0)),U,2) S:$L(X) PAT("shortInpatientLocation")=X
"RTN","HMPDJ00A",260,0)
 Q
"RTN","HMPDJ00A",261,0)
 ;
"RTN","HMPDJ00A",262,0)
FORMAT(X) ; -- enforce (xxx)xxx-xxxx phone format
"RTN","HMPDJ00A",263,0)
 S X=$G(X) I X?1"("3N1")"3N1"-"4N.E Q X
"RTN","HMPDJ00A",264,0)
 N P,N,I,Y S P=""
"RTN","HMPDJ00A",265,0)
 F I=1:1:$L(X) S N=$E(X,I) I N=+N S P=P_N
"RTN","HMPDJ00A",266,0)
 S:$L(P)<10 P=$E("0000000000",1,10-$L(P))_P
"RTN","HMPDJ00A",267,0)
 S Y=$S(P:"("_$E(P,1,3)_")"_$E(P,4,6)_"-"_$E(P,7,10),1:"")
"RTN","HMPDJ00A",268,0)
 Q Y
"RTN","HMPDJ00A",269,0)
 ;
"RTN","HMPDJ00A",270,0)
NAME(CODE,SET) ; -- Return expanded name for code set
"RTN","HMPDJ00A",271,0)
 N Y S Y="",CODE=$G(CODE)
"RTN","HMPDJ00A",272,0)
 I $G(SET)="gender" S Y=$S(CODE="F":"Female",CODE="M":"Male",1:"Unknown")
"RTN","HMPDJ00A",273,0)
 I $G(SET)="maritalStatus" S Y=$S(CODE="D":"Divorced",CODE="M":"Married",CODE="W":"Widowed",CODE="L":"Legally Separated",CODE="S":"Never Married",1:"Unknown")
"RTN","HMPDJ00A",274,0)
 I $G(SET)="religion" S Y=$$GET1^DIQ(13,CODE_",",.01)
"RTN","HMPDJ00A",275,0)
 Q Y
"RTN","HMPDJ00A",276,0)
 ;
"RTN","HMPDJ00A",277,0)
BOOL(X) ;
"RTN","HMPDJ00A",278,0)
 I X>0 Q "true"
"RTN","HMPDJ00A",279,0)
 S X=$E(X) I X="Y"!(X="y") Q "true"
"RTN","HMPDJ00A",280,0)
 Q "false"
"RTN","HMPDJ01")
0^30^B43849243
"RTN","HMPDJ01",1,0)
HMPDJ01 ;SLC/MKB -- Orders ;6/25/12  16:11
"RTN","HMPDJ01",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ01",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ01",4,0)
 ;
"RTN","HMPDJ01",5,0)
 ; External References          DBIA#
"RTN","HMPDJ01",6,0)
 ; -------------------          -----
"RTN","HMPDJ01",7,0)
 ; ^DPT                         10035
"RTN","HMPDJ01",8,0)
 ; ^OR(100                       5771
"RTN","HMPDJ01",9,0)
 ; ^ORA(102.4                    5769
"RTN","HMPDJ01",10,0)
 ; ^ORD(100.98                    873
"RTN","HMPDJ01",11,0)
 ; ^PXRMINDX                     4290
"RTN","HMPDJ01",12,0)
 ; ^RADPT                        2480
"RTN","HMPDJ01",13,0)
 ; ^SC                          10040
"RTN","HMPDJ01",14,0)
 ; ^VA(200                      10060
"RTN","HMPDJ01",15,0)
 ; DIC                           2051
"RTN","HMPDJ01",16,0)
 ; DIQ                           2056
"RTN","HMPDJ01",17,0)
 ; GMRCGUIB                      2980
"RTN","HMPDJ01",18,0)
 ; LR7OU1                        2955
"RTN","HMPDJ01",19,0)
 ; ORQ1,^TMP("ORR"               3154
"RTN","HMPDJ01",20,0)
 ; ORQ12,^TMP("ORR"              5704
"RTN","HMPDJ01",21,0)
 ; ORX8                          2467
"RTN","HMPDJ01",22,0)
 ; PSS51P1                       4546
"RTN","HMPDJ01",23,0)
 ;
"RTN","HMPDJ01",24,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ01",25,0)
 ;
"RTN","HMPDJ01",26,0)
OR1(ID) ; -- order ID >> ^TMP("ORR",$J,ORLIST,HMPN)
"RTN","HMPDJ01",27,0)
 N ORDER,CHILD,HMPC
"RTN","HMPDJ01",28,0)
 D ORX(ID,.ORDER)
"RTN","HMPDJ01",29,0)
 S HMPC=0 F  S HMPC=$O(^OR(100,ID,2,HMPC)) Q:HMPC<1  D
"RTN","HMPDJ01",30,0)
 . K CHILD D ORX(HMPC,.CHILD)
"RTN","HMPDJ01",31,0)
 . M ORDER("children",HMPC)=CHILD
"RTN","HMPDJ01",32,0)
 S ORDER("lastUpdateTime")=$$EN^HMPSTMP("order") ;RHL 20141231
"RTN","HMPDJ01",33,0)
 S ORDER("stampTime")=ORDER("lastUpdateTime") ; RHL 20141231
"RTN","HMPDJ01",34,0)
 D ADD^HMPDJ("ORDER","order")
"RTN","HMPDJ01",35,0)
 Q
"RTN","HMPDJ01",36,0)
ORX(IFN,ORD) ; -- extract order IFN into ORD("attribute")
"RTN","HMPDJ01",37,0)
 N ORLIST,ORLST,X0,X8,LOC,X,I,DA
"RTN","HMPDJ01",38,0)
 S ORLST=$S(+$G(HMPN):HMPN-1,1:0) S:'$D(ORLIST) ORLIST=$H
"RTN","HMPDJ01",39,0)
 D GET^ORQ12(IFN,ORLIST,1)
"RTN","HMPDJ01",40,0)
 S X0=$G(^TMP("ORR",$J,ORLIST,ORLST))
"RTN","HMPDJ01",41,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ01",42,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ01",43,0)
 S ERRMSG="A problem occurred converting record "_IFN_" for the orders domain"
"RTN","HMPDJ01",44,0)
 ;
"RTN","HMPDJ01",45,0)
 S ORD("localId")=IFN,ORD("uid")=$$SETUID^HMPUTILS("order",DFN,IFN)
"RTN","HMPDJ01",46,0)
 S X=$$OI^ORX8(+X0) I $L(X) D
"RTN","HMPDJ01",47,0)
 . N ARRAY,NAME
"RTN","HMPDJ01",48,0)
 . S ARRAY("Code")=1_U_"oi",ARRAY("Name")=2,ARRAY("PackageRef")=3
"RTN","HMPDJ01",49,0)
 . D SPLITVAL^HMPUTILS(X,.ARRAY) S ORD("name")=ARRAY("Name")
"RTN","HMPDJ01",50,0)
 . S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  S ORD("oi"_NAME)=$G(ARRAY(NAME))
"RTN","HMPDJ01",51,0)
 S ORD("displayGroup")=$P(X0,U,2)
"RTN","HMPDJ01",52,0)
 S ORD("entered")=$$JSONDT^HMPUTILS($P(X0,U,3))
"RTN","HMPDJ01",53,0)
 S ORD("start")=$$TM($P(X0,U,4)),ORD("stop")=$$TM($P(X0,U,5))
"RTN","HMPDJ01",54,0)
 S ORD("statusCode")="urn:va:order-status:"_$P(X0,U,7)
"RTN","HMPDJ01",55,0)
 S ORD("statusName")=$P(X0,U,6)
"RTN","HMPDJ01",56,0)
 S ORD("statusVuid")="urn:va:vuid:"_$$STS^HMPDOR($P(X0,U,7))
"RTN","HMPDJ01",57,0)
 D SETTEXT^HMPUTILS($NA(^TMP("ORR",$J,ORLIST,ORLST,"TX")),$NA(^TMP("HMPTEXT",$J,IFN)))
"RTN","HMPDJ01",58,0)
 M ORD("content","\")=^TMP("HMPTEXT",$J,IFN)
"RTN","HMPDJ01",59,0)
 S X=$$GET1^DIQ(100,IFN_",",1,"I") I X D
"RTN","HMPDJ01",60,0)
 . S ORD("providerUid")=$$SETUID^HMPUTILS("user",,+X)
"RTN","HMPDJ01",61,0)
 . S ORD("providerName")=$P($G(^VA(200,+X,0)),U)
"RTN","HMPDJ01",62,0)
 S LOC=+$$GET1^DIQ(100,IFN_",",6,"I"),FAC=$$FAC^HMPD(LOC) I LOC D
"RTN","HMPDJ01",63,0)
 . S ORD("locationName")=$P($G(^SC(LOC,0)),U)
"RTN","HMPDJ01",64,0)
 . S ORD("locationUid")=$$SETUID^HMPUTILS("location",,LOC)
"RTN","HMPDJ01",65,0)
 D FACILITY^HMPUTILS(FAC,"ORD")
"RTN","HMPDJ01",66,0)
 S ORD("service")=$$GET1^DIQ(100,IFN_",","12:1")
"RTN","HMPDJ01",67,0)
 S X=$$GET1^DIQ(100,IFN_",",9,"I") S:X ORD("predecessor")=$$SETUID^HMPUTILS("order",DFN,+X)
"RTN","HMPDJ01",68,0)
 S X=$$GET1^DIQ(100,IFN_",",9.1,"I") S:X ORD("successor")=$$SETUID^HMPUTILS("order",DFN,+X)
"RTN","HMPDJ01",69,0)
 D RESULTS
"RTN","HMPDJ01",70,0)
 ; sign/verify
"RTN","HMPDJ01",71,0)
 S X8=$G(^OR(100,IFN,8,1,0)),I=0 I $P(X8,U,6) D       ;signed
"RTN","HMPDJ01",72,0)
 . N PROV S PROV=$P(X8,U,5) S:PROV<1 PROV=$P(X8,U,3)  ;if on chart,
"RTN","HMPDJ01",73,0)
 . D USER(.I,"S",PROV,$P(X8,U,6))                     ;   use provider
"RTN","HMPDJ01",74,0)
 I $P(X8,U,9)  D USER(.I,"N",$P(X8,U,8),$P(X8,U,9))   ;nurse
"RTN","HMPDJ01",75,0)
 I $P(X8,U,11) D USER(.I,"C",$P(X8,U,10),$P(X8,U,11)) ;clerk
"RTN","HMPDJ01",76,0)
 I $P(X8,U,19) D USER(.I,"R",$P(X8,U,18),$P(X8,U,19)) ;chart review
"RTN","HMPDJ01",77,0)
 Q
"RTN","HMPDJ01",78,0)
 ; acknowledgements
"RTN","HMPDJ01",79,0)
 S DA=0 F  S DA=$O(^ORA(102.4,"B",+IFN,DA)) Q:DA<1  D
"RTN","HMPDJ01",80,0)
 . S X0=$G(^ORA(102.4,DA,0)) Q:'$P(X0,U,3)  ;stub - not ack'd
"RTN","HMPDJ01",81,0)
 . S X=+$P(X0,U,2),X=$S(X:X_U_$P($G(^VA(200,X,0)),U),1:U)
"RTN","HMPDJ01",82,0)
 . S ORD("acknowledgement",DA)=X_U_$P(X0,U,3)
"RTN","HMPDJ01",83,0)
 Q
"RTN","HMPDJ01",84,0)
 ;
"RTN","HMPDJ01",85,0)
RESULTS ; -- add ORD("results",n,"uid") list
"RTN","HMPDJ01",86,0)
 N ORPK,ORPKG,ORDG
"RTN","HMPDJ01",87,0)
 S ORPK=$G(^OR(100,IFN,4)),ORPKG=ORD("service"),ORDG=ORD("displayGroup")
"RTN","HMPDJ01",88,0)
 I ORPKG="GMRC" D  Q
"RTN","HMPDJ01",89,0)
 . N HMPD,I,N,X D DOCLIST^GMRCGUIB(.HMPD,+ORPK)
"RTN","HMPDJ01",90,0)
 . S N=1,ORD("results",N,"uid")=$$SETUID^HMPUTILS("consult",DFN,+ORPK)
"RTN","HMPDJ01",91,0)
 . S I=0 F  S I=$O(HMPD(50,I)) Q:I<1  S X=$G(HMPD(50,I)) D
"RTN","HMPDJ01",92,0)
 .. Q:'$D(@(U_$P(X,";",2)_+X_")"))  ;text deleted
"RTN","HMPDJ01",93,0)
 .. S N=N+1,ORD("results",N,"uid")=$$SETUID^HMPUTILS("document",DFN,+X)
"RTN","HMPDJ01",94,0)
 . Q:ORDG'="PROC"
"RTN","HMPDJ01",95,0)
 . N HMPC D FIND^DIC(702,,"@","Q",+ORPK,,"ACON",,,"HMPC") ;CP
"RTN","HMPDJ01",96,0)
 . S I=0 F  S I=$O(HMPC("DILIST",2,I)) Q:I<1  D
"RTN","HMPDJ01",97,0)
 .. S X=+$G(HMPC("DILIST",2,I))_";MDD(702,"
"RTN","HMPDJ01",98,0)
 .. S N=N+1,ORD("results",N,"uid")=$$SETUID^HMPUTILS("procedure",DFN,X)
"RTN","HMPDJ01",99,0)
 I ORPKG="LR" D  Q
"RTN","HMPDJ01",100,0)
 . Q:$L(ORPK,";")'>3  ;no results yet, or parent order
"RTN","HMPDJ01",101,0)
 . N SUB,IDT,CDT,ITM,HMPT,ID,T,N,LRDFN,IDX
"RTN","HMPDJ01",102,0)
 . S SUB=$P(ORPK,";",4),IDT=$P(ORPK,";",5),CDT=9999999-IDT
"RTN","HMPDJ01",103,0)
 . I SUB="CH" D  Q
"RTN","HMPDJ01",104,0)
 .. S ITM=+$G(ORD("oiPackageRef")) D EXPAND^LR7OU1(ITM,.HMPT)
"RTN","HMPDJ01",105,0)
 .. S (T,N)=0 F  S T=$O(HMPT(T)) Q:T<1  S ID=$O(^PXRMINDX(63,"PI",DFN,T,CDT,"")) I $L(ID) S N=N+1,ORD("results",N,"uid")=$$SETUID^HMPUTILS("lab",DFN,$P(ID,";",2,9))
"RTN","HMPDJ01",106,0)
 . I SUB="MI" D  Q
"RTN","HMPDJ01",107,0)
 .. S ITM="M;A;",N=0,LRDFN=$G(^DPT(DFN,"LR"))
"RTN","HMPDJ01",108,0)
 .. F  S ITM=$O(^PXRMINDX(63,"PI",DFN,ITM)) Q:$E(ITM,1,4)'="M;A;"  I $D(^(ITM,CDT)) D
"RTN","HMPDJ01",109,0)
 ... S IDX=LRDFN_";MI;"_IDT
"RTN","HMPDJ01",110,0)
 ... F  S IDX=$O(^PXRMINDX(63,"PI",DFN,ITM,CDT,IDX)) Q:IDX=""  S ID=$P(IDX,";",2,99),N=N+1,ORD("results",N,"uid")=$$SETUID^HMPUTILS("lab",DFN,ID)
"RTN","HMPDJ01",111,0)
 .. S N=N+1,ORD("results",N,"uid")=$$SETUID^HMPUTILS("document",DFN,SUB_";"_IDT)
"RTN","HMPDJ01",112,0)
 . ; SUB:"AP" [AU,CY,EM,SP]
"RTN","HMPDJ01",113,0)
 . S ORD("results",1,"uid")=$$SETUID^HMPUTILS("lab",DFN,SUB_";"_IDT)
"RTN","HMPDJ01",114,0)
 . S ORD("results",2,"uid")=$$SETUID^HMPUTILS("document",DFN,SUB_";"_IDT)
"RTN","HMPDJ01",115,0)
 I ORPKG["PS" D  Q
"RTN","HMPDJ01",116,0)
 . S:ORPK ORD("results",1,"uid")=$$SETUID^HMPUTILS("med",DFN,IFN)
"RTN","HMPDJ01",117,0)
 I ORPKG="RA" D  Q
"RTN","HMPDJ01",118,0)
 . N IDT,CN S IDT=+$O(^RADPT("AO",+ORPK,DFN,0)) Q:'IDT
"RTN","HMPDJ01",119,0)
 . S CN=0 F  S CN=$O(^RADPT("AO",+ORPK,DFN,IDT,CN)) Q:CN<1  S ORD("results",CN,"uid")=$$SETUID^HMPUTILS("image",DFN,IDT_"-"_CN)
"RTN","HMPDJ01",120,0)
 ; rest should be generic (OR) orders
"RTN","HMPDJ01",121,0)
 I ORDG="NTX" S ORD("results",1,"uid")=$$SETUID^HMPUTILS("treatment",DFN,IFN) Q
"RTN","HMPDJ01",122,0)
 I ORDG="V/M" Q  ;no link
"RTN","HMPDJ01",123,0)
 Q
"RTN","HMPDJ01",124,0)
 ;
"RTN","HMPDJ01",125,0)
NTX1(IFN) ; -- extract nursing treatment order IFN into NTX("attribute")
"RTN","HMPDJ01",126,0)
 N NTX,X
"RTN","HMPDJ01",127,0)
 D ORX(IFN,.NTX) ;get basic order info
"RTN","HMPDJ01",128,0)
 S NTX("orderUid")=NTX("uid")
"RTN","HMPDJ01",129,0)
 S NTX("uid")=$$SETUID^HMPUTILS("treatment",DFN,IFN)
"RTN","HMPDJ01",130,0)
 S X=$$VALUE^ORX8(IFN,"COMMENT") S:$L(X) NTX("instructions")=X
"RTN","HMPDJ01",131,0)
 S X=$$VALUE^ORX8(IFN,"SCHEDULE") I X D
"RTN","HMPDJ01",132,0)
 . D ZERO^PSS51P1(X,,,,"HMPS")
"RTN","HMPDJ01",133,0)
 . S NTX("scheduleName")=$G(^TMP($J,"HMPS",X,.01))
"RTN","HMPDJ01",134,0)
 . S NTX("adminTimes")=$G(^TMP($J,"HMPS",X,1))
"RTN","HMPDJ01",135,0)
 . K ^TMP($J,"HMPS")
"RTN","HMPDJ01",136,0)
 S NTX("lastUpdateTime")=$$EN^HMPSTMP("treatment") ;RHL 20141231
"RTN","HMPDJ01",137,0)
 S NTX("stampTime")=NTX("lastUpdateTime") ; RHL 20141231
"RTN","HMPDJ01",138,0)
 D ADD^HMPDJ("NTX","treatment")
"RTN","HMPDJ01",139,0)
 Q
"RTN","HMPDJ01",140,0)
 ;
"RTN","HMPDJ01",141,0)
USER(N,ROLE,IEN,DATE) ; -- add signature/verification data
"RTN","HMPDJ01",142,0)
 S N=+$G(N)+1
"RTN","HMPDJ01",143,0)
 S ORD("clinicians",N,"signedDateTime")=$$JSONDT^HMPUTILS(DATE)
"RTN","HMPDJ01",144,0)
 S ORD("clinicians",N,"role")=$G(ROLE)
"RTN","HMPDJ01",145,0)
 Q:+$G(IEN)<1
"RTN","HMPDJ01",146,0)
 S ORD("clinicians",N,"uid")=$$SETUID^HMPUTILS("user",,IEN)
"RTN","HMPDJ01",147,0)
 S ORD("clinicians",N,"name")=$P($G(^VA(200,IEN,0)),U)
"RTN","HMPDJ01",148,0)
 Q
"RTN","HMPDJ01",149,0)
 ;
"RTN","HMPDJ01",150,0)
TM(X) ; -- strip seconds off a FM time
"RTN","HMPDJ01",151,0)
 N D,T,Y S D=$P(X,"."),T=$P(X,".",2)
"RTN","HMPDJ01",152,0)
 S Y=D_$S(T:"."_$E(T,1,4),1:"")
"RTN","HMPDJ01",153,0)
 S Y=$$JSONDT^HMPUTILS(Y)
"RTN","HMPDJ01",154,0)
 Q Y
"RTN","HMPDJ02")
0^32^B150928804
"RTN","HMPDJ02",1,0)
HMPDJ02 ;SLC/MKB -- Problems,Allergies,Vitals ;May 11, 2015@14:42:33
"RTN","HMPDJ02",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ02",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ02",4,0)
 ;
"RTN","HMPDJ02",5,0)
 ; External References          DBIA#
"RTN","HMPDJ02",6,0)
 ; -------------------          -----
"RTN","HMPDJ02",7,0)
 ; ^PXRMINDX                     4290
"RTN","HMPDJ02",8,0)
 ; ^SC                          10040
"RTN","HMPDJ02",9,0)
 ; DIC                           2051
"RTN","HMPDJ02",10,0)
 ; DIQ                           2056
"RTN","HMPDJ02",11,0)
 ; GMPLUTL2                      2741
"RTN","HMPDJ02",12,0)
 ; GMRADPT                      10099
"RTN","HMPDJ02",13,0)
 ; GMRAOR2                       2422
"RTN","HMPDJ02",14,0)
 ; GMRVUT0,^UTILITY($J           1446
"RTN","HMPDJ02",15,0)
 ; GMVGETQL                      5048
"RTN","HMPDJ02",16,0)
 ; GMVGETVT                      5047
"RTN","HMPDJ02",17,0)
 ; GMVUTL                        5046
"RTN","HMPDJ02",18,0)
 ; ICDCODE                       3990
"RTN","HMPDJ02",19,0)
 ; XLFSTR                       10104
"RTN","HMPDJ02",20,0)
 ; XUAF4                         2171
"RTN","HMPDJ02",21,0)
 ;
"RTN","HMPDJ02",22,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ02",23,0)
 ;
"RTN","HMPDJ02",24,0)
GMPL1(ID,POVLST) ; -- problem
"RTN","HMPDJ02",25,0)
 N HMPL,PROB,X,I,DATE,USER,FAC
"RTN","HMPDJ02",26,0)
 D DETAIL^GMPLUTL2(ID,.HMPL) Q:'$D(HMPL)  ;doesn't exist
"RTN","HMPDJ02",27,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ02",28,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ02",29,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the problem domain"
"RTN","HMPDJ02",30,0)
 ;
"RTN","HMPDJ02",31,0)
 S PROB("uid")=$$SETUID^HMPUTILS("problem",DFN,ID),PROB("localId")=ID
"RTN","HMPDJ02",32,0)
 S PROB("problemText")=$G(HMPL("NARRATIVE"))
"RTN","HMPDJ02",33,0)
 S DATE=$P($G(HMPL("ENTERED")),U)
"RTN","HMPDJ02",34,0)
 S:$L(DATE) DATE=$$DATE^HMPDGMPL(DATE),PROB("entered")=$$JSONDT^HMPUTILS(DATE)
"RTN","HMPDJ02",35,0)
 S X=$G(HMPL("DIAGNOSIS")) I $L(X) D
"RTN","HMPDJ02",36,0)
 . N ICD9ZN,DIAG
"RTN","HMPDJ02",37,0)
 . I DATE'>0 S DATE=DT
"RTN","HMPDJ02",38,0)
 . S ICD9ZN=$$ICDDX^ICDCODE(X,DATE),DIAG=$S($P($G(ICD9ZN),U,4)'="":$P(ICD9ZN,U,4),1:X)
"RTN","HMPDJ02",39,0)
 . S PROB("icdCode")=$$SETNCS^HMPUTILS("icd",X),PROB("icdName")=DIAG
"RTN","HMPDJ02",40,0)
 S X=$G(HMPL("ONSET")) S:$L(X) X=$$DATE^HMPDGMPL(X),PROB("onset")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ02",41,0)
 S X=$G(HMPL("MODIFIED")) S:$L(X) X=$$DATE^HMPDGMPL(X),PROB("updated")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ02",42,0)
 S X=$G(HMPL("STATUS")) I $L(X) D
"RTN","HMPDJ02",43,0)
 . S PROB("statusName")=X,X=$E(X)
"RTN","HMPDJ02",44,0)
 . S X=$S(X="A":55561003,X="I":73425007,1:"")
"RTN","HMPDJ02",45,0)
 . S PROB("statusCode")=$$SETNCS^HMPUTILS("sct",X)
"RTN","HMPDJ02",46,0)
 S X=$G(HMPL("PRIORITY")) I X]"" D
"RTN","HMPDJ02",47,0)
 . S X=$$LOW^XLFSTR(X),PROB("acuityName")=X
"RTN","HMPDJ02",48,0)
 . S PROB("acuityCode")=$$SETVURN^HMPUTILS("prob-acuity",$E(X))
"RTN","HMPDJ02",49,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.07,"I") S:X PROB("resolved")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ02",50,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.02,"I")
"RTN","HMPDJ02",51,0)
 S:X="P" PROB("unverified")="false",PROB("removed")="false"
"RTN","HMPDJ02",52,0)
 S:X="T" PROB("unverified")="true",PROB("removed")="false"
"RTN","HMPDJ02",53,0)
 S:X="H" PROB("unverified")="false",PROB("removed")="true"
"RTN","HMPDJ02",54,0)
 S X=$G(HMPL("SC")),X=$S(X="YES":"",X="NO":"false",1:"")
"RTN","HMPDJ02",55,0)
 S:$L(X) PROB("serviceConnected")=X
"RTN","HMPDJ02",56,0)
 S X=$G(HMPL("PROVIDER")) I $L(X) D
"RTN","HMPDJ02",57,0)
 . S PROB("providerName")=X,X=$$GET1^DIQ(9000011,ID_",",1.05,"I")
"RTN","HMPDJ02",58,0)
 . S PROB("providerUid")=$$SETUID^HMPUTILS("user",,+X)
"RTN","HMPDJ02",59,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.06) S:$L(X) PROB("service")=X
"RTN","HMPDJ02",60,0)
 S X=$G(HMPL("CLINIC")) I $L(X) D
"RTN","HMPDJ02",61,0)
 . S PROB("locationName")=X
"RTN","HMPDJ02",62,0)
 . N LOC S LOC=+$$FIND1^DIC(44,,"QX",X)
"RTN","HMPDJ02",63,0)
 . S:LOC PROB("locationUid")=$$SETUID^HMPUTILS("location",,LOC)
"RTN","HMPDJ02",64,0)
 S X=+$$GET1^DIQ(9000011,ID_",",.06,"I")
"RTN","HMPDJ02",65,0)
 S:X FAC=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","HMPDJ02",66,0)
 I 'X S FAC=$$FAC^HMPD ;local stn#^name
"RTN","HMPDJ02",67,0)
 D FACILITY^HMPUTILS(FAC,"PROB")
"RTN","HMPDJ02",68,0)
 S I=0 F  S I=$O(HMPL("COMMENT",I)) Q:I<1  D
"RTN","HMPDJ02",69,0)
 . S X=$G(HMPL("COMMENT",I))
"RTN","HMPDJ02",70,0)
 . S USER=$$VA200^HMPDGMPL($P(X,U,2)),DATE=$$DATE^HMPDGMPL($P(X,U))
"RTN","HMPDJ02",71,0)
 . S PROB("comments",I,"enteredByCode")=$$SETUID^HMPUTILS("user",,+USER)
"RTN","HMPDJ02",72,0)
 . S PROB("comments",I,"enteredByName")=$P(X,U,2)
"RTN","HMPDJ02",73,0)
 . S PROB("comments",I,"entered")=$$JSONDT^HMPUTILS(DATE)
"RTN","HMPDJ02",74,0)
 . S PROB("comments",I,"comment")=$P(X,U,3)
"RTN","HMPDJ02",75,0)
 I $D(POVLST) D GMPLVST(ID,"PROB",.POVLST)  ;JL;add encounter information. 
"RTN","HMPDJ02",76,0)
 S PROB("lastUpdateTime")=$$EN^HMPSTMP("problem")
"RTN","HMPDJ02",77,0)
 S PROB("stampTime")=PROB("lastUpdateTime") ; RHL 20141231
"RTN","HMPDJ02",78,0)
 D ADD^HMPDJ("PROB","problem")
"RTN","HMPDJ02",79,0)
 Q
"RTN","HMPDJ02",80,0)
 ;
"RTN","HMPDJ02",81,0)
GMPLVST(ID,Y,POVLST)  ; --- JL;associate problem with visit and notes
"RTN","HMPDJ02",82,0)
 Q:'$G(ID)!'$G(^AUPNPROB(ID,0))!'$D(POVLST)  ;invalid id or no data
"RTN","HMPDJ02",83,0)
 N ICDCODE
"RTN","HMPDJ02",84,0)
 S ICDCODE=$$CODEC^ICDCODE($P(^AUPNPROB(ID,0),U,1)) Q:ICDCODE=-1  ;invalid icdcode
"RTN","HMPDJ02",85,0)
 Q:$D(POVLST(ICDCODE))=0
"RTN","HMPDJ02",86,0)
 N IDX,VCNT,NCNT,DIEN,VIEN,FAC,STCODE
"RTN","HMPDJ02",87,0)
 S IDX="",VCNT=0,NCNT=0 F  S IDX=$O(POVLST(ICDCODE,IDX)) Q:IDX=""  D
"RTN","HMPDJ02",88,0)
 . S VCNT=VCNT+1
"RTN","HMPDJ02",89,0)
 . S VIEN=+$G(POVLST(ICDCODE,IDX)),FAC=$$FAC^HMPDJ04(VIEN),STCODE=$$STCODE^HMPDJ04(VIEN)
"RTN","HMPDJ02",90,0)
 . I FAC D FACILITY^HMPUTILS(FAC,Y_"(""encounters"","_VCNT_")")  ; facility info
"RTN","HMPDJ02",91,0)
 . I STCODE D STOPCODE^HMPDJ04(STCODE,Y_"(""encounters"","_VCNT_")") ; stop code
"RTN","HMPDJ02",92,0)
 . S @Y@("encounters",VCNT,"dateTime")=$$JSONDT^HMPUTILS($$DATE^HMPDGMPL(+IDX))
"RTN","HMPDJ02",93,0)
 . S @Y@("encounters",VCNT,"visitUid")=$$SETUID^HMPUTILS("visit",DFN,VIEN)
"RTN","HMPDJ02",94,0)
 . N ENINFO S ENINFO=$G(POVLST(ICDCODE,IDX))
"RTN","HMPDJ02",95,0)
 . S DIEN=+$P(ENINFO,U,2)
"RTN","HMPDJ02",96,0)
 . ;W "DIEN is "_DIEN,!
"RTN","HMPDJ02",97,0)
 . I DIEN D
"RTN","HMPDJ02",98,0)
 . . S NCNT=NCNT+1
"RTN","HMPDJ02",99,0)
 . . ; extract the extra data from the document
"RTN","HMPDJ02",100,0)
 . . N DOCINFO S DOCINFO=$E(ENINFO,$F($G(ENINFO),U),$L(ENINFO))
"RTN","HMPDJ02",101,0)
 . . N OUTPUT S OUTPUT="" D EN1^HMPDJ08(DOCINFO,3,.OUTPUT)
"RTN","HMPDJ02",102,0)
 . . N NAME F NAME="documentTypeName","entered","summary","facilityName","authorDisplayName" D
"RTN","HMPDJ02",103,0)
 . . . S:$D(OUTPUT(NAME)) @Y@("documents",NCNT,NAME)=$G(OUTPUT(NAME))
"RTN","HMPDJ02",104,0)
 . . S @Y@("documents",NCNT,"documentUid")=$$SETUID^HMPUTILS("document",DFN,DIEN)
"RTN","HMPDJ02",105,0)
 Q
"RTN","HMPDJ02",106,0)
 ;
"RTN","HMPDJ02",107,0)
GMPLPOV(DFNN,POVLST,DONTKILL) ; -- JL;All problem of visit related to the patient from V POV file
"RTN","HMPDJ02",108,0)
 ;INPUT: Patient's DFN
"RTN","HMPDJ02",109,0)
 ;OUTPUT: Patient's VISIT list in the format of
"RTN","HMPDJ02",110,0)
 ;        OUTPUT(DIAGNOSIS,DATATIME)="VISITIEN"
"RTN","HMPDJ02",111,0)
 ;
"RTN","HMPDJ02",112,0)
 Q:'$G(DFNN)
"RTN","HMPDJ02",113,0)
 N INVVST
"RTN","HMPDJ02",114,0)
 K:'DONTKILL POVLST ; clear the output
"RTN","HMPDJ02",115,0)
 ; Query V POV(^AUPNVPOV() by using "AA" Cross Reference.
"RTN","HMPDJ02",116,0)
 S INVVST="",CURVST="" F  S INVVST=$O(^AUPNVPOV("AA",DFNN,INVVST)) Q:INVVST=""  D
"RTN","HMPDJ02",117,0)
 . N CURVST,DIEN
"RTN","HMPDJ02",118,0)
 . S CURVST=INVVST,DIEN="" F  S DIEN=$O(^AUPNVPOV("AA",DFNN,CURVST,DIEN)) Q:DIEN=""  D
"RTN","HMPDJ02",119,0)
 . . N ICDIEN,PVISIT
"RTN","HMPDJ02",120,0)
 . . S ICDIEN=+$P(^AUPNVPOV(DIEN,0),U,1),PVISIT=$P(^AUPNVPOV(DIEN,0),U,3)
"RTN","HMPDJ02",121,0)
 . . N VISITDT
"RTN","HMPDJ02",122,0)
 . . S VISITDT=+$G(^AUPNVSIT(PVISIT,0)) Q:'$L(VISITDT)  ;quit if no visit is found, bad data entry.
"RTN","HMPDJ02",123,0)
 . . N ICDCODE,VIEN
"RTN","HMPDJ02",124,0)
 . . S ICDCODE=$$CODEC^ICDCODE(ICDIEN) Q:ICDCODE=-1  ;convert to ICD code, quit if not valid
"RTN","HMPDJ02",125,0)
 . . I $D(POVLST(ICDCODE,VISITDT))'=0 D  Q
"RTN","HMPDJ02",126,0)
 . . . S VIEN=$$GETVIEN(DFNN,VISITDT)
"RTN","HMPDJ02",127,0)
 . . . ; W:VIEN=-1 "Can not find VISIT IEN for "_VISITDT,!
"RTN","HMPDJ02",128,0)
 . . . S:VIEN'=-1 POVLST(ICDCODE,VISITDT)=VIEN
"RTN","HMPDJ02",129,0)
 Q
"RTN","HMPDJ02",130,0)
 ;
"RTN","HMPDJ02",131,0)
GETVIEN(DFNN,VISITDT)  ;JL; get the Visit IEN from VISIT file based on patient ID and Datetime
"RTN","HMPDJ02",132,0)
 Q:'+$G(DFNN)!'$L(VISITDT) -1  ;return -1 if bad parameter
"RTN","HMPDJ02",133,0)
 N REVDT,VISITIEN
"RTN","HMPDJ02",134,0)
 S REVDT=9999999-$P(VISITDT,".",1)_$S($P(VISITDT,".",2)'="":"."_$P(VISITDT,".",2),1:"")
"RTN","HMPDJ02",135,0)
 S VISITIEN=$O(^AUPNVSIT("AA",DFNN,REVDT,""))  ; using "AA" cross-reference
"RTN","HMPDJ02",136,0)
 Q:VISITIEN="" -1
"RTN","HMPDJ02",137,0)
 Q VISITIEN
"RTN","HMPDJ02",138,0)
 ;
"RTN","HMPDJ02",139,0)
DIAGLIST(DIAGS,DFN,ORDATE,ORPRCNT) ;BL,JL; get list diagnosis on past notes
"RTN","HMPDJ02",140,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","HMPDJ02",141,0)
 S:'+$G(ORPRCNT) ORPRCNT=1
"RTN","HMPDJ02",142,0)
 ;Use TIU DOCUMENTS BY CONTEXT to retrieve all notes associated with patient (CONTEXT^TIUSRVLO)
"RTN","HMPDJ02",143,0)
 K ENC,DIAGCODE,CNT,DIAG,DIAGNUM,DIAGLINE,ENCNUM,LINE,IEN,CLASS,CONTEXT,EARLY,LATE,PERSON,OCCLIM,SEQUENCE,SHOWADD,INCUND,LSTNUM,NOTEINFO
"RTN","HMPDJ02",144,0)
 K NEWCNT,OLDLST,DIAGCNT
"RTN","HMPDJ02",145,0)
 S CLASS=3,CONTEXT=1,EARLY=-1,LATE=-1,PERSON=0,OCCLIM=0,SEQUENCE="D",SHOWADD=0,INCUND=0,OLDLST=""
"RTN","HMPDJ02",146,0)
 ;TAKE EXISTING LIST FROM ENCOUNTER CALL AND PRESERVE TO BE APPENDED AFTERWARD
"RTN","HMPDJ02",147,0)
 K DIAGS S DIAGS=""
"RTN","HMPDJ02",148,0)
 D CONTEXT^TIUSRVLO(.DIAGS,CLASS,CONTEXT,DFN,EARLY,LATE,PERSON,OCCLIM,SEQUENCE,SHOWADD,INCUND)
"RTN","HMPDJ02",149,0)
 M DIAGS=^TMP("TIUR",$J)
"RTN","HMPDJ02",150,0)
 ;Go through notes list and use ORWPCE PCE4NOTE to extract diagnosis associated with each encounter to previous problem list (PCE4NOTE^ORWPCE3)
"RTN","HMPDJ02",151,0)
 S LSTNUM=""
"RTN","HMPDJ02",152,0)
 ;THIS CALL WILL EXTRACT ALL THE VISIT INFORMATION TO ^TMP(PXKENC,$J,VISIT)
"RTN","HMPDJ02",153,0)
 N VIEN
"RTN","HMPDJ02",154,0)
 F  S LSTNUM=$O(DIAGS(LSTNUM)) Q:LSTNUM=""  D
"RTN","HMPDJ02",155,0)
 . S NOTEINFO=""
"RTN","HMPDJ02",156,0)
 . S IEN=$P(DIAGS(LSTNUM),"^",1)
"RTN","HMPDJ02",157,0)
 . D PCE4NOTE^ORWPCE3(.NOTEINFO,IEN,DFN)
"RTN","HMPDJ02",158,0)
 . S CNT=0,DIAGCNT=0
"RTN","HMPDJ02",159,0)
 . F  S CNT=$O(NOTEINFO(CNT)) Q:CNT=""  D
"RTN","HMPDJ02",160,0)
 . . Q:$P(NOTEINFO(CNT),"^",1)'["POV"
"RTN","HMPDJ02",161,0)
 . . S DIAGCNT=DIAGCNT+1
"RTN","HMPDJ02",162,0)
 . . S VISITDT=$P($G(NOTEINFO(2)),U,3)  ; get the visit datetime
"RTN","HMPDJ02",163,0)
 . . S ICDCODE=$P(NOTEINFO(CNT),U,2)  ; get the diagnosis code
"RTN","HMPDJ02",164,0)
 . . I $D(ENC(ICDCODE,VISITDT))=0 D
"RTN","HMPDJ02",165,0)
 . . . S VIEN=$$GETVIEN(DFN,VISITDT)
"RTN","HMPDJ02",166,0)
 . . . ;W:VIEN=-1 "Can not find Visit ID for "_NOTEINFO(CNT),!
"RTN","HMPDJ02",167,0)
 . . . S:VIEN'=-1 ENC(ICDCODE,VISITDT)=VIEN_U_$G(DIAGS(LSTNUM)) ;  add to list only if visit ien is valid
"RTN","HMPDJ02",168,0)
 ; KILL DIAGS BECAUSE IT NOW CONTAINS NOTE INFO
"RTN","HMPDJ02",169,0)
 K DIAGS
"RTN","HMPDJ02",170,0)
 M DIAGS=ENC
"RTN","HMPDJ02",171,0)
 ;CLEAN UP ARRAYS
"RTN","HMPDJ02",172,0)
 K NOTEINFO,ENC,DIAG,^TMP("TIUR",$J)
"RTN","HMPDJ02",173,0)
 D GMPLPOV(DFN,.DIAGS,1)  ; Also loop thru V POV file to find extra encounter
"RTN","HMPDJ02",174,0)
 Q
"RTN","HMPDJ02",175,0)
 ;
"RTN","HMPDJ02",176,0)
GMRA1(ID) ; -- allergy/reaction GMRAL(ID)
"RTN","HMPDJ02",177,0)
 N GMRA,HMPY,REAC,X,Y,I,USER,CMMT
"RTN","HMPDJ02",178,0)
 S GMRA=$G(GMRAL(ID)) D EN1^GMRAOR2(ID,"HMPY")
"RTN","HMPDJ02",179,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ02",180,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ02",181,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the allergy domain"
"RTN","HMPDJ02",182,0)
 ;
"RTN","HMPDJ02",183,0)
 S X=$P(HMPY,U,10) I $L(X) S X=$$DATE^HMPDGMRA(X) Q:X<HMPSTART  Q:X>HMPSTOP  S REAC("entered")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ02",184,0)
 S X=$$FAC^HMPD D FACILITY^HMPUTILS(X,"REAC")
"RTN","HMPDJ02",185,0)
 S REAC("kind")="Allergy / Adverse Reaction"
"RTN","HMPDJ02",186,0)
 S REAC("localId")=ID,REAC("uid")=$$SETUID^HMPUTILS("allergy",DFN,ID)
"RTN","HMPDJ02",187,0)
 S (REAC("summary"),REAC("products",1,"name"))=$P(HMPY,U) I $P(GMRA,U,9) D
"RTN","HMPDJ02",188,0)
 . S X=$P(GMRA,U,9),REAC("reference")=X
"RTN","HMPDJ02",189,0)
 . S Y=+$P(X,"(",2) I 'Y,X["PSDRUG" S Y=50
"RTN","HMPDJ02",190,0)
 . S I=$$VUID^HMPD(+X,Y),REAC("products",1,"vuid")=$$SETVURN^HMPUTILS("vuid",I)
"RTN","HMPDJ02",191,0)
 S X=$P(HMPY,U,2) S:$L(X) REAC("originatorName")=X
"RTN","HMPDJ02",192,0)
 S REAC("historical")=$S($E($P(HMPY,U,5))="H":"true",1:"false")
"RTN","HMPDJ02",193,0)
 S X=$P(HMPY,U,6) S:$L(X) REAC("mechanism")=X
"RTN","HMPDJ02",194,0)
 S X=$P(HMPY,U,7) S:$L(X) REAC("typeName")=X
"RTN","HMPDJ02",195,0)
 ; REAC("adverseEventTypeName")=$P(HMPY,U,7)_" "_$P(HMPY,U,6) ;TYPE_MECH
"RTN","HMPDJ02",196,0)
 I $P(HMPY,U,4)="VERIFIED",$P(HMPY,U,9) D
"RTN","HMPDJ02",197,0)
 . S REAC("verified")=$$JSONDT^HMPUTILS($P(HMPY,U,9))
"RTN","HMPDJ02",198,0)
 . S REAC("verifierName")=$P(HMPY,U,8)
"RTN","HMPDJ02",199,0)
 ; severity
"RTN","HMPDJ02",200,0)
 S I=0 F  S I=$O(HMPY("O",I)) Q:I<1  D
"RTN","HMPDJ02",201,0)
 . S X=$G(HMPY("O",I))
"RTN","HMPDJ02",202,0)
 . S REAC("observations",I,"date")=$$JSONDT^HMPUTILS(+X)
"RTN","HMPDJ02",203,0)
 . S REAC("observations",I,"severity")=$P(X,U,2)
"RTN","HMPDJ02",204,0)
 ; reactions
"RTN","HMPDJ02",205,0)
 S I=0 F  S I=$O(GMRAL(ID,"S",I)) Q:I<1  D
"RTN","HMPDJ02",206,0)
 . S X=$G(GMRAL(ID,"S",I))
"RTN","HMPDJ02",207,0)
 . S REAC("reactions",I,"name")=$P(X,";")
"RTN","HMPDJ02",208,0)
 . S Y=$$VUID^HMPD(+$P(X,";",2),120.83)
"RTN","HMPDJ02",209,0)
 . S REAC("reactions",I,"vuid")=$$SETVURN^HMPUTILS("vuid",Y)
"RTN","HMPDJ02",210,0)
 ; drug classes
"RTN","HMPDJ02",211,0)
 S I=0 F  S I=$O(HMPY("V",I)) Q:I<1  D
"RTN","HMPDJ02",212,0)
 . S X=$G(HMPY("V",I))
"RTN","HMPDJ02",213,0)
 . S REAC("drugClasses",I,"code")=$P(X,U)
"RTN","HMPDJ02",214,0)
 . S REAC("drugClasses",I,"name")=$P(X,U,2)
"RTN","HMPDJ02",215,0)
 S I=0 F  S I=$O(HMPY("C",I)) Q:I<1  D
"RTN","HMPDJ02",216,0)
 . S X=$G(HMPY("C",I)),USER=$$VA200^HMPDGMPL($P(X,U,3))
"RTN","HMPDJ02",217,0)
 . S REAC("comments",I,"enteredByUid")=$$SETUID^HMPUTILS("user",,+USER)
"RTN","HMPDJ02",218,0)
 . S REAC("comments",I,"enteredByName")=$P(X,U,3)
"RTN","HMPDJ02",219,0)
 . S REAC("comments",I,"entered")=$$JSONDT^HMPUTILS(+X)
"RTN","HMPDJ02",220,0)
 . K CMMT M CMMT=HMPY("C",I)
"RTN","HMPDJ02",221,0)
 . S REAC("comments",I,"comment")=$$STRING^HMPD(.CMMT)
"RTN","HMPDJ02",222,0)
 I GMRA="" S REAC("removed")="true" ;entered in error
"RTN","HMPDJ02",223,0)
 ; next
"RTN","HMPDJ02",224,0)
 S REAC("lastUpdateTime")=$$EN^HMPSTMP("allergy")
"RTN","HMPDJ02",225,0)
 S REAC("stampTime")=REAC("lastUpdateTime") ; RHL 20141231
"RTN","HMPDJ02",226,0)
 D ADD^HMPDJ("REAC","allergy")
"RTN","HMPDJ02",227,0)
 Q
"RTN","HMPDJ02",228,0)
 ;
"RTN","HMPDJ02",229,0)
NKA ; -- no assessment or NKA [GMRAL=0 or ""]
"RTN","HMPDJ02",230,0)
 N REAC,X
"RTN","HMPDJ02",231,0)
 S X=$G(^GMR(120.86,DFN,0)) Q:GMRAL=""!'$P(X,U,2)
"RTN","HMPDJ02",232,0)
 S REAC("uid")=$$SETUID^HMPUTILS("obs",DFN,"120.86;"_DFN)
"RTN","HMPDJ02",233,0)
 S REAC("typeCode")="urn:sct:160244002"
"RTN","HMPDJ02",234,0)
 S REAC("typeName")="No known allergies"
"RTN","HMPDJ02",235,0)
 S X=$$FAC^HMPD D FACILITY^HMPUTILS(X,"REAC")
"RTN","HMPDJ02",236,0)
 D ADD^HMPDJ("REAC","allergy")
"RTN","HMPDJ02",237,0)
 Q
"RTN","HMPDJ02",238,0)
 ;
"RTN","HMPDJ02",239,0)
GMV1(ID) ; -- vital/measurement ^UTILITY($J,"GMRVD",HMPIDT,HMPTYP,ID)
"RTN","HMPDJ02",240,0)
 N VIT,HMPY,X0,TYPE,LOC,FAC,X,Y,MRES,MUNT,HIGH,LOW,I
"RTN","HMPDJ02",241,0)
 D GETREC^GMVUTL(.HMPY,ID,1) S X0=$G(HMPY(0))
"RTN","HMPDJ02",242,0)
 ; GMRVUT0 returns CLiO data with a pseudo-ID >> get real ID
"RTN","HMPDJ02",243,0)
 I X0="",$G(HMPIDT),$D(HMPTYP) D  ;[from HMPDJ0]
"RTN","HMPDJ02",244,0)
 . N GMRVD S GMRVD=$G(^UTILITY($J,"GMRVD",HMPIDT,HMPTYP,ID))
"RTN","HMPDJ02",245,0)
 . S ID=$O(^PXRMINDX(120.5,"PI",DFN,$P(GMRVD,U,3),+GMRVD,""))
"RTN","HMPDJ02",246,0)
 . I $L(ID) D GETREC^GMVUTL(.HMPY,ID,1) S X0=$G(HMPY(0))
"RTN","HMPDJ02",247,0)
 Q:X0=""
"RTN","HMPDJ02",248,0)
 ;
"RTN","HMPDJ02",249,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ02",250,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ02",251,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the vitals domain"
"RTN","HMPDJ02",252,0)
 S VIT("localId")=ID,VIT("kind")="Vital Sign"
"RTN","HMPDJ02",253,0)
 S VIT("uid")=$$SETUID^HMPUTILS("vital",DFN,ID)
"RTN","HMPDJ02",254,0)
 S VIT("observed")=$$JSONDT^HMPUTILS(+X0)
"RTN","HMPDJ02",255,0)
 S VIT("resulted")=$$JSONDT^HMPUTILS(+$P(X0,U,4))
"RTN","HMPDJ02",256,0)
 S TYPE=$$FIELD^GMVGETVT(+$P(X0,U,3),2)
"RTN","HMPDJ02",257,0)
 S VIT("displayName")=TYPE
"RTN","HMPDJ02",258,0)
 S VIT("typeName")=$$FIELD^GMVGETVT($P(X0,U,3),1)
"RTN","HMPDJ02",259,0)
 S VIT("typeCode")="urn:va:vuid:"_$$FIELD^GMVGETVT($P(X0,U,3),4)
"RTN","HMPDJ02",260,0)
 S X=$P(X0,U,8),VIT("result")=X
"RTN","HMPDJ02",261,0)
 S VIT("units")=$$UNIT^HMPDGMV(TYPE),(MRES,MUNT)=""
"RTN","HMPDJ02",262,0)
 I TYPE="T"  S MUNT="C",MRES=$J(X-32*5/9,0,1) ;EN1^GMRVUTL
"RTN","HMPDJ02",263,0)
 I TYPE="HT" S MUNT="cm",MRES=$J(2.54*X,0,2)  ;EN2^GMRVUTL
"RTN","HMPDJ02",264,0)
 I TYPE="WT" S MUNT="kg",MRES=$J(X/2.2,0,2)   ;EN3^GMRVUTL
"RTN","HMPDJ02",265,0)
 I TYPE="CG" S MUNT="cm",MRES=$J(2.54*X,0,2)
"RTN","HMPDJ02",266,0)
 S:MRES VIT("metricResult")=MRES,VIT("metricUnits")=MUNT
"RTN","HMPDJ02",267,0)
 S X=$$RANGE^HMPDGMV(TYPE) I $L(X) S VIT("high")=$P(X,U),VIT("low")=$P(X,U,2)
"RTN","HMPDJ02",268,0)
 S VIT("summary")=VIT("typeName")_" "_VIT("result")_" "_VIT("units")
"RTN","HMPDJ02",269,0)
 F I=1:1:$L(HMPY(5),U) S X=$P(HMPY(5),U,I) I X D
"RTN","HMPDJ02",270,0)
 . S VIT("qualifiers",I,"name")=$$FIELD^GMVGETQL(X,1)
"RTN","HMPDJ02",271,0)
 . S VIT("qualifiers",I,"vuid")=$$FIELD^GMVGETQL(X,3)
"RTN","HMPDJ02",272,0)
 ;US4338 - add pulse ox qualifier if it exists. name component is required. vuid is not per Thomas Loth
"RTN","HMPDJ02",273,0)
 I $P(X0,U,10) S VIT("qualifiers",I+1,"name")=$P(X0,U,10)
"RTN","HMPDJ02",274,0)
 I $G(HMPY(2)) S VIT("removed")="true"        ;entered in error
"RTN","HMPDJ02",275,0)
 S LOC=+$P(X0,U,5),FAC=$$FAC^HMPD(LOC)
"RTN","HMPDJ02",276,0)
 S VIT("locationUid")=$$SETUID^HMPUTILS("location",,LOC)
"RTN","HMPDJ02",277,0)
 S VIT("locationName")=$S(LOC:$P($G(^SC(LOC,0)),U),1:"unknown")
"RTN","HMPDJ02",278,0)
 N USERID S USERID=$P(HMPY(0),U,6)
"RTN","HMPDJ02",279,0)
 I $G(USERID) D
"RTN","HMPDJ02",280,0)
 . S VIT("enteredByUid")=$$SETUID^HMPUTILS("user",,USERID)
"RTN","HMPDJ02",281,0)
 . S VIT("enteredByName")=$P($G(^VA(200,USERID,0)),U,1)
"RTN","HMPDJ02",282,0)
 D FACILITY^HMPUTILS(FAC,"VIT")
"RTN","HMPDJ02",283,0)
 S VIT("lastUpdateTime")=$$EN^HMPSTMP("vital")
"RTN","HMPDJ02",284,0)
 S VIT("stampTime")=VIT("lastUpdateTime") ; RHL 20141231
"RTN","HMPDJ02",285,0)
 D ADD^HMPDJ("VIT","vital")
"RTN","HMPDJ02",286,0)
 Q
"RTN","HMPDJ02",287,0)
 ;
"RTN","HMPDJ02",288,0)
HMP(COLL) ; -- HMP Patient Objects
"RTN","HMPDJ02",289,0)
 N ID I $L($G(HMPID)) D  Q
"RTN","HMPDJ02",290,0)
 . S ID=+HMPID I 'ID S ID=+$O(^HMP(800000.1,"B",HMPID,0)) ;IEN or UID
"RTN","HMPDJ02",291,0)
 . D:ID HMP1(800000.1,ID)
"RTN","HMPDJ02",292,0)
 Q:$G(COLL)=""  ;error
"RTN","HMPDJ02",293,0)
 S ID=0 F  S ID=$O(^HMP(800000.1,"C",DFN,COLL,ID)) Q:ID<1  D HMP1(800000.1,ID)
"RTN","HMPDJ02",294,0)
 Q
"RTN","HMPDJ02",295,0)
HMP1(FNUM,ID) ; -- [patient] object
"RTN","HMPDJ02",296,0)
 N I,X,HMPY
"RTN","HMPDJ02",297,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ02",298,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=$G(DFN)
"RTN","HMPDJ02",299,0)
 S ERRMSG="A problem occurred retreiving record "_ID_" for the HMP domain"
"RTN","HMPDJ02",300,0)
 S I=0 F  S I=$O(^HMP(FNUM,ID,1,I)) Q:I<1  S X=$G(^(I,0)),HMPY(I)=X
"RTN","HMPDJ02",301,0)
 I $D(HMPY) D  ;already encoded JSON
"RTN","HMPDJ02",302,0)
 . S HMPI=HMPI+1 S:HMPI>1 @HMP@(HMPI,.3)=","
"RTN","HMPDJ02",303,0)
 . M @HMP@(HMPI)=HMPY
"RTN","HMPDJ02",304,0)
 . ; removed - PJH 
"RTN","HMPDJ02",305,0)
 . ; -- chunk data if from DQINIT^HMPDJFSP ; i.e. HMPCHNK defined ;*S68-JCH*
"RTN","HMPDJ02",306,0)
 . ;D CHNKCHK^HMPDJFSP(.HMP,.HMPI) ;*S68-JCH*
"RTN","HMPDJ02",307,0)
 Q
"RTN","HMPDJ03")
0^33^B91279550
"RTN","HMPDJ03",1,0)
HMPDJ03 ;SLC/MKB -- Consults,ClinProcedures,CLiO ;6/25/12  16:11
"RTN","HMPDJ03",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ03",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ03",4,0)
 ;
"RTN","HMPDJ03",5,0)
 ; External References          DBIA#
"RTN","HMPDJ03",6,0)
 ; -------------------          -----
"RTN","HMPDJ03",7,0)
 ; ^SC                          10040
"RTN","HMPDJ03",8,0)
 ; ^TIU(8925.1                   5677
"RTN","HMPDJ03",9,0)
 ; ^VA(200                      10060
"RTN","HMPDJ03",10,0)
 ; %DT                          10003
"RTN","HMPDJ03",11,0)
 ; DILFD                         2055
"RTN","HMPDJ03",12,0)
 ; DIQ                           2056
"RTN","HMPDJ03",13,0)
 ; GMRCAPI                       6082
"RTN","HMPDJ03",14,0)
 ; GMRCGUIB                      2980
"RTN","HMPDJ03",15,0)
 ; GMRCSLM1,^TMP("GMRCR"         2740
"RTN","HMPDJ03",16,0)
 ; MCARUTL3                      3280
"RTN","HMPDJ03",17,0)
 ; MDPS1,^TMP("MDHSP"            4230
"RTN","HMPDJ03",18,0)
 ; ORX8                          2467
"RTN","HMPDJ03",19,0)
 ; TIULQ                         2693
"RTN","HMPDJ03",20,0)
 ; TIUSRVLO                      2834
"RTN","HMPDJ03",21,0)
 ; XLFSTR                       10104
"RTN","HMPDJ03",22,0)
 ; XUAF4                         2171
"RTN","HMPDJ03",23,0)
 ;
"RTN","HMPDJ03",24,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ03",25,0)
 ;
"RTN","HMPDJ03",26,0)
GMRC1(ID) ; -- consult/request HMPX=^TMP("GMRCR",$J,"CS",HMPN,0)
"RTN","HMPDJ03",27,0)
 N CONS,ORDER,HMPD,X0,X,HMPA,DA,ACT0,ACT2,ACT3,ACT,HMPEASON,HMPJ,HMPTIU
"RTN","HMPDJ03",28,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ03",29,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ03",30,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the consults domain"
"RTN","HMPDJ03",31,0)
 ;
"RTN","HMPDJ03",32,0)
 S CONS("localId")=+HMPX,CONS("uid")=$$SETUID^HMPUTILS("consult",DFN,+HMPX)
"RTN","HMPDJ03",33,0)
 S CONS("dateTime")=$$JSONDT^HMPUTILS($P(HMPX,U,2))
"RTN","HMPDJ03",34,0)
 S CONS("statusName")=$P(HMPX,U,3),CONS("service")=$P(HMPX,U,4)
"RTN","HMPDJ03",35,0)
 S CONS("consultProcedure")=$P(HMPX,U,5)
"RTN","HMPDJ03",36,0)
 I $P(HMPX,U,6)="*" S CONS("interpretation")="SIGNIFICANT FINDINGS"
"RTN","HMPDJ03",37,0)
 S CONS("typeName")=$P(HMPX,U,7),CONS("category")=$P(HMPX,U,9)
"RTN","HMPDJ03",38,0)
 S ORDER=+$P(HMPX,U,8),CONS("orderName")=$P($$OI^ORX8(ORDER),U,2)
"RTN","HMPDJ03",39,0)
 S CONS("orderUid")=$$SETUID^HMPUTILS("order",DFN,ORDER)
"RTN","HMPDJ03",40,0)
 D GET^GMRCAPI(.HMPD,+HMPX) S X0=$G(HMPD(0)) ;=^GMR(123,ID,0)
"RTN","HMPDJ03",41,0)
 S X=$P(X0,U,6) S:X CONS("fromService")=$P($G(^SC(+X,0)),U)
"RTN","HMPDJ03",42,0)
 S X=$P(X0,U,9) S:X]"" CONS("urgency")=X
"RTN","HMPDJ03",43,0)
 S X=$P(X0,U,10) S:X]"" CONS("place")=X
"RTN","HMPDJ03",44,0)
 S X=$P(X0,U,11) S:X CONS("attention")=$P($G(^VA(200,+X,0)),U)
"RTN","HMPDJ03",45,0)
 S X=$P(X0,U,13) S:X]"" CONS("lastAction")=X
"RTN","HMPDJ03",46,0)
 S X=$P(X0,U,14) I X D  ;ordering provider
"RTN","HMPDJ03",47,0)
 . S CONS("providerUid")=$$SETUID^HMPUTILS("user",,+X)
"RTN","HMPDJ03",48,0)
 . S CONS("providerName")=$P($G(^VA(200,+X,0)),U)
"RTN","HMPDJ03",49,0)
 S X=$P(X0,U,18) I $L(X) D
"RTN","HMPDJ03",50,0)
 . S CONS("patientClassCode")="urn:va:patient-class:"_$S(X="I":"IMP",1:"AMB")
"RTN","HMPDJ03",51,0)
 . S CONS("patientClassName")=$S(X="I":"Inpatient",1:"Ambulatory")
"RTN","HMPDJ03",52,0)
 S X=+$P(X0,U,24) S:X CONS("earliestDate")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ03",53,0)
 I $P(HMPX,U,9)="M" S CONS("clinicalProcedure")=$G(HMPD(1))
"RTN","HMPDJ03",54,0)
 I $D(HMPD(20)) M HMPEASON=HMPD(20) S CONS("reason")=$$STRING^HMPD(.HMPEASON)
"RTN","HMPDJ03",55,0)
 S X=$G(HMPD(30)) S:$L(X) CONS("provisionalDx")=X
"RTN","HMPDJ03",56,0)
 ; 
"RTN","HMPDJ03",57,0)
 I $P(X0,U,23) D  ;inter-facility
"RTN","HMPDJ03",58,0)
 . N IFC S X=$$NS^XUAF4($P(X0,U,23))
"RTN","HMPDJ03",59,0)
 . S CONS("remote","facilityCode")=$P(X,U,2),CONS("remote","facilityName")=$P(X,U)
"RTN","HMPDJ03",60,0)
 . S:$P(X0,U,22) CONS("remote","id")=$P(X0,U,22)
"RTN","HMPDJ03",61,0)
 . S IFC=$$IFC^GMRCAPI(ID)
"RTN","HMPDJ03",62,0)
 . S X=$P(IFC,U) S:$L(X) CONS("remote","service")=X
"RTN","HMPDJ03",63,0)
 . S X=$P(IFC,U,5) S:$L(X) CONS("remote","role")=$S(X="P":"Requesting facility",1:"Consulting facility")
"RTN","HMPDJ03",64,0)
 . S CONS("remote","providerName")=$P(IFC,U,6)
"RTN","HMPDJ03",65,0)
 . S X=$P(IFC,U,2) S:$L(X) CONS("remote","providerphone")=X
"RTN","HMPDJ03",66,0)
 . S X=$P(IFC,U,3) S:$L(X) CONS("remote","providerpager")=X
"RTN","HMPDJ03",67,0)
 ;
"RTN","HMPDJ03",68,0)
 D ACT^GMRCAPI(.HMPA,ID)
"RTN","HMPDJ03",69,0)
 S DA=0 F  S DA=$O(HMPA(DA)) Q:DA<1  D
"RTN","HMPDJ03",70,0)
 . S ACT0=$G(HMPA(DA,0)),ACT2=$G(HMPA(DA,2)),ACT3=$G(HMPA(DA,3)) K ACT
"RTN","HMPDJ03",71,0)
 . I $L(ACT2),$P(X0,U,23) S X=$$NS^XUAF4($P(X0,U,23)),ACT("facilityCode")=$P(X,U,2),ACT("facilityName")=$P(X,U)
"RTN","HMPDJ03",72,0)
 . S ACT("name")=$P(ACT0,U,2)
"RTN","HMPDJ03",73,0)
 . S ACT("entered")=$$JSONDT^HMPUTILS($P(ACT0,U))
"RTN","HMPDJ03",74,0)
 . S ACT("dateTime")=$$JSONDT^HMPUTILS($P(ACT0,U,3))
"RTN","HMPDJ03",75,0)
 . S:$L($P(ACT2,U,3)) ACT("timeZone")=$P(ACT2,U,3)
"RTN","HMPDJ03",76,0)
 . I $L(ACT2) S ACT("enteredBy")=$P(ACT2,U),ACT("responsible")=$P(ACT2,U,2)
"RTN","HMPDJ03",77,0)
 . E  D  ;remote vs. local users
"RTN","HMPDJ03",78,0)
 .. S X=+$P(ACT0,U,4) S:X ACT("responsible")=$P($G(^VA(200,X,0)),U)
"RTN","HMPDJ03",79,0)
 .. S X=+$P(ACT0,U,5) S:X ACT("enteredBy")=$P($G(^VA(200,X,0)),U)
"RTN","HMPDJ03",80,0)
 . S X=$S($L(ACT3):ACT3,1:$P(ACT0,U,6)) S:$L(X) ACT("forwardedFrom")=X
"RTN","HMPDJ03",81,0)
 . S X=$P(ACT0,U,7) S:X ACT("previousAttention")=$P($G(^VA(200,X,0)),U)
"RTN","HMPDJ03",82,0)
 . S X=$P(ACT0,U,8) S:X ACT("device")=$$GET1^DIQ(3.5,X_",",.01)
"RTN","HMPDJ03",83,0)
 . S X=$P(ACT0,U,9) I X,X["TIU" S ACT("resultUid")=$$SETUID^HMPUTILS("document",DFN,+X)
"RTN","HMPDJ03",84,0)
 . I $D(HMPA(DA,1)) M HMPEASON=HMPA(DA,1) S ACT("comment")=$$STRING^HMPD(.HMPEASON)
"RTN","HMPDJ03",85,0)
 . M CONS("activity",DA)=ACT
"RTN","HMPDJ03",86,0)
 ;
"RTN","HMPDJ03",87,0)
 S HMPJ=0 F  S HMPJ=$O(HMPD(50,HMPJ)) Q:HMPJ<1  S X=$G(HMPD(50,HMPJ)) D
"RTN","HMPDJ03",88,0)
 . Q:'$D(@(U_$P(X,";",2)_+X_")"))  ;text deleted
"RTN","HMPDJ03",89,0)
 . S CONS("results",HMPJ,"uid")=$$SETUID^HMPUTILS("document",DFN,+X)
"RTN","HMPDJ03",90,0)
 . D EXTRACT^TIULQ(+X,"HMPTIU",,.01)
"RTN","HMPDJ03",91,0)
 . S CONS("results",HMPJ,"localTitle")=$G(HMPTIU(+X,.01,"E"))
"RTN","HMPDJ03",92,0)
 S X=$P(X0,U,21),X=$S(X:$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U),1:$$FAC^HMPD)
"RTN","HMPDJ03",93,0)
 D FACILITY^HMPUTILS(X,"CONS")
"RTN","HMPDJ03",94,0)
 S CONS("lastUpdateTime")=$$EN^HMPSTMP("consult")
"RTN","HMPDJ03",95,0)
 S CONS("stampTime")=CONS("lastUpdateTime") ; RHL 20141231
"RTN","HMPDJ03",96,0)
 D ADD^HMPDJ("CONS","consult")
"RTN","HMPDJ03",97,0)
 Q
"RTN","HMPDJ03",98,0)
 ;
"RTN","HMPDJ03",99,0)
MDPS1(DFN,BEG,END,MAX) ; -- perform CP search (scope variables)
"RTN","HMPDJ03",100,0)
 N MCARCODE,MCARDT,MCARPROC,MCESKEY,MCESSEC,MCFILE,MDC,MDIMG,RES
"RTN","HMPDJ03",101,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDJ03",102,0)
 K ^TMP("MDHSP",$J) S RES=""
"RTN","HMPDJ03",103,0)
 D EN1^MDPS1(.RES,DFN,BEG,END,MAX,"",0) ;RES=^TMP("MDHSP",$J)
"RTN","HMPDJ03",104,0)
 Q
"RTN","HMPDJ03",105,0)
 ;
"RTN","HMPDJ03",106,0)
MC1(ID) ; -- clinical procedure HMPX=^TMP("MDHSP",$J,HMPN)
"RTN","HMPDJ03",107,0)
 N X,Y,%DT,DATE,RTN,GBL,CONS,TIUN,HMPD,X0,PROC,HMPT,LOC,FAC
"RTN","HMPDJ03",108,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ03",109,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ03",110,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the clinical procedure domain"
"RTN","HMPDJ03",111,0)
 ;
"RTN","HMPDJ03",112,0)
 S RTN=$P(HMPX,U,3,4) Q:RTN="PRPRO^MDPS4"  ;skip non-CP items
"RTN","HMPDJ03",113,0)
 S X=$P(HMPX,U,6),%DT="TXS" D ^%DT Q:Y'>0  S DATE=Y
"RTN","HMPDJ03",114,0)
 S GBL=+$P(HMPX,U,2)_";"_$S(RTN="PR702^MDPS1":"MDD(702,",1:$$ROOT^HMPDMC(DFN,$P(HMPX,U,11),DATE))
"RTN","HMPDJ03",115,0)
 Q:'GBL  I $G(ID),ID'=GBL Q                ;unknown, or not requested
"RTN","HMPDJ03",116,0)
 ;
"RTN","HMPDJ03",117,0)
 S CONS=+$P(HMPX,U,13) D:CONS DOCLIST^GMRCGUIB(.HMPD,CONS) S X0=$G(HMPD(0)) ;=^GMR(123,ID,0)
"RTN","HMPDJ03",118,0)
 S TIUN=+$P(HMPX,U,14) S:TIUN TIUN=TIUN_U_$$RESOLVE^TIUSRVLO(TIUN)
"RTN","HMPDJ03",119,0)
 S PROC("localId")=GBL,PROC("category")="CP"
"RTN","HMPDJ03",120,0)
 S PROC("uid")=$$SETUID^HMPUTILS("procedure",DFN,GBL)
"RTN","HMPDJ03",121,0)
 S PROC("name")=$P(HMPX,U),PROC("dateTime")=$$JSONDT^HMPUTILS(DATE)
"RTN","HMPDJ03",122,0)
 S X=$P(HMPX,U,7) S:$L(X) PROC("interpretation")=X
"RTN","HMPDJ03",123,0)
 S PROC("kind")="Procedure"
"RTN","HMPDJ03",124,0)
 I CONS,X0 D
"RTN","HMPDJ03",125,0)
 . N HMPJ S PROC("requested")=$$JSONDT^HMPUTILS(+X0)
"RTN","HMPDJ03",126,0)
 . S PROC("consultUid")=$$SETUID^HMPUTILS("consult",DFN,CONS)
"RTN","HMPDJ03",127,0)
 . S PROC("orderUid")=$$SETUID^HMPUTILS("order",DFN,+$P(X0,U,3))
"RTN","HMPDJ03",128,0)
 . S PROC("statusName")=$$EXTERNAL^DILFD(123,8,,$P(X0,U,12))
"RTN","HMPDJ03",129,0)
 . S HMPJ=0 F  S HMPJ=$O(HMPD(50,HMPJ)) Q:HMPJ<1  S X=+$G(HMPD(50,HMPJ)) D
"RTN","HMPDJ03",130,0)
 .. D NOTE(X)
"RTN","HMPDJ03",131,0)
 .. S:'TIUN TIUN=X_U_$$RESOLVE^TIUSRVLO(X)
"RTN","HMPDJ03",132,0)
 I TIUN D
"RTN","HMPDJ03",133,0)
 . S X=$P(TIUN,U,5) I X D
"RTN","HMPDJ03",134,0)
 .. S PROC("providers",1,"providerUid")=$$SETUID^HMPUTILS("user",,+X)
"RTN","HMPDJ03",135,0)
 .. S PROC("providers",1,"providerName")=$P(X,";",3)
"RTN","HMPDJ03",136,0)
 . S:$P(TIUN,U,11) PROC("hasImages")="true"
"RTN","HMPDJ03",137,0)
 . K HMPT D EXTRACT^TIULQ(+TIUN,"HMPT",,".03;.05;1211",,,"I")
"RTN","HMPDJ03",138,0)
 . S X=+$G(HMPT(+TIUN,.03,"I")),PROC("encounterUid")=$$SETUID^HMPUTILS("visit",DFN,X)
"RTN","HMPDJ03",139,0)
 . S LOC=+$G(HMPT(+TIUN,1211,"I")) I LOC S LOC=LOC_U_$P($G(^SC(LOC,0)),U)
"RTN","HMPDJ03",140,0)
 . E  S X=$P(TIUN,U,6) S:$L(X) LOC=+$O(^SC("B",X,0))_U_X
"RTN","HMPDJ03",141,0)
 . S:LOC PROC("locationUid")=$$SETUID^HMPUTILS("location",,+LOC),PROC("locationName")=$P(LOC,U,2),FAC=$$FAC^HMPD(+LOC)
"RTN","HMPDJ03",142,0)
 . I '$D(PROC("statusName")) S X=+$G(HMPT(+TIUN,.05,"I")),PROC("statusName")=$S(X<6:"PARTIAL RESULTS",1:"COMPLETE")
"RTN","HMPDJ03",143,0)
 . I '$G(PROC("results",+TIUN)) D NOTE(+TIUN)
"RTN","HMPDJ03",144,0)
 ; if no consult or note/visit ...
"RTN","HMPDJ03",145,0)
 S:'$D(PROC("statusName")) PROC("statusName")="COMPLETE"
"RTN","HMPDJ03",146,0)
 I '$D(FAC) S X=$P(X0,U,21),FAC=$S(X:$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U),1:$$FAC^HMPD)
"RTN","HMPDJ03",147,0)
 D FACILITY^HMPUTILS(FAC,"PROC")
"RTN","HMPDJ03",148,0)
 S PROC("lastUpdateTime")=$$EN^HMPSTMP("procedure")
"RTN","HMPDJ03",149,0)
 S PROC("stampTime")=PROC("lastUpdateTime") ; RHL 20141231
"RTN","HMPDJ03",150,0)
 D ADD^HMPDJ("PROC","procedure")
"RTN","HMPDJ03",151,0)
 Q
"RTN","HMPDJ03",152,0)
 ;
"RTN","HMPDJ03",153,0)
NOTE(DA) ; -- add TIU note info
"RTN","HMPDJ03",154,0)
 N HMPT,TEXT
"RTN","HMPDJ03",155,0)
 D EXTRACT^TIULQ(DA,"HMPT",,.01)
"RTN","HMPDJ03",156,0)
 S PROC("results",DA,"uid")=$$SETUID^HMPUTILS("document",+$G(DFN),DA)
"RTN","HMPDJ03",157,0)
 S PROC("results",DA,"localTitle")=$G(HMPT(DA,.01,"E"))
"RTN","HMPDJ03",158,0)
 Q
"RTN","HMPDJ03",159,0)
 ;
"RTN","HMPDJ03",160,0)
MDC1(ID) ; -- clinical observation
"RTN","HMPDJ03",161,0)
 N GUID,CLIO,HMPC,HMPT,LOC,FAC,I,X,Y
"RTN","HMPDJ03",162,0)
 S GUID=$G(ID) Q:GUID=""  ;invalid GUID
"RTN","HMPDJ03",163,0)
 D QRYOBS^HMPDMDC("HMPC",GUID) Q:'$D(HMPC)  ;doesn't exist
"RTN","HMPDJ03",164,0)
 Q:$L($G(HMPC("PARENT_ID","E")))            ;PARENT also in list
"RTN","HMPDJ03",165,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ03",166,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ03",167,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the clinical observation domain"
"RTN","HMPDJ03",168,0)
 ;
"RTN","HMPDJ03",169,0)
 S CLIO("localId")=GUID,CLIO("uid")=$$SETUID^HMPUTILS("obs",DFN,GUID)
"RTN","HMPDJ03",170,0)
 S X=$G(HMPC("TERM_ID","I")) S:X CLIO("typeVuid")="urn:va:vuid:"_X
"RTN","HMPDJ03",171,0)
 S CLIO("typeCode")="urn:va:clioterminology:"_$G(HMPC("TERM_ID","GUID"))
"RTN","HMPDJ03",172,0)
 S CLIO("typeName")=$G(HMPC("TERM_ID","E"))
"RTN","HMPDJ03",173,0)
 S CLIO("result")=$G(HMPC("SVALUE","E"))
"RTN","HMPDJ03",174,0)
 S X=$G(HMPC("UNIT_ID","ABBV")) S:$L(X) CLIO("units")=X
"RTN","HMPDJ03",175,0)
 S X=$G(HMPC("ENTERED_DATE_TIME","I")),CLIO("entered")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ03",176,0)
 S X=$G(HMPC("OBSERVED_DATE_TIME","I")),CLIO("observed")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ03",177,0)
 D QRYTYPES^HMPDMDC("HMPT")
"RTN","HMPDJ03",178,0)
 F I=3,5 S X=$G(HMPT(I,"XML")) I $L($G(HMPC(X,"E"))) D
"RTN","HMPDJ03",179,0)
 . S Y=HMPT(I,"NAME"),Y=$S(Y="LOCATION":"bodySite",1:$$LOW^XLFSTR(Y))
"RTN","HMPDJ03",180,0)
 . S CLIO(Y_"Code")=HMPC(X,"I"),CLIO(Y_"Name")=HMPC(X,"E")
"RTN","HMPDJ03",181,0)
 F I=4,6,7 S X=$G(HMPT(I,"XML")) I $L($G(HMPC(X,"E"))) D
"RTN","HMPDJ03",182,0)
 . S CLIO("qualifiers",I,"type")=$$LOW^XLFSTR(HMPT(I,"NAME"))
"RTN","HMPDJ03",183,0)
 . S CLIO("qualifiers",I,"code")=HMPC(X,"I")
"RTN","HMPDJ03",184,0)
 . S CLIO("qualifiers",I,"name")=HMPC(X,"E")
"RTN","HMPDJ03",185,0)
 S X=$G(HMPC("RANGE","E")) I $L(X) D
"RTN","HMPDJ03",186,0)
 . S Y=$S(X="Out of Bounds Low":"<",X="Out of Bounds High":">",1:$E(X))
"RTN","HMPDJ03",187,0)
 . S CLIO("interpretationCode")="urn:hl7:observation-interpretation:"_Y
"RTN","HMPDJ03",188,0)
 . S CLIO("interpretationName")=$S(X="<":"Low off scale",X=">":"High off scale",1:X)
"RTN","HMPDJ03",189,0)
 ; X=$G(HMPC("STATUS","E")) S:$L(X) CLIO("resultStatus")=$S(X="unverified":"active",1:"complete")
"RTN","HMPDJ03",190,0)
 I $D(HMPC("SUPP_PAGE")) D  ;add set info
"RTN","HMPDJ03",191,0)
 . S CLIO("setID")=$G(HMPC("SUPP_PAGE","GUID"))
"RTN","HMPDJ03",192,0)
 . S CLIO("setName")=$G(HMPC("SUPP_PAGE","DISPLAY_NAME"))
"RTN","HMPDJ03",193,0)
 . S X=$G(HMPC("SUPP_PAGE","TYPE")) S:$L(X) CLIO("setType")=X
"RTN","HMPDJ03",194,0)
 . S X=$G(HMPC("SUPP_PAGE","ACTIVATED_DATE_TIME")) S:X CLIO("setStart")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ03",195,0)
 . S X=$G(HMPC("SUPP_PAGE","DEACTIVATED_DATE_TIME")) S:X CLIO("setStop")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ03",196,0)
 S CLIO("statusCode")="urn:va:observation-status:complete",CLIO("statusName")="complete"
"RTN","HMPDJ03",197,0)
 S LOC=$G(HMPC("HOSPITAL_LOCATION_ID","I")),FAC=$$FAC^HMPD(LOC)
"RTN","HMPDJ03",198,0)
 S CLIO("locationUid")=$$SETUID^HMPUTILS("location",,LOC)
"RTN","HMPDJ03",199,0)
 S CLIO("locationName")=$G(HMPC("HOSPITAL_LOCATION_ID","E"))
"RTN","HMPDJ03",200,0)
 D FACILITY^HMPUTILS(FAC,"CLIO")
"RTN","HMPDJ03",201,0)
 S X=$G(HMPC("COMMENT","E")) S:$L(X) CLIO("comment")=X
"RTN","HMPDJ03",202,0)
 S CLIO("lastUpdateTime")=$$EN^HMPSTMP("obs") ; RHL 20141231
"RTN","HMPDJ03",203,0)
 S CLIO("stampTime")=CLIO("lastUpdateTime") ; RHL 20141231
"RTN","HMPDJ03",204,0)
 D ADD^HMPDJ("CLIO","obs")
"RTN","HMPDJ03",205,0)
 Q
"RTN","HMPDJ04")
0^34^B70130990
"RTN","HMPDJ04",1,0)
HMPDJ04 ;SLC/MKB -- Appointments,Visits ;6/25/12  16:11
"RTN","HMPDJ04",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ04",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ04",4,0)
 ;
"RTN","HMPDJ04",5,0)
 ; External References          DBIA#
"RTN","HMPDJ04",6,0)
 ; -------------------          -----
"RTN","HMPDJ04",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDJ04",8,0)
 ; ^DGS(41.1                     3796
"RTN","HMPDJ04",9,0)
 ; ^DIC(42                      10039
"RTN","HMPDJ04",10,0)
 ; ^SC                          10040
"RTN","HMPDJ04",11,0)
 ; ^VA(200                      10060
"RTN","HMPDJ04",12,0)
 ; DIQ                           2056
"RTN","HMPDJ04",13,0)
 ; ICPTCOD                       1995
"RTN","HMPDJ04",14,0)
 ; PXAPI,^TMP("PXKENC"           1894
"RTN","HMPDJ04",15,0)
 ; SDAMA301                      4433
"RTN","HMPDJ04",16,0)
 ; XLFDT                        10103
"RTN","HMPDJ04",17,0)
 ; XUAF4                         2171
"RTN","HMPDJ04",18,0)
 ;
"RTN","HMPDJ04",19,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ04",20,0)
 ;
"RTN","HMPDJ04",21,0)
SDAM1 ; -- appointment ^TMP($J,"SDAMA301",DFN,HMPDT)
"RTN","HMPDJ04",22,0)
 N NODE,HLOC,APPT,X,STS,CLS,FAC,SV,PRV
"RTN","HMPDJ04",23,0)
 S NODE=$G(^TMP($J,"SDAMA301",DFN,HMPDT))
"RTN","HMPDJ04",24,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ04",25,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ04",26,0)
 S ERRMSG="A problem occurred converting a record for the appointment domain"
"RTN","HMPDJ04",27,0)
 ;
"RTN","HMPDJ04",28,0)
 S HLOC=$P(NODE,U,2),X="A;"_HMPDT_";"_+HLOC
"RTN","HMPDJ04",29,0)
 I $L($G(ID)),$P(ID,";",1,3)'=X Q
"RTN","HMPDJ04",30,0)
 S APPT("localId")=X,APPT("uid")=$$SETUID^HMPUTILS("appointment",DFN,X)
"RTN","HMPDJ04",31,0)
 S X=$P(NODE,U,10),APPT("typeCode")=$P(X,";"),APPT("typeName")=$P(X,";",2)
"RTN","HMPDJ04",32,0)
 S STS=$P(NODE,U,3),CLS=$S($E(STS)="I":"I",1:"O")
"RTN","HMPDJ04",33,0)
 S APPT("dateTime")=$$JSONDT^HMPUTILS(HMPDT)
"RTN","HMPDJ04",34,0)
 S:$L($P(NODE,U,6)) APPT("comment")=$P(NODE,U,6)
"RTN","HMPDJ04",35,0)
 S:$P(NODE,U,9) APPT("checkIn")=$$JSONDT^HMPUTILS($P(NODE,U,9))
"RTN","HMPDJ04",36,0)
 S:$P(NODE,U,11) APPT("checkOut")=$$JSONDT^HMPUTILS($P(NODE,U,11))
"RTN","HMPDJ04",37,0)
 I $L(ID,";")>3 S APPT("reasonName")=$P(ID,";",4),PRV=+$P(ID,";",5) ;from SDAM event
"RTN","HMPDJ04",38,0)
 S FAC=$$FAC^HMPD(+HLOC) D FACILITY^HMPUTILS(FAC,"APPT") I HLOC D
"RTN","HMPDJ04",39,0)
 . S APPT("locationName")=$P(HLOC,";",2)
"RTN","HMPDJ04",40,0)
 . S APPT("locationUid")=$$SETUID^HMPUTILS("location",,+HLOC)
"RTN","HMPDJ04",41,0)
 . S X=$P($G(^SC(+HLOC,0)),U,2) S:X]"" APPT("shortLocationName")=X
"RTN","HMPDJ04",42,0)
 . S X=$$AMIS^HMPDVSIT(+$P(NODE,U,13))
"RTN","HMPDJ04",43,0)
 . S:$L(X) APPT("stopCodeUid")="urn:va:stop-code:"_$P(X,U),APPT("stopCodeName")=$P(X,U,2)
"RTN","HMPDJ04",44,0)
 . S SV=$$GET1^DIQ(44,+HLOC_",",9.5,"I")
"RTN","HMPDJ04",45,0)
 . I SV S APPT("service")=$$SERV^HMPDSDAM(SV)
"RTN","HMPDJ04",46,0)
 . ;find default provider
"RTN","HMPDJ04",47,0)
 . S:'$G(PRV) PRV=+$$GET1^DIQ(44,+HLOC_",",16,"I") I 'PRV D
"RTN","HMPDJ04",48,0)
 .. N HMPP,I,FIRST
"RTN","HMPDJ04",49,0)
 .. D GETS^DIQ(44,+HLOC_",","2600*","I","HMPP")
"RTN","HMPDJ04",50,0)
 .. S FIRST=$O(HMPP(44.1,"")),I=""
"RTN","HMPDJ04",51,0)
 .. F  S I=$O(HMPP(44.1,I)) Q:I=""  I $G(HMPP(44.1,I,.02,"I")) S PRV=$G(HMPP(44.1,I,.01,"I")) Q
"RTN","HMPDJ04",52,0)
 .. I 'PRV,FIRST S PRV=$G(HMPP(44.1,FIRST,.01,"I"))
"RTN","HMPDJ04",53,0)
 I $G(PRV) S APPT("providers",1,"providerUid")=$$SETUID^HMPUTILS("user",,PRV),APPT("providers",1,"providerName")=$P($G(^VA(200,PRV,0)),U)
"RTN","HMPDJ04",54,0)
 S APPT("patientClassCode")="urn:va:patient-class:"_$S(CLS="I":"IMP",1:"AMB")
"RTN","HMPDJ04",55,0)
 S APPT("patientClassName")=$S(CLS="I":"Inpatient",1:"Ambulatory")
"RTN","HMPDJ04",56,0)
 S APPT("categoryCode")="urn:va:encounter-category:OV",APPT("categoryName")="Outpatient Visit"
"RTN","HMPDJ04",57,0)
 S APPT("appointmentStatus")=$P(STS,";",2)
"RTN","HMPDJ04",58,0)
 S APPT("lastUpdateTime")=$$EN^HMPSTMP("appointment") ;RHL 20150102
"RTN","HMPDJ04",59,0)
 S APPT("stampTime")=APPT("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ04",60,0)
 D ADD^HMPDJ("APPT","appointment")
"RTN","HMPDJ04",61,0)
 Q
"RTN","HMPDJ04",62,0)
 ;
"RTN","HMPDJ04",63,0)
DGS ; scheduled admissions [from APPOINTM^HMPDJ0]
"RTN","HMPDJ04",64,0)
 S HMPA=0 F  S HMPA=$O(^DGS(41.1,"B",DFN,HMPA)) Q:HMPA<1  D  Q:HMPI'<HMPMAX
"RTN","HMPDJ04",65,0)
 . S HMPX=$G(^DGS(41.1,HMPA,0))
"RTN","HMPDJ04",66,0)
 . I $L($G(ID)),+$P(ID,";",2)=+$P(HMPX,U,2) D DGS1(HMPA) Q
"RTN","HMPDJ04",67,0)
 . Q:$P(HMPX,U,13)  Q:$P(HMPX,U,17)  ;cancelled or admitted
"RTN","HMPDJ04",68,0)
 . S X=$P(HMPX,U,2) Q:X<HMPSTART!(X>HMPSTOP)  ;out of date range
"RTN","HMPDJ04",69,0)
 . D DGS1(HMPA)
"RTN","HMPDJ04",70,0)
 Q
"RTN","HMPDJ04",71,0)
 ;
"RTN","HMPDJ04",72,0)
DGS1(IFN) ; -- scheduled admission
"RTN","HMPDJ04",73,0)
 N ADM,X0,DATE,HLOC,FAC,SV,X
"RTN","HMPDJ04",74,0)
 S X0=$G(^DGS(41.1,+$G(IFN),0)) Q:X0=""  ;deleted
"RTN","HMPDJ04",75,0)
 ;
"RTN","HMPDJ04",76,0)
 S DATE=+$P(X0,U,2),HLOC=+$G(^DIC(42,+$P(X0,U,8),44))
"RTN","HMPDJ04",77,0)
 S X="H;"_DATE,ADM("localId")=X,ADM("uid")=$$SETUID^HMPUTILS("appointment",DFN,X)
"RTN","HMPDJ04",78,0)
 S ADM("dateTime")=$$JSONDT^HMPUTILS(DATE)
"RTN","HMPDJ04",79,0)
 S FAC=$$FAC^HMPD(+HLOC) D FACILITY^HMPUTILS(FAC,"ADM") I HLOC D
"RTN","HMPDJ04",80,0)
 . S HLOC=+HLOC_";"_$P($G(^SC(+HLOC,0)),U)
"RTN","HMPDJ04",81,0)
 . S ADM("uid")=ADM("uid")_";"_+HLOC
"RTN","HMPDJ04",82,0)
 . S ADM("locationName")=$P(HLOC,";",2)
"RTN","HMPDJ04",83,0)
 . S X=$P($G(^SC(+HLOC,0)),U,2) S:X]"" ADM("shortLocationName")=X
"RTN","HMPDJ04",84,0)
 . S ADM("locationUid")=$$SETUID^HMPUTILS("location",,+HLOC)
"RTN","HMPDJ04",85,0)
 . S X=$$GET1^DIQ(44,+HLOC_",",8,"I"),X=$$AMIS^HMPDVSIT(X)
"RTN","HMPDJ04",86,0)
 . S:$L(X) ADM("stopCodeUid")="urn:va:stop-code:"_$P(X,U),ADM("stopCodeName")=$P(X,U,2)
"RTN","HMPDJ04",87,0)
 . S SV=$$GET1^DIQ(44,+HLOC_",",9.5,"I")
"RTN","HMPDJ04",88,0)
 . I SV S ADM("service")=$$SERV^HMPDSDAM(SV)
"RTN","HMPDJ04",89,0)
 S X=+$P(X0,U,5) I X D
"RTN","HMPDJ04",90,0)
 . S ADM("providers",1,"providerUid")=$$SETUID^HMPUTILS("user",,X)
"RTN","HMPDJ04",91,0)
 . S ADM("providers",1,"providerName")=$P($G(^VA(200,X,0)),U)
"RTN","HMPDJ04",92,0)
 S ADM("patientClassCode")="urn:va:patient-class:IMP",ADM("patientClassName")="Inpatient"
"RTN","HMPDJ04",93,0)
 S ADM("categoryCode")="urn:va:encounter-category:AD",ADM("categoryName")="Admission"
"RTN","HMPDJ04",94,0)
 S ADM("appointmentStatus")=$S($P(X0,U,17):"ADMITTED",$P(X0,U,13):"CANCELLED",1:"SCHEDULED")
"RTN","HMPDJ04",95,0)
 S ADM("lastUpdateTime")=$$EN^HMPSTMP("adm") ;RHL 20150102
"RTN","HMPDJ04",96,0)
 S ADM("stampTime")=ADM("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ04",97,0)
 D ADD^HMPDJ("ADM","appointment")
"RTN","HMPDJ04",98,0)
 Q
"RTN","HMPDJ04",99,0)
 ;
"RTN","HMPDJ04",100,0)
VSIT1(ID) ; -- visit
"RTN","HMPDJ04",101,0)
 N VST,X0,X15,X,FAC,LOC,CATG,AMIS,INPT,DA,PS
"RTN","HMPDJ04",102,0)
 I $G(ID)?1"H"1.N D ADM^HMPDJ04A(ID) Q
"RTN","HMPDJ04",103,0)
 I $D(^EDP(230,"V",ID)),$L($T(EDP1^HMPDJ04E)) D EDP1^HMPDJ04E(ID) Q
"RTN","HMPDJ04",104,0)
 ; ENCEVENT^PXAPI(ID)
"RTN","HMPDJ04",105,0)
 ;
"RTN","HMPDJ04",106,0)
 S X0=$G(^AUPNVSIT(ID,0)),X15=$G(^(150)) Q:X0=""  ;pjh - quit if visit already deleted
"RTN","HMPDJ04",107,0)
 ; X0=$G(^TMP("PXKENC",$J,ID,"VST",ID,0)),X15=$G(^(150))
"RTN","HMPDJ04",108,0)
 ;Q:$P(X15,U,3)'="P"  Q:$P(X0,U,7)="E"  Q:$P(X0,U,12)  ;primary, not historical or child
"RTN","HMPDJ04",109,0)
 I $P(X0,U,7)="H" D ADM^HMPDJ04A(ID,+X0) Q
"RTN","HMPDJ04",110,0)
 S VST("localId")=ID,VST("uid")=$$SETUID^HMPUTILS("visit",DFN,ID)
"RTN","HMPDJ04",111,0)
 S VST("dateTime")=$$JSONDT^HMPUTILS(+X0)
"RTN","HMPDJ04",112,0)
 S:$P(X0,U,18) VST("checkOut")=$$JSONDT^HMPUTILS($P(X0,U,18))
"RTN","HMPDJ04",113,0)
 S:$P(X0,U,12) VST("parentUid")=$$SETUID^HMPUTILS("visit",DFN,$P(X0,U,12))
"RTN","HMPDJ04",114,0)
 S FAC=+$P(X0,U,6),CATG=$P(X0,U,7),LOC=+$P(X0,U,22)
"RTN","HMPDJ04",115,0)
 S:FAC X=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDJ04",116,0)
 S:'FAC X=$$FAC^HMPD(LOC) D FACILITY^HMPUTILS(X,"VST")
"RTN","HMPDJ04",117,0)
 S X=$S(CATG="H":"AD",CATG="C":"CR",CATG="T":"TC",CATG="N":"U",CATG="R":"NH","D^X"[CATG:"O",1:"OV")
"RTN","HMPDJ04",118,0)
 S VST("categoryCode")="urn:va:encounter-category:"_X
"RTN","HMPDJ04",119,0)
 S VST("categoryName")=$S(X="AD":"Admission",X="CR":"Chart Review",X="TC":"Phone Contact",X="U":"Unknown",X="NH":"Nursing Home",X="O":"Other",1:"Outpatient Visit")
"RTN","HMPDJ04",120,0)
 S INPT=$P(X15,U,2) S:INPT="" INPT=$S("H^I^R^D"[CATG:1,1:0)
"RTN","HMPDJ04",121,0)
 S X=$P(X15,U,3) S:$L(X) VST("encounterType")=X
"RTN","HMPDJ04",122,0)
 S X=$$CPT(ID) S:X VST("typeName")=$P($$CPT^ICPTCOD(X),U,3)
"RTN","HMPDJ04",123,0)
 I 'X S VST("typeName")=$S('INPT&LOC:$P($G(^SC(LOC,0)),U)_" VISIT",1:$$CATG^HMPDVSIT(CATG))
"RTN","HMPDJ04",124,0)
 S VST("patientClassCode")="urn:va:patient-class:"_$S(INPT:"IMP",1:"AMB")
"RTN","HMPDJ04",125,0)
 S VST("patientClassName")=$S(INPT:"Inpatient",1:"Ambulatory")
"RTN","HMPDJ04",126,0)
 S X=$P(X0,U,8) S:X AMIS=$$AMIS^HMPDVSIT(X) I LOC D
"RTN","HMPDJ04",127,0)
 . N L0 S L0=$G(^SC(LOC,0))
"RTN","HMPDJ04",128,0)
 . I 'X S AMIS=$$AMIS^HMPDVSIT($P(L0,U,7))
"RTN","HMPDJ04",129,0)
 . S VST("locationUid")=$$SETUID^HMPUTILS("location",,+LOC)
"RTN","HMPDJ04",130,0)
 . S X=$P($G(^SC(+LOC,0)),U,2) S:X]"" VST("shortLocationName")=X
"RTN","HMPDJ04",131,0)
 . S VST("locationName")=$P(L0,U),VST("locationOos")=$S(+$G(^SC(+LOC,"OOS")):"true",1:"false")
"RTN","HMPDJ04",132,0)
 . S X=$$SERV^HMPDVSIT($P(L0,U,20)) S:$L(X) VST("service")=X
"RTN","HMPDJ04",133,0)
 S:$D(AMIS) VST("stopCodeUid")="urn:va:stop-code:"_$P(AMIS,U),VST("stopCodeName")=$P(AMIS,U,2)
"RTN","HMPDJ04",134,0)
 S X=$$POV(ID) S:$L(X) VST("reasonUid")=$$SETNCS^HMPUTILS("icd",$P(X,U)),VST("reasonName")=$P(X,U,2)
"RTN","HMPDJ04",135,0)
 ; provider(s)
"RTN","HMPDJ04",136,0)
 S DA=0 F  S DA=$O(^AUPNVPRV("AD",ID,DA)) Q:DA<1  D
"RTN","HMPDJ04",137,0)
 . S X0=$G(^AUPNVPRV(DA,0))
"RTN","HMPDJ04",138,0)
 . I $P(X0,U,4)="P" D PROV("VST",DA,+X0,"P",1) Q  ;primary
"RTN","HMPDJ04",139,0)
 . D:'$D(PS(+X0)) PROV("VST",DA,+X0,"S")          ;secondary
"RTN","HMPDJ04",140,0)
 . S PS(+X0)=""                                   ; (no duplicates)
"RTN","HMPDJ04",141,0)
 K ^TMP("PXKENC",$J,ID)
"RTN","HMPDJ04",142,0)
 S VST("lastUpdateTime")=$$EN^HMPSTMP("visit") ;RHL 20150103
"RTN","HMPDJ04",143,0)
 S VST("stampTime")=VST("lastUpdateTime") ; RHL 20150103
"RTN","HMPDJ04",144,0)
 D ADD^HMPDJ("VST","visit")
"RTN","HMPDJ04",145,0)
 Q
"RTN","HMPDJ04",146,0)
 ;
"RTN","HMPDJ04",147,0)
CPT(VISIT) ; -- Return CPT code of encounter type
"RTN","HMPDJ04",148,0)
 N DA,Y,X S Y=""
"RTN","HMPDJ04",149,0)
 S DA=0 F  S DA=$O(^AUPNVCPT("AD",VISIT,DA)) Q:DA<1  D  Q:$L(Y)
"RTN","HMPDJ04",150,0)
 . S X=$P($G(^AUPNVCPT(DA,0)),U) I X?1"992"2N S Y=X Q
"RTN","HMPDJ04",151,0)
 Q Y
"RTN","HMPDJ04",152,0)
 ;
"RTN","HMPDJ04",153,0)
POV(VISIT) ; -- return the primary Purpose of Visit as ICD^ProviderNarrative
"RTN","HMPDJ04",154,0)
 N DA,Y,X,X0,ICD S Y=""
"RTN","HMPDJ04",155,0)
 S DA=0 F  S DA=$O(^AUPNVPOV("AD",VISIT,DA)) Q:DA<1  D  Q:$L(Y)
"RTN","HMPDJ04",156,0)
 . S X0=$G(^AUPNVPOV(DA,0)) Q:$P(X0,U,12)'="P"
"RTN","HMPDJ04",157,0)
 . S X=+$P(X0,U,4),ICD=$$ICD^HMPDVSIT(+X0)
"RTN","HMPDJ04",158,0)
 . S Y=ICD_U_$$EXTERNAL^DILFD(9000010.07,.04,,X)
"RTN","HMPDJ04",159,0)
 Q Y
"RTN","HMPDJ04",160,0)
 ;
"RTN","HMPDJ04",161,0)
PROV(ARR,I,IEN,ROLE,PRIM) ; -- add providers
"RTN","HMPDJ04",162,0)
 S @ARR@("providers",I,"providerUid")=$$SETUID^HMPUTILS("user",,+IEN)
"RTN","HMPDJ04",163,0)
 S @ARR@("providers",I,"providerName")=$P($G(^VA(200,+IEN,0)),U)
"RTN","HMPDJ04",164,0)
 S @ARR@("providers",I,"role")=ROLE
"RTN","HMPDJ04",165,0)
 S:$G(PRIM) @ARR@("providers",I,"primary")="true"
"RTN","HMPDJ04",166,0)
 Q
"RTN","HMPDJ04",167,0)
 ;
"RTN","HMPDJ04",168,0)
NAME(IEN) ; -- Return a string 'name' for the visit
"RTN","HMPDJ04",169,0)
 N Y,X0,LOC,DATE
"RTN","HMPDJ04",170,0)
 S X0=$G(^AUPNVSIT(+$G(IEN),0)),Y=""
"RTN","HMPDJ04",171,0)
 S DATE=+X0,LOC=+$P(X0,U,22) S:LOC LOC=$P($G(^SC(LOC,0)),U)_" "
"RTN","HMPDJ04",172,0)
 S Y=LOC_$$FMTE^XLFDT(DATE,"1D") ;Mon DD, YYYY
"RTN","HMPDJ04",173,0)
 Q Y
"RTN","HMPDJ04",174,0)
 ;
"RTN","HMPDJ04",175,0)
FAC(IEN)  ; -- Return Facility for the visit
"RTN","HMPDJ04",176,0)
 Q:'+$G(IEN) ""
"RTN","HMPDJ04",177,0)
 N FAC S FAC=+$$GET1^DIQ(9000010,IEN_",",.06,"I")
"RTN","HMPDJ04",178,0)
 Q:FAC $$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDJ04",179,0)
 S FAC=+$$GET1^DIQ(9000010,IEN_",",.22,"I")
"RTN","HMPDJ04",180,0)
 Q $$FAC^HMPD(FAC)
"RTN","HMPDJ04",181,0)
 ;
"RTN","HMPDJ04",182,0)
STCODE(IEN)  ;  -- Return stop code information for the visit Q:'+$G(IEN) ""
"RTN","HMPDJ04",183,0)
 Q:'+$G(IEN) ""
"RTN","HMPDJ04",184,0)
 N STCODE,LIEN S STCODE=+$$GET1^DIQ(9000010,IEN_",",.08,"I")
"RTN","HMPDJ04",185,0)
 Q:STCODE $$AMIS^HMPDVSIT(STCODE)
"RTN","HMPDJ04",186,0)
 S LIEN=+$$GET1^DIQ(9000010,IEN_",",.22,"I")
"RTN","HMPDJ04",187,0)
 I LIEN S STCODE=+$$GET1^DIQ(44,LIEN_",",8,"I")
"RTN","HMPDJ04",188,0)
 Q:STCODE $$AMIS^HMPDVSIT(STCODE)
"RTN","HMPDJ04",189,0)
 Q ""
"RTN","HMPDJ04",190,0)
 ;
"RTN","HMPDJ04",191,0)
STOPCODE(X,Y)  ;  -- Return stop code info for JSON
"RTN","HMPDJ04",192,0)
 S @Y@("stopCodeUid")="urn:va:stop-code:"_$P(X,U)
"RTN","HMPDJ04",193,0)
 S @Y@("stopCodeName")=$P(X,U,2)
"RTN","HMPDJ04",194,0)
 Q
"RTN","HMPDJ04",195,0)
 ;
"RTN","HMPDJ04A")
0^35^B50417297
"RTN","HMPDJ04A",1,0)
HMPDJ04A ;SLC/MKB -- Admissions,PTF ;7/25/13
"RTN","HMPDJ04A",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ04A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ04A",4,0)
 ;
"RTN","HMPDJ04A",5,0)
 ; External References          DBIA#
"RTN","HMPDJ04A",6,0)
 ; -------------------          -----
"RTN","HMPDJ04A",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDJ04A",8,0)
 ; ^DGPM                         1865
"RTN","HMPDJ04A",9,0)
 ; ^DIC(42                      10039
"RTN","HMPDJ04A",10,0)
 ; ^DPT                         10035
"RTN","HMPDJ04A",11,0)
 ; ^SC                          10040
"RTN","HMPDJ04A",12,0)
 ; ^VA(200                      10060
"RTN","HMPDJ04A",13,0)
 ; DGPTFAPI                      3157
"RTN","HMPDJ04A",14,0)
 ; DIC                           2051
"RTN","HMPDJ04A",15,0)
 ; DILFD                         2055
"RTN","HMPDJ04A",16,0)
 ; DIQ                           2056
"RTN","HMPDJ04A",17,0)
 ; ICDCODE                       3990
"RTN","HMPDJ04A",18,0)
 ; ICPTCOD                       1995
"RTN","HMPDJ04A",19,0)
 ; VADPT                        10061
"RTN","HMPDJ04A",20,0)
 ; XUAF4                         2171
"RTN","HMPDJ04A",21,0)
 ;
"RTN","HMPDJ04A",22,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ04A",23,0)
 ;
"RTN","HMPDJ04A",24,0)
ADM(ID,DATE) ; -- admission [from VSIT1]
"RTN","HMPDJ04A",25,0)
 N ADM,VADMVT,VAIP,VAERR,MVT,SPEC,HLOC,FAC,ICD,I
"RTN","HMPDJ04A",26,0)
 S ID=$G(ID),DATE=+$G(DATE) Q:ID=""  ;Q:DATE<1
"RTN","HMPDJ04A",27,0)
 I ID S VAIP("D")=DATE,VST=+ID
"RTN","HMPDJ04A",28,0)
 I ID?1"H"1.N S VAIP("E")=+$E(ID,2,99),VST=0
"RTN","HMPDJ04A",29,0)
 D IN5^VADPT Q:'$G(VAIP(1))  ;deleted
"RTN","HMPDJ04A",30,0)
 S VADMVT=+$G(VAIP(13)),ID="H"_VADMVT
"RTN","HMPDJ04A",31,0)
 S ADM("localId")=ID,ADM("uid")=$$SETUID^HMPUTILS("visit",DFN,ID)
"RTN","HMPDJ04A",32,0)
 S:'DATE DATE=+$G(VAIP(13,1)) S:'VST VST=$$VISIT(DFN,DATE)
"RTN","HMPDJ04A",33,0)
 S (ADM("dateTime"),ADM("stay","arrivalDateTime"))=$$JSONDT^HMPUTILS(DATE)
"RTN","HMPDJ04A",34,0)
 S:$L($P(VAIP(6),U,2)) ADM("roomBed")=$P(VAIP(6),U,2)
"RTN","HMPDJ04A",35,0)
 S MVT=13,I=0 I VADMVT=$G(^DPT(DFN,.105)) D  ;if current admission,
"RTN","HMPDJ04A",36,0)
 . S ADM("current")="true",MVT=14            ; use last movement info
"RTN","HMPDJ04A",37,0)
 . S X=$G(^DPT(DFN,.101)) S:$L(X) ADM("roomBed")=X
"RTN","HMPDJ04A",38,0)
 . K HMPADMIT                                ;kill flag from HMPDJ0
"RTN","HMPDJ04A",39,0)
 S SPEC=$G(VAIP(MVT,6)),ADM("specialty")=$P(SPEC,U,2)
"RTN","HMPDJ04A",40,0)
 S X=$$SERV^HMPDVSIT(+SPEC),ADM("service")=X
"RTN","HMPDJ04A",41,0)
 S HLOC=+$G(^DIC(42,+$G(VAIP(MVT,4)),44)),FAC=$$FAC^HMPD(+HLOC) I HLOC D
"RTN","HMPDJ04A",42,0)
 . S ADM("locationUid")=$$SETUID^HMPUTILS("location",,+HLOC)
"RTN","HMPDJ04A",43,0)
 . S X=$P($G(^SC(+HLOC,0)),U,2) S:X]"" ADM("shortLocationName")=X
"RTN","HMPDJ04A",44,0)
 . S ADM("locationName")=$P($G(^SC(HLOC,0)),U)
"RTN","HMPDJ04A",45,0)
 . S X=$$AMIS^HMPDVSIT($P($G(^SC(HLOC,0)),U,7))
"RTN","HMPDJ04A",46,0)
 . S:$L($G(X)) ADM("stopCodeUid")="urn:va:stop-code:"_$P(X,U),ADM("stopCodeName")=$P(X,U,2)
"RTN","HMPDJ04A",47,0)
 . S ADM("summary")="${"_ADM("service")_"}:"_ADM("locationName")
"RTN","HMPDJ04A",48,0)
 D FACILITY^HMPUTILS(FAC,"ADM")
"RTN","HMPDJ04A",49,0)
 S ADM("categoryCode")="urn:va:encounter-category:AD",ADM("categoryName")="Admission"
"RTN","HMPDJ04A",50,0)
 S ADM("patientClassCode")="urn:va:patient-class:IMP",ADM("patientClassName")="Inpatient"
"RTN","HMPDJ04A",51,0)
 I $G(VAIP(17)) S ADM("stay","dischargeDateTime")=$$JSONDT^HMPUTILS(+$G(VAIP(17,1)))
"RTN","HMPDJ04A",52,0)
 I $G(VAIP(18)) S I=I+1 D PROV("ADM",I,+VAIP(18),"A")         ;attending
"RTN","HMPDJ04A",53,0)
 I $G(VAIP(MVT,5)) S I=I+1 D PROV("ADM",I,+VAIP(MVT,5),"P",1) ;primary
"RTN","HMPDJ04A",54,0)
 S ICD=$$POV^HMPDJ04(VST) S:'ICD ICD=$$PTF^HMPDVSIT(DFN,VAIP(12)) ;PTF>ICD
"RTN","HMPDJ04A",55,0)
 I $L(ICD)<2 S ADM("reasonName")=$G(VAIP(MVT,7))
"RTN","HMPDJ04A",56,0)
 E  S ADM("reasonUid")=$$SETNCS^HMPUTILS("icd",ICD),ADM("reasonName")=$P(ICD,U,2)
"RTN","HMPDJ04A",57,0)
 S X=$$CPT^HMPDJ04(VST),ADM("typeName")=$S(X:$P($$CPT^ICPTCOD(X),U,3),1:$$CATG^HMPDVSIT("H"))
"RTN","HMPDJ04A",58,0)
 D MVT(VADMVT)   ;sub-movements
"RTN","HMPDJ04A",59,0)
 ; TIU(VST,.ADM) ;notes/summary
"RTN","HMPDJ04A",60,0)
 ; Next 2 lines added for visits whose IDs start with an "H".  JD - 1/26/15
"RTN","HMPDJ04A",61,0)
 S ADM("lastUpdateTime")=$$EN^HMPSTMP("adm") ;RHL 20150102
"RTN","HMPDJ04A",62,0)
 S ADM("stampTime")=ADM("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ04A",63,0)
 D ADD^HMPDJ("ADM","visit")
"RTN","HMPDJ04A",64,0)
 Q
"RTN","HMPDJ04A",65,0)
 ;
"RTN","HMPDJ04A",66,0)
TIU(VISIT,ARR) ; -- add notes to ARR("document")
"RTN","HMPDJ04A",67,0)
 N X,Y,I,HMPX,LT,NT,DA,CNT,HMPY
"RTN","HMPDJ04A",68,0)
 D FIND^DIC(8925,,.01,"QX",+$G(VISIT),,"V",,,"HMPX")
"RTN","HMPDJ04A",69,0)
 S Y="",(I,CNT)=0
"RTN","HMPDJ04A",70,0)
 F  S I=$O(HMPX("DILIST",1,I)) Q:I<1  D
"RTN","HMPDJ04A",71,0)
 . S LT=$G(HMPX("DILIST","ID",I,.01)) Q:$P(LT," ")="Addendum"
"RTN","HMPDJ04A",72,0)
 . S DA=$G(HMPX("DILIST",2,I))
"RTN","HMPDJ04A",73,0)
 . S NT=$$GET1^DIQ(8925,+DA_",",".01:1501")
"RTN","HMPDJ04A",74,0)
 . S CNT=CNT+1,ARR("documents",CNT,"uid")=$$SETUID^HMPUTILS("document",DFN,+DA)
"RTN","HMPDJ04A",75,0)
 . S ARR("documents",CNT,"localTitle")=LT
"RTN","HMPDJ04A",76,0)
 . S:$L(NT) ARR("documents",CNT,"nationalTitle")=NT
"RTN","HMPDJ04A",77,0)
 Q
"RTN","HMPDJ04A",78,0)
 ;
"RTN","HMPDJ04A",79,0)
PROV(ARR,I,IEN,ROLE,PRIM) ; -- add providers
"RTN","HMPDJ04A",80,0)
 S @ARR@("providers",I,"providerUid")=$$SETUID^HMPUTILS("user",,+IEN)
"RTN","HMPDJ04A",81,0)
 S @ARR@("providers",I,"providerName")=$P($G(^VA(200,+IEN,0)),U)
"RTN","HMPDJ04A",82,0)
 S @ARR@("providers",I,"role")=ROLE
"RTN","HMPDJ04A",83,0)
 S:$G(PRIM) @ARR@("providers",I,"primary")="true"
"RTN","HMPDJ04A",84,0)
 Q
"RTN","HMPDJ04A",85,0)
 ;
"RTN","HMPDJ04A",86,0)
MVT(CA) ; -- add movements to ADM("movement",i,"attribute")
"RTN","HMPDJ04A",87,0)
 N DATE,DA,CNT,X S (DATE,CNT)=0
"RTN","HMPDJ04A",88,0)
 F  S DATE=$O(^DGPM("APCA",DFN,CA,DATE)) Q:DATE<1  S DA=+$O(^(DATE,0)) I DA'=CA D
"RTN","HMPDJ04A",89,0)
 . S X0=$G(^DGPM(DA,0)),CNT=CNT+1
"RTN","HMPDJ04A",90,0)
 . S ADM("movements",CNT,"localId")=DA
"RTN","HMPDJ04A",91,0)
 . S ADM("movements",CNT,"dateTime")=$$JSONDT^HMPUTILS(DATE)
"RTN","HMPDJ04A",92,0)
 . S ADM("movements",CNT,"movementType")=$$EXTERNAL^DILFD(405,.02,,$P(X0,U,2))
"RTN","HMPDJ04A",93,0)
 . S X=+$P(X0,U,19) I X D
"RTN","HMPDJ04A",94,0)
 .. S ADM("movements",CNT,"providerUid")=$$SETUID^HMPUTILS("user",,X)
"RTN","HMPDJ04A",95,0)
 .. S ADM("movements",CNT,"providerName")=$P($G(^VA(200,X,0)),U)
"RTN","HMPDJ04A",96,0)
 . S X=+$P(X0,U,9)
"RTN","HMPDJ04A",97,0)
 . S:X ADM("movements",CNT,"specialty")=$$EXTERNAL^DILFD(405,.09,,X)
"RTN","HMPDJ04A",98,0)
 . S HLOC=+$G(^DIC(42,+$P(X0,U,6),44)),FAC=$$FAC^HMPD(HLOC) I HLOC D
"RTN","HMPDJ04A",99,0)
 .. S ADM("movements",CNT,"locationUid")=$$SETUID^HMPUTILS("location",,HLOC)
"RTN","HMPDJ04A",100,0)
 .. S ADM("movements",CNT,"locationName")=$P($G(^SC(HLOC,0)),U)
"RTN","HMPDJ04A",101,0)
 Q
"RTN","HMPDJ04A",102,0)
 ;
"RTN","HMPDJ04A",103,0)
PTFA(HMPLID) ; -- find ID in ^PXRMINDX(45) and call PTF1 if successful
"RTN","HMPDJ04A",104,0)
 ;Purpose - Build ^TMP("HMPPX") from ^PXRMINDX(45,HMPISYS,"PNI",DFN)
"RTN","HMPDJ04A",105,0)
 ;
"RTN","HMPDJ04A",106,0)
 ;Called by - PTF^HMPDJ0 (if HMPID is set)
"RTN","HMPDJ04A",107,0)
 ;
"RTN","HMPDJ04A",108,0)
 ;Assumptions -
"RTN","HMPDJ04A",109,0)
 ;1. ID is being passed and DFN variable exists
"RTN","HMPDJ04A",110,0)
 ;2. ^TMP("HMPPX") does not already exist
"RTN","HMPDJ04A",111,0)
 ;
"RTN","HMPDJ04A",112,0)
 ;              
"RTN","HMPDJ04A",113,0)
 ;Modification History -
"RTN","HMPDJ04A",114,0)
 ;US5630 (TW)  1. HMPISYS can be either "ICD" (ICD-9) or "10D" (ICD-10)
"RTN","HMPDJ04A",115,0)
 ;             2. Namespaced variables and enhanced newing
"RTN","HMPDJ04A",116,0)
 ; 
"RTN","HMPDJ04A",117,0)
 N HMPLEN,HMPTYP,HMPID,HMPISYS,HMPTYP,HMPDX,HMPDT,HMPITEM,HMPRDT,HMPX
"RTN","HMPDJ04A",118,0)
 S HMPLEN=$L(HMPLID,";"),HMPTYP=$P(HMPLID,";",HMPLEN),HMPID=$P(HMPLID,";",1,HMPLEN-1)
"RTN","HMPDJ04A",119,0)
 ;Get ICD System from ^PXRMINDX Xref and loop for remaining subscripts
"RTN","HMPDJ04A",120,0)
 S HMPISYS="" F  S HMPISYS=$O(^PXRMINDX(45,HMPISYS)) Q:HMPISYS=""  D
"RTN","HMPDJ04A",121,0)
 . I '$D(^PXRMINDX(45,HMPISYS,"PNI",+$G(DFN),HMPTYP)) Q
"RTN","HMPDJ04A",122,0)
 . S HMPDX="" F  S HMPDX=$O(^PXRMINDX(45,HMPISYS,"PNI",+$G(DFN),HMPTYP,HMPDX)) Q:HMPDX=""  D
"RTN","HMPDJ04A",123,0)
 .. S HMPDT=0  F  S HMPDT=$O(^PXRMINDX(45,HMPISYS,"PNI",+$G(DFN),HMPTYP,HMPDX,HMPDT)) Q:HMPDT=""  D
"RTN","HMPDJ04A",124,0)
 ... S HMPITEM=""  F  S HMPITEM=$O(^PXRMINDX(45,HMPISYS,"PNI",+$G(DFN),HMPTYP,HMPDX,HMPDT,HMPITEM)) Q:HMPITEM=""  D
"RTN","HMPDJ04A",125,0)
 .... I HMPITEM'[HMPID Q
"RTN","HMPDJ04A",126,0)
 .... S HMPRDT=9999999-HMPDT
"RTN","HMPDJ04A",127,0)
 .... S HMPX=HMPDX_U_HMPDT_U_HMPISYS
"RTN","HMPDJ04A",128,0)
 .... S ^TMP("HMPPX",$J,HMPRDT,HMPLID)=HMPX
"RTN","HMPDJ04A",129,0)
 Q:'$D(^TMP("HMPPX",$J))
"RTN","HMPDJ04A",130,0)
 D PTF1
"RTN","HMPDJ04A",131,0)
 K ^TMP("HMPPX",$J)
"RTN","HMPDJ04A",132,0)
 Q
"RTN","HMPDJ04A",133,0)
 ;
"RTN","HMPDJ04A",134,0)
PTF1 ; Set PTF data into PTF array
"RTN","HMPDJ04A",135,0)
 ;Purpose - Get data from ^TMP("HMPPX"), lookup addl PTF, set into PTF array and ^TMP
"RTN","HMPDJ04A",136,0)
 ;
"RTN","HMPDJ04A",137,0)
 ;Called by - PTFA^HMPDJ04A if HMPID is set, otherwise PTF^HMPDJ0
"RTN","HMPDJ04A",138,0)
 ;
"RTN","HMPDJ04A",139,0)
 ;Assumptions -
"RTN","HMPDJ04A",140,0)
 ;1. HMPLID (local ID) is being passed and DFN,HMPRDT variables exist
"RTN","HMPDJ04A",141,0)
 ;2. ^TMP("HMPPX",$J,HMPRDT,ID)=DxCode^[Discharge]Date exists
"RTN","HMPDJ04A",142,0)
 ;
"RTN","HMPDJ04A",143,0)
 ;Modification History -
"RTN","HMPDJ04A",144,0)
 ;US5630 (TW)- HMPISYS can be either "ICD9" or "10D" (ICD-10)
"RTN","HMPDJ04A",145,0)
 ;
"RTN","HMPDJ04A",146,0)
 N HMPTMP,PTF,HMPP,HMPTYP,HMPDIS,VAIN,HMPADM,VAINDT,HMPLOC,HMPFAC,HMPX,HMPISYS
"RTN","HMPDJ04A",147,0)
 S HMPTMP=$G(^TMP("HMPPX",$J,HMPRDT,HMPLID))
"RTN","HMPDJ04A",148,0)
 S PTF("localId")=HMPLID
"RTN","HMPDJ04A",149,0)
 S PTF("uid")=$$SETUID^HMPUTILS("ptf",DFN,HMPLID)
"RTN","HMPDJ04A",150,0)
 S HMPP=$L(HMPLID,";")
"RTN","HMPDJ04A",151,0)
 S HMPTYP=$P(HMPLID,";",HMPP)
"RTN","HMPDJ04A",152,0)
 I HMPTYP="DXLS" S PTF("principalDx")="true"  ; Is this the principal dx?
"RTN","HMPDJ04A",153,0)
 I $P(HMPTYP," ")="M" Q  ; Quit if movement dx
"RTN","HMPDJ04A",154,0)
 S HMPDIS=$P(HMPTMP,U,2)
"RTN","HMPDJ04A",155,0)
 I HMPDIS S VAINDT=HMPDIS-.0001
"RTN","HMPDJ04A",156,0)
 D INP^VADPT  ; Get inpatient VAIN array
"RTN","HMPDJ04A",157,0)
 I '$G(VAIN(1)) Q  ; Quit if not inpatient
"RTN","HMPDJ04A",158,0)
 ;US5630 - TW - Extract Calculated DRG for PTF
"RTN","HMPDJ04A",159,0)
 S PTF("drg")=$$GET1^DIQ(45,+HMPLID_",",9,"")
"RTN","HMPDJ04A",160,0)
 S PTF("admissionUid")=$$SETUID^HMPUTILS("visit",DFN,"H"_VAIN(1))
"RTN","HMPDJ04A",161,0)
 S HMPADM=+$G(VAIN(7))  ; Admission date
"RTN","HMPDJ04A",162,0)
 S HMPLOC=+$G(^DIC(42,+$G(VAIN(4)),44))  ; Get location
"RTN","HMPDJ04A",163,0)
 S:HMPADM PTF("arrivalDateTime")=$$JSONDT^HMPUTILS(HMPADM)
"RTN","HMPDJ04A",164,0)
 S:HMPDIS PTF("dischargeDateTime")=$$JSONDT^HMPUTILS(HMPDIS)
"RTN","HMPDJ04A",165,0)
 S HMPFAC=$$FAC^HMPD(HMPLOC) D:HMPFAC FACILITY^HMPUTILS(HMPFAC,"PTF")
"RTN","HMPDJ04A",166,0)
 S PTF("lastUpdateTime")=$$EN^HMPSTMP("ptf") ;RHL 20150102
"RTN","HMPDJ04A",167,0)
 S PTF("stampTime")=PTF("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ04A",168,0)
 ;US5630 - TW - Check for ICD Coding System
"RTN","HMPDJ04A",169,0)
 S HMPDX=$P(HMPTMP,U)
"RTN","HMPDJ04A",170,0)
 S HMPISYS=$P(HMPTMP,U,3)
"RTN","HMPDJ04A",171,0)
 S HMPISYS=$S(HMPISYS="ICD":1,"ICP":2,"10D":30,"10P":31,1:1)  ; Identify ICD coding system for correct lookup
"RTN","HMPDJ04A",172,0)
 S HMPX=$$ICDDX^ICDEX(HMPDX,"",HMPISYS)
"RTN","HMPDJ04A",173,0)
 S PTF("icdCode")=$$SETNCS^HMPUTILS("icd",$P(HMPX,U,2))
"RTN","HMPDJ04A",174,0)
 S PTF("icdName")=$P(HMPX,U,4)
"RTN","HMPDJ04A",175,0)
 D ADD^HMPDJ("PTF","ptf")
"RTN","HMPDJ04A",176,0)
 Q
"RTN","HMPDJ04A",177,0)
 ;
"RTN","HMPDJ04A",178,0)
VISIT(DFN,DATE) ; -- Return visit# for admission
"RTN","HMPDJ04A",179,0)
 N X,Y
"RTN","HMPDJ04A",180,0)
 S X=9999999-$P(DATE,".")_"."_$P(DATE,".",2)
"RTN","HMPDJ04A",181,0)
 S Y=+$O(^AUPNVSIT("AAH",DFN,X,0))
"RTN","HMPDJ04A",182,0)
 Q Y
"RTN","HMPDJ04E")
0^36^B10885668
"RTN","HMPDJ04E",1,0)
HMPDJ04E ;SLC/MKB -- EDIS ;6/25/12  16:11
"RTN","HMPDJ04E",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ04E",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ04E",4,0)
 ;
"RTN","HMPDJ04E",5,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ04E",6,0)
 ;
"RTN","HMPDJ04E",7,0)
 ;
"RTN","HMPDJ04E",8,0)
EDP1(ID) ; -- ED visit
"RTN","HMPDJ04E",9,0)
 N DA,EDP,X0,VST,FAC,LOC,LOC0,X,I,ICD
"RTN","HMPDJ04E",10,0)
 S DA=+$O(^EDP(230,"V",+$G(ID),0)) Q:DA<1
"RTN","HMPDJ04E",11,0)
 S EDP=$G(^EDP(230,DA,0)),X0=$G(^AUPNVSIT(ID,0))
"RTN","HMPDJ04E",12,0)
 ;
"RTN","HMPDJ04E",13,0)
 S VST("localId")=ID,VST("uid")=$$SETUID^HMPUTILS("visit",DFN,ID)
"RTN","HMPDJ04E",14,0)
 S VST("dateTime")=$$JSONDT^HMPUTILS(+X0)
"RTN","HMPDJ04E",15,0)
 S:$P(EDP,U,8) VST("stay","arrivalDateTime")=$$JSONDT^HMPUTILS($P(EDP,U,8))
"RTN","HMPDJ04E",16,0)
 S:$P(EDP,U,9) VST("stay","dischargeDateTime")=$$JSONDT^HMPUTILS($P(EDP,U,9))
"RTN","HMPDJ04E",17,0)
 S FAC=+$P(EDP,U,2),LOC=+$P(EDP,U,14),LOC0=$S(LOC:$G(^SC(LOC,0)),1:"")
"RTN","HMPDJ04E",18,0)
 S:FAC X=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDJ04E",19,0)
 S:'FAC X=$$FAC^HMPD(LOC) D FACILITY^HMPUTILS(X,"VST")
"RTN","HMPDJ04E",20,0)
 S VST("categoryCode")="urn:va:encounter-category:OV"
"RTN","HMPDJ04E",21,0)
 S VST("categoryName")="Outpatient Visit"
"RTN","HMPDJ04E",22,0)
 S VST("patientClassCode")="urn:va:patient-class:EMER"
"RTN","HMPDJ04E",23,0)
 S VST("patientClassName")="Emergency"
"RTN","HMPDJ04E",24,0)
 ;
"RTN","HMPDJ04E",25,0)
 S X=$$CPT^HMPDJ04(ID) S:X VST("typeName")=$P($$CPT^ICPTCOD(X),U,3)
"RTN","HMPDJ04E",26,0)
 I 'X S VST("typeName")=$S(LOC:$P(LOC0,U)_" VISIT",1:"EMERGENCY")
"RTN","HMPDJ04E",27,0)
 S X=$P(X0,U,8) S:X AMIS=$$AMIS^HMPDVSIT(X) I LOC D
"RTN","HMPDJ04E",28,0)
 . I 'X S AMIS=$$AMIS^HMPDVSIT($P(LOC0,U,7))
"RTN","HMPDJ04E",29,0)
 . S VST("locationUid")=$$SETUID^HMPUTILS("location",,+LOC)
"RTN","HMPDJ04E",30,0)
 . S VST("locationName")=$P(LOC0,U)
"RTN","HMPDJ04E",31,0)
 . S X=$$SERV^HMPDVSIT($P(LOC0,U,20)) Q:X=""
"RTN","HMPDJ04E",32,0)
 . S:$L(X) VST("service")=X,VST("summary")="${"_VST("service")_"}:"_$P(LOC0,U)
"RTN","HMPDJ04E",33,0)
 S:$G(AMIS) VST("stopCodeUid")="urn:va:stop-code:"_$P(AMIS,U),VST("stopCodeName")=$P(AMIS,U,2)
"RTN","HMPDJ04E",34,0)
 ; X=$$POV^HMPDJ04(ID) S:$L(X) VST("reasonUid")=$$SETNCS^HMPUTILS("icd",$P(X,U)),VST("reasonName")=$P(X,U,2)
"RTN","HMPDJ04E",35,0)
 ;
"RTN","HMPDJ04E",36,0)
 S VST("reasonName")=$P($G(^EDP(230,+DA,1)),U)
"RTN","HMPDJ04E",37,0)
 S I=0 F  S I=$O(^EDP(230,+DA,4,I)) Q:I<1  I $P($G(^(I,0)),U,3) D  ;primary Dx
"RTN","HMPDJ04E",38,0)
 . S X=$G(^EDP(230,+DA,4,I,0)),VST("reasonName")=$P(X,U) Q:'$P(X,U,2)
"RTN","HMPDJ04E",39,0)
 . S ICD=$$ICD^HMPDVSIT($P(X,U,2)) Q:$L(ICD)'>1
"RTN","HMPDJ04E",40,0)
 . S VST("reasonUid")=$$SETNCS^HMPUTILS("icd",$P(ICD,U)),VST("reasonName")=$P(ICD,U,2)
"RTN","HMPDJ04E",41,0)
 ;
"RTN","HMPDJ04E",42,0)
 ; provider(s)
"RTN","HMPDJ04E",43,0)
 S EDP=$G(^EDP(230,DA,3)),I=0
"RTN","HMPDJ04E",44,0)
 I $P(EDP,U,5) S I=I+1 D PROV("VST",I,+$P(EDP,U,5),"P",1) ;primary/MD
"RTN","HMPDJ04E",45,0)
 I $P(EDP,U,6) S I=I+1 D PROV("VST",I,+$P(EDP,U,6),"N")   ;nurse
"RTN","HMPDJ04E",46,0)
 I $P(EDP,U,7) S I=I+1 D PROV("VST",I,+$P(EDP,U,7),"R")   ;resident
"RTN","HMPDJ04E",47,0)
 S:$L($P(EDP,U,8)) VST("comment")=$P(EDP,U,8)
"RTN","HMPDJ04E",48,0)
 S:$P(EDP,U,2) VST("appointmentStatus")=$$NAME(+$P(EDP,U,2))
"RTN","HMPDJ04E",49,0)
 ;
"RTN","HMPDJ04E",50,0)
 ; note(s)
"RTN","HMPDJ04E",51,0)
 ; TIU^HMPDJ04A(ID,.VST)
"RTN","HMPDJ04E",52,0)
 K ^TMP("PXKENC",$J,ID)
"RTN","HMPDJ04E",53,0)
 S VST("lastUpdateTime")=$$EN^HMPSTMP("visit") ;RHL 20150102
"RTN","HMPDJ04E",54,0)
 S VST("stampTime")=VST("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ04E",55,0)
 D ADD^HMPDJ("VST","visit")
"RTN","HMPDJ04E",56,0)
 Q
"RTN","HMPDJ04E",57,0)
 ;
"RTN","HMPDJ04E",58,0)
PROV(ARR,I,IEN,ROLE,PRIM) ; -- add providers
"RTN","HMPDJ04E",59,0)
 S @ARR@("providers",I,"providerUid")=$$SETUID^HMPUTILS("user",,+IEN)
"RTN","HMPDJ04E",60,0)
 S @ARR@("providers",I,"providerName")=$P($G(^VA(200,+IEN,0)),U)
"RTN","HMPDJ04E",61,0)
 S @ARR@("providers",I,"role")=ROLE
"RTN","HMPDJ04E",62,0)
 S:$G(PRIM) @ARR@("providers",I,"primary")="true"
"RTN","HMPDJ04E",63,0)
 Q
"RTN","HMPDJ04E",64,0)
 ;
"RTN","HMPDJ04E",65,0)
NAME(X) ; -- name of a code in #233.1
"RTN","HMPDJ04E",66,0)
 N Y S Y=$P($G(^EDPB(233.1,+$G(X),0)),U,2)
"RTN","HMPDJ04E",67,0)
 Q Y
"RTN","HMPDJ05")
0^37^B81246570
"RTN","HMPDJ05",1,0)
HMPDJ05 ;SLC/MKB -- Medications by order ;8/2/11  15:29
"RTN","HMPDJ05",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ05",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ05",4,0)
 ;
"RTN","HMPDJ05",5,0)
 ; External References: see HMPDJ05V for DBIA list
"RTN","HMPDJ05",6,0)
 ;
"RTN","HMPDJ05",7,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ05",8,0)
 ;
"RTN","HMPDJ05",9,0)
PS1(ID) ; -- med order
"RTN","HMPDJ05",10,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ05",11,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ05",12,0)
 S ERRMSG="A problem occurred converting order "_ID_" for the medication domain"
"RTN","HMPDJ05",13,0)
 N ORPK,TYPE S ID=+$G(ID)
"RTN","HMPDJ05",14,0)
 S ORPK=$$PKGID^ORX8(ID),TYPE=$E(ORPK,$L(ORPK)) S:TYPE=+TYPE TYPE="R"
"RTN","HMPDJ05",15,0)
 ;
"RTN","HMPDJ05",16,0)
 N ORUPCHUK,ORVP,ORPCL,ORDUZ,ORODT,ORSTRT,ORSTOP,ORL,ORTO,ORSTS,ORNP,ORPV,ORTX
"RTN","HMPDJ05",17,0)
 N MED,CLS,OI,X,LOC,FAC,DRUG,DA,CNT,HMPESP
"RTN","HMPDJ05",18,0)
 S X=$S(ORPK:$E(ORPK,$L(ORPK)),1:"Z") S:X=+X X="R" ;last char = PS file
"RTN","HMPDJ05",19,0)
 S CLS=$S("RSN"[X:"O","UV"[X:"I",1:$$GET1^DIQ(100,ID_",",10,"I"))
"RTN","HMPDJ05",20,0)
 S MED("uid")=$$SETUID^HMPUTILS("med",DFN,ID)
"RTN","HMPDJ05",21,0)
 S MED("orders",1,"orderUid")=$$SETUID^HMPUTILS("order",DFN,ID)
"RTN","HMPDJ05",22,0)
 S X=$$GET1^DIQ(100,ID_",",9,"I") S:X MED("orders",1,"predecessor")=$$SETUID^HMPUTILS("med",DFN,+X)
"RTN","HMPDJ05",23,0)
 S X=$$GET1^DIQ(100,ID_",",9.1,"I") S:X MED("orders",1,"successor")=$$SETUID^HMPUTILS("med",DFN,+X)
"RTN","HMPDJ05",24,0)
 S:ORPK MED("localId")=ORPK_";"_CLS
"RTN","HMPDJ05",25,0)
 D EN^ORX8(ID) S X="" F  S X=$O(ORUPCHUK(X)) Q:X=""  S:$D(ORUPCHUK(X))#2 @X=ORUPCHUK(X)
"RTN","HMPDJ05",26,0)
 S:$G(ORODT) MED("orders",1,"ordered")=$$JSONDT^HMPUTILS(ORODT)
"RTN","HMPDJ05",27,0)
 S:$G(ORNP) MED("orders",1,"providerUid")=$$SETUID^HMPUTILS("user",,+ORNP),MED("orders",1,"providerName")=$P(ORNP,U,2)
"RTN","HMPDJ05",28,0)
 S LOC=+$G(ORL),FAC=$$FAC^HMPD(LOC) I LOC D
"RTN","HMPDJ05",29,0)
 . S MED("orders",1,"locationUid")=$$SETUID^HMPUTILS("location",,LOC)
"RTN","HMPDJ05",30,0)
 . S MED("orders",1,"locationName")=$P(^SC(LOC,0),U)
"RTN","HMPDJ05",31,0)
 D FACILITY^HMPUTILS(FAC,"MED")
"RTN","HMPDJ05",32,0)
 S:$G(ORSTRT) MED("overallStart")=$$JSONDT^HMPUTILS(ORSTRT)
"RTN","HMPDJ05",33,0)
 S:$G(ORSTOP) (MED("stopped"),MED("overallStop"))=$$JSONDT^HMPUTILS(ORSTOP)
"RTN","HMPDJ05",34,0)
 S MED("vaStatus")=$P($G(ORSTS),U,2)
"RTN","HMPDJ05",35,0)
 S MED("medStatusName")=$$STATUS^HMPDPSOR(+$G(ORSTS))
"RTN","HMPDJ05",36,0)
 S MED("medStatus")=$$MEDSTAT^HMPDJ05V(MED("medStatusName"))
"RTN","HMPDJ05",37,0)
 I CLS="I" D
"RTN","HMPDJ05",38,0)
 . S:$P($G(^SC(+$G(LOC),0)),U,25) MED("IMO")="true"
"RTN","HMPDJ05",39,0)
 . S X=$P($G(^OR(100,ID,3)),U,9) S:X MED("parent")=X
"RTN","HMPDJ05",40,0)
 I ORPK D OEL^PSOORRL(DFN,ORPK_";"_CLS)
"RTN","HMPDJ05",41,0)
 S X=$S(ORPK["N":"N",1:CLS),MED("vaType")=X,MED("medType")=$$TYPE^HMPDJ05V(X)
"RTN","HMPDJ05",42,0)
 I CLS="O" S MED("type")=$S(ORPK["N":"OTC",1:"Prescription")
"RTN","HMPDJ05",43,0)
 S X=$G(HMPESP("COMMENT",1)) S:$L(X) MED("comment")=X
"RTN","HMPDJ05",44,0)
 I $$ISIV^HMPDJ05V G IV1^HMPDJ05V
"RTN","HMPDJ05",45,0)
 ;
"RTN","HMPDJ05",46,0)
A ; - Get order responses
"RTN","HMPDJ05",47,0)
 S OI=$$OI^ORX8(ID) I OI D
"RTN","HMPDJ05",48,0)
 . S X=$P(OI,U,2) S:$E(X,$L(X))=" " X=$E(X,1,$L(X)-1)
"RTN","HMPDJ05",49,0)
 . S MED("name")=X
"RTN","HMPDJ05",50,0)
 . D ZERO^PSS50P7(+$P(OI,U,3),,,"PSOI")
"RTN","HMPDJ05",51,0)
 . S MED("productFormName")=$P($G(^TMP($J,"PSOI",+$P(OI,U,3),.02)),U,2)
"RTN","HMPDJ05",52,0)
 . S:+$G(^TMP($J,"PSOI",+$P(OI,U,3),.09)) MED("supply")="true"
"RTN","HMPDJ05",53,0)
 D RESP^HMPDPSOR(ID,.HMPESP) ;order responses
"RTN","HMPDJ05",54,0)
 S DRUG=+$G(^TMP("PS",$J,"DD",1,0)) S:'DRUG DRUG=+$G(HMPESP("DRUG",1))
"RTN","HMPDJ05",55,0)
 S MED("sig")=$S(CLS="I":"Give: ",1:"")_$G(HMPESP("SIG",1)) ;ORTX(2)
"RTN","HMPDJ05",56,0)
 I CLS="O",'$L($G(HMPESP("SIG",1))),'$D(HMPESP("INSTR")) S MED("sig")=$G(HMPESP("COMMENT",1)) ;old Rx
"RTN","HMPDJ05",57,0)
 ;
"RTN","HMPDJ05",58,0)
B ; - Get dosages
"RTN","HMPDJ05",59,0)
 I '$O(^OR(100,ID,2,0)) D  ;single dose or OP
"RTN","HMPDJ05",60,0)
 . N HMPY,START,STOP,DUR,CONJ,MIN
"RTN","HMPDJ05",61,0)
 . S START=$G(ORSTRT),STOP=$G(ORSTOP),MIN=0
"RTN","HMPDJ05",62,0)
 . S CNT=0 F  S CNT=$O(HMPESP("INSTR",CNT)) Q:CNT<1  D
"RTN","HMPDJ05",63,0)
 .. K HMPY D DOSE(.HMPY,CNT) M MED("dosages",CNT)=HMPY
"RTN","HMPDJ05",64,0)
 .. ;determine start & stop per dose
"RTN","HMPDJ05",65,0)
 .. S MED("dosages",CNT,"relativeStart")=MIN
"RTN","HMPDJ05",66,0)
 .. S DUR=$G(HMPY("complexDuration")),CONJ=$G(HMPY("complexConjunction"))
"RTN","HMPDJ05",67,0)
 .. S STOP=$S(DUR:$$STOP(START,DUR),1:STOP)
"RTN","HMPDJ05",68,0)
 .. S:START MED("dosages",CNT,"start")=$$JSONDT^HMPUTILS(START)
"RTN","HMPDJ05",69,0)
 .. S:STOP MED("dosages",CNT,"stop")=$$JSONDT^HMPUTILS(STOP)
"RTN","HMPDJ05",70,0)
 .. S X=$$RELTIME(START,STOP,DUR,MIN),MED("dosages",CNT,"relativeStop")=$S($E(X)=".":0_X,1:X)
"RTN","HMPDJ05",71,0)
 .. I $E(CONJ)="T",DUR S START=STOP,MIN=X
"RTN","HMPDJ05",72,0)
 I $O(^OR(100,ID,2,0)) D
"RTN","HMPDJ05",73,0)
 . N DD,CONJ,HMPY,MIN
"RTN","HMPDJ05",74,0)
 . M CONJ=HMPESP("CONJ"),DUR=HMPESP("DAYS") S MIN=0
"RTN","HMPDJ05",75,0)
 . S (DA,CNT)=0 F  S DA=$O(^OR(100,ID,2,DA)) Q:DA<1  D  ;child orders
"RTN","HMPDJ05",76,0)
 .. K HMPESP,HMPY D RESP^HMPDPSOR(DA,.HMPESP),DOSE(.HMPY,1)
"RTN","HMPDJ05",77,0)
 .. S CNT=CNT+1 M MED("dosages",CNT)=HMPY
"RTN","HMPDJ05",78,0)
 .. S MED("dosages",CNT,"relativeStart")=MIN
"RTN","HMPDJ05",79,0)
 .. S MED("dosages",CNT,"complexConjunction")=$G(CONJ(CNT))
"RTN","HMPDJ05",80,0)
 .. S MED("dosages",CNT,"complexDuration")=$G(DUR(CNT))
"RTN","HMPDJ05",81,0)
 .. S MED("dosages",CNT,"relatedOrder")=DA
"RTN","HMPDJ05",82,0)
 .. S X=$P($G(^OR(100,DA,0)),U,8,9)
"RTN","HMPDJ05",83,0)
 .. S:$P(X,U) MED("dosages",CNT,"start")=$$JSONDT^HMPUTILS($P(X,U))
"RTN","HMPDJ05",84,0)
 .. S:$P(X,U,2) MED("dosages",CNT,"stop")=$$JSONDT^HMPUTILS($P(X,U,2))
"RTN","HMPDJ05",85,0)
 .. I $P(X,U,2)>$G(ORSTOP) S ORSTOP=$P(X,U,2) ;get last stop time
"RTN","HMPDJ05",86,0)
 .. S X=$$RELTIME($P(X,U),$P(X,U,2),$G(DUR(CNT)),MIN)
"RTN","HMPDJ05",87,0)
 .. S MED("dosages",CNT,"relativeStop")=$S($E(X)=".":0_X,1:X) S:$G(CONJ(CNT))="T" MIN=X
"RTN","HMPDJ05",88,0)
 .. S:'DRUG DD=+$G(HMPESP("DRUG",1)),DD(DD,DA)="" ;dispense drug(s)
"RTN","HMPDJ05",89,0)
 .. ; get ^TMP("PS",$J) from 1st child, if Inpt parent:
"RTN","HMPDJ05",90,0)
 .. I '$D(^TMP("PS",$J)) S ORPK=$$PKGID^ORX8(DA) D OEL^PSOORRL(DFN,ORPK_";"_CLS)
"RTN","HMPDJ05",91,0)
 . S MED("stopped")=$$JSONDT^HMPUTILS($G(ORSTOP)) ;reset from last child order
"RTN","HMPDJ05",92,0)
 . S DD=$O(DD(0)) I DD,'$O(DD(DD)) S DRUG=DD Q    ;1 drug for order
"RTN","HMPDJ05",93,0)
 . S (DD,CNT)=0 F  S DD=$O(DD(DD)) Q:DD<1  S DA=0 F  S DA=$O(DD(DD,DA)) Q:DA<1  S CNT=CNT+1 D NDF(DD,CNT,DA)
"RTN","HMPDJ05",94,0)
 ;
"RTN","HMPDJ05",95,0)
C ; - Get OP data
"RTN","HMPDJ05",96,0)
 I CLS="O",ORPK'["N" D
"RTN","HMPDJ05",97,0)
 . S MED("orders",1,"quantityOrdered")=$G(HMPESP("QTY",1))
"RTN","HMPDJ05",98,0)
 . S MED("orders",1,"daysSupply")=$G(HMPESP("SUPPLY",1))
"RTN","HMPDJ05",99,0)
 . S MED("orders",1,"vaRouting")=$G(HMPESP("PICKUP",1))
"RTN","HMPDJ05",100,0)
 . S MED("orders",1,"fillsAllowed")=$G(HMPESP("REFILLS",1))
"RTN","HMPDJ05",101,0)
 . S MED("patientInstruction")=$G(HMPESP("PI",1))
"RTN","HMPDJ05",102,0)
 . Q:ORPK["P"!(ORPK["S")  ;pending
"RTN","HMPDJ05",103,0)
 . N HMP,RX0,RX1,FILL,RFD,MW,REL
"RTN","HMPDJ05",104,0)
 . K ^TMP("PSOR",$J) D EN^PSOORDER(DFN,+ORPK)
"RTN","HMPDJ05",105,0)
 . S RX0=$G(^TMP("PSOR",$J,+ORPK,0)),RX1=$G(^(1)),MED("orders",1,"prescriptionId")=$P(RX0,U,5)
"RTN","HMPDJ05",106,0)
 . I '$G(HMPESP("QTY",1)) S MED("orders",1,"quantityOrdered")=$P(RX0,U,6)
"RTN","HMPDJ05",107,0)
 . I '$G(HMPESP("SUPPLY",1)) S MED("orders",1,"daysSupply")=$P(RX0,U,7)
"RTN","HMPDJ05",108,0)
 . S MED("orders",1,"fillsRemaining")=$P(RX0,U,9),MED("lastFilled")=$$JSONDT^HMPUTILS($P(RX0,U,3))
"RTN","HMPDJ05",109,0)
 . S I=$P(RX0,U,2) I I S FILL(I)=I_"^^^"_$P(RX0,U,6,7)_"^^^"_$P(RX0,U,13)_"^^"_$P(RX1,U,6) ;original fill
"RTN","HMPDJ05",110,0)
 . S I=0 F  S I=$O(^TMP("PSOR",$J,+ORPK,"REF",I)) Q:I<1  S X=$G(^(I,0)),FILL(+X)=X
"RTN","HMPDJ05",111,0)
 . S I=0 F  S I=$O(^TMP("PSOR",$J,+ORPK,"RPAR",I)) Q:I<1  S X=$G(^(I,0)),$P(X,U,14)=1,FILL(+X)=X
"RTN","HMPDJ05",112,0)
 . S (I,RFD)=0 F  S RFD=$O(FILL(RFD)) Q:RFD<1  S X=$G(FILL(RFD)) D  ;sort 1st
"RTN","HMPDJ05",113,0)
 .. S I=I+1,MW=$P($P(X,U,10),";"),REL=$P($P(X,U,8),".")
"RTN","HMPDJ05",114,0)
 .. S MED("fills",I,"dispenseDate")=$$JSONDT^HMPUTILS($P(RFD,"."))
"RTN","HMPDJ05",115,0)
 .. S MED("fills",I,"releaseDate")=$$JSONDT^HMPUTILS(REL)
"RTN","HMPDJ05",116,0)
 .. S MED("fills",I,"routing")=MW
"RTN","HMPDJ05",117,0)
 .. S MED("fills",I,"quantityDispensed")=$P(X,U,4)
"RTN","HMPDJ05",118,0)
 .. S MED("fills",I,"daysSupplyDispensed")=$P(X,U,5)
"RTN","HMPDJ05",119,0)
 .. S:$P(X,U,14) MED("fills",I,"partial")=1 ;"true"
"RTN","HMPDJ05",120,0)
 . S X=$S($P(RX0,U,11):$P(RX0,U,11),$P(RX0,U,10):$P(RX0,U,10),1:0)
"RTN","HMPDJ05",121,0)
 . S:X MED("orders",1,"fillCost")=X
"RTN","HMPDJ05",122,0)
 . S X=$$GET1^PSODI(52,+ORPK_",",26,"I") S:X MED("overallStop")=$$JSONDT^HMPUTILS($P(X,U,2)) ;1^expirationDate
"RTN","HMPDJ05",123,0)
 I CLS="I" D
"RTN","HMPDJ05",124,0)
 . S X=$$GET1^DIQ(55.06,+ORPK_","_DFN_",",25,"I")
"RTN","HMPDJ05",125,0)
 . S:X MED("overallStop")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ05",126,0)
 . D BCMA^HMPDJ05V(.MED,DFN,ORPK)
"RTN","HMPDJ05",127,0)
 ;
"RTN","HMPDJ05",128,0)
PSQ ; finish
"RTN","HMPDJ05",129,0)
 D:DRUG NDF(+DRUG)
"RTN","HMPDJ05",130,0)
 S MED("qualifiedName")=$G(MED("name"))
"RTN","HMPDJ05",131,0)
 S X=+$P($G(^TMP("PS",$J,"RXN",0)),U,5)
"RTN","HMPDJ05",132,0)
 S:X MED("orders",1,"pharmacistUid")=$$SETUID^HMPUTILS("user",,X),MED("orders",1,"pharmacistName")=$P($G(^VA(200,X,0)),U)
"RTN","HMPDJ05",133,0)
 K ^TMP("PS",$J),^TMP($J,"PSOI"),^TMP("PSOR",$J)
"RTN","HMPDJ05",134,0)
 S MED("lastUpdateTime")=$$EN^HMPSTMP("med") ;RHL 20150102
"RTN","HMPDJ05",135,0)
 S MED("stampTime")=MED("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ05",136,0)
 D ADD^HMPDJ("MED","med")
"RTN","HMPDJ05",137,0)
 Q
"RTN","HMPDJ05",138,0)
 ;
"RTN","HMPDJ05",139,0)
DOSE(Y,N) ; -- return dosage data from HMPESP(ID,N) to Y("name")
"RTN","HMPDJ05",140,0)
 N X,DOSE,DUR,CONJ S N=+$G(N,1) K Y
"RTN","HMPDJ05",141,0)
 S Y("instructions")=$G(HMPESP("INSTR",N))
"RTN","HMPDJ05",142,0)
 S DOSE=$G(HMPESP("DOSE",N)),X=$P(DOSE,"&",1,2)
"RTN","HMPDJ05",143,0)
 S:$L(X)>1 Y("dose")=$P(X,"&"),Y("units")=$P(X,"&",2)
"RTN","HMPDJ05",144,0)
 S X=$P(DOSE,"&",3,4) S:X Y("amount")=$P(X,"&"),Y("noun")=$P(X,"&",2)
"RTN","HMPDJ05",145,0)
 ; Y("dose")=$S($L(X)>2:$TR(X,"&"," "),1:$P(X,"&"))
"RTN","HMPDJ05",146,0)
 S X=+$G(HMPESP("ROUTE",N)) D ALL^PSS51P2(X,,,,"HMPTE")
"RTN","HMPDJ05",147,0)
 S Y("routeName")=$G(^TMP($J,"HMPTE",X,1))
"RTN","HMPDJ05",148,0)
 S X=$G(HMPESP("SCHEDULE",N)) I $L(X) S Y("scheduleName")=X D SCH^HMPDJ05V(X)
"RTN","HMPDJ05",149,0)
 S X=$G(HMPESP("ADMIN",N)) S:$L(X) Y("adminTimes")=X
"RTN","HMPDJ05",150,0)
 S X=$G(HMPESP("DAYS",N)) S:$L(X) Y("complexDuration")=X,DUR=X
"RTN","HMPDJ05",151,0)
 S X=$G(HMPESP("CONJ",N)) S:$L(X) Y("complexConjunction")=X,CONJ=X
"RTN","HMPDJ05",152,0)
 I $L($G(CONJ)),'$L($G(DUR)) D  ;look ahead to find duration
"RTN","HMPDJ05",153,0)
 . N I,D S I=$O(HMPESP("DAYS",N)),D=$S(I:$G(HMPESP("DAYS",I)),1:"")
"RTN","HMPDJ05",154,0)
 . S:$L(D) Y("complexDuration")=D
"RTN","HMPDJ05",155,0)
 K ^TMP($J,"HMPTE")
"RTN","HMPDJ05",156,0)
 Q
"RTN","HMPDJ05",157,0)
 ;
"RTN","HMPDJ05",158,0)
STOP(BEG,X) ; -- Return date after adding X to BEG
"RTN","HMPDJ05",159,0)
 N D,H,M,UNT,Y
"RTN","HMPDJ05",160,0)
 S Y=BEG,(D,H,M)=0,UNT=$P(X,+X,2),X=+X
"RTN","HMPDJ05",161,0)
 S UNT=$S($E(UNT)=" ":$E(UNT,2),1:$E(UNT)) I UNT="" S UNT="D"
"RTN","HMPDJ05",162,0)
 S:UNT="L" D=30*X
"RTN","HMPDJ05",163,0)
 S:UNT="W" D=7*X
"RTN","HMPDJ05",164,0)
 S:UNT="D" D=X
"RTN","HMPDJ05",165,0)
 S:UNT="H" H=X
"RTN","HMPDJ05",166,0)
 S:UNT="M" M=X
"RTN","HMPDJ05",167,0)
 S Y=$$FMADD^XLFDT(BEG,D,H,M)
"RTN","HMPDJ05",168,0)
 Q Y
"RTN","HMPDJ05",169,0)
 ;
"RTN","HMPDJ05",170,0)
NDF(DRUG,VPI,ORD) ; -- Set NDF data for dispense DRUG ien
"RTN","HMPDJ05",171,0)
 ; code ^ name ^ vuid [^ role ^ concentration ^ order]
"RTN","HMPDJ05",172,0)
 N LEN,HMPX,STR,VUID,X,I
"RTN","HMPDJ05",173,0)
 S DRUG=+$G(DRUG) Q:'DRUG
"RTN","HMPDJ05",174,0)
 D EN^PSSDI(50,,50,"901;902",DRUG,"HMPX")
"RTN","HMPDJ05",175,0)
 S STR=$S($G(HMPX(50,DRUG,901)):$G(HMPX(50,DRUG,901))_" "_$G(HMPX(50,DRUG,902)),1:"")
"RTN","HMPDJ05",176,0)
 D NDF^PSS50(DRUG,,,,,"NDF") S VPI=+$G(VPI,1)
"RTN","HMPDJ05",177,0)
 ;
"RTN","HMPDJ05",178,0)
 S MED("products",VPI,"ingredientRole")="urn:sct:410942007" ;Drug
"RTN","HMPDJ05",179,0)
 S:$G(ORD) MED("products",VPI,"relatedOrder")=ORD
"RTN","HMPDJ05",180,0)
 S:$G(STR) MED("products",VPI,"strength")=STR
"RTN","HMPDJ05",181,0)
 S X=$G(MED("name")) S:$L(X) MED("products",VPI,"ingredientName")=X
"RTN","HMPDJ05",182,0)
 ;
"RTN","HMPDJ05",183,0)
 S X=$G(^TMP($J,"NDF",DRUG,20)) ;VA Generic
"RTN","HMPDJ05",184,0)
 S MED("products",VPI,"ingredientCode")="urn:va:vuid:"_$$VUID^HMPD(+X,50.6)
"RTN","HMPDJ05",185,0)
 S MED("products",VPI,"ingredientCodeName")=$P(X,U,2)
"RTN","HMPDJ05",186,0)
 ;
"RTN","HMPDJ05",187,0)
 S X=$G(^TMP($J,"NDF",DRUG,22)) ;VA Product
"RTN","HMPDJ05",188,0)
 S MED("products",VPI,"suppliedCode")="urn:va:vuid:"_$$VUID^HMPD(+X,50.68)
"RTN","HMPDJ05",189,0)
 S MED("products",VPI,"suppliedName")=$P(X,U,2)
"RTN","HMPDJ05",190,0)
 ;
"RTN","HMPDJ05",191,0)
 S X=$G(^TMP($J,"NDF",DRUG,25)) ;VA Drug Class
"RTN","HMPDJ05",192,0)
 S MED("products",VPI,"drugClassCode")="urn:vadc:"_$P(X,U,2)
"RTN","HMPDJ05",193,0)
 S MED("products",VPI,"drugClassName")=$P(X,U,3)
"RTN","HMPDJ05",194,0)
 ;
"RTN","HMPDJ05",195,0)
 K ^TMP($J,"NDF")
"RTN","HMPDJ05",196,0)
 Q
"RTN","HMPDJ05",197,0)
 ;
"RTN","HMPDJ05",198,0)
RELTIME(START,STOP,DUR,MIN) ; -- Return #min for dose
"RTN","HMPDJ05",199,0)
 N Y S Y=0
"RTN","HMPDJ05",200,0)
 I START>0,STOP>0 S Y=$$FMDIFF^XLFDT(STOP,START,2)\60 I 1
"RTN","HMPDJ05",201,0)
 E  I DUR S Y=$$TOMIN(DUR) I 1
"RTN","HMPDJ05",202,0)
 E  S Y=$G(HMPESP("SUPPLY",1))*1440
"RTN","HMPDJ05",203,0)
 S Y=$S(Y:Y+MIN,1:MIN)
"RTN","HMPDJ05",204,0)
 Q Y
"RTN","HMPDJ05",205,0)
 ;
"RTN","HMPDJ05",206,0)
TOMIN(DUR) ;
"RTN","HMPDJ05",207,0)
 N RESULT,TIME,UNIT
"RTN","HMPDJ05",208,0)
 S UNIT=$$UP^XLFSTR($E($P(DUR," ",2)))
"RTN","HMPDJ05",209,0)
 I UNIT="" Q 0
"RTN","HMPDJ05",210,0)
 S TIME=$P(DUR," ")
"RTN","HMPDJ05",211,0)
 S RESULT=$S(UNIT="M":TIME,UNIT="H":TIME*60,UNIT="D":TIME*1440,UNIT="W":TIME*10080,UNIT="L":TIME*43200,1:0)
"RTN","HMPDJ05",212,0)
 Q RESULT
"RTN","HMPDJ05V")
0^135^B66330160
"RTN","HMPDJ05V",1,0)
HMPDJ05V ;SLC/MKB -- IV/Infusions ;8/2/11  15:29
"RTN","HMPDJ05V",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ05V",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ05V",4,0)
 ;
"RTN","HMPDJ05V",5,0)
 ; External References          DBIA#
"RTN","HMPDJ05V",6,0)
 ; -------------------          -----
"RTN","HMPDJ05V",7,0)
 ; ^OR(100                       5771
"RTN","HMPDJ05V",8,0)
 ; ^ORD(100.98                    873
"RTN","HMPDJ05V",9,0)
 ; ^ORD(101.43                   2843
"RTN","HMPDJ05V",10,0)
 ; ^PSB(53.79                    5909
"RTN","HMPDJ05V",11,0)
 ; ^SC                          10040
"RTN","HMPDJ05V",12,0)
 ; ^VA(200                      10060
"RTN","HMPDJ05V",13,0)
 ; DIQ                           2056
"RTN","HMPDJ05V",14,0)
 ; ORQ1,^TMP("ORR"               3154
"RTN","HMPDJ05V",15,0)
 ; ORX8                     2467,3071
"RTN","HMPDJ05V",16,0)
 ; PSODI                         4858
"RTN","HMPDJ05V",17,0)
 ; PSOORDER,^TMP("PSOR"          1878
"RTN","HMPDJ05V",18,0)
 ; PSOORRL,^TMP("PS"             2400
"RTN","HMPDJ05V",19,0)
 ; PSS50                         4533
"RTN","HMPDJ05V",20,0)
 ; PSS50P7                       4662
"RTN","HMPDJ05V",21,0)
 ; PSS51P1                       4546
"RTN","HMPDJ05V",22,0)
 ; PSS51P2                       4548
"RTN","HMPDJ05V",23,0)
 ; PSS52P6                       4549
"RTN","HMPDJ05V",24,0)
 ; PSS52P7                       4550
"RTN","HMPDJ05V",25,0)
 ; PSSDI                         4551
"RTN","HMPDJ05V",26,0)
 ; XLFDT                        10103
"RTN","HMPDJ05V",27,0)
 ; XLFSTR                       10104
"RTN","HMPDJ05V",28,0)
 ;
"RTN","HMPDJ05V",29,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ05V",30,0)
 ;
"RTN","HMPDJ05V",31,0)
ISIV() ; -- Return 1 or 0, if order is for IV/infusion
"RTN","HMPDJ05V",32,0)
 I ORPK["V" Q 1
"RTN","HMPDJ05V",33,0)
 I $P($G(ORTO),U,2)?1"IV".E Q 1
"RTN","HMPDJ05V",34,0)
 I +$G(ORPCL)=130 Q 1
"RTN","HMPDJ05V",35,0)
 I $G(^TMP("PS",$J,"B",0)) Q 1
"RTN","HMPDJ05V",36,0)
 Q 0
"RTN","HMPDJ05V",37,0)
 ;
"RTN","HMPDJ05V",38,0)
IV1 ; -- IV fluid, Infusion order [continued from HMPDJ05]
"RTN","HMPDJ05V",39,0)
 ; [Also expects ORPK, OEL^PSOORRL data]
"RTN","HMPDJ05V",40,0)
 N PS,PS0,X,X0,RTE,I,ADD,BASE
"RTN","HMPDJ05V",41,0)
 S MED("vaType")="V",MED("medType")="urn:sct:105903003"
"RTN","HMPDJ05V",42,0)
 S (ADD,BASE)=""
"RTN","HMPDJ05V",43,0)
 I ORPK,$D(^TMP("PS",$J)) D  G IVQ
"RTN","HMPDJ05V",44,0)
 . M PS=^TMP("PS",$J) S PS0=$G(PS(0)),MED("name")=$P(PS0,U)
"RTN","HMPDJ05V",45,0)
 . S X=$G(PS("MDR",1,0)) S:$L(X) MED("dosages",1,"routeName")=X
"RTN","HMPDJ05V",46,0)
 . S X=$P($G(PS("SCH",1,0)),U) I $L(X) D
"RTN","HMPDJ05V",47,0)
 .. S MED("dosages",1,"scheduleName")=X
"RTN","HMPDJ05V",48,0)
 .. N Y D SCH(X)
"RTN","HMPDJ05V",49,0)
 .. M MED("dosages",1)=Y
"RTN","HMPDJ05V",50,0)
 . S X=$G(PS("ADM",1,0)) S:$L(X) MED("dosages",1,"adminTimes")=X
"RTN","HMPDJ05V",51,0)
 . S X=$P(PS0,U,2) I X["INFUSE OVER" S MED("dosages",1,"duration")=X
"RTN","HMPDJ05V",52,0)
 . E  S MED("dosages",1,"ivRate")=X
"RTN","HMPDJ05V",53,0)
 . S X=$G(PS("IVLIM",0)) S:$L(X) MED("dosages",1,"restriction")=$$IVLIM(X)
"RTN","HMPDJ05V",54,0)
 . S X=+$P($G(PS("RXN",0)),U,5)
"RTN","HMPDJ05V",55,0)
 . S:X MED("orders",1,"pharmacistUid")=$$SETUID^HMPUTILS("user",,X),MED("orders",1,"pharmacistName")=$P($G(^VA(200,X,0)),U)
"RTN","HMPDJ05V",56,0)
 . D IVP
"RTN","HMPDJ05V",57,0)
 ; no med in PS (pending or cancelled), so use Order values
"RTN","HMPDJ05V",58,0)
 S RTE=+$$VALUE^ORX8(ID,"ROUTE") I RTE D
"RTN","HMPDJ05V",59,0)
 . D ALL^PSS51P2(RTE,,,,"HMPTE")
"RTN","HMPDJ05V",60,0)
 . S MED("dosages",1,"routeName")=$G(^TMP($J,"HMPTE",RTE,1))
"RTN","HMPDJ05V",61,0)
 S X=$$VALUE^ORX8(ID,"SCHEDULE") I $L(X) D
"RTN","HMPDJ05V",62,0)
 . S MED("dosages",1,"scheduleName")=X
"RTN","HMPDJ05V",63,0)
 . N Y D SCH(X)
"RTN","HMPDJ05V",64,0)
 . M MED("dosages",1)=Y
"RTN","HMPDJ05V",65,0)
 S X=$$VALUE^ORX8(ID,"ADMIN") S:$L(X) MED("dosages",1,"adminTimes")=X
"RTN","HMPDJ05V",66,0)
 S X=$$VALUE^ORX8(ID,"RATE")
"RTN","HMPDJ05V",67,0)
 I X["INFUSE OVER" S MED("dosages",1,"duration")=X
"RTN","HMPDJ05V",68,0)
 E  S MED("dosages",1,"ivRate")=X
"RTN","HMPDJ05V",69,0)
 S I=0 F  S I=$O(^OR(100,ID,.1,I)) Q:I<1  S X=+$G(^(I,0)) D
"RTN","HMPDJ05V",70,0)
 . S X0=$G(^ORD(101.43,X,0)),MED("name")=$P(X0,U)
"RTN","HMPDJ05V",71,0)
 . S MED("products",I,"ingredientName")=$P(X0,U)
"RTN","HMPDJ05V",72,0)
 S X=$$VALUE^ORX8(ID,"DAYS") I $L(X) D  S MED("dosages",1,"restriction")=X
"RTN","HMPDJ05V",73,0)
 . I X?1.A1.N S X=$$IVLIM(X) Q
"RTN","HMPDJ05V",74,0)
 . ; CPRS format = "for a total of 3 doses" or "with total volume 100ml"
"RTN","HMPDJ05V",75,0)
 . F I=1:1:$L(X) I $E(X,I)=+$E(X,I) S X=$E(X,I,$L(X)) Q
"RTN","HMPDJ05V",76,0)
IVQ ; done
"RTN","HMPDJ05V",77,0)
 K ^TMP("PS",$J),^TMP($J,"HMPTE")
"RTN","HMPDJ05V",78,0)
 S MED("qualifiedName")=ADD_$S($L(ADD)&$L(BASE):" in ",1:"")_BASE
"RTN","HMPDJ05V",79,0)
 S MED("lastUpdateTime")=$$EN^HMPSTMP("med") ;RHL 20150102
"RTN","HMPDJ05V",80,0)
 S MED("stampTime")=MED("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ05V",81,0)
 D BCMA(.MED,DFN,ORPK)
"RTN","HMPDJ05V",82,0)
 D ADD^HMPDJ("MED","med")
"RTN","HMPDJ05V",83,0)
 Q
"RTN","HMPDJ05V",84,0)
 ;
"RTN","HMPDJ05V",85,0)
IVP ; -- add IV products
"RTN","HMPDJ05V",86,0)
 ; [expects PS("A") & PS("B") data arrays from IV1]
"RTN","HMPDJ05V",87,0)
 N VPI,N,NAME,IEN,DRUG,OI,X S N=0
"RTN","HMPDJ05V",88,0)
 ; IV Additives
"RTN","HMPDJ05V",89,0)
 S VPI=0 F  S VPI=$O(PS("A",VPI)) Q:VPI<1  D
"RTN","HMPDJ05V",90,0)
 . K ^TMP($J,"HMPPSIV") S NAME=$P($G(PS("A",VPI,0)),U)
"RTN","HMPDJ05V",91,0)
 . D ZERO^PSS52P6("",NAME,"","HMPPSIV")
"RTN","HMPDJ05V",92,0)
 . S IEN=$O(^TMP($J,"HMPPSIV",0)),DRUG=+$G(^(IEN,1)) Q:IEN<1
"RTN","HMPDJ05V",93,0)
 . S OI=$G(^TMP($J,"HMPPSIV",IEN,15)) S:OI NAME=$$NAME(+OI)
"RTN","HMPDJ05V",94,0)
 . S N=N+1 D:DRUG NDF(DRUG,N,"A",NAME)
"RTN","HMPDJ05V",95,0)
 . S MED("products",N,"strength")=$P($G(PS("A",VPI,0)),U,2)
"RTN","HMPDJ05V",96,0)
 ; IV Base Solutions
"RTN","HMPDJ05V",97,0)
 S VPI=0 F  S VPI=$O(PS("B",VPI)) Q:VPI<1  D
"RTN","HMPDJ05V",98,0)
 . K ^TMP($J,"HMPPSIV") S NAME=$P($G(PS("B",VPI,0)),U)
"RTN","HMPDJ05V",99,0)
 . D ZERO^PSS52P7("",NAME,"","HMPPSIV")
"RTN","HMPDJ05V",100,0)
 . S IEN=$O(^TMP($J,"HMPPSIV",0)),DRUG=+$G(^(IEN,1)) Q:IEN<1
"RTN","HMPDJ05V",101,0)
 . S OI=$G(^TMP($J,"HMPPSIV",IEN,9)) S:OI NAME=$$NAME(+OI)
"RTN","HMPDJ05V",102,0)
 . S N=N+1 D:DRUG NDF(DRUG,N,"B",NAME)
"RTN","HMPDJ05V",103,0)
 . S MED("products",N,"volume")=$P($G(PS("B",VPI,0)),U,2)
"RTN","HMPDJ05V",104,0)
 K ^TMP($J,"HMPPSIV")
"RTN","HMPDJ05V",105,0)
 Q 
"RTN","HMPDJ05V",106,0)
 ;
"RTN","HMPDJ05V",107,0)
NAME(PSOI) ; -- return name_form of PS orderable item
"RTN","HMPDJ05V",108,0)
 N Y,HMPX S PSOI=+$G(PSOI),Y=""
"RTN","HMPDJ05V",109,0)
 D EN^PSSDI(50.7,,50.7,".01;.02",PSOI,"HMPX")
"RTN","HMPDJ05V",110,0)
 S:$D(HMPX) Y=$G(HMPX(50.7,PSOI,.01))_" "_$G(HMPX(50.7,PSOI,.02))
"RTN","HMPDJ05V",111,0)
 Q Y
"RTN","HMPDJ05V",112,0)
 ;
"RTN","HMPDJ05V",113,0)
NDF(DRUG,VPI,ROLE,OI) ; -- Set NDF data for dispense DRUG ien
"RTN","HMPDJ05V",114,0)
 ; code ^ name ^ vuid ^ role ^ concentration
"RTN","HMPDJ05V",115,0)
 N HMPX,VUID,X,I,CONC,NM
"RTN","HMPDJ05V",116,0)
 S DRUG=+$G(DRUG) Q:'DRUG
"RTN","HMPDJ05V",117,0)
 D NDF^PSS50(DRUG,,,,,"NDF")
"RTN","HMPDJ05V",118,0)
 S CONC=$P($G(PS(ROLE,VPI,0)),U,2),NM=""
"RTN","HMPDJ05V",119,0)
 ;
"RTN","HMPDJ05V",120,0)
 S MED("products",VPI,"ingredientRole")=$$ROLE(ROLE)
"RTN","HMPDJ05V",121,0)
 S OI=$G(OI) S:$L(OI) MED("products",VPI,"ingredientName")=OI,NM=OI
"RTN","HMPDJ05V",122,0)
 ; NM=X
"RTN","HMPDJ05V",123,0)
 ;
"RTN","HMPDJ05V",124,0)
 S X=$G(^TMP($J,"NDF",DRUG,20)) I X D  ;VA Generic
"RTN","HMPDJ05V",125,0)
 . S MED("products",VPI,"ingredientCode")="urn:va:vuid:"_$$VUID^HMPD(+X,50.6)
"RTN","HMPDJ05V",126,0)
 . S MED("products",VPI,"ingredientCodeName")=$P(X,U,2)
"RTN","HMPDJ05V",127,0)
 ;
"RTN","HMPDJ05V",128,0)
 S X=$G(^TMP($J,"NDF",DRUG,22)) I X D  ;VA Product
"RTN","HMPDJ05V",129,0)
 . S MED("products",VPI,"suppliedCode")="urn:va:vuid:"_$$VUID^HMPD(+X,50.68)
"RTN","HMPDJ05V",130,0)
 . S MED("products",VPI,"suppliedName")=$P(X,U,2)_" "_CONC
"RTN","HMPDJ05V",131,0)
 . S:NM="" NM=$P(X,U,2)
"RTN","HMPDJ05V",132,0)
 ;
"RTN","HMPDJ05V",133,0)
 S X=$G(^TMP($J,"NDF",DRUG,25)) I X D  ;VA Drug Class
"RTN","HMPDJ05V",134,0)
 . S MED("products",VPI,"drugClassCode")="urn:vadc:"_$P(X,U,2)
"RTN","HMPDJ05V",135,0)
 . S MED("products",VPI,"drugClassName")=$P(X,U,3)
"RTN","HMPDJ05V",136,0)
 . S:NM="" NM=$P(X,U,3)
"RTN","HMPDJ05V",137,0)
 ;
"RTN","HMPDJ05V",138,0)
 I $L(NM),ROLE="A" S ADD=ADD_$S($L(ADD):", ",1:"")_NM
"RTN","HMPDJ05V",139,0)
 I $L(NM),ROLE="B" S BASE=BASE_$S($L(BASE):", ",1:"")_NM
"RTN","HMPDJ05V",140,0)
 K ^TMP($J,"NDF",DRUG)
"RTN","HMPDJ05V",141,0)
 Q
"RTN","HMPDJ05V",142,0)
 ;
"RTN","HMPDJ05V",143,0)
IVLIM(X) ; -- Return expanded version of IV Limit X
"RTN","HMPDJ05V",144,0)
 I '$L($G(X)) Q ""
"RTN","HMPDJ05V",145,0)
 N Y,VAL,UNT,I
"RTN","HMPDJ05V",146,0)
 S Y="",X=$$UP^XLFSTR(X)
"RTN","HMPDJ05V",147,0)
 I X?1"DOSES".E S X="A"_$P(X,"DOSES",2)
"RTN","HMPDJ05V",148,0)
 S UNT=$E(X),VAL=0 F I=2:1:$L(X) I $E(X,I) S VAL=$E(X,I,$L(X)) Q
"RTN","HMPDJ05V",149,0)
 I UNT="A" S Y=+VAL_$S(+VAL>1:" doses",1:" dose")
"RTN","HMPDJ05V",150,0)
 I UNT="D" S Y=+VAL_$S(+VAL>1:" days",1:" day")
"RTN","HMPDJ05V",151,0)
 I UNT="H" S Y=+VAL_$S(+VAL>1:" hours",1:" hour")
"RTN","HMPDJ05V",152,0)
 I UNT="C" S Y=+VAL_" CC"
"RTN","HMPDJ05V",153,0)
 I UNT="M" S Y=+VAL_" ml"
"RTN","HMPDJ05V",154,0)
 I UNT="L" S Y=+VAL_" L"
"RTN","HMPDJ05V",155,0)
 Q Y
"RTN","HMPDJ05V",156,0)
 ;
"RTN","HMPDJ05V",157,0)
ROLE(X) ;
"RTN","HMPDJ05V",158,0)
 N RESULT,TXT,Y
"RTN","HMPDJ05V",159,0)
 S RESULT="",TXT="urn:sct:"
"RTN","HMPDJ05V",160,0)
 S RESULT=$S(X="A":TXT_"418804003",X="B":TXT_"418297009",1:TXT_"410942007")
"RTN","HMPDJ05V",161,0)
 Q RESULT
"RTN","HMPDJ05V",162,0)
 ;
"RTN","HMPDJ05V",163,0)
MEDSTAT(X) ;
"RTN","HMPDJ05V",164,0)
 N Y S Y="urn:sct:"
"RTN","HMPDJ05V",165,0)
 S Y=Y_$S(X="active":"55561003",X="historical":"392521001","hold":"421139008",1:"73425007")
"RTN","HMPDJ05V",166,0)
 Q Y
"RTN","HMPDJ05V",167,0)
 ;
"RTN","HMPDJ05V",168,0)
TYPE(VA) ;
"RTN","HMPDJ05V",169,0)
 N RESULT,TXT,Y
"RTN","HMPDJ05V",170,0)
 S RESULT="",TXT="urn:sct:"
"RTN","HMPDJ05V",171,0)
 S RESULT=$S(VA="N":TXT_"329505003",VA="O":TXT_"73639000",1:TXT_"105903003")
"RTN","HMPDJ05V",172,0)
 Q RESULT
"RTN","HMPDJ05V",173,0)
 ;
"RTN","HMPDJ05V",174,0)
SCH(NAME) ; -- Return other schedule info
"RTN","HMPDJ05V",175,0)
 N I K ^TMP($J,"HMPS")
"RTN","HMPDJ05V",176,0)
 I NAME?.E1" PRN" S NAME=$P(NAME," PRN") Q:NAME=""  ;strip off PRN for search
"RTN","HMPDJ05V",177,0)
 D ZERO^PSS51P1("",NAME,"PSJ",,"HMPS")
"RTN","HMPDJ05V",178,0)
 S I=+$O(^TMP($J,"HMPS","B",NAME,0)) Q:'I
"RTN","HMPDJ05V",179,0)
 S Y("scheduleFreq")=+$G(^TMP($J,"HMPS",I,2))
"RTN","HMPDJ05V",180,0)
 S Y("scheduleType")=$P($G(^TMP($J,"HMPS",I,5)),U,2)
"RTN","HMPDJ05V",181,0)
 K ^TMP($J,"HMPS")
"RTN","HMPDJ05V",182,0)
 Q
"RTN","HMPDJ05V",183,0)
 ;
"RTN","HMPDJ05V",184,0)
BCMA(RET,DFN,ORPK) ; -- administration times
"RTN","HMPDJ05V",185,0)
 Q:$G(DFN)<1  Q:$G(ORPK)<1
"RTN","HMPDJ05V",186,0)
 N LAST,ADT,DA,CNT,X,Y,N,NODE,X0,DRUG,HMPDT
"RTN","HMPDJ05V",187,0)
 S LAST=$P($O(^PSB(53.79,"AORDX",DFN,ORPK,9999999),-1),".")
"RTN","HMPDJ05V",188,0)
 S ADT=$$FMADD^XLFDT(LAST,-90) ;return most recent 90 days
"RTN","HMPDJ05V",189,0)
 S CNT=0 F  S ADT=$O(^PSB(53.79,"AORDX",DFN,ORPK,ADT)) Q:ADT<1  D
"RTN","HMPDJ05V",190,0)
 . S DA=0 F  S DA=+$O(^PSB(53.79,"AORDX",DFN,ORPK,ADT,DA)) Q:DA<1  D
"RTN","HMPDJ05V",191,0)
 .. S X=$$GET1^DIQ(53.79,DA_",",.09) Q:X="REMOVED"  ;status
"RTN","HMPDJ05V",192,0)
 .. S Y("status")=X,Y("dateTime")=$$JSONDT^HMPUTILS(ADT)
"RTN","HMPDJ05V",193,0)
 .. S X=+$P($G(^PSB(53.79,DA,0)),U,7) I X D
"RTN","HMPDJ05V",194,0)
 ... S Y("administeredByUid")=$$SETUID^HMPUTILS("user",,X)
"RTN","HMPDJ05V",195,0)
 ... S Y("administeredByName")=$P($G(^VA(200,+X,0)),U)
"RTN","HMPDJ05V",196,0)
 .. S X=$P($G(^PSB(53.79,DA,.1)),U,6) S:$L(X) Y("injectionSite")=X
"RTN","HMPDJ05V",197,0)
 .. S X=$G(^PSB(53.79,DA,.2)) ;PRN
"RTN","HMPDJ05V",198,0)
 .. S:$L($P(X,U,1)) Y("prnReason")=$P(X,U)
"RTN","HMPDJ05V",199,0)
 .. S:$L($P(X,U,2)) Y("prnEffectiveness")=$P(X,U,2)
"RTN","HMPDJ05V",200,0)
 .. ; comments
"RTN","HMPDJ05V",201,0)
 .. S N=0 F  S N=$O(^PSB(53.79,DA,.3,N)) Q:N<1  S X=$G(^(N,0)) D
"RTN","HMPDJ05V",202,0)
 ... S Y("comment",N,"text")=$P(X,U)
"RTN","HMPDJ05V",203,0)
 ... S:$P(X,U,3) Y("comment",N,"dateTime")=$$JSONDT^HMPUTILS($P(X,U,3))
"RTN","HMPDJ05V",204,0)
 ... S X=+$P(X,U,2) Q:X<1
"RTN","HMPDJ05V",205,0)
 ... S Y("comment",N,"enteredByUid")=$$SETUID^HMPUTILS("user",,X)
"RTN","HMPDJ05V",206,0)
 ... S Y("comment",N,"enteredByName")=$P($G(^VA(200,X,0)),U)
"RTN","HMPDJ05V",207,0)
 .. ; drugs administered
"RTN","HMPDJ05V",208,0)
 .. F NODE=.5,.6,.7 S N=0 F  S N=$O(^PSB(53.79,DA,NODE,N)) Q:N<1  S X0=$G(^(N,0)) D
"RTN","HMPDJ05V",209,0)
 ... S X=$P(X0,U,2)
"RTN","HMPDJ05V",210,0)
 ... I NODE=.5 S X=$G(DRUG(+X0)) S:X="" X=$$EXTERNAL^DILFD(53.795,.01,,+X0),DRUG(+X0)=X
"RTN","HMPDJ05V",211,0)
 ... S:$L(X) Y("medication",N,"name")=X
"RTN","HMPDJ05V",212,0)
 ... S X=$P(X0,U,3) S:$L(X) Y("medication",N,"amount")=X
"RTN","HMPDJ05V",213,0)
 ... S X=$P(X0,U,4) S:$L(X) Y("medication",N,"units")=X
"RTN","HMPDJ05V",214,0)
 .. S CNT=CNT+1 M RET("administrations",CNT)=Y
"RTN","HMPDJ05V",215,0)
 ; get next scheduled administration time
"RTN","HMPDJ05V",216,0)
 ;D ADMIN^PSBHMP(.HMPDT,DFN,ORPK) ; <<< 12.3
"RTN","HMPDJ05V",217,0)
 D ADMIN^PSBVPR(.HMPDT,DFN,ORPK) ; <<<< 12.3 
"RTN","HMPDJ05V",218,0)
 S:$G(HMPDT) RET("nextAdminTime")=HMPDT
"RTN","HMPDJ05V",219,0)
 Q
"RTN","HMPDJ06")
0^38^B58573953
"RTN","HMPDJ06",1,0)
HMPDJ06 ;SLC/MKB -- Laboratory ;6/25/12  16:11
"RTN","HMPDJ06",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ06",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ06",4,0)
 ;
"RTN","HMPDJ06",5,0)
 ; External References          DBIA#
"RTN","HMPDJ06",6,0)
 ; -------------------          -----
"RTN","HMPDJ06",7,0)
 ; ^LAB(60                      10054
"RTN","HMPDJ06",8,0)
 ; ^LR                            525
"RTN","HMPDJ06",9,0)
 ; ^PXRMINDX                     4290
"RTN","HMPDJ06",10,0)
 ; ^TMP("LRRR" [LR7OR1]          2503
"RTN","HMPDJ06",11,0)
 ; DIQ                           2056
"RTN","HMPDJ06",12,0)
 ; LR7OR1,^TMP("LRRR"            2503
"RTN","HMPDJ06",13,0)
 ; LRPXAPI                       4245
"RTN","HMPDJ06",14,0)
 ; LRPXAPIU                      4246
"RTN","HMPDJ06",15,0)
 ; XLFSTR                       10104
"RTN","HMPDJ06",16,0)
 ; XUAF4                         2171
"RTN","HMPDJ06",17,0)
 ;
"RTN","HMPDJ06",18,0)
 ; All tags expect DFN, ID, LRDFN, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ06",19,0)
 ;               & ^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT,HMPP),HMPN
"RTN","HMPDJ06",20,0)
 ;
"RTN","HMPDJ06",21,0)
CH1 ; -- lab ID = CH;HMPIDT;HMPN
"RTN","HMPDJ06",22,0)
 N LAB,LRI,X,X0,SPC,LOINC,ORD,CMMT
"RTN","HMPDJ06",23,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ06",24,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ06",25,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the chemistry domain"
"RTN","HMPDJ06",26,0)
 ;
"RTN","HMPDJ06",27,0)
 M LAB=HMPACC ;get accession info
"RTN","HMPDJ06",28,0)
 S LAB("localId")=ID,LAB("uid")=$$SETUID^HMPUTILS("lab",DFN,ID)
"RTN","HMPDJ06",29,0)
 S LAB("categoryCode")="urn:va:lab-category:CH"
"RTN","HMPDJ06",30,0)
 S LAB("categoryName")="Laboratory"
"RTN","HMPDJ06",31,0)
 S LAB("displayOrder")=HMPP
"RTN","HMPDJ06",32,0)
 S LRI=$G(^LR(LRDFN,"CH",HMPIDT,HMPN))
"RTN","HMPDJ06",33,0)
 S X0=$G(^TMP("LRRR",$J,DFN,"CH",HMPIDT,HMPP)),SPC=+$P(X0,U,19)
"RTN","HMPDJ06",34,0)
 S LAB("typeId")=+X0,LAB("typeName")=$P($G(^LAB(60,+X0,0)),U)
"RTN","HMPDJ06",35,0)
 S:$L($P(X0,U,2)) LAB("result")=$P(X0,U,2)
"RTN","HMPDJ06",36,0)
 S:$L($P(X0,U,4)) LAB("units")=$P(X0,U,4)
"RTN","HMPDJ06",37,0)
 S X=$P(X0,U,5) I $L(X),X["-" S LAB("low")=$$TRIM^XLFSTR($P(X,"-")),LAB("high")=$$TRIM^XLFSTR($P(X,"-",2))
"RTN","HMPDJ06",38,0)
 S X=$P(X0,U,3) I $L(X) D
"RTN","HMPDJ06",39,0)
 . S:X["*" X=$S(X["L":"LL",1:"HH")
"RTN","HMPDJ06",40,0)
 . S LAB("interpretationCode")="urn:hl7:observation-interpretation:"_X
"RTN","HMPDJ06",41,0)
 . S LAB("interpretationName")=$S(X["L":"Low",1:"High")_$S($L(X)>1:" alert",1:"")
"RTN","HMPDJ06",42,0)
 S LAB("displayName")=$S($L($P(X0,U,15)):$P(X0,U,15),1:LAB("test"))
"RTN","HMPDJ06",43,0)
 S ORD=+$P(X0,U,17) S:ORD LAB("labOrderId")=ORD
"RTN","HMPDJ06",44,0)
 S X=$$ORDER^HMPDLR(ORD,+X0) S:X LAB("orderUid")=$$SETUID^HMPUTILS("order",DFN,X)
"RTN","HMPDJ06",45,0)
 S LOINC=$P($P(LRI,U,3),"!",3) ;S:'LOINC LOINC=$$LOINC^HMPDJ06X(+X0,SPC)
"RTN","HMPDJ06",46,0)
 I LOINC S LAB("typeCode")="urn:lnc:"_$$GET1^DIQ(95.3,+LOINC_",",.01),LAB("vuid")="urn:va:vuid:"_$$VUID^HMPD(+LOINC,95.3)
"RTN","HMPDJ06",47,0)
 I 'LOINC S LAB("typeCode")="urn:va:ien:60:"_+X0_":"_SPC
"RTN","HMPDJ06",48,0)
 I $D(^TMP("LRRR",$J,DFN,"CH",HMPIDT,"N")) M CMMT=^("N") S LAB("comment")=$$STRING^HMPD(.CMMT)
"RTN","HMPDJ06",49,0)
 S LAB("statusCode")="urn:va:lab-status:completed",LAB("statusName")="completed"
"RTN","HMPDJ06",50,0)
 S LAB("lastUpdateTime")=$$EN^HMPSTMP("lab") ;RHL 20150102
"RTN","HMPDJ06",51,0)
 S LAB("stampTime")=LAB("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ06",52,0)
 D ADD^HMPDJ("LAB","lab")
"RTN","HMPDJ06",53,0)
 Q
"RTN","HMPDJ06",54,0)
 ;
"RTN","HMPDJ06",55,0)
ACC ; -- put accession-level data in HMPACC("attribute")
"RTN","HMPDJ06",56,0)
 N LR0,CDT,SPC,X K HMPACC
"RTN","HMPDJ06",57,0)
 S LR0=$G(^LR(LRDFN,HMPSUB,HMPIDT,0))
"RTN","HMPDJ06",58,0)
 S CDT=9999999-HMPIDT,HMPACC("observed")=$$DATE(CDT)
"RTN","HMPDJ06",59,0)
 S HMPACC("resulted")=$$DATE($P(LR0,U,3)),SPC=+$P(LR0,U,5) I SPC D
"RTN","HMPDJ06",60,0)
 . N IENS,HMPY S IENS=SPC_","
"RTN","HMPDJ06",61,0)
 . D GETS^DIQ(61,IENS,".01;4.1",,"HMPY")
"RTN","HMPDJ06",62,0)
 . S HMPACC("specimen")=$G(HMPY(61,IENS,.01))
"RTN","HMPDJ06",63,0)
 . S HMPACC("sample")=$G(HMPY(61,IENS,4.1))
"RTN","HMPDJ06",64,0)
 S HMPACC("groupUid")=$$SETUID^HMPUTILS("accession",DFN,HMPSUB_";"_HMPIDT)
"RTN","HMPDJ06",65,0)
 S HMPACC("groupName")=$P(LR0,U,6)
"RTN","HMPDJ06",66,0)
 S X=+$P(LR0,U,14) D  D FACILITY^HMPUTILS(X,"HMPACC")
"RTN","HMPDJ06",67,0)
 . S:X X=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","HMPDJ06",68,0)
 . I 'X S X=$$FAC^HMPD ;local stn#^name
"RTN","HMPDJ06",69,0)
 Q
"RTN","HMPDJ06",70,0)
 ;
"RTN","HMPDJ06",71,0)
MI ; -- microbiology accession ID = MI;HMPIDT
"RTN","HMPDJ06",72,0)
 N LAB,CDT,LR0,X,ACC,FAC,X0,X1,X2,IDX,HMPM,HMPPX,HMPITM,DA,FLD
"RTN","HMPDJ06",73,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ06",74,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ06",75,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the microbiology domain"
"RTN","HMPDJ06",76,0)
 ;
"RTN","HMPDJ06",77,0)
 S LAB("localId")=ID,LAB("uid")=$$SETUID^HMPUTILS("lab",DFN,ID)
"RTN","HMPDJ06",78,0)
 S LAB("categoryCode")="urn:va:lab-category:MI"
"RTN","HMPDJ06",79,0)
 S LAB("categoryName")="Microbiology"
"RTN","HMPDJ06",80,0)
 S LAB("statusCode")="urn:va:lab-status:completed",LAB("statusName")="completed"
"RTN","HMPDJ06",81,0)
 S CDT=9999999-HMPIDT,LAB("observed")=$$DATE(CDT)
"RTN","HMPDJ06",82,0)
 S LR0=$G(^LR(LRDFN,"MI",HMPIDT,0))
"RTN","HMPDJ06",83,0)
 S:$P(LR0,U,3) LAB("resulted")=$$DATE($P(LR0,U,3))
"RTN","HMPDJ06",84,0)
 S X=+$P(LR0,U,5) I X D  ;specimen
"RTN","HMPDJ06",85,0)
 . N IENS,HMPY S IENS=X_","
"RTN","HMPDJ06",86,0)
 . D GETS^DIQ(61,IENS,".01;2",,"HMPY")
"RTN","HMPDJ06",87,0)
 . S LAB("specimen")=$G(HMPY(61,IENS,.01))
"RTN","HMPDJ06",88,0)
 . S LAB("sample")=$$GET1^DIQ(61,X_",",4.1)
"RTN","HMPDJ06",89,0)
 S LAB("groupName")=$P(LR0,U,6),ACC=$P(ID,";",1,2) ;accession#
"RTN","HMPDJ06",90,0)
 S LAB("groupUid")=$$SETUID^HMPUTILS("accession",DFN,ACC)
"RTN","HMPDJ06",91,0)
 S X=$P(LR0,U,14),FAC=$S(X:$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U),1:$$FAC^HMPD)
"RTN","HMPDJ06",92,0)
 D FACILITY^HMPUTILS(FAC,"LAB")
"RTN","HMPDJ06",93,0)
 ; get results from ^TMP
"RTN","HMPDJ06",94,0)
 S HMPN=0 F  S HMPN=$O(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT,HMPN)) Q:HMPN<1  D
"RTN","HMPDJ06",95,0)
 . S X0=$G(^TMP("LRRR",$J,DFN,"MI",HMPIDT,HMPN)),X1=$P(X0,U),X2=$P(X0,U,2)
"RTN","HMPDJ06",96,0)
 . I X1="URINE SCREEN" S LAB("urineScreen")=X2 Q
"RTN","HMPDJ06",97,0)
 . ; X1="ORGANISM" S LAB("organism")=$P(X2,";"),LAB("organismQty")=$P(X2,";",2)
"RTN","HMPDJ06",98,0)
 . I X1="GRAM STAIN" S LAB("gramStain",HMPN,"result")=X2 Q
"RTN","HMPDJ06",99,0)
 . I X1="Bacteriology Remark(s)" S LAB("bactRemarks")=X2 Q
"RTN","HMPDJ06",100,0)
 ; get other results from ^PXRMINDX
"RTN","HMPDJ06",101,0)
 S X=$O(^PXRMINDX(63,"PDI",DFN,CDT,"M;T;0")) I X?1"M;T;"1.N D
"RTN","HMPDJ06",102,0)
 . S IDX=$O(^PXRMINDX(63,"PDI",DFN,CDT,X,"")) K HMPM
"RTN","HMPDJ06",103,0)
 . D LRPXRM^LRPXAPI(.HMPM,IDX,X) Q:HMPM<1
"RTN","HMPDJ06",104,0)
 . S LAB("typeName")=$P(HMPM,U,2)
"RTN","HMPDJ06",105,0)
 . S LAB("typeCode")="urn:va:ien:60:"_+HMPM_":"_+$P(HMPM,U,7)
"RTN","HMPDJ06",106,0)
 F HMPPX="M;O;","M;A;" D
"RTN","HMPDJ06",107,0)
 . S HMPITM=HMPPX F  S HMPITM=$O(^PXRMINDX(63,"PDI",DFN,CDT,HMPITM)) Q:$E(HMPITM,1,4)'=HMPPX  D
"RTN","HMPDJ06",108,0)
 .. S IDX=$O(^PXRMINDX(63,"PDI",DFN,CDT,HMPITM,"")) K HMPM
"RTN","HMPDJ06",109,0)
 .. S DA=$P(IDX,";",5),FLD=$P(IDX,";",6)
"RTN","HMPDJ06",110,0)
 .. D LRPXRM^LRPXAPI(.HMPM,IDX,HMPITM) Q:'$L($G(HMPM))
"RTN","HMPDJ06",111,0)
 .. I HMPPX["O" S LAB("organisms",DA,"name")=$P(HMPM,U,2),LAB("organisms",DA,"qty")=$P(HMPM,U,4) Q
"RTN","HMPDJ06",112,0)
 .. I HMPPX["A" D  Q
"RTN","HMPDJ06",113,0)
 ... S LAB("organisms",DA,"drugs",FLD,"name")=$P(HMPM,U,2)
"RTN","HMPDJ06",114,0)
 ... S LAB("organisms",DA,"drugs",FLD,"result")=$P(HMPM,U,3)
"RTN","HMPDJ06",115,0)
 ... S LAB("organisms",DA,"drugs",FLD,"interp")=$P(HMPM,U,4)
"RTN","HMPDJ06",116,0)
 ... S:$L($P(HMPM,U,5)) LAB("organisms",DA,"drugs",FLD,"restrict")=$P(HMPM,U,5)
"RTN","HMPDJ06",117,0)
 ;
"RTN","HMPDJ06",118,0)
 S LAB("results",1,"uid")=ACC
"RTN","HMPDJ06",119,0)
 S LAB("results",1,"resultUid")=$$SETUID^HMPUTILS("document",DFN,ACC)
"RTN","HMPDJ06",120,0)
 S LAB("results",1,"localTitle")="LR MICROBIOLOGY REPORT"
"RTN","HMPDJ06",121,0)
 I $L($G(^LR(LRDFN,"MI",HMPIDT,99))) S LAB("comment")=^(99)
"RTN","HMPDJ06",122,0)
 S LAB("lastUpdateTime")=$$EN^HMPSTMP("lab") ;RHL 20150102
"RTN","HMPDJ06",123,0)
 S LAB("stampTime")=LAB("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ06",124,0)
 D ADD^HMPDJ("LAB","lab")
"RTN","HMPDJ06",125,0)
 Q
"RTN","HMPDJ06",126,0)
 ;
"RTN","HMPDJ06",127,0)
ITEM() ; -- find ITEM string from ^PXRMINDX [uses LRDFN,ID,DFN,CDT]
"RTN","HMPDJ06",128,0)
 N ITM,IDX,Y S Y=""
"RTN","HMPDJ06",129,0)
 S IDX=LRDFN_";"_ID,ITM="M"
"RTN","HMPDJ06",130,0)
 F  S ITM=$O(^PXRMINDX(63,"PI",DFN,ITM)) Q:$E(ITM)'="M"  I $D(^PXRMINDX(63,"PI",DFN,ITM,CDT,IDX)) S Y=ITM Q
"RTN","HMPDJ06",131,0)
 Q Y
"RTN","HMPDJ06",132,0)
 ;
"RTN","HMPDJ06",133,0)
AP ; -- pathology ID = HMPSUB;HMPIDT
"RTN","HMPDJ06",134,0)
 N LAB,LR0,X,I,NODE
"RTN","HMPDJ06",135,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ06",136,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ06",137,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the pathology domain"
"RTN","HMPDJ06",138,0)
 ;
"RTN","HMPDJ06",139,0)
 S LAB("localId")=ID,LAB("organizerType")="accession"
"RTN","HMPDJ06",140,0)
 S LAB("uid")=$$SETUID^HMPUTILS("lab",DFN,ID)
"RTN","HMPDJ06",141,0)
 S LAB("categoryCode")="urn:va:lab-category:"_HMPSUB
"RTN","HMPDJ06",142,0)
 S LAB("categoryName")=$S(HMPSUB="BB":"Blood Bank",HMPSUB="SP":"Surgical Pathology",1:"Pathology")
"RTN","HMPDJ06",143,0)
 S LAB("statusCode")="urn:va:lab-status:completed",LAB("statusName")="completed"
"RTN","HMPDJ06",144,0)
 S CDT=9999999-HMPIDT,LAB("observed")=$$DATE(CDT)
"RTN","HMPDJ06",145,0)
 S LR0=$G(^LR(LRDFN,HMPSUB,HMPIDT,0))
"RTN","HMPDJ06",146,0)
 S LAB("resulted")=$$DATE($P(LR0,U,11)),LAB("groupName")=$P(LR0,U,6)
"RTN","HMPDJ06",147,0)
 S X="",I=0 F  S I=$O(^LR(LRDFN,HMPSUB,HMPIDT,.1,I)) Q:I<1  S X=X_$S($L(X):", ",1:"")_$P($G(^(I,0)),U)
"RTN","HMPDJ06",148,0)
 S:$L(X) LAB("specimen")=X
"RTN","HMPDJ06",149,0)
 D FACILITY^HMPUTILS($$FAC^HMPD,"LAB")
"RTN","HMPDJ06",150,0)
 S NODE=$S(HMPSUB="AU":$NA(^LR(LRDFN,101)),1:$NA(^LR(LRDFN,HMPSUB,HMPIDT,.05)))
"RTN","HMPDJ06",151,0)
 S I=0 F  S I=$O(@NODE@(I)) Q:I<1  S X=+$P($G(@NODE@(I,0)),U,2) I X D
"RTN","HMPDJ06",152,0)
 . N LT S LT=$$GET1^DIQ(8925,+X_",",.01) Q:$P(LT," ")="Addendum"
"RTN","HMPDJ06",153,0)
 . S LAB("results",I,"uid")=LAB("uid")
"RTN","HMPDJ06",154,0)
 . S LAB("results",I,"resultUid")=$$SETUID^HMPUTILS("document",DFN,X)
"RTN","HMPDJ06",155,0)
 . S LAB("results",I,"localTitle")=LT
"RTN","HMPDJ06",156,0)
 I '$O(LAB("results",0)) D  ;non-TIU reports
"RTN","HMPDJ06",157,0)
 . S LAB("results",1,"uid")=LAB("uid")
"RTN","HMPDJ06",158,0)
 . S LAB("results",1,"resultUid")=$$SETUID^HMPUTILS("document",DFN,ID)
"RTN","HMPDJ06",159,0)
 . S LAB("results",1,"localTitle")="LR "_$$NAME^HMPDLRA(HMPSUB)_" REPORT"
"RTN","HMPDJ06",160,0)
 S LAB("lastUpdateTime")=$$EN^HMPSTMP("lab") ;RHL 20150102
"RTN","HMPDJ06",161,0)
 S LAB("stampTime")=LAB("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ06",162,0)
 D ADD^HMPDJ("LAB","lab")
"RTN","HMPDJ06",163,0)
 ;
"RTN","HMPDJ06",164,0)
DATE(X) ; -- strip off seconds, return JSON format
"RTN","HMPDJ06",165,0)
 N Y S Y=$G(X)
"RTN","HMPDJ06",166,0)
 I $L($P(Y,".",2))>4 S Y=$P(Y,".")_"."_$E($P(Y,".",2),1,4) ;strip seconds
"RTN","HMPDJ06",167,0)
 S:Y Y=$$JSONDT^HMPUTILS(Y)
"RTN","HMPDJ06",168,0)
 Q Y
"RTN","HMPDJ07")
0^39^B24509003
"RTN","HMPDJ07",1,0)
HMPDJ07 ;SLC/MKB -- Radiology,Surgery ;6/25/12  16:11
"RTN","HMPDJ07",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ07",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ07",4,0)
 ;
"RTN","HMPDJ07",5,0)
 ; External References          DBIA#
"RTN","HMPDJ07",6,0)
 ; -------------------          -----
"RTN","HMPDJ07",7,0)
 ; ^SC                          10040
"RTN","HMPDJ07",8,0)
 ; ^VA(200                      10060
"RTN","HMPDJ07",9,0)
 ; DIC                           2051
"RTN","HMPDJ07",10,0)
 ; DIQ                           2056
"RTN","HMPDJ07",11,0)
 ; RAO7PC1                  2043,2265
"RTN","HMPDJ07",12,0)
 ; SROESTV                       3533
"RTN","HMPDJ07",13,0)
 ;
"RTN","HMPDJ07",14,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ07",15,0)
 ;
"RTN","HMPDJ07",16,0)
RA1(ID) ; -- radiology exam ^TMP($J,"RAE1",DFN,ID)
"RTN","HMPDJ07",17,0)
 N EXAM,X0,SET,PROC,DATE,LOC,X,Y,IENS,ID3,N
"RTN","HMPDJ07",18,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ07",19,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ07",20,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the radiology domain"
"RTN","HMPDJ07",21,0)
 ;
"RTN","HMPDJ07",22,0)
 S X0=$G(^TMP($J,"RAE1",DFN,ID)),SET=$G(^(ID,"CPRS")),PROC=$P(X0,U) Q:X0=""
"RTN","HMPDJ07",23,0)
 S EXAM("localId")=ID,EXAM("uid")=$$SETUID^HMPUTILS("image",DFN,ID)
"RTN","HMPDJ07",24,0)
 S EXAM("name")=PROC,EXAM("case")=$P(X0,U,2),EXAM("category")="RA"
"RTN","HMPDJ07",25,0)
 S DATE=9999999.9999-+ID,EXAM("dateTime")=$$JSONDT^HMPUTILS(DATE)
"RTN","HMPDJ07",26,0)
 I $P(X0,U,5) D  ;report exists
"RTN","HMPDJ07",27,0)
 . N NM S NM=$S(+SET=2:$P(SET,U,2),1:PROC) ;2 = shared report
"RTN","HMPDJ07",28,0)
 . S EXAM("results",1,"uid")=$$SETUID^HMPUTILS("document",DFN,ID)
"RTN","HMPDJ07",29,0)
 . S EXAM("results",1,"localTitle")=NM
"RTN","HMPDJ07",30,0)
 . S EXAM("verified")=$S($E($P(X0,U,3))="V":"true",1:"false")
"RTN","HMPDJ07",31,0)
 S:$L($P(X0,U,6)) EXAM("statusName")=$P($P(X0,U,6),"~",2)
"RTN","HMPDJ07",32,0)
 S X=$P(X0,U,7),LOC="" I $L(X) D
"RTN","HMPDJ07",33,0)
 . S EXAM("imageLocation")=X,EXAM("locationName")=X
"RTN","HMPDJ07",34,0)
 . S LOC=+$O(^SC("B",X,0))
"RTN","HMPDJ07",35,0)
 . S EXAM("locationUid")=$$SETUID^HMPUTILS("location",,LOC)
"RTN","HMPDJ07",36,0)
 S X=$$FAC^HMPD(LOC) D FACILITY^HMPUTILS(X,"EXAM")
"RTN","HMPDJ07",37,0)
 I $L($P(X0,U,8)) S X=$P($P(X0,U,8),"~",2),EXAM("imagingTypeUid")=$$SETVURN^HMPUTILS("imaging-Type",X)
"RTN","HMPDJ07",38,0)
 S X=$P(X0,U,10) I X D
"RTN","HMPDJ07",39,0)
 . N CPT S CPT=$$CPT^HMPDRA(X)
"RTN","HMPDJ07",40,0)
 . S (EXAM("typeName"),EXAM("summary"))=$P(CPT,U,2)
"RTN","HMPDJ07",41,0)
 . ;I $D(^TMP($J,"RAE1",DFN,ID,"CMOD")) M EXAM("modifier")=^("CMOD")
"RTN","HMPDJ07",42,0)
 I $P(X0,U,11) D
"RTN","HMPDJ07",43,0)
 . S EXAM("orderUid")=$$SETUID^HMPUTILS("order",DFN,+$P(X0,U,11))
"RTN","HMPDJ07",44,0)
 . S EXAM("orderName")=$S($L(SET):$P(SET,U,2),1:PROC)
"RTN","HMPDJ07",45,0)
 S EXAM("hasImages")=$S($P(X0,U,12)="Y":"true",1:"false")
"RTN","HMPDJ07",46,0)
 I $P(X0,U,4)="Y"!($P(X0,U,9)="Y") S EXAM("interpretation")="ABNORMAL"
"RTN","HMPDJ07",47,0)
 S IENS=$P(ID,"-",2)_","_+ID_","_DFN_","
"RTN","HMPDJ07",48,0)
 S X=$$GET1^DIQ(70.03,IENS,27,"I") I X D
"RTN","HMPDJ07",49,0)
 . S EXAM("encounterUid")=$$SETUID^HMPUTILS("visit",DFN,+X)
"RTN","HMPDJ07",50,0)
 . S EXAM("encounterName")=$$NAME^HMPDJ04(+X)
"RTN","HMPDJ07",51,0)
 S ID3=DFN_U_$TR(ID,"-","^") D EN3^RAO7PC1(ID3) D  ;get additional values
"RTN","HMPDJ07",52,0)
 . S EXAM("reason")=$G(^TMP($J,"RAE2",DFN,+$P(ID3,U,3),PROC,"RFS"))
"RTN","HMPDJ07",53,0)
 . S X=+$G(^TMP($J,"RAE2",DFN,+$P(ID3,U,3),PROC,"P")) D:X
"RTN","HMPDJ07",54,0)
 .. S EXAM("providers",1,"providerUid")=$$SETUID^HMPUTILS("user",,X)
"RTN","HMPDJ07",55,0)
 .. S EXAM("providers",1,"providerName")=$P($G(^VA(200,X,0)),U)
"RTN","HMPDJ07",56,0)
 . S N=0 F  S N=$O(^TMP($J,"RAE2",DFN,+$P(ID3,U,3),PROC,"D",N)) Q:N<1  S X=$G(^(N)) D
"RTN","HMPDJ07",57,0)
 .. S EXAM("diagnosis",N,"code")=X
"RTN","HMPDJ07",58,0)
 .. S:N=1 EXAM("diagnosis",N,"primary")="true"
"RTN","HMPDJ07",59,0)
 .. N EXP S EXP=$$LEX(X) S:EXP EXAM("diagnosis",N,"lexicon")=X
"RTN","HMPDJ07",60,0)
 . K ^TMP($J,"RAE2",DFN)
"RTN","HMPDJ07",61,0)
 S EXAM("kind")="Imaging"
"RTN","HMPDJ07",62,0)
 S EXAM("lastUpdateTime")=$$EN^HMPSTMP("image") ;RHL 20150102
"RTN","HMPDJ07",63,0)
 S EXAM("stampTime")=EXAM("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ07",64,0)
 D ADD^HMPDJ("EXAM","image")
"RTN","HMPDJ07",65,0)
 Q
"RTN","HMPDJ07",66,0)
 ;
"RTN","HMPDJ07",67,0)
LEX(X) ; -- Return Lexicon ptr for a Dx Code
"RTN","HMPDJ07",68,0)
 N Y,DIC,LEX
"RTN","HMPDJ07",69,0)
 S DIC=78.3,DIC(0)="BFOXZ" D ^DIC
"RTN","HMPDJ07",70,0)
 S LEX=$P($G(Y(0)),U,6)
"RTN","HMPDJ07",71,0)
 Q LEX
"RTN","HMPDJ07",72,0)
 ;
"RTN","HMPDJ07",73,0)
SR1(ID) ; -- surgery
"RTN","HMPDJ07",74,0)
 N SURG,HMPX,HMPY,X,Y,I
"RTN","HMPDJ07",75,0)
 D ONE^SROESTV("HMPY",ID) S HMPX=$G(HMPY(ID)) Q:HMPX=""
"RTN","HMPDJ07",76,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ07",77,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ07",78,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the surgery domain"
"RTN","HMPDJ07",79,0)
 ;
"RTN","HMPDJ07",80,0)
 S SURG("localId")=ID,SURG("uid")=$$SETUID^HMPUTILS("surgery",DFN,ID)
"RTN","HMPDJ07",81,0)
 S X=$P(HMPX,U,2),SURG("statusName")="COMPLETED"
"RTN","HMPDJ07",82,0)
 I X?1"* Aborted * ".E S X=$E(X,13,999),SURG("statusName")="ABORTED"
"RTN","HMPDJ07",83,0)
 S (SURG("typeName"),SURG("summary"))=X
"RTN","HMPDJ07",84,0)
 S SURG("dateTime")=$$JSONDT^HMPUTILS($P(HMPX,U,3))
"RTN","HMPDJ07",85,0)
 S X=$P(HMPX,U,4) I X D
"RTN","HMPDJ07",86,0)
 . S SURG("providers",1,"providerUid")=$$SETUID^HMPUTILS("user",,+X)
"RTN","HMPDJ07",87,0)
 . S SURG("providers",1,"providerName")=$P(X,";",2)
"RTN","HMPDJ07",88,0)
 S X=$$GET1^DIQ(130,ID_",",50,"I"),X=$$FAC^HMPD(X)
"RTN","HMPDJ07",89,0)
 D FACILITY^HMPUTILS(X,"SURG")
"RTN","HMPDJ07",90,0)
 S X=$$GET1^DIQ(130,ID_",",.015,"I") I X D
"RTN","HMPDJ07",91,0)
 . S SURG("encounterUid")=$$SETUID^HMPUTILS("visit",DFN,+X)
"RTN","HMPDJ07",92,0)
 . S SURG("encounterName")=$$NAME^HMPDJ04(+X)
"RTN","HMPDJ07",93,0)
 S X=$$GET1^DIQ(136,ID_",",.02,"I") I X D
"RTN","HMPDJ07",94,0)
 . S X=$$CPT^HMPDSR(X)
"RTN","HMPDJ07",95,0)
 . S (SURG("typeName"),SURG("summary"))=$P(X,U,2)
"RTN","HMPDJ07",96,0)
 . S SURG("typeCode")=$$SETNCS^HMPUTILS("cpt",+X)
"RTN","HMPDJ07",97,0)
 S I=0 F  S I=$O(HMPY(ID,I)) Q:I<1  S X=$G(HMPY(ID,I)) I X D
"RTN","HMPDJ07",98,0)
 . N LT S LT=$P(X,U,2) Q:$P(LT," ")="Addendum"
"RTN","HMPDJ07",99,0)
 . S SURG("results",I,"uid")=$$SETUID^HMPUTILS("document",DFN,+X)
"RTN","HMPDJ07",100,0)
 . S SURG("results",I,"localTitle")=LT
"RTN","HMPDJ07",101,0)
 S SURG("kind")="Surgery",SURG("category")="SR"
"RTN","HMPDJ07",102,0)
 K ^TMP("TIULIST",$J)
"RTN","HMPDJ07",103,0)
 S SURG("lastUpdateTime")=$$EN^HMPSTMP("surgery") ;RHL 20150102
"RTN","HMPDJ07",104,0)
 S SURG("stampTime")=SURG("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ07",105,0)
 D ADD^HMPDJ("SURG","surgery")
"RTN","HMPDJ07",106,0)
 Q
"RTN","HMPDJ08")
0^40^B70346505
"RTN","HMPDJ08",1,0)
HMPDJ08 ;SLC/MKB -- Documents ;6/25/12  16:11
"RTN","HMPDJ08",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ08",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ08",4,0)
 ;
"RTN","HMPDJ08",5,0)
 ;11/19/14 - Fix missing MCAR documents tag EN1+4, EN1+13  js
"RTN","HMPDJ08",6,0)
 ;
"RTN","HMPDJ08",7,0)
 ; External References          DBIA#
"RTN","HMPDJ08",8,0)
 ; -------------------          -----
"RTN","HMPDJ08",9,0)
 ; ^SC                          10040
"RTN","HMPDJ08",10,0)
 ; ^TIU(8925.1              2321,5677
"RTN","HMPDJ08",11,0)
 ; ^TIU(8926.1                   5678
"RTN","HMPDJ08",12,0)
 ; ^VA(200                      10060
"RTN","HMPDJ08",13,0)
 ; DIQ                           2056
"RTN","HMPDJ08",14,0)
 ; RAO7PC1                       2043
"RTN","HMPDJ08",15,0)
 ; TIUCNSLT                      5546
"RTN","HMPDJ08",16,0)
 ; TIUCP                         3568
"RTN","HMPDJ08",17,0)
 ; TIULQ                         2693
"RTN","HMPDJ08",18,0)
 ; TIULX                         3058
"RTN","HMPDJ08",19,0)
 ; TIUSROI                       5676
"RTN","HMPDJ08",20,0)
 ; TIUSRVLO                 2834,2865
"RTN","HMPDJ08",21,0)
 ; XLFSTR                       10104
"RTN","HMPDJ08",22,0)
 ;
"RTN","HMPDJ08",23,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ08",24,0)
 ;
"RTN","HMPDJ08",25,0)
TIU1(ID) ; -- document
"RTN","HMPDJ08",26,0)
 I ID[";" D   Q
"RTN","HMPDJ08",27,0)
 . I ID D EN1($$CP1^HMPDJ08A(DFN,ID),"CP") Q  ;CP
"RTN","HMPDJ08",28,0)
 . D EN1($$LR1^HMPDJ08A(DFN,ID),"LR") Q       ;Lab
"RTN","HMPDJ08",29,0)
 I ID["-" D  Q                                ;Radiology
"RTN","HMPDJ08",30,0)
 . S (BEG,END)=9999999.9999-+ID D EN1^RAO7PC1(DFN,BEG,END,"99P")
"RTN","HMPDJ08",31,0)
 . Q:'$D(^TMP($J,"RAE1",DFN,ID))              ;deleted
"RTN","HMPDJ08",32,0)
 . D EN1($$RA1^HMPDJ08A(DFN,ID),"RA") K ^TMP($J,"RAE1")
"RTN","HMPDJ08",33,0)
 D EN1(ID,38)
"RTN","HMPDJ08",34,0)
 Q
"RTN","HMPDJ08",35,0)
 ;
"RTN","HMPDJ08",36,0)
EN1(HMPX,TIU,OUTPUT) ; -- document
"RTN","HMPDJ08",37,0)
 ;  Expects DFN, HMPX=IEN^$$RESOLVE^TIUSRVLO(IEN) or equivalent
"RTN","HMPDJ08",38,0)
 ;          TIU = document class#, or code (CP, RA, LR) if non-TIU
"RTN","HMPDJ08",39,0)
 ;          OUTPUT = store the result in the output array instead (by reference)
"RTN","HMPDJ08",40,0)
 N DOC,IEN,X,HMPTIU,NT,ES,I,TEXT,SUB,HMPY,ERR
"RTN","HMPDJ08",41,0)
 ; --- CP HMPX records with $p1 not the file ien  --- 
"RTN","HMPDJ08",42,0)
 S IEN=$P($G(HMPX),U),TIU=$G(TIU) I TIU="CP" I IEN="" D  Q:IEN=""  ;invalid ien
"RTN","HMPDJ08",43,0)
 . S HMPIEN=+$P(HMPX,$J_",""",2)
"RTN","HMPDJ08",44,0)
 . I +HMPIEN>0 S IEN=+HMPIEN
"RTN","HMPDJ08",45,0)
 . Q
"RTN","HMPDJ08",46,0)
 ; ---
"RTN","HMPDJ08",47,0)
 I +HMPX=HMPX,TIU D  ;get TIU data string, if needed
"RTN","HMPDJ08",48,0)
 . N SHOWADD,DA S SHOWADD=1,DA=+HMPX
"RTN","HMPDJ08",49,0)
 . S HMPX=DA_U_$$RESOLVE^TIUSRVLO(DA)
"RTN","HMPDJ08",50,0)
 ; --- CP HMPX records with $p1 not the file ien  ---
"RTN","HMPDJ08",51,0)
 I +HMPX="" I TIU="CP" D  ;get TIU data string, if needed
"RTN","HMPDJ08",52,0)
 . N SHOWADD,DA S SHOWADD=1,DA=+IEN
"RTN","HMPDJ08",53,0)
 . S HMPX=DA_U_$$RESOLVE^TIUSRVLO(DA)
"RTN","HMPDJ08",54,0)
 ; ---
"RTN","HMPDJ08",55,0)
 Q:"UNKNOWN"[$P($G(HMPX),U,2)  ;null or invalid
"RTN","HMPDJ08",56,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ08",57,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ08",58,0)
 S ERRMSG="A problem occurred converting record "_IEN_" for the document domain"
"RTN","HMPDJ08",59,0)
 S DOC("localId")=IEN,DOC("uid")=$$SETUID^HMPUTILS("document",DFN,IEN)
"RTN","HMPDJ08",60,0)
 S DOC("localTitle")=$P(HMPX,U,2)
"RTN","HMPDJ08",61,0)
 S DOC("referenceDateTime")=$$JSONDT^HMPUTILS($P(HMPX,U,3))
"RTN","HMPDJ08",62,0)
 S X=$P(HMPX,U,6) D  ;S:$L(X) DOC("location")=X
"RTN","HMPDJ08",63,0)
 . N LOC,FAC S LOC=$S($L(X):+$O(^SC("B",X,0)),1:0)
"RTN","HMPDJ08",64,0)
 . S X=$$FAC^HMPD(LOC)
"RTN","HMPDJ08",65,0)
 . S DOC("facilityCode")=$P(X,U),DOC("facilityName")=$P(X,U,2)
"RTN","HMPDJ08",66,0)
 S X=$P(HMPX,U,7) I $L(X) S DOC("status")=$$UP^XLFSTR(X)
"RTN","HMPDJ08",67,0)
 S:$P(HMPX,U,11) DOC("images")=+$P(HMPX,U,11)
"RTN","HMPDJ08",68,0)
 S:$L($P(HMPX,U,12)) DOC("subject")=$P(HMPX,U,12)
"RTN","HMPDJ08",69,0)
 I $P(HMPX,U,14)>5 S DOC("parentUid")=$$SETUID^HMPUTILS("document",DFN,$P(HMPX,U,14)) ;ID notes
"RTN","HMPDJ08",70,0)
B ; other TIU data
"RTN","HMPDJ08",71,0)
 D:TIU EXTRACT^TIULQ(IEN,"HMPTIU",,,,1,,1) ;".01:.04;1501:1508")
"RTN","HMPDJ08",72,0)
 S X=$G(HMPTIU(IEN,.01,"I")) S:X DOC("documentDefUid")=$$SETUID^HMPUTILS("doc-def",,X)
"RTN","HMPDJ08",73,0)
 S NT=$S(X:+$G(^TIU(8925.1,X,15)),1:$P(HMPX,U,10)) I NT D
"RTN","HMPDJ08",74,0)
 . S DOC("nationalTitle","vuid")="urn:va:vuid:"_$$VUID^HMPD(NT,8926.1)
"RTN","HMPDJ08",75,0)
 . S DOC("nationalTitle","name")=$$GET1^DIQ(8926.1,NT_",",.01)
"RTN","HMPDJ08",76,0)
 S X=$G(HMPTIU(IEN,1201,"I")) S:X DOC("entered")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ08",77,0)
 S X=$G(HMPTIU(IEN,.09,"E")) S:$L(X) DOC("urgency")=X
"RTN","HMPDJ08",78,0)
 S X=TIU I TIU S X=+$G(HMPTIU(IEN,.01,"I")),X=$$CATG^HMPDTIU(X) ;2U type code
"RTN","HMPDJ08",79,0)
 S DOC("documentTypeCode")=X,DOC("documentTypeName")=$$TYPE(X)
"RTN","HMPDJ08",80,0)
 S DOC("documentClass")=$S(X="LR":"LR LABORATORY REPORTS",X="SR":"SURGICAL REPORTS",X="CP":"CLINICAL PROCEDURES",X="RA":"RADIOLOGY REPORTS",X="DS":"DISCHARGE SUMMARY",1:"PROGRESS NOTES")
"RTN","HMPDJ08",81,0)
 S X=$S(TIU:$G(HMPTIU(IEN,.03,"I")),1:$P(HMPX,U,8)) ;visit#
"RTN","HMPDJ08",82,0)
 S:X DOC("encounterUid")=$$SETUID^HMPUTILS("visit",DFN,X),DOC("encounterName")=$$NAME^HMPDJ04(X)
"RTN","HMPDJ08",83,0)
C ; text blocks, signatures
"RTN","HMPDJ08",84,0)
 N HMPT,HMPA,HMPADD
"RTN","HMPDJ08",85,0)
 S DOC("text",1,"dateTime")=DOC("referenceDateTime")
"RTN","HMPDJ08",86,0)
 S DOC("text",1,"status")=$G(DOC("status"))
"RTN","HMPDJ08",87,0)
 S DOC("text",1,"uid")=DOC("uid")
"RTN","HMPDJ08",88,0)
 S HMPT=1,X=$P(HMPX,U,5),I=0
"RTN","HMPDJ08",89,0)
 I X D USER(.I,+X,$P(X,";",3),"AU")    ;author
"RTN","HMPDJ08",90,0)
 M ES=HMPTIU(IEN) S X=$P(HMPX,"//",2) ;non-TIU, put into ES for use:
"RTN","HMPDJ08",91,0)
 I $L(X) S ES(1502,"I")=+X,ES(1502,"E")=$P(X,";",2),ES(1501,"I")=$P(X,";",3)
"RTN","HMPDJ08",92,0)
 I $G(ES(1501,"I")) D USER(.I,ES(1502,"I"),ES(1502,"E"),"S",ES(1501,"I"),$G(ES(1503,"E")),$G(ES(1504,"E")))
"RTN","HMPDJ08",93,0)
 I $G(ES(1507,"I")) D USER(.I,ES(1508,"I"),ES(1508,"E"),"C",ES(1507,"I"),$G(ES(1509,"E")),$G(ES(1510,"E")))
"RTN","HMPDJ08",94,0)
 I $G(ES(1204,"I")) D USER(.I,ES(1204,"I"),ES(1204,"E"),"ES")    ;expected signer
"RTN","HMPDJ08",95,0)
 I $G(ES(1208,"I")) D USER(.I,ES(1208,"I"),ES(1208,"E"),"EC")    ;expected cosigner
"RTN","HMPDJ08",96,0)
 I $G(ES(1302,"I")) D USER(.I,ES(1302,"I"),ES(1302,"E"),"E")     ;entered
"RTN","HMPDJ08",97,0)
 I $G(ES(1209,"I")) D USER(.I,ES(1209,"I"),ES(1209,"E"),"ATT")   ;attending
"RTN","HMPDJ08",98,0)
 I $G(HMPTEXT) D
"RTN","HMPDJ08",99,0)
 . S X=$S(TIU:$NA(HMPTIU(IEN,"TEXT")),1:$NA(^TMP("HMPTEXT",$J,IEN)))
"RTN","HMPDJ08",100,0)
 . K ^TMP($J,"HMP TIU TEXT")
"RTN","HMPDJ08",101,0)
 . D SETTEXT^HMPUTILS(X,$NA(^TMP($J,"HMP TIU TEXT")))
"RTN","HMPDJ08",102,0)
 . M DOC("text",1,"content","\")=^TMP($J,"HMP TIU TEXT")
"RTN","HMPDJ08",103,0)
D ; addenda
"RTN","HMPDJ08",104,0)
 S HMPA=0 F  S HMPA=$O(HMPTIU(IEN,"ZADD",HMPA)) Q:HMPA<1  D
"RTN","HMPDJ08",105,0)
 . S HMPT=HMPT+1,I=0 K HMPADD M HMPADD=HMPTIU(IEN,"ZADD",HMPA)
"RTN","HMPDJ08",106,0)
 . S DOC("text",HMPT,"status")=$G(HMPADD(.05,"E"))
"RTN","HMPDJ08",107,0)
 . S DOC("text",HMPT,"uid")=$$SETUID^HMPUTILS("document",DFN,HMPA)
"RTN","HMPDJ08",108,0)
 . S DOC("text",HMPT,"dateTime")=$$JSONDT^HMPUTILS($G(HMPADD(1301,"I")))
"RTN","HMPDJ08",109,0)
 . I $G(HMPADD(1302,"I")) D USER(.I,HMPADD(1302,"I"),HMPADD(1302,"E"),"E")
"RTN","HMPDJ08",110,0)
 . I $G(HMPADD(1202,"I")) D USER(.I,HMPADD(1202,"I"),HMPADD(1202,"E"),"AU")
"RTN","HMPDJ08",111,0)
 . I $G(HMPADD(1501,"I")) D USER(.I,HMPADD(1502,"I"),HMPADD(1502,"E"),"S",HMPADD(1501,"I"))
"RTN","HMPDJ08",112,0)
 . I $G(HMPADD(1507,"I")) D USER(.I,HMPADD(1508,"I"),HMPADD(1508,"E"),"C",HMPADD(1507,"I"))
"RTN","HMPDJ08",113,0)
 . I $G(HMPADD(1204,"I")) D USER(.I,HMPADD(1204,"I"),HMPADD(1204,"E"),"ES")
"RTN","HMPDJ08",114,0)
 . I $G(HMPADD(1208,"I")) D USER(.I,HMPADD(1208,"I"),HMPADD(1208,"E"),"EC")
"RTN","HMPDJ08",115,0)
 . I $G(HMPADD(1209,"I")) D USER(.I,HMPADD(1209,"I"),HMPADD(1209,"E"),"ATT")
"RTN","HMPDJ08",116,0)
 . Q:'$G(HMPTEXT)  K ^TMP($J,"HMP TIU TEXT")
"RTN","HMPDJ08",117,0)
 . S X=$NA(HMPTIU(IEN,"ZADD",HMPA,"TEXT"))
"RTN","HMPDJ08",118,0)
 . D SETTEXT^HMPUTILS(X,$NA(^TMP($J,"HMP TIU TEXT")))
"RTN","HMPDJ08",119,0)
 . M DOC("text",HMPT,"content","\")=^TMP($J,"HMP TIU TEXT")
"RTN","HMPDJ08",120,0)
ENQ ; end
"RTN","HMPDJ08",121,0)
 K ^TMP($J,"HMP TIU TEXT")
"RTN","HMPDJ08",122,0)
 S DOC("lastUpdateTime")=$$EN^HMPSTMP("document") ;RHL 20150102
"RTN","HMPDJ08",123,0)
 S DOC("stampTime")=DOC("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ08",124,0)
 I '$D(OUTPUT) D ADD^HMPDJ("DOC","document") Q
"RTN","HMPDJ08",125,0)
 M OUTPUT=DOC
"RTN","HMPDJ08",126,0)
 Q
"RTN","HMPDJ08",127,0)
 ;
"RTN","HMPDJ08",128,0)
USER(N,IEN,NAME,ROLE,DATE,SBN,SBT) ; -- set author, signer(s)
"RTN","HMPDJ08",129,0)
 Q:'$G(IEN)  S N=+$G(N)+1
"RTN","HMPDJ08",130,0)
 S DOC("text",HMPT,"clinicians",N,"uid")=$$SETUID^HMPUTILS("user",,IEN)
"RTN","HMPDJ08",131,0)
 S DOC("text",HMPT,"clinicians",N,"name")=$S($L($G(NAME)):NAME,1:$P($G(^VA(200,IEN,0)),U))
"RTN","HMPDJ08",132,0)
 S DOC("text",HMPT,"clinicians",N,"role")=$G(ROLE)
"RTN","HMPDJ08",133,0)
 Q:'$G(DATE)  ;not co/signed
"RTN","HMPDJ08",134,0)
 S DOC("text",HMPT,"clinicians",N,"signedDateTime")=$$JSONDT^HMPUTILS(DATE)
"RTN","HMPDJ08",135,0)
 I '$D(SBN) S SBN=NAME
"RTN","HMPDJ08",136,0)
 S DOC("text",HMPT,"clinicians",N,"signature")=SBN_$S($L($G(SBT)):" "_SBT,1:"")
"RTN","HMPDJ08",137,0)
 ;$$SIG^HMPDTIU(IEN)
"RTN","HMPDJ08",138,0)
 Q
"RTN","HMPDJ08",139,0)
 ;
"RTN","HMPDJ08",140,0)
 ;
"RTN","HMPDJ08",141,0)
 ; ------------ Get/apply search criteria ------------
"RTN","HMPDJ08",142,0)
 ;               [from DOCUMENT^HMPDJ0]
"RTN","HMPDJ08",143,0)
 ;
"RTN","HMPDJ08",144,0)
SETUP ; -- convert FILTER("attribute") = value to TIU criteria
"RTN","HMPDJ08",145,0)
 ; Expects: FILTER("category") = code (see $$CATG)
"RTN","HMPDJ08",146,0)
 ;          FILTER("status")   = 'signed','unsigned','all'
"RTN","HMPDJ08",147,0)
 ; Returns: CLASS,[SUBCLASS,STATUS]
"RTN","HMPDJ08",148,0)
 ;
"RTN","HMPDJ08",149,0)
 N TYPE,STS,CP
"RTN","HMPDJ08",150,0)
 S TYPE=$$UP^XLFSTR($G(FILTER("category")))
"RTN","HMPDJ08",151,0)
 S CLASS=0,(SUBCLASS,STATUS)=""
"RTN","HMPDJ08",152,0)
 ;
"RTN","HMPDJ08",153,0)
 ; status [default='signed']
"RTN","HMPDJ08",154,0)
 S STS=$$LOW^XLFSTR($G(FILTER("status")))
"RTN","HMPDJ08",155,0)
 S STATUS=$S(STS?1"unsig".E:2,STS="all":"5^2",1:5)     ;TIUSRVLO statuses
"RTN","HMPDJ08",156,0)
 ;
"RTN","HMPDJ08",157,0)
 ; all documents
"RTN","HMPDJ08",158,0)
 S:TYPE="" TYPE="ALL"
"RTN","HMPDJ08",159,0)
 I TYPE="ALL" S CLASS="3^244^"_+$$CLASS^TIUSROI("SURGICAL REPORTS")_"^CP^LR^RA" Q
"RTN","HMPDJ08",160,0)
 ;
"RTN","HMPDJ08",161,0)
 I TYPE="PN"   S CLASS=3 Q                            ;Progress Notes
"RTN","HMPDJ08",162,0)
 I TYPE="CR"   S CLASS=3,SUBCLASS=$$CLASS^TIUCNSLT Q  ;Consults
"RTN","HMPDJ08",163,0)
 I TYPE="CWAD" S CLASS=3,SUBCLASS="25^27^30^31" Q     ;CWAD
"RTN","HMPDJ08",164,0)
 I TYPE="C"    S CLASS=3,SUBCLASS=30 Q                ;Crisis Note
"RTN","HMPDJ08",165,0)
 I TYPE="W"    S CLASS=3,SUBCLASS=31 Q                ;Clinical Warning
"RTN","HMPDJ08",166,0)
 I TYPE="A"    S CLASS=3,SUBCLASS=25 Q                ;Allergy Note
"RTN","HMPDJ08",167,0)
 I TYPE="D"    S CLASS=3,SUBCLASS=27 Q                ;Advance Directive
"RTN","HMPDJ08",168,0)
 ;
"RTN","HMPDJ08",169,0)
 I TYPE="DS"   S CLASS=244 Q                          ;Discharge Summary
"RTN","HMPDJ08",170,0)
 ;
"RTN","HMPDJ08",171,0)
 I TYPE="SR"   S CLASS=$$CLASS^TIUSROI("SURGICAL REPORTS") Q
"RTN","HMPDJ08",172,0)
 I TYPE="CP" D  Q                                     ;Clin Procedures
"RTN","HMPDJ08",173,0)
 . I STATUS'=2 S CLASS="CP"                           ; if unsigned,
"RTN","HMPDJ08",174,0)
 . E  D CPCLASS^TIUCP(.CP) S CLASS=CP                 ; use TIU class#
"RTN","HMPDJ08",175,0)
 ;
"RTN","HMPDJ08",176,0)
 I TYPE="LR"   S CLASS=$S(STATUS=2:$$LR,1:"LR") Q     ;Lab/Pathology
"RTN","HMPDJ08",177,0)
 ;
"RTN","HMPDJ08",178,0)
 I TYPE="RA"   S CLASS="RA" Q                         ;Radiology
"RTN","HMPDJ08",179,0)
 ;
"RTN","HMPDJ08",180,0)
 Q
"RTN","HMPDJ08",181,0)
 ;
"RTN","HMPDJ08",182,0)
LR() ; -- Return ien of Lab class
"RTN","HMPDJ08",183,0)
 N Y S Y=+$O(^TIU(8925.1,"B","LR LABORATORY REPORTS",0))
"RTN","HMPDJ08",184,0)
 I Y>0,$S($P($G(^TIU(8925.1,Y,0)),U,4)="CL":0,$P($G(^(0)),U,4)="DC":0,1:1) S Y=0
"RTN","HMPDJ08",185,0)
 Q Y
"RTN","HMPDJ08",186,0)
 ;
"RTN","HMPDJ08",187,0)
MATCH(DOC,STS) ; -- Return 1 or 0, if document DA matches search criteria
"RTN","HMPDJ08",188,0)
 N Y,DA,LOCAL,OK S Y=0
"RTN","HMPDJ08",189,0)
 S DA=+$G(DOC) G:DA<1 MQ
"RTN","HMPDJ08",190,0)
 ; include addenda if pulling only unsigned items
"RTN","HMPDJ08",191,0)
 I $P(DOC,U,2)?1"Addendum ".E,STATUS'=2 G MQ
"RTN","HMPDJ08",192,0)
 ; TIU unsigned list can include completed parent notes
"RTN","HMPDJ08",193,0)
 I $G(STS)=2,$P(DOC,U,7)'="unsigned" G MQ
"RTN","HMPDJ08",194,0)
 S LOCAL=$$GET1^DIQ(8925,DA_",",.01,"I") ;local Title 8925.1 ien
"RTN","HMPDJ08",195,0)
 I $L(SUBCLASS) D  G:'OK MQ
"RTN","HMPDJ08",196,0)
 . N I,X S OK=0
"RTN","HMPDJ08",197,0)
 . F I=1:1:$L(SUBCLASS,"^") S X=$P(SUBCLASS,U,I) I $$ISA^TIULX(LOCAL,X) S OK=1 Q
"RTN","HMPDJ08",198,0)
 S Y=1
"RTN","HMPDJ08",199,0)
MQ Q Y
"RTN","HMPDJ08",200,0)
 ;
"RTN","HMPDJ08",201,0)
TYPE(X) ; -- Return name of category type X
"RTN","HMPDJ08",202,0)
 S X=$G(X)
"RTN","HMPDJ08",203,0)
 I X="PN" Q "Progress Note"
"RTN","HMPDJ08",204,0)
 I X="DS" Q "Discharge Summary"
"RTN","HMPDJ08",205,0)
 I X="CP" Q "Clinical Procedure"
"RTN","HMPDJ08",206,0)
 I X="SR" Q "Surgery Report"
"RTN","HMPDJ08",207,0)
 I X="LR" Q "Laboratory Report"
"RTN","HMPDJ08",208,0)
 I X="RA" Q "Radiology Report"
"RTN","HMPDJ08",209,0)
 I X="CR" Q "Consult Report"
"RTN","HMPDJ08",210,0)
 I X="C"  Q "Crisis Note"
"RTN","HMPDJ08",211,0)
 I X="W"  Q "Clinical Warning"
"RTN","HMPDJ08",212,0)
 I X="A"  Q "Allergy/Adverse Reaction"
"RTN","HMPDJ08",213,0)
 I X="D"  Q "Advance Directive"
"RTN","HMPDJ08",214,0)
 Q ""
"RTN","HMPDJ08A")
0^41^B46989359
"RTN","HMPDJ08A",1,0)
HMPDJ08A ;SLC/MKB -- Documents cont ;6/25/12  16:11
"RTN","HMPDJ08A",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ08A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ08A",4,0)
 ;
"RTN","HMPDJ08A",5,0)
 ;pass HMPXX from CP1 section 12.2.14 agilex/js
"RTN","HMPDJ08A",6,0)
 ;
"RTN","HMPDJ08A",7,0)
 ; External References          DBIA#
"RTN","HMPDJ08A",8,0)
 ; -------------------          -----
"RTN","HMPDJ08A",9,0)
 ; ^DPT                         10035
"RTN","HMPDJ08A",10,0)
 ; ^LR                            525
"RTN","HMPDJ08A",11,0)
 ; ^RADPT                        2480
"RTN","HMPDJ08A",12,0)
 ; ^RARPT                        8000005
"RTN","HMPDJ08A",13,0)
 ; ^SC                          10040
"RTN","HMPDJ08A",14,0)
 ; ^TMP("MDHSP" [MDPS1]          4230
"RTN","HMPDJ08A",15,0)
 ; ^VA(200                      10060
"RTN","HMPDJ08A",16,0)
 ; %DT                          10003
"RTN","HMPDJ08A",17,0)
 ; DIQ                           2056
"RTN","HMPDJ08A",18,0)
 ; GMRCGUIB                      2980
"RTN","HMPDJ08A",19,0)
 ; LR7OR1,^TMP("LRRR"            2503
"RTN","HMPDJ08A",20,0)
 ; MCARUTL3                      3280
"RTN","HMPDJ08A",21,0)
 ; PXAPI                         1894
"RTN","HMPDJ08A",22,0)
 ; RAO7PC1                  2043,2265
"RTN","HMPDJ08A",23,0)
 ; RAO7PC3                       2877
"RTN","HMPDJ08A",24,0)
 ;
"RTN","HMPDJ08A",25,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ08A",26,0)
 ;
"RTN","HMPDJ08A",27,0)
 ; ------------------------------------------------------------------
"RTN","HMPDJ08A",28,0)
 ; documentClass = CLINICAL PROCEDURES
"RTN","HMPDJ08A",29,0)
 ; nationalTitle = 4696566^PROCEDURE REPORT
"RTN","HMPDJ08A",30,0)
 ;       Service = 4696471^PROCEDURE
"RTN","HMPDJ08A",31,0)
 ;          Type = 4696123^REPORT
"RTN","HMPDJ08A",32,0)
 ;
"RTN","HMPDJ08A",33,0)
 ;
"RTN","HMPDJ08A",34,0)
CP(DFN,BEG,END,MAX) ; -- Medicine reports
"RTN","HMPDJ08A",35,0)
 N HMPN,HMPX,RTN,TIUN,CONS,HMPD,I,DA,X,Y,%DT,DATE,GBL
"RTN","HMPDJ08A",36,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","HMPDJ08A",37,0)
 D MDPS1^HMPDJ03(DFN,BEG,END,MAX)             ;gets ^TMP("MDHSP",$J)
"RTN","HMPDJ08A",38,0)
 S HMPN=0 F  S HMPN=$O(^TMP("MDHSP",$J,HMPN)) Q:HMPN<1  S HMPX=$G(^(HMPN)) D
"RTN","HMPDJ08A",39,0)
 . N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ08A",40,0)
 . S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ08A",41,0)
 . S ERRMSG="A problem occurred converting a medicine report."
"RTN","HMPDJ08A",42,0)
 . S RTN=$P(HMPX,U,3,4)  Q:RTN="PRPRO^MDPS4"  ;skip non-CP items
"RTN","HMPDJ08A",43,0)
 . S TIUN=+$P(HMPX,U,14)
"RTN","HMPDJ08A",44,0)
 . I TIUN D EN1^HMPDJ08(TIUN,38)              ;38=TIU Clinical Document
"RTN","HMPDJ08A",45,0)
 . S CONS=+$P(HMPX,U,13) D:CONS DOCLIST^GMRCGUIB(.HMPD,CONS)
"RTN","HMPDJ08A",46,0)
 . K DA S I=0 F  S I=$O(HMPD(50,I)) Q:I<1  D
"RTN","HMPDJ08A",47,0)
 .. S DA=+HMPD(50,I) Q:DA=TIUN
"RTN","HMPDJ08A",48,0)
 .. D EN1^HMPDJ08(DA,38)
"RTN","HMPDJ08A",49,0)
 . Q:TIUN!$G(DA)                              ;done [got TIU note(s)]
"RTN","HMPDJ08A",50,0)
 . Q:RTN="PR702^MDPS1"                        ;CP, but no TIU note yet
"RTN","HMPDJ08A",51,0)
 . Q:RTN="PRPRO^MDPS4"                        ;non-CP procedure
"RTN","HMPDJ08A",52,0)
 . ; find ID for pre-TIU report
"RTN","HMPDJ08A",53,0)
 . S X=$P(HMPX,U,6),%DT="TXS" D ^%DT Q:Y'>0  S DATE=Y
"RTN","HMPDJ08A",54,0)
 . S GBL=+$P(HMPX,U,2)_";"_$$ROOT^HMPDMC(DFN,$P(HMPX,U,11),DATE)
"RTN","HMPDJ08A",55,0)
 . I GBL S X=$$CP1(DFN,GBL)
"RTN","HMPDJ08A",56,0)
 . I $G(HMPXX)]"" D EN1^HMPDJ08(HMPXX,"CP") ;  pass HMPXX from CP1 section 12.2.14 js
"RTN","HMPDJ08A",57,0)
 K ^TMP("MDHSP",$J),^TMP("HMPTEXT",$J)
"RTN","HMPDJ08A",58,0)
 Q
"RTN","HMPDJ08A",59,0)
 ;
"RTN","HMPDJ08A",60,0)
CP1(DFN,ID) ; -- return report data as TIU string [$$RESOLVE]
"RTN","HMPDJ08A",61,0)
 S DFN=+$G(DFN),ID=$G(ID) I DFN<1!'$L(ID) Q ""
"RTN","HMPDJ08A",62,0)
 N Y,HMPY,HMPFN,X,NAME,DATE,STS,USER,SIGN,TEXT
"RTN","HMPDJ08A",63,0)
 S HMPFN=+$P(ID,"(",2) ; example 699.5
"RTN","HMPDJ08A",64,0)
 D MEDLKUP^MCARUTL3(.HMPY,HMPFN,+ID)
"RTN","HMPDJ08A",65,0)
 I HMPY<1 Q ""  ;error in CP
"RTN","HMPDJ08A",66,0)
 S NAME=$P(HMPY,U,9),DATE=$P(HMPY,U,6)
"RTN","HMPDJ08A",67,0)
 S X=$$GET1^DIQ(HMPFN,+ID_",",1506)
"RTN","HMPDJ08A",68,0)
 S STS=$S($L(X):X,1:"COMPLETED")
"RTN","HMPDJ08A",69,0)
 S X=+$$GET1^DIQ(HMPFN,+ID_",",701,"I"),(USER,SIGN)=""
"RTN","HMPDJ08A",70,0)
 S:X USER=X_";;"_$P($G(^VA(200,X,0)),U)
"RTN","HMPDJ08A",71,0)
 S X=+$$GET1^DIQ(HMPFN,+ID_",",1503,"I")
"RTN","HMPDJ08A",72,0)
 S:X SIGN="//"_X_";"_$P($G(^VA(200,X,0)),U)_";"_$$GET1^DIQ(HMPFN,+ID_",",1505,"I")
"RTN","HMPDJ08A",73,0)
 ; VST=$$GET1^DIQ(HMPFN,+ID_",",900,"I")
"RTN","HMPDJ08A",74,0)
 S Y=ID_U_NAME_U_DATE_U_U_USER_U_U_STS_"^^^2461^"_SIGN
"RTN","HMPDJ08A",75,0)
 S HMPXX=ID_U_NAME_U_DATE_U_U_USER_U_U_STS_"^^^2461^"_SIGN ; 12.2.14 js
"RTN","HMPDJ08A",76,0)
 S:$G(HMPTEXT) TEXT=$$TEXT^HMPDMC(DFN,ID,NAME) ;^TMP("HMPTEXT",$J,ID)
"RTN","HMPDJ08A",77,0)
 Q Y
"RTN","HMPDJ08A",78,0)
 ;
"RTN","HMPDJ08A",79,0)
 ; ------------------------------------------------------------------
"RTN","HMPDJ08A",80,0)
 ; documentClass = LR LABORATORY REPORTS
"RTN","HMPDJ08A",81,0)
 ; nationalTitle = 4697105^LABORATORY NOTE
"RTN","HMPDJ08A",82,0)
 ;       Subject = 4697104^LABORATORY
"RTN","HMPDJ08A",83,0)
 ;          Type = 4696120^NOTE
"RTN","HMPDJ08A",84,0)
 ;
"RTN","HMPDJ08A",85,0)
LR(DFN,BEG,END,MAX) ; -- Lab reports
"RTN","HMPDJ08A",86,0)
 N HMPSUB,HMPIDT,HMPITM,HMPTIU,HMPXID,LRDFN,IVDT,HMPN,DA
"RTN","HMPDJ08A",87,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","HMPDJ08A",88,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDJ08A",89,0)
 S LRDFN=+$G(^DPT(DFN,"LR")),IVDT=9999999-+$G(^LR(LRDFN,"AU")) ;LR7OB63D error
"RTN","HMPDJ08A",90,0)
 K ^TMP("LRRR",$J,DFN) D RR^LR7OR1(DFN,,BEG,END,"MIAP",,,MAX)
"RTN","HMPDJ08A",91,0)
 S HMPSUB="" F  S HMPSUB=$O(^TMP("LRRR",$J,DFN,HMPSUB)) Q:HMPSUB=""  D
"RTN","HMPDJ08A",92,0)
 . S HMPIDT=0 F  S HMPIDT=$O(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT)) Q:HMPIDT<1  I $O(^(HMPIDT,0)) D
"RTN","HMPDJ08A",93,0)
 .. S HMPTIU=$S(HMPSUB="AU":$NA(^LR(LRDFN,101)),1:$NA(^LR(LRDFN,HMPSUB,HMPIDT,.05)))
"RTN","HMPDJ08A",94,0)
 .. K HMPITM S HMPXID=HMPSUB_";"_HMPIDT
"RTN","HMPDJ08A",95,0)
 .. I '$O(@HMPTIU@(0)) S HMPX=$$LR1(DFN,HMPXID) D EN1^HMPDJ08(HMPX,"LR") Q
"RTN","HMPDJ08A",96,0)
 .. S HMPN=0 F  S HMPN=$O(@HMPTIU@(HMPN)) Q:HMPN<1  D  ;38=TIU Clin Doc
"RTN","HMPDJ08A",97,0)
 ... S DA=+$P($G(@HMPTIU@(HMPN,0)),U,2)
"RTN","HMPDJ08A",98,0)
 ... D:DA EN1^HMPDJ08(DA,38)
"RTN","HMPDJ08A",99,0)
 K ^TMP("LRRR",$J,DFN),^TMP("HMPTEXT",$J)
"RTN","HMPDJ08A",100,0)
 Q
"RTN","HMPDJ08A",101,0)
 ;
"RTN","HMPDJ08A",102,0)
LR1(DFN,ID) ; -- return report data as TIU string [$$RESOLVE]
"RTN","HMPDJ08A",103,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ08A",104,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ08A",105,0)
 S ERRMSG="A problem occurred converting lab report "_ID
"RTN","HMPDJ08A",106,0)
 S DFN=+$G(DFN),ID=$G(ID) I DFN<1!'$L(ID) Q ""
"RTN","HMPDJ08A",107,0)
 N Y,SUB,IDT,LRDFN,LR,NAME,LOC,USER,VST,SIGN,TEXT
"RTN","HMPDJ08A",108,0)
 K ^TMP("HMPTEXT",$J,ID)
"RTN","HMPDJ08A",109,0)
 S SUB=$P(ID,";"),IDT=+$P(ID,";",2),LRDFN=$G(^DPT(DFN,"LR"))
"RTN","HMPDJ08A",110,0)
 S LR=$S(SUB="AU":$G(^LR(LRDFN,"AU")),1:$G(^LR(LRDFN,SUB,IDT,0)))
"RTN","HMPDJ08A",111,0)
 S NAME="LR "_$$NAME^HMPDLRA(SUB)_" REPORT"
"RTN","HMPDJ08A",112,0)
 S LOC=$P(LR,U,$S(SUB="AU":5,1:8)) D  ;look-up visit
"RTN","HMPDJ08A",113,0)
 . N CDT,SC S CDT=9999999-IDT,SC="",X=0
"RTN","HMPDJ08A",114,0)
 . S:$L(LOC) SC=+$O(^SC("B",LOC,0))
"RTN","HMPDJ08A",115,0)
 . I CDT,LOC S X=$$GETENC^PXAPI(DFN,CDT,SC)
"RTN","HMPDJ08A",116,0)
 . S:X VST=+X
"RTN","HMPDJ08A",117,0)
 S X=+$P(LR,U,$S(SUB="AU":10,SUB="MI":4,1:2)) ;pathologist[author]
"RTN","HMPDJ08A",118,0)
 S USER=$S(X:X_";;"_$P($G(^VA(200,X,0)),U),1:""),SIGN=""
"RTN","HMPDJ08A",119,0)
 S X=$S(SUB="AU":$P(LR,U,15,16),SUB="MI":$P(LR,U,3,4),1:$P(LR,U,11)_U_$P(LR,U,13)) ;released
"RTN","HMPDJ08A",120,0)
 S:X SIGN="//"_+$P(X,U,2)_";"_$P($G(^VA(200,+$P(X,U,2),0)),U)_";"_+X
"RTN","HMPDJ08A",121,0)
 S Y=ID_U_NAME_U_(9999999-IDT)_U_U_USER_U_LOC_"^COMPLETED^"_$G(VST)_"^^2753^"_SIGN
"RTN","HMPDJ08A",122,0)
 S:$G(HMPTEXT) TEXT=$$TEXT^HMPDLRA(DFN,SUB,IDT) ;^TMP("HMPTEXT",$J,ID)
"RTN","HMPDJ08A",123,0)
 Q Y
"RTN","HMPDJ08A",124,0)
 ;
"RTN","HMPDJ08A",125,0)
 ; ------------------------------------------------------------------
"RTN","HMPDJ08A",126,0)
 ; nationalTitle = 4695068^RADIOLOGY REPORT
"RTN","HMPDJ08A",127,0)
 ;       Subject = 4693357^RADIOLOGY
"RTN","HMPDJ08A",128,0)
 ;          Type = 4696123^REPORT
"RTN","HMPDJ08A",129,0)
 ;
"RTN","HMPDJ08A",130,0)
RA(DFN,BEG,END,MAX) ; -- Radiology reports
"RTN","HMPDJ08A",131,0)
 N HMPXID,STS,PSET
"RTN","HMPDJ08A",132,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDJ08A",133,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)_"P"
"RTN","HMPDJ08A",134,0)
 K ^TMP($J,"RAE1") D EN1^RAO7PC1(DFN,BEG,END,MAX)
"RTN","HMPDJ08A",135,0)
 S HMPXID="" F  S HMPXID=$O(^TMP($J,"RAE1",DFN,HMPXID)) Q:HMPXID=""  D
"RTN","HMPDJ08A",136,0)
 . S STS=$P($G(^TMP($J,"RAE1",DFN,HMPXID)),U,3),PSET=$G(^(HMPXID,"CPRS"))
"RTN","HMPDJ08A",137,0)
 . Q:STS="No Report"!(STS="Deleted")  ;!(STS["Draft")
"RTN","HMPDJ08A",138,0)
 . I +PSET=2,$G(PSET(+HMPXID,$P(PSET,U,2))) Q  ;already have report
"RTN","HMPDJ08A",139,0)
 . S HMPX=$$RA1(DFN,HMPXID) D EN1^HMPDJ08(HMPX,"RA")
"RTN","HMPDJ08A",140,0)
 . I +PSET=2 S PSET(+HMPXID,$P(PSET,U,2))=$P(HMPXID,"-",2) ;parent
"RTN","HMPDJ08A",141,0)
 K ^TMP($J,"RAE1"),^TMP("HMPTEXT",$J)
"RTN","HMPDJ08A",142,0)
 Q
"RTN","HMPDJ08A",143,0)
 ;
"RTN","HMPDJ08A",144,0)
RA1(DFN,ID) ; -- return report data as TIU string [$$RESOLVE]
"RTN","HMPDJ08A",145,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ08A",146,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ08A",147,0)
 S ERRMSG="A problem occurred converting radiology report "_ID
"RTN","HMPDJ08A",148,0)
 S DFN=+$G(DFN),ID=$G(ID) I DFN<1!'$L(ID) Q ""
"RTN","HMPDJ08A",149,0)
 N EXAM,CASE,PROC,RAE3,RAE1,TEXT,I,X,Y,DATE,LOC,STS,IENS,VST,USER,SIGN
"RTN","HMPDJ08A",150,0)
 K RPT,^TMP("HMPTEXT",$J,ID)
"RTN","HMPDJ08A",151,0)
 S EXAM=DFN_U_$TR(ID,"-","^") D
"RTN","HMPDJ08A",152,0)
 . N DFN D EN3^RAO7PC3(EXAM) ;report
"RTN","HMPDJ08A",153,0)
 . D EN3^RAO7PC1(EXAM)       ;add'l values
"RTN","HMPDJ08A",154,0)
 S CASE=$O(^TMP($J,"RAE3",DFN,0)),PROC=$O(^(CASE,"")),RAE3=$G(^(PROC))
"RTN","HMPDJ08A",155,0)
 S RAE1=$G(^TMP($J,"RAE1",DFN,ID))
"RTN","HMPDJ08A",156,0)
 I $G(HMPTEXT) D
"RTN","HMPDJ08A",157,0)
 . S TEXT=$NA(^TMP("HMPTEXT",$J,ID))
"RTN","HMPDJ08A",158,0)
 . S I=0 F  S I=$O(^TMP($J,"RAE3",DFN,CASE,PROC,I)) Q:I<1  S X=^(I),@TEXT@(I)=X
"RTN","HMPDJ08A",159,0)
 S DATE=9999999.9999-(+ID),LOC=$P(RAE1,U,7),STS=$P(RAE3,U)
"RTN","HMPDJ08A",160,0)
 S IENS=$P(ID,"-",2)_","_+ID_","_DFN_","
"RTN","HMPDJ08A",161,0)
 S VST=$$GET1^DIQ(70.03,IENS,27,"I")
"RTN","HMPDJ08A",162,0)
 S X=+$G(^TMP($J,"RAE2",DFN,CASE,PROC,"P")),(USER,SIGN)=""
"RTN","HMPDJ08A",163,0)
 S:X USER=X_";;"_$P($G(^VA(200,X,0)),U)
"RTN","HMPDJ08A",164,0)
 S X=$G(^TMP($J,"RAE2",DFN,CASE,PROC,"V"))
"RTN","HMPDJ08A",165,0)
 S:X SIGN="//"_+X_";"_$P($G(^VA(200,+X,0)),U)_";"_$$GET1^DIQ(74,+$P(RAE1,U,5)_",",7,"I")
"RTN","HMPDJ08A",166,0)
 I $D(^TMP($J,"RAE3",DFN,"PRINT_SET")) S PROC=$G(^("ORD")) ;use parent, if printset
"RTN","HMPDJ08A",167,0)
 S Y=ID_U_PROC_U_DATE_U_U_USER_U_LOC_U_STS_U_VST_"^^1901^"_SIGN
"RTN","HMPDJ08A",168,0)
 K ^TMP($J,"RAE3",DFN),^TMP($J,"RAE2",DFN)
"RTN","HMPDJ08A",169,0)
 Q Y
"RTN","HMPDJ09")
0^42^B44166095
"RTN","HMPDJ09",1,0)
HMPDJ09 ;SLC/MKB -- PCE ;8/2/11  15:29
"RTN","HMPDJ09",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ09",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ09",4,0)
 ;
"RTN","HMPDJ09",5,0)
 ; External References          DBIA#
"RTN","HMPDJ09",6,0)
 ; -------------------          -----
"RTN","HMPDJ09",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDJ09",8,0)
 ; ^PXRMINDX                     4290
"RTN","HMPDJ09",9,0)
 ; ^SC                          10040
"RTN","HMPDJ09",10,0)
 ; ^VA(200                      10060
"RTN","HMPDJ09",11,0)
 ; DIC                           2051
"RTN","HMPDJ09",12,0)
 ; DILFD                         2055
"RTN","HMPDJ09",13,0)
 ; DIQ                           2056
"RTN","HMPDJ09",14,0)
 ; PXAPI,^TMP("PXKENC"           1894
"RTN","HMPDJ09",15,0)
 ; VALM1                        10116
"RTN","HMPDJ09",16,0)
 ; XUAF4                         2171
"RTN","HMPDJ09",17,0)
 ;
"RTN","HMPDJ09",18,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ09",19,0)
 ;
"RTN","HMPDJ09",20,0)
PX(FNUM) ; -- PCE item(s)
"RTN","HMPDJ09",21,0)
 I $G(HMPID) D PXA(HMPID) Q
"RTN","HMPDJ09",22,0)
 N HMPIDT,ID D SORT ;sort ^PXRMINDX into ^TMP("HMPPX",$J,IDT)
"RTN","HMPDJ09",23,0)
 S HMPIDT=0 F  S HMPIDT=$O(^TMP("HMPPX",$J,HMPIDT)) Q:HMPIDT<1  D  Q:HMPI'<HMPMAX
"RTN","HMPDJ09",24,0)
 . S ID=0 F  S ID=$O(^TMP("HMPPX",$J,HMPIDT,ID)) Q:ID<1  D PX1 Q:HMPI'<HMPMAX
"RTN","HMPDJ09",25,0)
 K ^TMP("HMPPX",$J)
"RTN","HMPDJ09",26,0)
 Q
"RTN","HMPDJ09",27,0)
 ;
"RTN","HMPDJ09",28,0)
PXA(ID) ; -- find ID in ^PXRMINDX(FNUM), fall thru to PX1 if successful
"RTN","HMPDJ09",29,0)
 N N,ROOT,IDX,P,ITEM,DATE,HMPIDT
"RTN","HMPDJ09",30,0)
 S N=+$P(FNUM,".",2) K ^TMP("HMPPX",$J)
"RTN","HMPDJ09",31,0)
 I N=7!(N=18) S ROOT="^PXRMINDX("_FNUM_",""PPI"","_+$G(DFN)
"RTN","HMPDJ09",32,0)
 E  S ROOT="^PXRMINDX("_FNUM_",""PI"","_+$G(DFN)
"RTN","HMPDJ09",33,0)
 S IDX=ROOT_")" F  S IDX=$Q(@IDX) Q:$P(IDX,",",1,3)'=ROOT  D
"RTN","HMPDJ09",34,0)
 . S P=$L(IDX,",") Q:ID'=+$P(IDX,",",P)  ;last subscript
"RTN","HMPDJ09",35,0)
 . S DATE=+$P(IDX,",",P-1),ITEM=+$P(IDX,",",P-2)
"RTN","HMPDJ09",36,0)
 . S HMPIDT=9999999-DATE,^TMP("HMPPX",$J,HMPIDT,ID)=ITEM_U_DATE
"RTN","HMPDJ09",37,0)
 Q:'$D(^TMP("HMPPX",$J))  ;not found
"RTN","HMPDJ09",38,0)
PX1 ; -- PCE ^TMP("HMPPX",$J,HMPIDT,ID)=ITM^DATE for FNUM
"RTN","HMPDJ09",39,0)
 N N,COLL,TAG,HMPF,FLD,TMP,VISIT,X0,X12,FAC,LOC,X,Y,PCE
"RTN","HMPDJ09",40,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ09",41,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ09",42,0)
 S N=+$P(FNUM,".",2),TAG=$S(N=7:"VPOV",N=11:"VIMM",N=12:"VSKIN",N=13:"VXAM",N=16:"VPEDU",N=18:"VCPT",1:"VHF")
"RTN","HMPDJ09",43,0)
 S ERRMSG="A problem occurred converting record "_ID_" for "_TAG
"RTN","HMPDJ09",44,0)
 D @(TAG_"^PXPXRM(ID,.HMPF)")
"RTN","HMPDJ09",45,0)
 ;
"RTN","HMPDJ09",46,0)
 S PCE("localId")=ID,TMP=$G(^TMP("HMPPX",$J,HMPIDT,ID))
"RTN","HMPDJ09",47,0)
 S COLL=$S(N=7:"pov",N=11:"immunization",N=12:"skin",N=13:"exam",N=16:"education",N=18:"cpt",1:"factor")
"RTN","HMPDJ09",48,0)
 S PCE("uid")=$$SETUID^HMPUTILS(COLL,DFN,ID)
"RTN","HMPDJ09",49,0)
 ; TAG=$S(N=23:"recorded",N=11:"administeredDateTime",1:"dateTimeEntered")
"RTN","HMPDJ09",50,0)
 S TAG=$S(N=11:"administeredDateTime",1:"entered")
"RTN","HMPDJ09",51,0)
 S PCE(TAG)=$$JSONDT^HMPUTILS($P(TMP,U,2))
"RTN","HMPDJ09",52,0)
 S PCE("name")=$$EXTERNAL^DILFD(FNUM,.01,,+TMP)
"RTN","HMPDJ09",53,0)
 S VISIT=+$G(HMPF("VISIT")),PCE("encounterUid")=$$SETUID^HMPUTILS("visit",DFN,VISIT)
"RTN","HMPDJ09",54,0)
 S PCE("encounterName")=$$NAME^HMPDJ04(VISIT)
"RTN","HMPDJ09",55,0)
 S X0=$G(^AUPNVSIT(+VISIT,0)),FAC=+$P(X0,U,6),LOC=+$P(X0,U,22)
"RTN","HMPDJ09",56,0)
 S:FAC X=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDJ09",57,0)
 S:'FAC X=$$FAC^HMPD(LOC)
"RTN","HMPDJ09",58,0)
 D FACILITY^HMPUTILS(X,"PCE")
"RTN","HMPDJ09",59,0)
 S:LOC PCE("locationUid")=$$SETUID^HMPUTILS("location",,LOC),PCE("locationName")=$P($G(^SC(LOC,0)),U)
"RTN","HMPDJ09",60,0)
 S X=$G(HMPF("COMMENTS")) S:$L(X) PCE("comment")=X
"RTN","HMPDJ09",61,0)
POV I FNUM=9000010.07 D  G PXQ
"RTN","HMPDJ09",62,0)
 . S X=$G(HMPF("PRIMARY/SECONDARY")),PCE("type")=$S($L(X):X,1:"U")
"RTN","HMPDJ09",63,0)
 . S X=PCE("name"),PCE("icdCode")=$$SETNCS^HMPUTILS("icd",X)
"RTN","HMPDJ09",64,0)
 . S X=$G(HMPF("PROVIDER NARRATIVE")),PCE("name")=$$EXTERNAL^DILFD(9000010.07,.04,,X)
"RTN","HMPDJ09",65,0)
CPT I FNUM=9000010.18 D  G PXQ
"RTN","HMPDJ09",66,0)
 . S X=$G(HMPF("PRINCIPAL PROCEDURE")),PCE("type")=$S($L(X):X,1:"U")
"RTN","HMPDJ09",67,0)
 . S X=PCE("name"),PCE("cptCode")=$$SETNCS^HMPUTILS("cpt",X)
"RTN","HMPDJ09",68,0)
 . S X=$G(HMPF("PROVIDER NARRATIVE")),PCE("name")=$$EXTERNAL^DILFD(9000010.18,.04,,X)
"RTN","HMPDJ09",69,0)
 . S PCE("quantity")=HMPF("QUANTITY")
"RTN","HMPDJ09",70,0)
 S X=$G(HMPF("VALUE")),FLD=$S(FNUM=9000010.16:.06,1:.04)
"RTN","HMPDJ09",71,0)
 S Y=$$EXTERNAL^DILFD(FNUM,FLD,,X)
"RTN","HMPDJ09",72,0)
IM I FNUM=9000010.11 D  G PXQ ;immunization
"RTN","HMPDJ09",73,0)
 . S:$L(Y) PCE("seriesName")=Y,PCE("seriesCode")=$$SETUID^HMPUTILS("series",DFN,Y)
"RTN","HMPDJ09",74,0)
 . S X=$G(HMPF("REACTION")) I $L(X) D
"RTN","HMPDJ09",75,0)
 .. S PCE("reactionName")=$$EXTERNAL^DILFD(9000010.11,.06,,X)
"RTN","HMPDJ09",76,0)
 .. S PCE("reactionCode")=$$SETUID^HMPUTILS("reaction",DFN,X)
"RTN","HMPDJ09",77,0)
 . S PCE("contraindicated")=$S(+$G(HMPF("CONTRAINDICATED")):"true",1:"false")
"RTN","HMPDJ09",78,0)
 . I '$D(^TMP("PXKENC",$J,VISIT)) D ENCEVENT^PXAPI(VISIT,1)
"RTN","HMPDJ09",79,0)
 . S X12=$G(^TMP("PXKENC",$J,VISIT,"IMM",ID,12))
"RTN","HMPDJ09",80,0)
 . S X=$P(X12,U,4) S:'X X=$P(X12,U,2)
"RTN","HMPDJ09",81,0)
 . I 'X S I=0 F  S I=$O(^TMP("PXKENC",$J,VISIT,"PRV",I)) Q:I<1  I $P($G(^(I,0)),U,4)="P" S X=+^(0) Q
"RTN","HMPDJ09",82,0)
 . S:X PCE("performerUid")=$$SETUID^HMPUTILS("user",,+X),PCE("performerName")=$P($G(^VA(200,X,0)),U)
"RTN","HMPDJ09",83,0)
 . ; CPT mapping
"RTN","HMPDJ09",84,0)
 . S X=+$$FIND1^DIC(811.1,,"QX",+TMP_";AUTTIMM(","B") I X>0 D
"RTN","HMPDJ09",85,0)
 .. S Y=$$GET1^DIQ(811.1,X_",",.02,"I") Q:Y<1
"RTN","HMPDJ09",86,0)
 .. N CPT S CPT=$G(@(U_$P(Y,";",2)_+Y_",0)"))
"RTN","HMPDJ09",87,0)
 .. S PCE("cptCode")=$$SETNCS^HMPUTILS("cpt",+CPT)
"RTN","HMPDJ09",88,0)
 .. S (PCE("summary"),PCE("cptName"))=$P(CPT,U,2)
"RTN","HMPDJ09",89,0)
HF I FNUM=9000010.23 D  G PXQ ;health factor
"RTN","HMPDJ09",90,0)
 . S:$L(X) PCE("severityUid")=$$SETVURN^HMPUTILS("factor-severity",X),PCE("severityName")=$$LOWER^VALM1(Y)
"RTN","HMPDJ09",91,0)
 . S X=$$GET1^DIQ(9999999.64,+TMP_",",.03,"I") I X D
"RTN","HMPDJ09",92,0)
 .. S PCE("categoryUid")=$$SETVURN^HMPUTILS("factor-category",X)
"RTN","HMPDJ09",93,0)
 .. S PCE("categoryName")=$$EXTERNAL^DILFD(9999999.64,.03,"",X)
"RTN","HMPDJ09",94,0)
 . S X=$$GET1^DIQ(9999999.64,+TMP_",",.08)
"RTN","HMPDJ09",95,0)
 . I $E(X)="Y" S PCE("display")="true"
"RTN","HMPDJ09",96,0)
 . S PCE("kind")="Health Factor",PCE("summary")=PCE("name")
"RTN","HMPDJ09",97,0)
SK I FNUM=9000010.12 D  ;skin test [fall thru to set result]
"RTN","HMPDJ09",98,0)
 . S X=$G(HMPF("READING")) S:$L(X) PCE("reading")=X
"RTN","HMPDJ09",99,0)
 . S X=$G(HMPF("DATE READ")) S:X PCE("dateRead")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ09",100,0)
 S:$L(Y) PCE("result")=Y
"RTN","HMPDJ09",101,0)
PXQ ;finish
"RTN","HMPDJ09",102,0)
 S PCE("lastUpdateTime")=$$EN^HMPSTMP(COLL) ; RHL 20150115
"RTN","HMPDJ09",103,0)
 S PCE("stampTime")=PCE("lastUpdateTime")   ; RHL 20150115
"RTN","HMPDJ09",104,0)
 D ADD^HMPDJ("PCE",COLL)
"RTN","HMPDJ09",105,0)
 Q
"RTN","HMPDJ09",106,0)
 ;
"RTN","HMPDJ09",107,0)
SORT ; -- build ^TMP("HMPPX",$J,9999999-DATE,DA)=ITEM^DATE in range
"RTN","HMPDJ09",108,0)
 N TYPE,ITEM,DATE,DA,IDT K ^TMP("HMPPX",$J)
"RTN","HMPDJ09",109,0)
 I FNUM=9000010.07!(FNUM=9000010.18) G PPI
"RTN","HMPDJ09",110,0)
PI ; from ^PXRMINDX(FNUM,"PI",DFN,ITEM,DATE,DA)
"RTN","HMPDJ09",111,0)
 S ITEM=0 F  S ITEM=$O(^PXRMINDX(FNUM,"PI",+$G(DFN),ITEM)) Q:ITEM<1  D
"RTN","HMPDJ09",112,0)
 . S DATE=0 F  S DATE=$O(^PXRMINDX(FNUM,"PI",+$G(DFN),ITEM,DATE)) Q:DATE<1  D
"RTN","HMPDJ09",113,0)
 .. Q:DATE<HMPSTART  Q:DATE>HMPSTOP  S IDT=9999999-DATE
"RTN","HMPDJ09",114,0)
 .. S DA=0 F  S DA=$O(^PXRMINDX(FNUM,"PI",+$G(DFN),ITEM,DATE,DA)) Q:DA<1  S ^TMP("HMPPX",$J,IDT,DA)=ITEM_U_DATE
"RTN","HMPDJ09",115,0)
 Q
"RTN","HMPDJ09",116,0)
PPI ; from ^PXRMINDX(FNUM,"PPI",DFN,TYPE,ITEM,DATE,DA)
"RTN","HMPDJ09",117,0)
 S TYPE="" F  S TYPE=$O(^PXRMINDX(FNUM,"PPI",+$G(DFN),TYPE)) Q:TYPE=""  D
"RTN","HMPDJ09",118,0)
 . S ITEM=0 F  S ITEM=$O(^PXRMINDX(FNUM,"PPI",+$G(DFN),TYPE,ITEM)) Q:ITEM<1  D
"RTN","HMPDJ09",119,0)
 .. S DATE=0 F  S DATE=$O(^PXRMINDX(FNUM,"PPI",+$G(DFN),TYPE,ITEM,DATE)) Q:DATE<1  D
"RTN","HMPDJ09",120,0)
 ... Q:DATE<HMPSTART  Q:DATE>HMPSTOP  S IDT=9999999-DATE
"RTN","HMPDJ09",121,0)
 ... S DA=0 F  S DA=$O(^PXRMINDX(FNUM,"PPI",+$G(DFN),TYPE,ITEM,DATE,DA)) Q:DA<1  S ^TMP("HMPPX",$J,IDT,DA)=ITEM_U_DATE
"RTN","HMPDJ09",122,0)
 Q
"RTN","HMPDJ09",123,0)
PTF ; from ^PXRMINDX(45,"ICD9","PNI",DFN,TYPE,ITEM,DATE,DA)
"RTN","HMPDJ09",124,0)
 ;Purpose - Build ^TMP("HMPPX") from ^PXRMINDX(45,HMPISYS,"PNI",DFN)
"RTN","HMPDJ09",125,0)
 ;
"RTN","HMPDJ09",126,0)
 ;Called by - PTF^HMPDJ0 (if HMPID is not set)
"RTN","HMPDJ09",127,0)
 ;
"RTN","HMPDJ09",128,0)
 ;Assumptions -
"RTN","HMPDJ09",129,0)
 ;1. DFN, HMPSTART and HMPSTOP variables have been set in prior code
"RTN","HMPDJ09",130,0)
 ;2. ^TMP("HMPPX") does not exist and needs to be built
"RTN","HMPDJ09",131,0)
 ;3. '$G(HMPID)
"RTN","HMPDJ09",132,0)
 ;
"RTN","HMPDJ09",133,0)
 ;Modification History -
"RTN","HMPDJ09",134,0)
 ;US5630 (TW) - HMPISYS can be either "ICD" or "10D" (ICD-10)
"RTN","HMPDJ09",135,0)
 ;
"RTN","HMPDJ09",136,0)
 N HMPISYS,HMPTYP,HMPDX,HMPDT,HMPITEM
"RTN","HMPDJ09",137,0)
 S HMPISYS="" F  S HMPISYS=$O(^PXRMINDX(45,HMPISYS)) Q:HMPISYS=""  D 
"RTN","HMPDJ09",138,0)
 . Q:'$D(^PXRMINDX(45,HMPISYS,"PNI",+$G(DFN)))
"RTN","HMPDJ09",139,0)
 . S HMPTYP="" F  S HMPTYP=$O(^PXRMINDX(45,HMPISYS,"PNI",+$G(DFN),HMPTYP)) Q:HMPTYP=""  D
"RTN","HMPDJ09",140,0)
 .. S HMPDX=0 F  S HMPDX=$O(^PXRMINDX(45,HMPISYS,"PNI",+$G(DFN),HMPTYP,HMPDX)) Q:HMPDX=""  D
"RTN","HMPDJ09",141,0)
 ... S HMPDT=0 F  S HMPDT=$O(^PXRMINDX(45,HMPISYS,"PNI",+$G(DFN),HMPTYP,HMPDX,HMPDT)) Q:HMPDT<1  D
"RTN","HMPDJ09",142,0)
 .... Q:HMPDT<HMPSTART  Q:HMPDT>HMPSTOP  S HMPRDT=9999999-HMPDT
"RTN","HMPDJ09",143,0)
 .... S HMPITEM="" F  S HMPITEM=$O(^PXRMINDX(45,HMPISYS,"PNI",+$G(DFN),HMPTYP,HMPDX,HMPDT,HMPITEM)) Q:HMPITEM=""  S ^TMP("HMPPX",$J,HMPRDT,HMPITEM_";"_HMPTYP)=HMPDX_U_HMPDT_U_HMPISYS
"RTN","HMPDJ09",144,0)
 Q
"RTN","HMPDJ09M")
0^43^B10971767
"RTN","HMPDJ09M",1,0)
HMPDJ09M ;SLC/MKB -- Mental Health ;9/9/13 4:51pm
"RTN","HMPDJ09M",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ09M",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ09M",4,0)
 ;
"RTN","HMPDJ09M",5,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ09M",6,0)
 ;
"RTN","HMPDJ09M",7,0)
 ;
"RTN","HMPDJ09M",8,0)
MH ; -- Mental Health Administrations [from ^HMPDJ0]
"RTN","HMPDJ09M",9,0)
 I $G(HMPID) D MH1(HMPID) Q
"RTN","HMPDJ09M",10,0)
 N CNT,HMPIDT,ID,FNUM,TOTAL,HMPOUT,HMPYS,IEN
"RTN","HMPDJ09M",11,0)
 ;
"RTN","HMPDJ09M",12,0)
 S IEN=0 F  S IEN=$O(^YTT(601.71,IEN)) Q:IEN'>0  D
"RTN","HMPDJ09M",13,0)
 .S HMPYS("CODE")=IEN,HMPYS("DFN")=+$G(DFN),HMPYS("LIMIT")=999
"RTN","HMPDJ09M",14,0)
 .K HMPOUT
"RTN","HMPDJ09M",15,0)
 .D PTTEST^YTQPXRM2(.HMPOUT,.HMPYS)
"RTN","HMPDJ09M",16,0)
 .I HMPOUT(1)["[ERROR]" Q
"RTN","HMPDJ09M",17,0)
 .S TOTAL=$P(HMPOUT(1),U,2)+1
"RTN","HMPDJ09M",18,0)
 .I $P(HMPOUT(1),U,2)<1 Q
"RTN","HMPDJ09M",19,0)
 .;S CNT=1 F  S CNT=$O(HMPOUT(CNT)) Q:CNT'>0  D
"RTN","HMPDJ09M",20,0)
 .F CNT=2:1:TOTAL D
"RTN","HMPDJ09M",21,0)
 ..I $G(HMPOUT(CNT))="" Q
"RTN","HMPDJ09M",22,0)
 ..S ID=$P(HMPOUT(CNT),U)
"RTN","HMPDJ09M",23,0)
 ..D MH1(ID,IEN)
"RTN","HMPDJ09M",24,0)
 ;handle old MH test before the lastest revision to their package
"RTN","HMPDJ09M",25,0)
 ;S FNUM=601.2 D SORT^HMPDJ09 ;sort ^PXRMINDX into ^TMP("HMPPX",$J,IDT)
"RTN","HMPDJ09M",26,0)
 ;S HMPIDT=0 F  S HMPIDT=$O(^TMP("HMPPX",$J,HMPIDT)) Q:HMPIDT<1  D  Q:HMPI'<HMPMAX
"RTN","HMPDJ09M",27,0)
 ;. S ID=0 F  S ID=$O(^TMP("HMPPX",$J,HMPIDT,ID)) Q:ID<1  D YT1^HMPDJ09(ID) Q:HMPI'<HMPMAX
"RTN","HMPDJ09M",28,0)
 ;I HMPI'<HMPMAX Q
"RTN","HMPDJ09M",29,0)
 ;handle new MH test  after revision to their package
"RTN","HMPDJ09M",30,0)
 ;S FNUM=601.84 D SORT^HMPDJ09 ;sort ^PXRMINDX into ^TMP("HMPPX",$J,IDT)
"RTN","HMPDJ09M",31,0)
 ;S HMPIDT=0 F  S HMPIDT=$O(^TMP("HMPPX",$J,HMPIDT)) Q:HMPIDT<1  D  Q:HMPI'<HMPMAX
"RTN","HMPDJ09M",32,0)
 ;. S ID=0 F  S ID=$O(^TMP("HMPPX",$J,HMPIDT,ID)) Q:ID<1  D YT1^HMPDJ09(ID) Q:HMPI'<HMPMAX
"RTN","HMPDJ09M",33,0)
 K ^TMP("HMPPX",$J)
"RTN","HMPDJ09M",34,0)
 Q
"RTN","HMPDJ09M",35,0)
 ;
"RTN","HMPDJ09M",36,0)
MH1(ID,IEN) ; -- MH Administration
"RTN","HMPDJ09M",37,0)
 N HMPY,COPY,GBL,ISCOPY,MH,NAME,NODE,CNT,I,X2,X,Y,TEMP,TEXT
"RTN","HMPDJ09M",38,0)
 D ENDAS71^YTQPXRM6(.HMPY,ID)
"RTN","HMPDJ09M",39,0)
 ;
"RTN","HMPDJ09M",40,0)
 S NAME=$P($G(^YTT(601.71,IEN,0)),U)
"RTN","HMPDJ09M",41,0)
 S COPY=$G(^YTT(601.71,IEN,7))
"RTN","HMPDJ09M",42,0)
 S ISCOPY=+$P($G(^YTT(601.71,IEN,8)),U,5)
"RTN","HMPDJ09M",43,0)
 S MH("localId")=ID,X2=$G(HMPY(2))
"RTN","HMPDJ09M",44,0)
 S MH("uid")=$$SETUID^HMPUTILS("mh",DFN,ID)
"RTN","HMPDJ09M",45,0)
 S MH("displayName")=$P(X2,U,2),MH("name")=$S(NAME'="":NAME,1:$P(X2,U,3))
"RTN","HMPDJ09M",46,0)
 S MH("administeredDateTime")=$$JSONDT^HMPUTILS($P(X2,U,4))
"RTN","HMPDJ09M",47,0)
 S X=$P(X2,U,6) I $L(X) D  ;ordered by
"RTN","HMPDJ09M",48,0)
 . S Y=+$O(^VA(200,"B",X,0)),MH("providerName")=X
"RTN","HMPDJ09M",49,0)
 . S:Y MH("providerUid")=$$SETUID^HMPUTILS("user",,Y)
"RTN","HMPDJ09M",50,0)
 ;get questions/answers for test
"RTN","HMPDJ09M",51,0)
 S I=0,CNT=0 F  S I=$O(HMPY("R",I)) Q:I'>0  D
"RTN","HMPDJ09M",52,0)
 .S NODE=$G(HMPY("R",I))
"RTN","HMPDJ09M",53,0)
 .S CNT=CNT+1
"RTN","HMPDJ09M",54,0)
 .K TEMP,^TMP($J,"HMP MH TEXT")
"RTN","HMPDJ09M",55,0)
 .;answers
"RTN","HMPDJ09M",56,0)
 .S TEMP=$P(NODE,U,2) I TEMP>0 D
"RTN","HMPDJ09M",57,0)
 ..S MH("responses",CNT,"answer","uid")=$$SETVURN^HMPUTILS("mha-answer",TEMP)
"RTN","HMPDJ09M",58,0)
 ..S MH("responses",CNT,"answer","text")=$P(NODE,U,6)
"RTN","HMPDJ09M",59,0)
 .;questions
"RTN","HMPDJ09M",60,0)
 .S TEMP=$P(NODE,U,3) I TEMP>0 D
"RTN","HMPDJ09M",61,0)
 ..S MH("responses",CNT,"question","uid")=$$SETVURN^HMPUTILS("mha-question",TEMP)
"RTN","HMPDJ09M",62,0)
 ..S GBL=$NA(^YTT(601.72,TEMP,1))
"RTN","HMPDJ09M",63,0)
 ..D SETTEXT^HMPUTILS(GBL,$NA(^TMP($J,"HMP MH TEXT")))
"RTN","HMPDJ09M",64,0)
 ..M MH("responses",CNT,"question","text","\")=^TMP($J,"HMP MH TEXT")
"RTN","HMPDJ09M",65,0)
 ; get scale(s) for test
"RTN","HMPDJ09M",66,0)
 S I=0,CNT=0 F  S I=$O(HMPY("SI",I)) Q:I'>0  D
"RTN","HMPDJ09M",67,0)
 .S NODE=$G(HMPY("SI",I))
"RTN","HMPDJ09M",68,0)
 .S CNT=CNT+1
"RTN","HMPDJ09M",69,0)
 .S MH("scales",CNT,"scale","uid")=$$SETVURN^HMPUTILS("mha-scale",I)
"RTN","HMPDJ09M",70,0)
 .S MH("scales",CNT,"scale","name")=$P(NODE,U,2)
"RTN","HMPDJ09M",71,0)
 .S MH("scales",CNT,"scale","rawScore")=$P(NODE,U,3)
"RTN","HMPDJ09M",72,0)
 .I $P(NODE,U,4)'="" S MH("scales",CNT,"scale","transformScore")=$P(NODE,U,4)
"RTN","HMPDJ09M",73,0)
 S MH("isCopyright")=$S(ISCOPY=1:"true",1:"false")
"RTN","HMPDJ09M",74,0)
 I ISCOPY=1 S MH("copyrightText")=COPY
"RTN","HMPDJ09M",75,0)
 S MH("lastUpdateTime")=$$EN^HMPSTMP("mh") ;RHL 20150103
"RTN","HMPDJ09M",76,0)
 S MH("stampTime")=MH("lastUpdateTime") ; RHL 20150103
"RTN","HMPDJ09M",77,0)
 D ADD^HMPDJ("MH","mh")
"RTN","HMPDJ09M",78,0)
 Q
"RTN","HMPDJ1")
0^29^B18536339
"RTN","HMPDJ1",1,0)
HMPDJ1 ;SLC/MKB -- HMP Patient Object RPCs ; 11/2/12 5:45pm
"RTN","HMPDJ1",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ1",4,0)
 ;
"RTN","HMPDJ1",5,0)
 ;
"RTN","HMPDJ1",6,0)
PUT(HMP,PAT,TYPE,JSON) ; -- Save/update JSON OBJECT in ^HMP(800000.1), return UID if successful
"RTN","HMPDJ1",7,0)
 ; RPC = HMP PUT PATIENT DATA
"RTN","HMPDJ1",8,0)
 ;
"RTN","HMPDJ1",9,0)
 N ARRAY,CNT,ERR,HMPERR,UID,DA,X,I,DFN,HMPSYS
"RTN","HMPDJ1",10,0)
 ;M JSON=INPUT(0)
"RTN","HMPDJ1",11,0)
 D DECODE^HMPJSON("JSON","ARRAY","HMPERR")
"RTN","HMPDJ1",12,0)
 ;N XCNT S XCNT=$O(^XTMP("AGPARRAY",""),-1),XCNT=XCNT+1
"RTN","HMPDJ1",13,0)
 ;M ^XTMP("AGPARRAY",XCNT,"DATA")=ARRAY
"RTN","HMPDJ1",14,0)
 ;S ^XTMP("AGPARRAY",XCNT,"TYPE")=TYPE
"RTN","HMPDJ1",15,0)
 ;M ^XTMP("AGPARRAY")=ARRAY
"RTN","HMPDJ1",16,0)
 I $D(HMPERR) D  Q  ;S X=$G(ERR(1)) K ERR S ERR=X G PTQ
"RTN","HMPDJ1",17,0)
 . K ARRAY N HMPTMP,HMPTXT
"RTN","HMPDJ1",18,0)
 . S HMPTXT(1)="Problem decoding json input."
"RTN","HMPDJ1",19,0)
 . D SETERROR^HMPUTILS(.HMPTMP,.HMPERR,.HMPTXT,.JSON)
"RTN","HMPDJ1",20,0)
 . K HMPERR D ENCODE^HMPJSON("HMPTMP","ARRAY","HMPERR")
"RTN","HMPDJ1",21,0)
 . S HMP(.5)="{""apiVersion"":""1.01"",""error"":{"
"RTN","HMPDJ1",22,0)
 . M HMP(1)=ARRAY
"RTN","HMPDJ1",23,0)
 . S HMP(2)="}}"
"RTN","HMPDJ1",24,0)
 ;
"RTN","HMPDJ1",25,0)
 S UID=$G(ARRAY("uid")),HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPDJ1",26,0)
 I $L(UID) S DA=+$O(^HMP(800000.1,"B",UID,0)) I DA<1 S ERR=$$ERR(3,UID) G PTQ
"RTN","HMPDJ1",27,0)
 I '$L(UID) D  G:$D(ERR) PTQ Q:$D(HMPERR)
"RTN","HMPDJ1",28,0)
 . D NEW Q:$D(ERR)
"RTN","HMPDJ1",29,0)
 . S ARRAY("uid")=UID K JSON
"RTN","HMPDJ1",30,0)
 . D ENCODE^HMPJSON("ARRAY","JSON","HMPERR")
"RTN","HMPDJ1",31,0)
 . I $D(HMPERR) D  Q  ;S X=$G(ERR(1)) K ERR S ERR=X Q
"RTN","HMPDJ1",32,0)
 .. K JSON N HMPTMP,HMPTXT
"RTN","HMPDJ1",33,0)
 .. S HMPTXT(1)="Problem encoding json output."
"RTN","HMPDJ1",34,0)
 .. D SETERROR^HMPUTILS(.HMPTMP,.HMPERR,.HMPTXT,.ARRAY)
"RTN","HMPDJ1",35,0)
 .. K HMPERR D ENCODE^HMPJSON("HMPTMP","JSON","HMPERR")
"RTN","HMPDJ1",36,0)
 .. S HMP(.5)="{""apiVersion"":""1.01"",""error"":{"
"RTN","HMPDJ1",37,0)
 .. M HMP(1)=JSON
"RTN","HMPDJ1",38,0)
 .. S HMP(2)="}}"
"RTN","HMPDJ1",39,0)
 ;
"RTN","HMPDJ1",40,0)
 K ^HMP(800000.1,DA,1) S ^(1,0)="^800000.101^^",CNT=0
"RTN","HMPDJ1",41,0)
 S I="" F  S I=$O(JSON(I)) Q:I=""  S CNT=CNT+1,^HMP(800000.1,DA,1,CNT,0)=JSON(I)
"RTN","HMPDJ1",42,0)
 S:$G(CNT) ^HMP(800000.1,DA,1,0)="^800000.101^"_CNT_U_CNT
"RTN","HMPDJ1",43,0)
 ;
"RTN","HMPDJ1",44,0)
PTQ ; add item count and terminating characters
"RTN","HMPDJ1",45,0)
 I $D(ERR) S HMP="{""apiVersion"":""1.01"",""error"":{""message"":"""_ERR_"""},""success"":false}" Q
"RTN","HMPDJ1",46,0)
 S HMP="{""apiVersion"":""1.01"",""data"":{""updated"":"_""""_$$HL7NOW_""""_",""uid"":"""_UID_"""},""success"":true}"
"RTN","HMPDJ1",47,0)
 S DFN=+$P(UID,":",5)
"RTN","HMPDJ1",48,0)
 D POST^HMPEVNT(DFN,TYPE,DA) ;UID)
"RTN","HMPDJ1",49,0)
 Q
"RTN","HMPDJ1",50,0)
 ;
"RTN","HMPDJ1",51,0)
NEW ; -- create new entry in ^HMP(800000.1) from PAT,TYPE,HMPSYS
"RTN","HMPDJ1",52,0)
 ;  Return UID & DA, or ERR
"RTN","HMPDJ1",53,0)
 N DFN,ICN
"RTN","HMPDJ1",54,0)
 S DFN=+$G(PAT),ICN="",TYPE=$G(TYPE)
"RTN","HMPDJ1",55,0)
 I DFN<1,DFN[";" S ICN=+$P($G(DFN),";",2),DFN=+$G(DFN)
"RTN","HMPDJ1",56,0)
 I DFN<1,ICN S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","HMPDJ1",57,0)
 I DFN<1!'$D(^DPT(DFN)) S ERR=$$ERR(1,DFN) Q
"RTN","HMPDJ1",58,0)
 I TYPE="" S ERR=$$ERR(2,"null") Q
"RTN","HMPDJ1",59,0)
 ;
"RTN","HMPDJ1",60,0)
 S DA=$$NEXTIFN I DA<1 S ERR=$$ERR(4) Q
"RTN","HMPDJ1",61,0)
 S UID="urn:va:"_TYPE_":"_HMPSYS_":"_DFN_":"_DA
"RTN","HMPDJ1",62,0)
 S ^HMP(800000.1,DA,0)=UID_U_DFN_U_TYPE
"RTN","HMPDJ1",63,0)
 S ^HMP(800000.1,"B",UID,DA)=""
"RTN","HMPDJ1",64,0)
 S ^HMP(800000.1,"C",DFN,TYPE,DA)=""
"RTN","HMPDJ1",65,0)
 Q
"RTN","HMPDJ1",66,0)
 ;
"RTN","HMPDJ1",67,0)
NEXTIFN() ; -- Returns next available IFN
"RTN","HMPDJ1",68,0)
 N I,HDR,TOTAL,DA
"RTN","HMPDJ1",69,0)
 L +^HMP(800000.1,0):$S($G(DILOCKTM)>0:DILOCKTM,1:5)
"RTN","HMPDJ1",70,0)
 I '$T Q "^"
"RTN","HMPDJ1",71,0)
 S HDR=$G(^HMP(800000.1,0)),TOTAL=+$P(HDR,U,4),I=$O(^HMP(800000.1,"?"),-1)
"RTN","HMPDJ1",72,0)
 F I=(I+1):1 Q:'$D(^HMP(800000.1,I,0))
"RTN","HMPDJ1",73,0)
 S DA=I,$P(HDR,U,3,4)=DA_U_(TOTAL+1) S ^HMP(800000.1,0)=HDR
"RTN","HMPDJ1",74,0)
 L -^HMP(800000.1,0)
"RTN","HMPDJ1",75,0)
 Q DA
"RTN","HMPDJ1",76,0)
 ;
"RTN","HMPDJ1",77,0)
ERR(X,VAL) ; -- return error message
"RTN","HMPDJ1",78,0)
 N MSG  S MSG="Error"
"RTN","HMPDJ1",79,0)
 I X=1  S MSG="Patient with dfn '"_$G(VAL)_"' not found"
"RTN","HMPDJ1",80,0)
 I X=2  S MSG="Domain type '"_$G(VAL)_"' not recognized"
"RTN","HMPDJ1",81,0)
 I X=3  S MSG="UID '"_$G(VAL)_"' not found"
"RTN","HMPDJ1",82,0)
 I X=4  S MSG="Unable to create new object"
"RTN","HMPDJ1",83,0)
 I X=99 S MSG="Unknown request"
"RTN","HMPDJ1",84,0)
 Q MSG
"RTN","HMPDJ1",85,0)
 ;
"RTN","HMPDJ1",86,0)
HL7NOW() ; -- Return current time in HL7 format
"RTN","HMPDJ1",87,0)
 Q $P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")
"RTN","HMPDJ1",88,0)
 ;
"RTN","HMPDJ1",89,0)
CONV ; -- convert uid format
"RTN","HMPDJ1",90,0)
 N DA,X0,UID,HMPSYS,DFN,COLL,NEW,I,JSON,HMPY,ERR,CNT
"RTN","HMPDJ1",91,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPDJ1",92,0)
 S DA=0 F  S DA=$O(^HMP(800000.1,DA)) Q:DA<1  D
"RTN","HMPDJ1",93,0)
 . S X0=$G(^HMP(800000.1,DA,0)),UID=$P(X0,U)
"RTN","HMPDJ1",94,0)
 . K ^HMP(800000.1,"B",UID,DA),JSON
"RTN","HMPDJ1",95,0)
 . S DFN=$P(X0,"^",2),COLL=$P(X0,"^",3)
"RTN","HMPDJ1",96,0)
 . S NEW="urn:va:"_COLL_":"_HMPSYS_":"_DFN_":"_DA
"RTN","HMPDJ1",97,0)
 . S $P(^HMP(800000.1,DA,0),U)=NEW,^HMP(800000.1,"B",NEW,DA)=""
"RTN","HMPDJ1",98,0)
 . ;decode JSON object, reset uid
"RTN","HMPDJ1",99,0)
 . S I=0 F  S I=$O(^HMP(800000.1,DA,1,I)) Q:I<1  S JSON(I)=$G(^(I,0))
"RTN","HMPDJ1",100,0)
 . Q:'$D(JSON)  K HMPY,ERR
"RTN","HMPDJ1",101,0)
 . D DECODE^HMPJSON("JSON","HMPY","ERR") I $D(ERR) W !,DA Q
"RTN","HMPDJ1",102,0)
 . S HMPY("uid")=NEW K JSON
"RTN","HMPDJ1",103,0)
 . D ENCODE^HMPJSON("HMPY","JSON","ERR") I $D(ERR) W !,DA Q
"RTN","HMPDJ1",104,0)
 . K ^HMP(800000.1,DA,1) S ^(1,0)="^800000.101^^",CNT=0
"RTN","HMPDJ1",105,0)
 . S I="" F  S I=$O(JSON(I)) Q:I=""  S CNT=CNT+1,^HMP(800000.1,DA,1,CNT,0)=JSON(I)
"RTN","HMPDJ1",106,0)
 . S:$G(CNT) ^HMP(800000.1,DA,1,0)="^800000.101^"_CNT_U_CNT
"RTN","HMPDJ1",107,0)
 Q
"RTN","HMPDJ2")
0^31^B21438887
"RTN","HMPDJ2",1,0)
HMPDJ2 ;SLC/MKB -- HMP Object RPCs ; 1/18/13 3:54pm
"RTN","HMPDJ2",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJ2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJ2",4,0)
 ;
"RTN","HMPDJ2",5,0)
 ;
"RTN","HMPDJ2",6,0)
GET(HMP,FILTER) ; -- Return search results as JSON in @HMP@(n)
"RTN","HMPDJ2",7,0)
 ; RPC = HMP GET OBJECT
"RTN","HMPDJ2",8,0)
 N TYPE,HMPMAX,HMPI,HMPID,HMPERR,IEN
"RTN","HMPDJ2",9,0)
 S HMP=$NA(^TMP("HMP",$J)),HMPI=0 K @HMP
"RTN","HMPDJ2",10,0)
 ;
"RTN","HMPDJ2",11,0)
 ; parse & validate input parameters
"RTN","HMPDJ2",12,0)
 S TYPE=$G(FILTER("collection")),TYPE=$$LOW^XLFSTR(TYPE)
"RTN","HMPDJ2",13,0)
 S HMPMAX=+$G(FILTER("max"),9999) ;??
"RTN","HMPDJ2",14,0)
 S HMPID=$G(FILTER("id"))
"RTN","HMPDJ2",15,0)
 ;
"RTN","HMPDJ2",16,0)
 ;set error trap
"RTN","HMPDJ2",17,0)
 N $ES,$ET,ERRARRY,ERRDOM,ERRPAT,ERRMSG
"RTN","HMPDJ2",18,0)
 ;S $ET="D ERRHDLR^HMPDERRH G ERRQ^HMPDJ0"
"RTN","HMPDJ2",19,0)
 S ERRDOM="hmp",ERRMSG=$G(TYPE)
"RTN","HMPDJ2",20,0)
 K ^TMP($J,"HMP ERROR")
"RTN","HMPDJ2",21,0)
 ;
"RTN","HMPDJ2",22,0)
 ; extract data
"RTN","HMPDJ2",23,0)
 I $L(HMPID) D  G GQ
"RTN","HMPDJ2",24,0)
 . S IEN=+HMPID I 'IEN S IEN=+$O(^HMP(800000.11,"B",HMPID,0)) ;IEN or UID
"RTN","HMPDJ2",25,0)
 . D:IEN HMP1^HMPDJ02(800000.11,IEN)
"RTN","HMPDJ2",26,0)
 I TYPE="" S HMPERR="Missing or invalid collection type" G GQ
"RTN","HMPDJ2",27,0)
 S IEN=0 F  S IEN=$O(^HMP(800000.11,"C",TYPE,IEN)) Q:IEN<1  D HMP1^HMPDJ02(800000.11,IEN)
"RTN","HMPDJ2",28,0)
 ;
"RTN","HMPDJ2",29,0)
GQ ;build return JSON
"RTN","HMPDJ2",30,0)
 D GTQ^HMPDJ
"RTN","HMPDJ2",31,0)
 Q
"RTN","HMPDJ2",32,0)
 ;
"RTN","HMPDJ2",33,0)
DEL(HMP,HMPID) ; -- Delete object HMPID from ^HMP(800000.11)
"RTN","HMPDJ2",34,0)
 ; RPC = HMP DELETE OBJECT
"RTN","HMPDJ2",35,0)
 ;
"RTN","HMPDJ2",36,0)
 N ACTION,ERR,UID,DA,DIK,TYPE
"RTN","HMPDJ2",37,0)
 S UID=$G(HMPID) I '$L(UID) S ERR=$$ERR(3,"null") G PTQ
"RTN","HMPDJ2",38,0)
 S DA=+$O(^HMP(800000.11,"B",UID,0)) I DA<1 S ERR=$$ERR(3,UID) G PTQ
"RTN","HMPDJ2",39,0)
 S DIK="^HMP(800000.11," D ^DIK
"RTN","HMPDJ2",40,0)
 S ACTION="@",TYPE=$P(UID,":",3)
"RTN","HMPDJ2",41,0)
 G PTQ
"RTN","HMPDJ2",42,0)
 Q
"RTN","HMPDJ2",43,0)
 ;
"RTN","HMPDJ2",44,0)
PUT(HMP,TYPE,JSON) ; -- Save/update JSON OBJECT in ^HMP(800000.11), return UID if successful
"RTN","HMPDJ2",45,0)
 ; RPC = HMP PUT OBJECT
"RTN","HMPDJ2",46,0)
 ;
"RTN","HMPDJ2",47,0)
 N ACTION,ARRAY,CNT,ERR,HMPERR,UID,DA,X,I,HMPSYS
"RTN","HMPDJ2",48,0)
 D DECODE^HMPJSON("JSON","ARRAY","HMPERR")
"RTN","HMPDJ2",49,0)
 ;N XCNT S XCNT=$O(^XTMP("AGPARRAY",""),-1),XCNT=XCNT+1
"RTN","HMPDJ2",50,0)
 ;M ^XTMP("AGPARRAY",XCNT,"DATA")=ARRAY
"RTN","HMPDJ2",51,0)
 ;S ^XTMP("AGPARRAY",XCNT,"TYPE")=TYPE
"RTN","HMPDJ2",52,0)
 I $D(HMPERR) D  Q  ;S X=$G(ERR(1)) K ERR S ERR=X G PTQ
"RTN","HMPDJ2",53,0)
 . K ARRAY N HMPTMP,HMPTXT
"RTN","HMPDJ2",54,0)
 . S HMPTXT(1)="Problem decoding json input."
"RTN","HMPDJ2",55,0)
 . D SETERROR^HMPUTILS(.HMPTMP,.HMPERR,.HMPTXT,.JSON)
"RTN","HMPDJ2",56,0)
 . K HMPERR D ENCODE^HMPJSON("HMPTMP","ARRAY","HMPERR")
"RTN","HMPDJ2",57,0)
 . S HMP(.5)="{""apiVersion"":""1.01"",""error"":{"
"RTN","HMPDJ2",58,0)
 . M HMP(1)=ARRAY
"RTN","HMPDJ2",59,0)
 . S HMP(2)="}}"
"RTN","HMPDJ2",60,0)
 ;
"RTN","HMPDJ2",61,0)
 S UID=$G(ARRAY("uid")),HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPDJ2",62,0)
 I $L(UID) S DA=+$O(^HMP(800000.11,"B",UID,0)) I DA<1 S ERR=$$ERR(3,UID) G PTQ
"RTN","HMPDJ2",63,0)
 ;I $L(UID) S DA=+$O(^HMP(800000.11,"B",UID,0)) I DA<1 D NEW1(UID)
"RTN","HMPDJ2",64,0)
 I '$L(UID) D  G:$D(ERR) PTQ Q:$D(HMPERR)
"RTN","HMPDJ2",65,0)
 . D NEW Q:$D(ERR)
"RTN","HMPDJ2",66,0)
 . S ARRAY("uid")=UID K JSON
"RTN","HMPDJ2",67,0)
 . D ENCODE^HMPJSON("ARRAY","JSON","HMPERR")
"RTN","HMPDJ2",68,0)
 . I $D(HMPERR) D  Q  ;S X=$G(ERR(1)) K ERR S ERR=X Q
"RTN","HMPDJ2",69,0)
 .. K JSON N HMPTMP,HMPTXT
"RTN","HMPDJ2",70,0)
 .. S HMPTXT(1)="Problem encoding json output."
"RTN","HMPDJ2",71,0)
 .. D SETERROR^HMPUTILS(.HMPTMP,.HMPERR,.HMPTXT,.ARRAY)
"RTN","HMPDJ2",72,0)
 .. K HMPERR D ENCODE^HMPJSON("HMPTMP","JSON","HMPERR")
"RTN","HMPDJ2",73,0)
 .. S HMP(.5)="{""apiVersion"":""1.01"",""error"":{"
"RTN","HMPDJ2",74,0)
 .. M HMP(1)=JSON
"RTN","HMPDJ2",75,0)
 .. S HMP(2)="}}"
"RTN","HMPDJ2",76,0)
 ;
"RTN","HMPDJ2",77,0)
 K ^HMP(800000.11,DA,1) S ^(1,0)="^800000.111^^",CNT=0
"RTN","HMPDJ2",78,0)
 S I="" F  S I=$O(JSON(I)) Q:I=""  S CNT=CNT+1,^HMP(800000.11,DA,1,CNT,0)=JSON(I)
"RTN","HMPDJ2",79,0)
 S:$G(CNT) ^HMP(800000.11,DA,1,0)="^800000.111^"_CNT_U_CNT
"RTN","HMPDJ2",80,0)
 ;
"RTN","HMPDJ2",81,0)
PTQ ; add item count and terminating characters
"RTN","HMPDJ2",82,0)
 I $D(ERR) S HMP="{""apiVersion"":""1.01"",""error"":{""message"":"""_ERR_"""},""success"":false}" Q
"RTN","HMPDJ2",83,0)
 S HMP="{""apiVersion"":""1.01"",""data"":{""updated"":"_""""_$$HL7NOW_""""_",""uid"":"""_UID_"""},""success"":true}"
"RTN","HMPDJ2",84,0)
 D POSTX^HMPEVNT(TYPE,DA,$G(ACTION)) ;UID)
"RTN","HMPDJ2",85,0)
 Q
"RTN","HMPDJ2",86,0)
 ;
"RTN","HMPDJ2",87,0)
NEW1(UID) ; -- create new entry in ^HMP(800000.11) from PAT,TYPE,HMPSYS
"RTN","HMPDJ2",88,0)
 ;  Return UID & DA, or ERR
"RTN","HMPDJ2",89,0)
 S TYPE=$G(TYPE)
"RTN","HMPDJ2",90,0)
 I TYPE="" S ERR=$$ERR(2,"null") Q
"RTN","HMPDJ2",91,0)
 ;
"RTN","HMPDJ2",92,0)
 S DA=$$NEXTIFN I DA<1 S ERR=$$ERR(4) Q
"RTN","HMPDJ2",93,0)
 S UID="urn:va:"_TYPE_":"_HMPSYS_":"_DA
"RTN","HMPDJ2",94,0)
 S ^HMP(800000.11,DA,0)=UID_U_U_TYPE
"RTN","HMPDJ2",95,0)
 S ^HMP(800000.11,"B",UID,DA)=""
"RTN","HMPDJ2",96,0)
 S ^HMP(800000.11,"C",TYPE,DA)=""
"RTN","HMPDJ2",97,0)
 Q
"RTN","HMPDJ2",98,0)
 ;
"RTN","HMPDJ2",99,0)
NEW ; -- create new entry in ^HMP(800000.11) from PAT,TYPE,HMPSYS
"RTN","HMPDJ2",100,0)
 ;  Return UID & DA, or ERR
"RTN","HMPDJ2",101,0)
 S TYPE=$G(TYPE)
"RTN","HMPDJ2",102,0)
 I TYPE="" S ERR=$$ERR(2,"null") Q
"RTN","HMPDJ2",103,0)
 ;
"RTN","HMPDJ2",104,0)
 S DA=$$NEXTIFN I DA<1 S ERR=$$ERR(4) Q
"RTN","HMPDJ2",105,0)
 S UID="urn:va:"_TYPE_":"_HMPSYS_":"_DA
"RTN","HMPDJ2",106,0)
 S ^HMP(800000.11,DA,0)=UID_U_U_TYPE
"RTN","HMPDJ2",107,0)
 S ^HMP(800000.11,"B",UID,DA)=""
"RTN","HMPDJ2",108,0)
 S ^HMP(800000.11,"C",TYPE,DA)=""
"RTN","HMPDJ2",109,0)
 Q
"RTN","HMPDJ2",110,0)
 ;
"RTN","HMPDJ2",111,0)
NEXTIFN() ; -- Returns next available IFN
"RTN","HMPDJ2",112,0)
 N I,HDR,TOTAL,DA
"RTN","HMPDJ2",113,0)
 L +^HMP(800000.11,0):$S($G(DILOCKTM)>0:DILOCKTM,1:5)
"RTN","HMPDJ2",114,0)
 I '$T Q "^"
"RTN","HMPDJ2",115,0)
 S HDR=$G(^HMP(800000.11,0)),TOTAL=+$P(HDR,U,4),I=$O(^HMP(800000.11,"?"),-1)
"RTN","HMPDJ2",116,0)
 F I=(I+1):1 Q:'$D(^HMP(800000.11,I,0))
"RTN","HMPDJ2",117,0)
 S DA=I,$P(HDR,U,3,4)=DA_U_(TOTAL+1) S ^HMP(800000.11,0)=HDR
"RTN","HMPDJ2",118,0)
 L -^HMP(800000.11,0)
"RTN","HMPDJ2",119,0)
 Q DA
"RTN","HMPDJ2",120,0)
 ;
"RTN","HMPDJ2",121,0)
ERR(X,VAL) ; -- return error message
"RTN","HMPDJ2",122,0)
 N MSG  S MSG="Error"
"RTN","HMPDJ2",123,0)
 I X=1  S MSG="Patient with dfn '"_$G(VAL)_"' not found"
"RTN","HMPDJ2",124,0)
 I X=2  S MSG="Domain type '"_$G(VAL)_"' not recognized"
"RTN","HMPDJ2",125,0)
 I X=3  S MSG="UID '"_$G(VAL)_"' not found"
"RTN","HMPDJ2",126,0)
 I X=4  S MSG="Unable to create new object"
"RTN","HMPDJ2",127,0)
 I X=99 S MSG="Unknown request"
"RTN","HMPDJ2",128,0)
 Q MSG
"RTN","HMPDJ2",129,0)
 ;
"RTN","HMPDJ2",130,0)
HL7NOW() ; -- Return current time in HL7 format
"RTN","HMPDJ2",131,0)
 Q $P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")
"RTN","HMPDJFS")
0^44^B77693723
"RTN","HMPDJFS",1,0)
HMPDJFS ;SLC/KCM -- Asynchronous Extracts and Freshness via stream
"RTN","HMPDJFS",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJFS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJFS",4,0)
 ; JD - 1/14/15 - Removed "+" from "$$GETICN^MPIF001(DFN)" so that the
"RTN","HMPDJFS",5,0)
 ;                full value of icn (<icn>V<checksum>) could be cptured. US4194.
"RTN","HMPDJFS",6,0)
 ; JD - 3/16/15 - Added checks to prevent restaging of data if the data has
"RTN","HMPDJFS",7,0)
 ;                already been staged.  US4304
"RTN","HMPDJFS",8,0)
 ;
"RTN","HMPDJFS",9,0)
 ;
"RTN","HMPDJFS",10,0)
 ; PUT/POST   call $$TAG^ROUTINE(.args,.body)
"RTN","HMPDJFS",11,0)
 ; GET/DELETE call   TAG^ROUTINE(.response,.args)
"RTN","HMPDJFS",12,0)
 ;
"RTN","HMPDJFS",13,0)
 ; TODO: change this to use ^HMP(800000) instead of ^XTMP("HMPFP")
"RTN","HMPDJFS",14,0)
 ; TODO: create function to build ARGS from PATH
"RTN","HMPDJFS",15,0)
 ; TODO: create function to return TAG^ROUTINE from MTHD,PATH
"RTN","HMPDJFS",16,0)
 ;
"RTN","HMPDJFS",17,0)
 ; todo: get the big sync working
"RTN","HMPDJFS",18,0)
 ; todo: change to use RPC calls
"RTN","HMPDJFS",19,0)
 ; todo: add in freshness 
"RTN","HMPDJFS",20,0)
 ;
"RTN","HMPDJFS",21,0)
API(HMPFRSP,ARGS) ;
"RTN","HMPDJFS",22,0)
 N HMPFERR,HMPFHMP,HMPFLOG,CNT,ACNT
"RTN","HMPDJFS",23,0)
 K ^TMP("HMPF",$J)
"RTN","HMPDJFS",24,0)
 S HMPFHMP=$TR($G(ARGS("server")),"~","=")
"RTN","HMPDJFS",25,0)
 S HMPFRSP=$NA(^TMP("HMPF",$J))
"RTN","HMPDJFS",26,0)
 S HMPFLOG=+$$GET^XPAR("ALL","HMP LOG LEVEL")
"RTN","HMPDJFS",27,0)
 I HMPFLOG D LOGREQ(HMPFHMP,.ARGS)
"RTN","HMPDJFS",28,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPDJFS",29,0)
 I '$L(HMPFHMP) D SETERR("Missing HMP Server ID") QUIT
"RTN","HMPDJFS",30,0)
 I '$O(^HMP(800000,"B",HMPFHMP,0)) D SETERR("HMP Server not registered") QUIT
"RTN","HMPDJFS",31,0)
 S ARGS("stampTime")=$$EN^HMPSTMP("NOW")  ;Need to set stampTime and reference across the entire extract process
"RTN","HMPDJFS",32,0)
 ;
"RTN","HMPDJFS",33,0)
 ; begin select case
"RTN","HMPDJFS",34,0)
 I ARGS("command")="putPtSubscription" D  G XAPI
"RTN","HMPDJFS",35,0)
 . N LOC
"RTN","HMPDJFS",36,0)
 . S LOC=$$PUTSUB^HMPDJFSP(.ARGS) ; Added ELSE for US4304
"RTN","HMPDJFS",37,0)
 . I $L(LOC) S ^TMP("HMPF",$J,1)="{""apiVersion"":""1.0"",""location"":"""_LOC_""""_$$PROGRESS_"}"
"RTN","HMPDJFS",38,0)
 I ARGS("command")="startOperationalDataExtract" D  G XAPI
"RTN","HMPDJFS",39,0)
 . N HMPX2,LOC
"RTN","HMPDJFS",40,0)
 . S ARGS("localId")="OPD"  ; use OPD to indicate "sync operational"
"RTN","HMPDJFS",41,0)
 . S ARGS("hmpstmp")=$$EN^HMPSTMP("NOW")
"RTN","HMPDJFS",42,0)
 . ; Next 2 lines added for US4304
"RTN","HMPDJFS",43,0)
 . S HMPX2="HMPFX~"_$G(HMPFHMP)_"~OPD"
"RTN","HMPDJFS",44,0)
 . I $D(^XTMP(HMPX2)) S LOC="/hmp/subscription/operational data/"
"RTN","HMPDJFS",45,0)
 . E  S LOC=$$PUTSUB^HMPDJFSP(.ARGS) ; Added ELSE for US4304
"RTN","HMPDJFS",46,0)
 . I $L(LOC) S ^TMP("HMPF",$J,1)="{""apiVersion"":""1.0"",""location"":"""_LOC_"""}"
"RTN","HMPDJFS",47,0)
 . ;F  I $$INITDONE^HMPDJFSP("HMPFX~"_HMPFHMP_"~OPD") D OPDTME^HMPUTILS(ARGS("hmpstmp")) Q
"RTN","HMPDJFS",48,0)
 . D OP1^HMPUTIL1  ; US5152
"RTN","HMPDJFS",49,0)
 I ARGS("command")="getPtUpdates" D  G XAPI
"RTN","HMPDJFS",50,0)
 . D GETSUB^HMPDJFSG(HMPFRSP,.ARGS)
"RTN","HMPDJFS",51,0)
 I ARGS("command")="resetAllSubscriptions" D  G XAPI
"RTN","HMPDJFS",52,0)
 . D RESETSVR(.ARGS)
"RTN","HMPDJFS",53,0)
 . S ^TMP("HMPF",$J,1)="{""apiVersion"":""1.0"",""removed"":""true""}"
"RTN","HMPDJFS",54,0)
 I ARGS("command")="checkHealth" D  G XAPI
"RTN","HMPDJFS",55,0)
 . D HLTHCHK^HMPDJFSM(.ARGS)
"RTN","HMPDJFS",56,0)
 ; else
"RTN","HMPDJFS",57,0)
 D SETERR("command not recognized")  ; should not get this far
"RTN","HMPDJFS",58,0)
 ;
"RTN","HMPDJFS",59,0)
XAPI ; end select case
"RTN","HMPDJFS",60,0)
 ;
"RTN","HMPDJFS",61,0)
 I HMPFLOG=2 D LOGRSP(HMPFHMP)
"RTN","HMPDJFS",62,0)
 Q
"RTN","HMPDJFS",63,0)
 ;
"RTN","HMPDJFS",64,0)
LOGREQ(SRV,ARGS) ; Log the request
"RTN","HMPDJFS",65,0)
 I $D(^XTMP("HMPFLOG",0,"start")) D  Q:'$$GET^XPAR("ALL","HMP LOG LEVEL")
"RTN","HMPDJFS",66,0)
 . N ELAPSED S ELAPSED=$$HDIFF^XLFDT($H,^XTMP("HMPFLOG",0,"start"),2)
"RTN","HMPDJFS",67,0)
 . I ELAPSED>$$GET^XPAR("ALL","HMP LOG LIMIT") D PUT^XPAR("SYS","HMP LOG LEVEL",1,0)
"RTN","HMPDJFS",68,0)
 E  D
"RTN","HMPDJFS",69,0)
 . D NEWXTMP("HMPFLOG",1,"HMP Freshness Logging")
"RTN","HMPDJFS",70,0)
 . S ^XTMP("HMPFLOG",0,"start")=$H
"RTN","HMPDJFS",71,0)
 S ^XTMP("HMPFLOG",0,"total")=$G(^XTMP("HMPFLOG",0,"total"))+1
"RTN","HMPDJFS",72,0)
 S:'$L(SRV) SRV="unknown"
"RTN","HMPDJFS",73,0)
 N SEQ
"RTN","HMPDJFS",74,0)
 S SEQ=+$G(^XTMP("HMPFLOG",SRV))+1,^XTMP("HMPFLOG",SRV)=SEQ
"RTN","HMPDJFS",75,0)
 M ^XTMP("HMPFLOG",SRV,SEQ,"request")=ARGS
"RTN","HMPDJFS",76,0)
 S HMPFLOG("seq")=SEQ
"RTN","HMPDJFS",77,0)
 Q
"RTN","HMPDJFS",78,0)
LOGRSP(SRV) ; Log the response
"RTN","HMPDJFS",79,0)
 M ^XTMP("HMPFLOG",SRV,HMPFLOG("seq"),"response")=^TMP("HMPF",$J)
"RTN","HMPDJFS",80,0)
 Q
"RTN","HMPDJFS",81,0)
 ;
"RTN","HMPDJFS",82,0)
 ; --- delete a patient subscription
"RTN","HMPDJFS",83,0)
 ;
"RTN","HMPDJFS",84,0)
DELSUB(RSP,ARGS) ; cancel a subscription
"RTN","HMPDJFS",85,0)
 ; DELETE with: /hmp/subscription/{hmpSrvId}/patient/{pid}
"RTN","HMPDJFS",86,0)
 ; remove patient from HMP SUBSCRIPTION file
"RTN","HMPDJFS",87,0)
 ; remove ^XTMP(HMPX and ^XTMP(HMPH nodes
"RTN","HMPDJFS",88,0)
 ; look ahead (from lastId) and remove any nodes for the patient
"RTN","HMPDJFS",89,0)
 N DFN,HMPSRV,BATCH,HMPSRVID
"RTN","HMPDJFS",90,0)
 K ^TMP("HMPF",$J)
"RTN","HMPDJFS",91,0)
 S DFN=$$DFN(ARGS("pid")) Q:$D(HMPFERR)
"RTN","HMPDJFS",92,0)
 S HMPSRV=ARGS("hmpSrvId")
"RTN","HMPDJFS",93,0)
 S BATCH="HMPFX~"_HMPSRV_"~"_DFN
"RTN","HMPDJFS",94,0)
 L +^XTMP("HMPFP",DFN,HMPSRV):20 E  D SETERR("unable to get lock") Q
"RTN","HMPDJFS",95,0)
 ; if extract still running, it should remove itself when it finishes
"RTN","HMPDJFS",96,0)
 K ^XTMP("HMPFX~"_HMPSRV_"~"_DFN) ; kill extract nodes
"RTN","HMPDJFS",97,0)
 K ^XTMP("HMPFH~"_HMPSRV_"~"_DFN) ; kill held freshness updates
"RTN","HMPDJFS",98,0)
 ; remove all nodes for this patient between "last" and "next"
"RTN","HMPDJFS",99,0)
 ; loop forward from "last" in ^XTMP("HMPFP",0,hmpSrv) and remove nodes for this DFN
"RTN","HMPDJFS",100,0)
 K ^XTMP("HMPFP",DFN,HMPSRV)      ; kill subscription
"RTN","HMPDJFS",101,0)
 D DELPT(DFN,HMPSRV)
"RTN","HMPDJFS",102,0)
 ;K ^HMP(800000,$O(^HMP(800000,"B",HMPSRV,"")),1,DFN),^HMP(800000,"AITEM",DFN,HMPSRV)
"RTN","HMPDJFS",103,0)
 L -^XTMP("HMPFP",DFN,HMPSRV)
"RTN","HMPDJFS",104,0)
 S RSP="{""apiVersion"":""1.0"",""success"":""true""}" ; if successful
"RTN","HMPDJFS",105,0)
 Q
"RTN","HMPDJFS",106,0)
DELPT(DFN,SRV) ; delete patient DFN for server SRV
"RTN","HMPDJFS",107,0)
 N DIK,DA
"RTN","HMPDJFS",108,0)
 S DA(1)=$O(^HMP(800000,"B",SRV,"")) Q:'DA(1)
"RTN","HMPDJFS",109,0)
 S DA=DFN Q:'DA
"RTN","HMPDJFS",110,0)
 S DIK="^HMP(800000,"_DA(1)_",1,"
"RTN","HMPDJFS",111,0)
 D ^DIK
"RTN","HMPDJFS",112,0)
 Q
"RTN","HMPDJFS",113,0)
 ;
"RTN","HMPDJFS",114,0)
 ; --- post freshness updates (internal to VistA)
"RTN","HMPDJFS",115,0)
 ;
"RTN","HMPDJFS",116,0)
POST(DFN,TYPE,ID,ACT,SERVER,NODES) ; adds new freshness item, return DT-seq
"RTN","HMPDJFS",117,0)
 ; if initializing use: ^XTMP("HMPFH-hmpserverid-dfn",seq#)    -hold
"RTN","HMPDJFS",118,0)
 ;       otherwise use: ^XTMP("HMPFS-hmpserverid-date",seq#)   -stream
"RTN","HMPDJFS",119,0)
 ;
"RTN","HMPDJFS",120,0)
 ; loop through subscribing streams for this patient
"RTN","HMPDJFS",121,0)
 ; if patient is initialized for an hmp server send events directly to stream
"RTN","HMPDJFS",122,0)
 ; otherwise, events go to temporary holding area
"RTN","HMPDJFS",123,0)
 ; initial extracts always sent directly to stream
"RTN","HMPDJFS",124,0)
 N HMPSRV,INIT,STREAM,DATE,SEQ,CNT
"RTN","HMPDJFS",125,0)
 S DATE=$$DT^XLFDT
"RTN","HMPDJFS",126,0)
 S HMPSRV="" F  S HMPSRV=$O(^HMP(800000,"AITEM",DFN,HMPSRV)) Q:'$L(HMPSRV)  D
"RTN","HMPDJFS",127,0)
 . I SERVER'="",HMPSRV'=SERVER Q
"RTN","HMPDJFS",128,0)
 . I '$D(^HMP(800000,"AITEM",DFN,HMPSRV)) Q          ; patient not subscribed
"RTN","HMPDJFS",129,0)
 . S INIT=(^HMP(800000,"AITEM",DFN,HMPSRV)=2),CNT=1  ; 2 means patient initialized
"RTN","HMPDJFS",130,0)
 . I $E(TYPE,1,4)="sync" S INIT=1                 ; sync* goes to main stream
"RTN","HMPDJFS",131,0)
 . I TYPE="syncDomain" S CNT=+$P(ID,":",3) S:CNT<1 CNT=1 ; CNT must be >0
"RTN","HMPDJFS",132,0)
 . S STREAM=$S(INIT:"HMPFS~",1:"HMPFH~")_HMPSRV_"~"_$S(INIT:DATE,1:DFN)
"RTN","HMPDJFS",133,0)
 . I '$D(^XTMP(STREAM)) D NEWXTMP(STREAM,8,"HMP Freshness Stream")
"RTN","HMPDJFS",134,0)
 . L +^XTMP(STREAM):5 E  S $EC=",Uno lock obtained," Q  ; throw error
"RTN","HMPDJFS",135,0)
 . S SEQ=$G(^XTMP(STREAM,"last"),0)+CNT
"RTN","HMPDJFS",136,0)
 . S ^XTMP(STREAM,SEQ)=DFN_U_TYPE_U_ID_U_$G(ACT)_U_$P($H,",",2)
"RTN","HMPDJFS",137,0)
 . S ^XTMP(STREAM,"last")=SEQ
"RTN","HMPDJFS",138,0)
 . L -^XTMP(STREAM)
"RTN","HMPDJFS",139,0)
 . ; NODES(hmpserverid)=streamDate^sequence -- optionally returned
"RTN","HMPDJFS",140,0)
 . S NODES($P(STREAM,"~",2))=$S(INIT:DATE,1:0)_U_SEQ
"RTN","HMPDJFS",141,0)
 Q
"RTN","HMPDJFS",142,0)
 ;
"RTN","HMPDJFS",143,0)
NEWXTMP(NODE,DAYS,DESC) ; Set a new node in ^XTMP
"RTN","HMPDJFS",144,0)
 K ^XTMP(NODE)
"RTN","HMPDJFS",145,0)
 S ^XTMP(NODE,0)=$$HTFM^XLFDT(+$H+DAYS)_U_$$HTFM^XLFDT(+$H)_U_DESC
"RTN","HMPDJFS",146,0)
 Q
"RTN","HMPDJFS",147,0)
PIDS(DFN) ; return string containing patient id's ready for JSON
"RTN","HMPDJFS",148,0)
 ; expects HMPFSYS, HMPFHMP
"RTN","HMPDJFS",149,0)
 Q:'DFN ""
"RTN","HMPDJFS",150,0)
 ;
"RTN","HMPDJFS",151,0)
 N X
"RTN","HMPDJFS",152,0)
 S X=",""pid"":"""_$$PID(DFN)_""""
"RTN","HMPDJFS",153,0)
 S X=X_",""systemId"":"""_HMPSYS_""""
"RTN","HMPDJFS",154,0)
 S X=X_",""localId"":"""_DFN_""""
"RTN","HMPDJFS",155,0)
 S X=X_",""icn"":"""_$$GETICN^MPIF001(DFN)_"""" ; US4194
"RTN","HMPDJFS",156,0)
 Q X
"RTN","HMPDJFS",157,0)
 ;
"RTN","HMPDJFS",158,0)
PID(DFN) ; return most likely PID (ICN or SYS;DFN)
"RTN","HMPDJFS",159,0)
 Q:'DFN ""
"RTN","HMPDJFS",160,0)
 I '$D(HMPSYS) S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPDJFS",161,0)
 Q HMPSYS_";"_DFN            ; otherwise use SysId;DFN
"RTN","HMPDJFS",162,0)
 ;
"RTN","HMPDJFS",163,0)
DFN(PID) ; return the DFN given the PID (ICN or SYS;DFN)
"RTN","HMPDJFS",164,0)
 N DFN
"RTN","HMPDJFS",165,0)
 S PID=$TR(PID,":",";")
"RTN","HMPDJFS",166,0)
 I PID'[";" D  Q DFN  ; treat as ICN
"RTN","HMPDJFS",167,0)
 . S DFN=$$GETDFN^MPIF001(PID)
"RTN","HMPDJFS",168,0)
 . I DFN<0 D SETERR($P(DFN,"^",2))
"RTN","HMPDJFS",169,0)
 ; otherwise
"RTN","HMPDJFS",170,0)
 I $P(PID,";")'=$$GET^XPAR("SYS","HMP SYSTEM NAME") D SETERR("DFN unknown to this system") Q 0
"RTN","HMPDJFS",171,0)
 Q $P(PID,";",2)
"RTN","HMPDJFS",172,0)
 ;
"RTN","HMPDJFS",173,0)
PROGRESS(LASTITM) ; set the node in REF with progress properties
"RTN","HMPDJFS",174,0)
 ; expects HMPFHMP,HMPSYS
"RTN","HMPDJFS",175,0)
 N RSLT,HMPIEN,CNT,STS,TS,DFN,FIRST
"RTN","HMPDJFS",176,0)
 S HMPIEN=$O(^HMP(800000,"B",HMPFHMP,0)) Q:'HMPIEN ""
"RTN","HMPDJFS",177,0)
 S CNT=0,RSLT=""
"RTN","HMPDJFS",178,0)
 F STS=0,1 D  ; 0=uninitialized, 1=initializing
"RTN","HMPDJFS",179,0)
 . S FIRST=1
"RTN","HMPDJFS",180,0)
 . S RSLT=$S(STS=0:",""waitingPids"":[",1:RSLT_"],""processingPids"":[")
"RTN","HMPDJFS",181,0)
 . S TS=0 F  S TS=$O(^HMP(800000,HMPIEN,1,"AP",STS,TS)) Q:'TS  D  Q:CNT>99
"RTN","HMPDJFS",182,0)
 . . S DFN=0 F  S DFN=$O(^HMP(800000,HMPIEN,1,"AP",STS,TS,DFN)) Q:'DFN  D
"RTN","HMPDJFS",183,0)
 . . . S CNT=CNT+1
"RTN","HMPDJFS",184,0)
 . . . S RSLT=RSLT_$S(FIRST=1:"",1:",")_""""_HMPSYS_";"_DFN_""""
"RTN","HMPDJFS",185,0)
 . . . S FIRST=0
"RTN","HMPDJFS",186,0)
 S RSLT=RSLT_"]"
"RTN","HMPDJFS",187,0)
 ;
"RTN","HMPDJFS",188,0)
 N STRM,STRMDT,CURRDT
"RTN","HMPDJFS",189,0)
 I $G(LASTITM)="" S LASTITM=$P(^HMP(800000,HMPIEN,0),U,2)
"RTN","HMPDJFS",190,0)
 I $L(LASTITM,"-")<2 S LASTITM=$$DT^XLFDT_"-"_+LASTITM
"RTN","HMPDJFS",191,0)
 S STRMDT=$P(LASTITM,"-"),CURRDT=$$DT^XLFDT,SEQ=$P(LASTITM,"-",2)
"RTN","HMPDJFS",192,0)
 S CNT=0 F  D  Q:$$FMDIFF^XLFDT(STRMDT,CURRDT,1)'<0
"RTN","HMPDJFS",193,0)
 . S STRM="HMPFS~"_HMPFHMP_"~"_STRMDT
"RTN","HMPDJFS",194,0)
 . S CNT=CNT+$G(^XTMP(STRM,"last"))-SEQ
"RTN","HMPDJFS",195,0)
 . S STRMDT=$$FMADD^XLFDT(STRMDT,1),SEQ=0
"RTN","HMPDJFS",196,0)
 S RSLT=RSLT_",""remainingObjects"":"_CNT
"RTN","HMPDJFS",197,0)
 Q RSLT
"RTN","HMPDJFS",198,0)
 ;
"RTN","HMPDJFS",199,0)
 ; --- handle errors
"RTN","HMPDJFS",200,0)
 ;
"RTN","HMPDJFS",201,0)
SETERR(MSG) ; create error object in ^TMP("HMPFERR",$J) and set HMPFERR
"RTN","HMPDJFS",202,0)
 ; TODO: escape MSG for JSON
"RTN","HMPDJFS",203,0)
 S @HMPFRSP@(1)="{""apiVersion"":""1.0"",""error"":{""message"":"""_MSG_"""}}"
"RTN","HMPDJFS",204,0)
 S ^TMP("HMPFERR",$J,$H)=MSG
"RTN","HMPDJFS",205,0)
 S HMPFERR=1
"RTN","HMPDJFS",206,0)
 Q
"RTN","HMPDJFS",207,0)
 ;
"RTN","HMPDJFS",208,0)
DEBUG(MSG) ;
"RTN","HMPDJFS",209,0)
 S ^TMP("HMPDEBUG",$J,0)=$G(^TMP("HMPDEBUG",$J,0),0)+1
"RTN","HMPDJFS",210,0)
 I $D(MSG)'=1 M ^TMP("HMPDEBUG",$J,^TMP("HMPDEBUG",$J,0))=MSG
"RTN","HMPDJFS",211,0)
 E  S ^TMP("HMPDEBUG",$J,^TMP("HMPDEBUG",$J,0))=MSG
"RTN","HMPDJFS",212,0)
 Q
"RTN","HMPDJFS",213,0)
RESETSVR(ARGS) ;
"RTN","HMPDJFS",214,0)
 N DA,DIE,DIK,DR,IEN,SRV,SRVIEN,X
"RTN","HMPDJFS",215,0)
 S SRV=$G(ARGS("server")) I SRV="" Q
"RTN","HMPDJFS",216,0)
 S DA=$O(^HMP(800000,"B",SRV,"")) I DA'>0 Q
"RTN","HMPDJFS",217,0)
 S SRVIEN=DA
"RTN","HMPDJFS",218,0)
 L +^HMP(800000,SRVIEN):5 E  S $EC=",Uno lock obtained," Q
"RTN","HMPDJFS",219,0)
 ;delete operational data field
"RTN","HMPDJFS",220,0)
 S DIE="^HMP(800000,",DR=".03///@" D ^DIE
"RTN","HMPDJFS",221,0)
 S DA(1)=DA,DA=0
"RTN","HMPDJFS",222,0)
 ;delate patient multiple values
"RTN","HMPDJFS",223,0)
 S DIK="^HMP(800000,"_DA(1)_",1,"
"RTN","HMPDJFS",224,0)
 F  S DA=$O(^HMP(800000,DA(1),1,DA)) Q:DA'>0  D ^DIK
"RTN","HMPDJFS",225,0)
 ;kill server ^XTMP
"RTN","HMPDJFS",226,0)
 S X="HMPF" F  S X=$O(^XTMP(X)) Q:$E(X,1,4)'="HMPF"  D
"RTN","HMPDJFS",227,0)
 . I X[SRV K ^XTMP(X) I 1
"RTN","HMPDJFS",228,0)
 ;kill tidy node
"RTN","HMPDJFS",229,0)
 K ^XTMP("HMPFP","tidy",SRV)
"RTN","HMPDJFS",230,0)
 L -^HMP(800000,SRVIEN)
"RTN","HMPDJFS",231,0)
 Q
"RTN","HMPDJFS",232,0)
 ;
"RTN","HMPDJFS",233,0)
CLEARDOM(SVR,PAT) ;
"RTN","HMPDJFS",234,0)
 Q
"RTN","HMPDJFS",235,0)
 ;
"RTN","HMPDJFS",236,0)
CLEARPAT(SVR,PAT) ;
"RTN","HMPDJFS",237,0)
 I '$D(^XTMP("HMPFP",PAT,SVR)) Q
"RTN","HMPDJFS",238,0)
 ;do we need a check for patient initialized?
"RTN","HMPDJFS",239,0)
 K ^XTMP("HMPFP",PAT,SVR)
"RTN","HMPDJFS",240,0)
 Q
"RTN","HMPDJFS",241,0)
 ;
"RTN","HMPDJFS",242,0)
HMPSET(DA,NEW) ;
"RTN","HMPDJFS",243,0)
 N IEN,NAME
"RTN","HMPDJFS",244,0)
 S IEN=0 F  S IEN=$O(^HMP(800000,IEN)) Q:IEN'>0  D
"RTN","HMPDJFS",245,0)
 .S NAME=$P(^HMP(800000,IEN,0),U)
"RTN","HMPDJFS",246,0)
 .I $D(^HMP(800000,IEN,1,NEW(1)))>0 S ^HMP(800000,"AITEM",NEW(1),NAME)=NEW(2)
"RTN","HMPDJFS",247,0)
 Q
"RTN","HMPDJFS",248,0)
 ;
"RTN","HMPDJFS",249,0)
HMPKILL(DA,OLD) ;
"RTN","HMPDJFS",250,0)
 N NAME
"RTN","HMPDJFS",251,0)
 S NAME=$P($G(^HMP(800000,DA(1),0)),U) I NAME="" Q
"RTN","HMPDJFS",252,0)
 K ^HMP(800000,"AITEM",OLD(1),NAME)
"RTN","HMPDJFS",253,0)
 Q
"RTN","HMPDJFS",254,0)
 ;
"RTN","HMPDJFS",255,0)
HMPOSET(DA,NEW) ;
"RTN","HMPDJFS",256,0)
 N IEN,NAME
"RTN","HMPDJFS",257,0)
 S IEN=0 F  S IEN=$O(^HMP(800000,IEN)) Q:IEN'>0  D
"RTN","HMPDJFS",258,0)
 .S NAME=$P(^HMP(800000,IEN,0),U)
"RTN","HMPDJFS",259,0)
 .S ^HMP(800000,"AITEM","OPD",NAME)=NEW
"RTN","HMPDJFS",260,0)
 Q
"RTN","HMPDJFS",261,0)
 ;
"RTN","HMPDJFS",262,0)
HMPOKILL(DA) ;
"RTN","HMPDJFS",263,0)
 N NAME
"RTN","HMPDJFS",264,0)
 S NAME=$P($G(^HMP(800000,DA,0)),U) I NAME="" Q
"RTN","HMPDJFS",265,0)
 K ^HMP(800000,"AITEM","OPD",NAME)
"RTN","HMPDJFS",266,0)
 Q
"RTN","HMPDJFS",267,0)
KILL ; clear out all ^XTMP nodes
"RTN","HMPDJFS",268,0)
 N X
"RTN","HMPDJFS",269,0)
 S X="HMPF" F  S X=$O(^XTMP(X)) Q:$E(X,1,4)'="HMPF"  W !,X  K ^XTMP(X)
"RTN","HMPDJFS",270,0)
 Q
"RTN","HMPDJFS",271,0)
KILLSVR(SVR) ; clear out for specific mashine
"RTN","HMPDJFS",272,0)
 N X
"RTN","HMPDJFS",273,0)
 S X="HMPF" F  S X=$O(^XTMP(X)) Q:$E(X,1,4)'="HMPF"  D
"RTN","HMPDJFS",274,0)
 . I X[SVR W !,X  K ^XTMP(X) I 1
"RTN","HMPDJFS",275,0)
 S X="" F  S X=$O(^XTMP("HMPFP",X)) Q:X=""  D
"RTN","HMPDJFS",276,0)
 . I $D(^XTMP("HMPFP",X,SVR)) K ^XTMP("HMPFP",X,SVR)
"RTN","HMPDJFS",277,0)
 Q
"RTN","HMPDJFSD")
0^45^B6369950
"RTN","HMPDJFSD",1,0)
HMPDJFSD ;SLC/KCM -- Domain Lists for Extract and Freshness Stream
"RTN","HMPDJFSD",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJFSD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJFSD",4,0)
 ;
"RTN","HMPDJFSD",5,0)
PTDOMS(LIST) ; load default patient domains (put in parameter?)
"RTN","HMPDJFSD",6,0)
 ;;allergy
"RTN","HMPDJFSD",7,0)
 ;;auxiliary
"RTN","HMPDJFSD",8,0)
 ;;appointment
"RTN","HMPDJFSD",9,0)
 ;;diagnosis
"RTN","HMPDJFSD",10,0)
 ;;document
"RTN","HMPDJFSD",11,0)
 ;;factor
"RTN","HMPDJFSD",12,0)
 ;;immunization
"RTN","HMPDJFSD",13,0)
 ;;lab
"RTN","HMPDJFSD",14,0)
 ;;med
"RTN","HMPDJFSD",15,0)
 ;;obs
"RTN","HMPDJFSD",16,0)
 ;;order
"RTN","HMPDJFSD",17,0)
 ;;problem
"RTN","HMPDJFSD",18,0)
 ;;procedure
"RTN","HMPDJFSD",19,0)
 ;;consult
"RTN","HMPDJFSD",20,0)
 ;;image
"RTN","HMPDJFSD",21,0)
 ;;surgery
"RTN","HMPDJFSD",22,0)
 ;;task
"RTN","HMPDJFSD",23,0)
 ;;visit
"RTN","HMPDJFSD",24,0)
 ;;vital
"RTN","HMPDJFSD",25,0)
 ;;ptf
"RTN","HMPDJFSD",26,0)
 ;;exam
"RTN","HMPDJFSD",27,0)
 ;;cpt
"RTN","HMPDJFSD",28,0)
 ;;education
"RTN","HMPDJFSD",29,0)
 ;;pov
"RTN","HMPDJFSD",30,0)
 ;;skin
"RTN","HMPDJFSD",31,0)
 ;;treatment
"RTN","HMPDJFSD",32,0)
 ;;roadtrip
"RTN","HMPDJFSD",33,0)
 ;;patient
"RTN","HMPDJFSD",34,0)
 ;;zzzzz
"RTN","HMPDJFSD",35,0)
 ;;mh
"RTN","HMPDJFSD",36,0)
 ;
"RTN","HMPDJFSD",37,0)
 N I,X
"RTN","HMPDJFSD",38,0)
 F I=1:1 S X=$P($T(PTDOMS+I),";;",2,99) Q:X="zzzzz"  S LIST(I)=X
"RTN","HMPDJFSD",39,0)
 Q
"RTN","HMPDJFSD",40,0)
 ;
"RTN","HMPDJFSD",41,0)
OPDOMS(LIST) ; load default operational domains (put in parameter?)
"RTN","HMPDJFSD",42,0)
 ;;asu-class;^USR(8930)
"RTN","HMPDJFSD",43,0)
 ;;asu-rule;^USR(8930.1)
"RTN","HMPDJFSD",44,0)
 ;;category;^HMP(800000.11)
"RTN","HMPDJFSD",45,0)
 ;;charttab;^HMP(800000.11)
"RTN","HMPDJFSD",46,0)
 ;;displaygroup;^ORD(100.98)
"RTN","HMPDJFSD",47,0)
 ;;doc-def;^TIU(8925.1)
"RTN","HMPDJFSD",48,0)
 ;;labgroup;^LAB(64.5,1,1)
"RTN","HMPDJFSD",49,0)
 ;;labpanel;^LAB(60)
"RTN","HMPDJFSD",50,0)
 ;;location;^SC
"RTN","HMPDJFSD",51,0)
 ;;orderable;^ORD(101.43)
"RTN","HMPDJFSD",52,0)
 ;;page;^HMP(800000.11)
"RTN","HMPDJFSD",53,0)
 ;;pt-select;^DPT
"RTN","HMPDJFSD",54,0)
 ;;personphoto;^HMP(800000.11)
"RTN","HMPDJFSD",55,0)
 ;;pointofcare;^HMP(800000.11)
"RTN","HMPDJFSD",56,0)
 ;;quick;^ORD(101.41)
"RTN","HMPDJFSD",57,0)
 ;;roster;^HMPROSTR
"RTN","HMPDJFSD",58,0)
 ;;route;^PS(51.2)
"RTN","HMPDJFSD",59,0)
 ;;schedule;^PS(51.1)
"RTN","HMPDJFSD",60,0)
 ;;team;^HMP(800000.11)
"RTN","HMPDJFSD",61,0)
 ;;teamposition;^HMP(800000.11)
"RTN","HMPDJFSD",62,0)
 ;;user;^VA(200)
"RTN","HMPDJFSD",63,0)
 ;;usertabprefs;^HMP(800000.11)
"RTN","HMPDJFSD",64,0)
 ;;viewdefdef;^HMP(800000.11)
"RTN","HMPDJFSD",65,0)
 ;;viewdefdefcoldefconfigtemplate;^HMP(800000.11)
"RTN","HMPDJFSD",66,0)
 ;;immunization;^AUTTIMM
"RTN","HMPDJFSD",67,0)
 ;;allergy-list;^GMRD(120.82)
"RTN","HMPDJFSD",68,0)
 ;;sign-symptom;^GMRD(120.83)
"RTN","HMPDJFSD",69,0)
 ;;vital-type;^GMRD(120.51)
"RTN","HMPDJFSD",70,0)
 ;;vital-qualifier;^GMRD(120.52)
"RTN","HMPDJFSD",71,0)
 ;;vital-category;^GMRD(120.53)
"RTN","HMPDJFSD",72,0)
 ;;zzzzz
"RTN","HMPDJFSD",73,0)
 ;;problem-list;^LEX(757.01)
"RTN","HMPDJFSD",74,0)
 ;;
"RTN","HMPDJFSD",75,0)
 ;;clioterminology
"RTN","HMPDJFSD",76,0)
 ;;doc-action
"RTN","HMPDJFSD",77,0)
 ;;doc-status
"RTN","HMPDJFSD",78,0)
 ;
"RTN","HMPDJFSD",79,0)
 N I,X
"RTN","HMPDJFSD",80,0)
 F I=1:1 S X=$P($T(OPDOMS+I),";",3) Q:X="zzzzz"  S LIST(I)=X
"RTN","HMPDJFSD",81,0)
 Q
"RTN","HMPDJFSD",82,0)
 ;
"RTN","HMPDJFSG")
0^46^B156277366
"RTN","HMPDJFSG",1,0)
HMPDJFSG ;SLC/KCM -- GET for Extract and Freshness Stream
"RTN","HMPDJFSG",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJFSG",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJFSG",4,0)
 ; US3907 - Allow for jobId and rootJobId to be rerieved from ^XTMP.  JD - 1/20/15
"RTN","HMPDJFSG",5,0)
 ;
"RTN","HMPDJFSG",6,0)
 ;
"RTN","HMPDJFSG",7,0)
 ; --- retrieve updates for an HMP server's subscriptions
"RTN","HMPDJFSG",8,0)
 ;
"RTN","HMPDJFSG",9,0)
GETSUB(HMPFRSP,ARGS) ; retrieve items from stream
"RTN","HMPDJFSG",10,0)
 ;      GET from: /hmp/subscription/{hmpSrvId}/{last}?limit={limit}
"RTN","HMPDJFSG",11,0)
 ; ARGS("last") : date-seq of last item retrieved (ex. 3131206-27)
"RTN","HMPDJFSG",12,0)
 ; ARGS("limit"): maximum number of items to return (default 99999)
"RTN","HMPDJFSG",13,0)
 ;
"RTN","HMPDJFSG",14,0)
 ; HMPFSYS : the id (hash) of the VistA system
"RTN","HMPDJFSG",15,0)
 ; HMPFHMP : the name of the HMP server 
"RTN","HMPDJFSG",16,0)
 ; HMPFSEQ : final sequence (becomes next LASTSEQ)
"RTN","HMPDJFSG",17,0)
 ; HMPFIDX : index to iterate from LASTSEQ to final sequence
"RTN","HMPDJFSG",18,0)
 ; HMPFLAST: used to clean up extracts prior to this
"RTN","HMPDJFSG",19,0)
 ; HMPFSTRM: the extract/freshness stream (HMPFS~hmpSrvId~fmDate) 
"RTN","HMPDJFSG",20,0)
 ; (most variables namespaced since calling variety of extracts)
"RTN","HMPDJFSG",21,0)
 ;
"RTN","HMPDJFSG",22,0)
 K ^TMP("HMPF",$J)
"RTN","HMPDJFSG",23,0)
 N HMPFSYS,HMPFSTRM,HMPFLAST,HMPFDT,HMPFLIM,HMPFSEQ,HMPFIDX,HMPFCNT
"RTN","HMPDJFSG",24,0)
 N SNODE,STYPE,HMPFERR,HMPDEL,HMPERR,HMPSTGET
"RTN","HMPDJFSG",25,0)
 S HMPFRSP=$NA(^TMP("HMPF",$J))
"RTN","HMPDJFSG",26,0)
 ; Next line added for US4248 - Make sure ALL data has been staged before fetching.
"RTN","HMPDJFSG",27,0)
 I '$$DONE^HMPUTILS S @HMPFRSP@(1)="{""warning"":""Staging is not complete yet!""}" Q
"RTN","HMPDJFSG",28,0)
 ;
"RTN","HMPDJFSG",29,0)
 S HMPFSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME") ; TODO -- switch to HMPSYS
"RTN","HMPDJFSG",30,0)
 S HMPFHMP("ien")=$O(^HMP(800000,"B",HMPFHMP,0))
"RTN","HMPDJFSG",31,0)
 S HMPFDT=$P($G(ARGS("lastUpdate")),"-")
"RTN","HMPDJFSG",32,0)
 S HMPFSEQ=+$P($G(ARGS("lastUpdate")),"-",2)
"RTN","HMPDJFSG",33,0)
 S HMPSTGET=$G(ARGS("getStatus"))
"RTN","HMPDJFSG",34,0)
 ; stream goes back a maximum of 8 days
"RTN","HMPDJFSG",35,0)
 I HMPFDT<$$FMADD^XLFDT($$DT^XLFDT,-8) S HMPFDT=$$HTFM^XLFDT(+$H-8),HMPFSEQ=0
"RTN","HMPDJFSG",36,0)
 S HMPFLAST=HMPFDT_"-"_HMPFSEQ
"RTN","HMPDJFSG",37,0)
 D LASTUPD(HMPFHMP,HMPFLAST)
"RTN","HMPDJFSG",38,0)
 S HMPFLIM=$G(ARGS("max"),99999)
"RTN","HMPDJFSG",39,0)
 S HMPFSTRM="HMPFS~"_HMPFHMP_"~"_HMPFDT       ; stream identifier
"RTN","HMPDJFSG",40,0)
 I '$D(^XTMP(HMPFSTRM,"job",$J)) S ^XTMP(HMPFSTRM,"job",$J,"start")=$H
"RTN","HMPDJFSG",41,0)
 S ^XTMP(HMPFSTRM,"job",$J)=$H                ; record connection info
"RTN","HMPDJFSG",42,0)
 I '$$VERMATCH(HMPFHMP("ien"),$G(ARGS("extractSchema"))) D NOOP(HMPFLAST) QUIT
"RTN","HMPDJFSG",43,0)
 S HMPFCNT=0,HMPFIDX=HMPFSEQ
"RTN","HMPDJFSG",44,0)
 F  D  Q:HMPFCNT'<HMPFLIM  D NXTSTRM Q:HMPFSTRM=""
"RTN","HMPDJFSG",45,0)
 . F  S HMPFIDX=$O(^XTMP(HMPFSTRM,HMPFIDX)) Q:'HMPFIDX  D  Q:HMPFCNT'<HMPFLIM
"RTN","HMPDJFSG",46,0)
 . . S SNODE=^XTMP(HMPFSTRM,HMPFIDX),STYPE=$P(SNODE,U,2)
"RTN","HMPDJFSG",47,0)
 . . ;===JD START===
"RTN","HMPDJFSG",48,0)
 . . K ARGS("hmp-fst") I $P(SNODE,U,4)="@" S ARGS("hmp-fst")=$P(SNODE,U,5)
"RTN","HMPDJFSG",49,0)
 . . ;===JD END===
"RTN","HMPDJFSG",50,0)
 . . S $P(^XTMP(HMPFSTRM,HMPFIDX),U,6)=$P($H,",",2) ; timestamp when sent
"RTN","HMPDJFSG",51,0)
 . . I STYPE="syncNoop" Q                      ; skip, patient was unsubscribed
"RTN","HMPDJFSG",52,0)
 . . I STYPE="syncDomain" D DOMITMS Q          ; add multiple extract items
"RTN","HMPDJFSG",53,0)
 . . S HMPFSEQ=HMPFIDX
"RTN","HMPDJFSG",54,0)
 . . I STYPE="syncCommand" D SYNCCMD(SNODE) Q  ; command to middle tier
"RTN","HMPDJFSG",55,0)
 . . I STYPE="syncError" D SYNCERR(SNODE,.HMPERR) Q
"RTN","HMPDJFSG",56,0)
 . . I STYPE="syncStart" D SYNCSTRT(SNODE) Q   ; begin initial extraction
"RTN","HMPDJFSG",57,0)
 . . I STYPE="syncDone" D SYNCDONE(SNODE) Q    ; end of initial extraction
"RTN","HMPDJFSG",58,0)
 . . D FRESHITM(SNODE,.HMPDEL,.HMPERR)         ; otherwise, freshness item
"RTN","HMPDJFSG",59,0)
 Q:$G(HMPFERR)
"RTN","HMPDJFSG",60,0)
 D FINISH(.HMPDEL,.HMPERR)
"RTN","HMPDJFSG",61,0)
 Q
"RTN","HMPDJFSG",62,0)
DOMITMS ; loop thru extract items, OFFSET is last sent
"RTN","HMPDJFSG",63,0)
 ; expects HMPFSTRM,HMPFIDX,HMPFHMP,HMPFSYS
"RTN","HMPDJFSG",64,0)
 ; changes HMPFSEQ,HMPFCNT as each item added
"RTN","HMPDJFSG",65,0)
 N X,OFFSET,DFN,PIDS,DOMAIN,TASK,BATCH,COUNT,ITEMNUM,DOMSIZE,SECSIZE
"RTN","HMPDJFSG",66,0)
 S X=^XTMP(HMPFSTRM,HMPFIDX),DFN=$P(X,U),X=$P(X,U,3)
"RTN","HMPDJFSG",67,0)
 S PIDS=$S(DFN:$$PIDS^HMPDJFS(DFN),1:"")
"RTN","HMPDJFSG",68,0)
 S DOMAIN=$P(X,":")               ; domain{#sectionNumber}
"RTN","HMPDJFSG",69,0)
 S TASK=$P(X,":",2)               ; task number in ^XTMP
"RTN","HMPDJFSG",70,0)
 S COUNT=$P(X,":",3)              ; count in this section
"RTN","HMPDJFSG",71,0)
 S DOMSIZE=$P(X,":",4)            ; estimated total for the domain
"RTN","HMPDJFSG",72,0)
 S SECSIZE=$P(X,":",5)            ; section size (for operational)
"RTN","HMPDJFSG",73,0)
 S BATCH="HMPFX~"_HMPFHMP_"~"_DFN ; extract node in ^XTMP
"RTN","HMPDJFSG",74,0)
 S OFFSET=COUNT-(HMPFIDX-HMPFSEQ)
"RTN","HMPDJFSG",75,0)
 F  S OFFSET=$O(^XTMP(BATCH,TASK,DOMAIN,OFFSET)) Q:'OFFSET  D  Q:HMPFCNT'<HMPFLIM
"RTN","HMPDJFSG",76,0)
 . S HMPFCNT=HMPFCNT+1            ; increment the count of returned items
"RTN","HMPDJFSG",77,0)
 . S HMPFSEQ=HMPFSEQ+1            ; increment the sequence number in the stream
"RTN","HMPDJFSG",78,0)
 . S ITEMNUM=OFFSET+($P(DOMAIN,"#",2)*SECSIZE)
"RTN","HMPDJFSG",79,0)
 . M ^TMP("HMPF",$J,HMPFCNT)=^XTMP(BATCH,TASK,DOMAIN,OFFSET)
"RTN","HMPDJFSG",80,0)
 . S ^TMP("HMPF",$J,HMPFCNT,.3)=$$WRAPPER(DOMAIN,PIDS,$S('COUNT:0,1:ITEMNUM),+DOMSIZE)
"RTN","HMPDJFSG",81,0)
 Q
"RTN","HMPDJFSG",82,0)
MIDXTRCT() ; Return true if mid-extract
"RTN","HMPDJFSG",83,0)
 ; from GETSUB expects HMPFSTRM,HMPFSEQ
"RTN","HMPDJFSG",84,0)
 I 'HMPFSEQ Q 0
"RTN","HMPDJFSG",85,0)
 I '$D(^XTMP(HMPFSTRM,HMPFSEQ)) Q 1                  ; middle of extract
"RTN","HMPDJFSG",86,0)
 I $P(^XTMP(HMPFSTRM,HMPFSEQ),U,2)="syncDomain" Q 1  ; just starting extract
"RTN","HMPDJFSG",87,0)
 Q 0
"RTN","HMPDJFSG",88,0)
 ;
"RTN","HMPDJFSG",89,0)
NXTSTRM ; Reset variables for next date in this HMP stream
"RTN","HMPDJFSG",90,0)
 ; from GETSUB expects HMPFSTRM,HMPFDT,HMPFIDX
"RTN","HMPDJFSG",91,0)
 ; HMPFSTRM set to "" if no next stream
"RTN","HMPDJFSG",92,0)
 ; HMPFIDX  set to 0 if next stream, or left as is
"RTN","HMPDJFSG",93,0)
 ; HMPFDT   set to last date actually used
"RTN","HMPDJFSG",94,0)
 N NEXTDT,DONE
"RTN","HMPDJFSG",95,0)
 S NEXTDT=HMPFDT,DONE=0
"RTN","HMPDJFSG",96,0)
 F  D  Q:DONE
"RTN","HMPDJFSG",97,0)
 . S NEXTDT=$$FMADD^XLFDT(NEXTDT,1)
"RTN","HMPDJFSG",98,0)
 . I NEXTDT>$$DT^XLFDT S HMPFSTRM="" S DONE=1 Q
"RTN","HMPDJFSG",99,0)
 . S $P(HMPFSTRM,"~",3)=NEXTDT
"RTN","HMPDJFSG",100,0)
 . I '+$O(^XTMP(HMPFSTRM,0)) Q  ; nothing here, try next date
"RTN","HMPDJFSG",101,0)
 . S HMPFDT=NEXTDT,HMPFIDX=0,HMPFSEQ=0,DONE=1
"RTN","HMPDJFSG",102,0)
 Q
"RTN","HMPDJFSG",103,0)
FINISH(HMPDEL,HMPERR) ;reset the FIRST object delimiter, add header and tail
"RTN","HMPDJFSG",104,0)
 ; expects HMPFCNT,HMPFDT,HMPFSEQ,HMPFHMP,HMPFLAST
"RTN","HMPDJFSG",105,0)
 N CLOSE,I,START,TEXT,UID,X,II
"RTN","HMPDJFSG",106,0)
 S X=$G(^TMP("HMPF",$J,1,.3))
"RTN","HMPDJFSG",107,0)
 I $E(X,1,2)="}," S X=$E(X,3,$L(X)),^TMP("HMPF",$J,1,.3)=X
"RTN","HMPDJFSG",108,0)
 S ^TMP("HMPF",$J,.5)=$$APIHDR(HMPFCNT,HMPFDT_"-"_HMPFSEQ)
"RTN","HMPDJFSG",109,0)
 ;delete node
"RTN","HMPDJFSG",110,0)
 I $D(HMPDEL) D
"RTN","HMPDJFSG",111,0)
 .S CLOSE=$S(HMPFCNT:"},",1:""),START=1
"RTN","HMPDJFSG",112,0)
 .S HMPFCNT=HMPFCNT+1,^TMP("HMPF",$J,HMPFCNT)=CLOSE_"{""deletes"":["
"RTN","HMPDJFSG",113,0)
 .S UID="" F  S UID=$O(HMPDEL(UID)) Q:UID=""  D
"RTN","HMPDJFSG",114,0)
 ..S HMPFCNT=HMPFCNT+1,^TMP("HMPF",$J,HMPFCNT)=$S(START:"",1:",")_"{""uid"":"""_UID_"""}" S START=0
"RTN","HMPDJFSG",115,0)
 .S HMPFCNT=HMPFCNT+1,^TMP("HMPF",$J,HMPFCNT)="]"
"RTN","HMPDJFSG",116,0)
 ;error node
"RTN","HMPDJFSG",117,0)
 I $D(HMPERR) D
"RTN","HMPDJFSG",118,0)
 .S CLOSE=$S(HMPFCNT:"},",1:""),START=1
"RTN","HMPDJFSG",119,0)
 .S HMPFCNT=HMPFCNT+1,^TMP("HMPF",$J,HMPFCNT)=CLOSE_"{""error"":["
"RTN","HMPDJFSG",120,0)
 .S I=0 F  S I=$O(HMPERR(I)) Q:I'>0  D
"RTN","HMPDJFSG",121,0)
 ..S TEXT=HMPERR(I)
"RTN","HMPDJFSG",122,0)
 ..S HMPFCNT=HMPFCNT+1,^TMP("HMPF",$J,HMPFCNT)=$S(START:"",1:",")_TEXT S START=0
"RTN","HMPDJFSG",123,0)
 .S HMPFCNT=HMPFCNT+1,^TMP("HMPF",$J,HMPFCNT)="]"
"RTN","HMPDJFSG",124,0)
 S ^TMP("HMPF",$J,HMPFCNT+1)=$S(HMPFCNT:"}",1:"")_"]",HMPFCNT=HMPFCNT+1
"RTN","HMPDJFSG",125,0)
 I $G(HMPSTGET)="true" D  ; true if "getStatus" argument passed in
"RTN","HMPDJFSG",126,0)
 . S HMPFCNT=HMPFCNT+1,^TMP("HMPF",$J,HMPFCNT)=",""syncStatii"":[",START=1
"RTN","HMPDJFSG",127,0)
 . S I=0 F  S I=$O(^HMP(800000,I)) Q:+I=0  D
"RTN","HMPDJFSG",128,0)
 . . I $P($G(^HMP(800000,I,0)),"^",1)=HMPFHMP D
"RTN","HMPDJFSG",129,0)
 . . . S II=0 F  S II=$O(^HMP(800000,I,1,II)) Q:+II=0  D
"RTN","HMPDJFSG",130,0)
 . . . . S TEXT="{""pid"":"_II_",""status"":"_$P(^HMP(800000,I,1,II,0),"^",2)_"}"
"RTN","HMPDJFSG",131,0)
 . . . . S HMPFCNT=HMPFCNT+1,^TMP("HMPF",$J,HMPFCNT)=$S(START:"",1:",")_TEXT S START=0
"RTN","HMPDJFSG",132,0)
 . S HMPFCNT=HMPFCNT+1,^TMP("HMPF",$J,HMPFCNT)="]"
"RTN","HMPDJFSG",133,0)
 S ^TMP("HMPF",$J,HMPFCNT+1)="}}"
"RTN","HMPDJFSG",134,0)
 ;
"RTN","HMPDJFSG",135,0)
 ; remove any ^XTMP nodes that have been successfully sent based on LAST
"RTN","HMPDJFSG",136,0)
 N DATE,SEQ,LASTDT,LASTSEQ,STRM,LSTRM,RSTRM
"RTN","HMPDJFSG",137,0)
 S LASTDT=+$P(HMPFLAST,"-"),LASTSEQ=+$P(HMPFLAST,"-",2)
"RTN","HMPDJFSG",138,0)
 S RSTRM="HMPFS~"_HMPFHMP_"~",LSTRM=$L(RSTRM),STRM=RSTRM
"RTN","HMPDJFSG",139,0)
 F  S STRM=$O(^XTMP(STRM)) Q:'$L(STRM)  Q:$E(STRM,1,LSTRM)'=RSTRM  D
"RTN","HMPDJFSG",140,0)
 . S DATE=$P(STRM,"~",3) Q:DATE>LASTDT
"RTN","HMPDJFSG",141,0)
 . S SEQ=0 F  S SEQ=$O(^XTMP(STRM,"tidy",SEQ)) Q:'SEQ  Q:(DATE=LASTDT)&(SEQ>LASTSEQ)  D TIDYX(STRM,SEQ)
"RTN","HMPDJFSG",142,0)
 Q
"RTN","HMPDJFSG",143,0)
TIDYX(STREAM,SEQ) ; clean up extracts after they have been retrieved
"RTN","HMPDJFSG",144,0)
 ; from FINISH
"RTN","HMPDJFSG",145,0)
 N BATCH,DOMAIN,TASK
"RTN","HMPDJFSG",146,0)
 S BATCH=^XTMP(STREAM,"tidy",SEQ,"batch")
"RTN","HMPDJFSG",147,0)
 S DOMAIN=^XTMP(STREAM,"tidy",SEQ,"domain")
"RTN","HMPDJFSG",148,0)
 S TASK=^XTMP(STREAM,"tidy",SEQ,"task")
"RTN","HMPDJFSG",149,0)
 I DOMAIN="<done>" K ^XTMP(BATCH) I 1
"RTN","HMPDJFSG",150,0)
 E  K ^XTMP(BATCH,TASK,DOMAIN)
"RTN","HMPDJFSG",151,0)
 K ^XTMP(STREAM,"tidy",SEQ)
"RTN","HMPDJFSG",152,0)
 Q
"RTN","HMPDJFSG",153,0)
SYNCCMD(SEQNODE) ; Build syncCommand object and stick in ^TMP
"RTN","HMPDJFSG",154,0)
 ; expects: HMPSYS, HMPFCNT
"RTN","HMPDJFSG",155,0)
 N DFN,CMD,CMDJSON,ERR
"RTN","HMPDJFSG",156,0)
 S DFN=+SEQNODE
"RTN","HMPDJFSG",157,0)
 S CMD("command")=$P($P(SEQNODE,U,3),":")
"RTN","HMPDJFSG",158,0)
 S CMD("domain")=$P($P(SEQNODE,U,3),":",2)
"RTN","HMPDJFSG",159,0)
 S:DFN CMD("pid")=$$PID^HMPDJFS(DFN)
"RTN","HMPDJFSG",160,0)
 S CMD("system")=HMPSYS
"RTN","HMPDJFSG",161,0)
 D ENCODE^HMPJSON("CMD","CMDJSON","ERR")
"RTN","HMPDJFSG",162,0)
 I $D(ERR) S $EC=",UJSON encode error," Q
"RTN","HMPDJFSG",163,0)
 S HMPFCNT=HMPFCNT+1
"RTN","HMPDJFSG",164,0)
 M ^TMP("HMPF",$J,HMPFCNT)=CMDJSON
"RTN","HMPDJFSG",165,0)
 S ^TMP("HMPF",$J,HMPFCNT,.3)=$$WRAPPER("syncCommand",$$PIDS^HMPDJFS(DFN),1,1)
"RTN","HMPDJFSG",166,0)
 Q
"RTN","HMPDJFSG",167,0)
SYNCSTRT(SEQNODE) ; Build syncStart object with demograhics
"RTN","HMPDJFSG",168,0)
 ; expects HMPFSYS, HMPFHMP, HMPFCNT
"RTN","HMPDJFSG",169,0)
 S HMPFCNT=HMPFCNT+1
"RTN","HMPDJFSG",170,0)
 N DFN,FILTER,DFN,WRAP
"RTN","HMPDJFSG",171,0)
 S DFN=$P($P(SEQNODE,U,3),"~",3) ; HMPFX~hmpSrvId~dfn
"RTN","HMPDJFSG",172,0)
 I DFN D
"RTN","HMPDJFSG",173,0)
 . S FILTER("patientId")=DFN,FILTER("domain")="patient"
"RTN","HMPDJFSG",174,0)
 . D GET^HMPDJ(.RSLT,.FILTER)
"RTN","HMPDJFSG",175,0)
 . ;I $$NODATA^HMPUTILS($P(SEQNODE,U,3)) D
"RTN","HMPDJFSG",176,0)
 . ;. N HMPJD9
"RTN","HMPDJFSG",177,0)
 . ;. S HMPJD9=$G(^TMP("HMP",$J,1,1)),HMPJD9=","_$E(HMPJD9,2,$L(HMPJD9)-1)
"RTN","HMPDJFSG",178,0)
 . ;. S ^TMP("HMP",$J,1,1)=HMPJD9
"RTN","HMPDJFSG",179,0)
 . M ^TMP("HMPF",$J,HMPFCNT)=^TMP("HMP",$J,1)
"RTN","HMPDJFSG",180,0)
 ; for OPD there is no object, so 4th argument is 0 
"RTN","HMPDJFSG",181,0)
 S ^TMP("HMPF",$J,HMPFCNT,.3)=$$WRAPPER("syncStart",$$PIDS^HMPDJFS(DFN),$S(DFN:1,1:-1),$S(DFN:1,1:-1))
"RTN","HMPDJFSG",182,0)
 Q
"RTN","HMPDJFSG",183,0)
SYNCDONE(SEQNODE) ; Build syncStatus object and stick in ^TMP
"RTN","HMPDJFSG",184,0)
 ;  expects: HMPFSYS,HMPFCNT, HMPFHMP
"RTN","HMPDJFSG",185,0)
 N HMPBATCH,DFN,STS,STSJSON,X,ERR
"RTN","HMPDJFSG",186,0)
 S HMPBATCH=$P(SEQNODE,U,3) ; HMPFX~hmpSrvId~dfn
"RTN","HMPDJFSG",187,0)
 S DFN=$P(HMPBATCH,"~",3)
"RTN","HMPDJFSG",188,0)
 S STS("uid")="urn:va:syncStatus:"_HMPFSYS_":"_DFN
"RTN","HMPDJFSG",189,0)
 S STS("initialized")="true"
"RTN","HMPDJFSG",190,0)
 I DFN S STS("localId")=DFN
"RTN","HMPDJFSG",191,0)
 S X="" F  S X=$O(^XTMP(HMPBATCH,0,"count",X)) Q:'$L(X)  D
"RTN","HMPDJFSG",192,0)
 . S STS("domainTotals",X)=^XTMP(HMPBATCH,0,"count",X)
"RTN","HMPDJFSG",193,0)
 ;===JD START===
"RTN","HMPDJFSG",194,0)
 ; If resubscribing a patient, just send demographics
"RTN","HMPDJFSG",195,0)
 I DFN'="OPD",$D(^HMP(800000,"AITEM",DFN)) D
"RTN","HMPDJFSG",196,0)
 . N HMP99
"RTN","HMPDJFSG",197,0)
 . S HMP99=""
"RTN","HMPDJFSG",198,0)
 . ; Reset all domain counts to zero except for demographics
"RTN","HMPDJFSG",199,0)
 . F  S HMP99=$O(STS("domainTotals",HMP99)) Q:'HMP99  I HMP99'="patient" S STS("domainTotals",HMP99)=0
"RTN","HMPDJFSG",200,0)
 ;===JD   END===
"RTN","HMPDJFSG",201,0)
 D ENCODE^HMPJSON("STS","STSJSON","ERR")
"RTN","HMPDJFSG",202,0)
 I $D(ERR) S $EC=",UJSON encode error," Q
"RTN","HMPDJFSG",203,0)
 S HMPFCNT=HMPFCNT+1
"RTN","HMPDJFSG",204,0)
 M ^TMP("HMPF",$J,HMPFCNT)=STSJSON
"RTN","HMPDJFSG",205,0)
 S ^TMP("HMPF",$J,HMPFCNT,.3)=$$WRAPPER("syncStatus",$$PIDS^HMPDJFS(DFN),1,1)
"RTN","HMPDJFSG",206,0)
 Q
"RTN","HMPDJFSG",207,0)
 ;
"RTN","HMPDJFSG",208,0)
SYNCERR(SNODE,HMPERR) ;
"RTN","HMPDJFSG",209,0)
 N BATCH,CNT,DFN,NUM,OFFSET,PIDS,TASK,TOTAL,X
"RTN","HMPDJFSG",210,0)
 S DFN=$P(SNODE,U),X=$P(SNODE,U,3)
"RTN","HMPDJFSG",211,0)
 S PIDS=$$PIDS^HMPDJFS(DFN)
"RTN","HMPDJFSG",212,0)
 S TASK=$P(X,":",2),TOTAL=$P(X,":",4)
"RTN","HMPDJFSG",213,0)
 S BATCH="HMPFX~"_HMPFHMP_"~"_DFN       ; extract node in ^XTMP
"RTN","HMPDJFSG",214,0)
 S CNT=$O(HMPERR(""),-1)
"RTN","HMPDJFSG",215,0)
 S NUM=0 F  S NUM=$O(^XTMP(BATCH,TASK,"error",NUM)) Q:NUM'>0  D
"RTN","HMPDJFSG",216,0)
 .S CNT=CNT+1 S HMPERR(CNT)=$G(^XTMP(BATCH,TASK,"error",NUM,1))
"RTN","HMPDJFSG",217,0)
 Q
"RTN","HMPDJFSG",218,0)
 ;
"RTN","HMPDJFSG",219,0)
FRESHITM(SEQNODE,DELETE,ERROR) ; Get freshness item and stick in ^TMP
"RTN","HMPDJFSG",220,0)
 ; expects HMPFSYS, HMPFHMP
"RTN","HMPDJFSG",221,0)
 N ACT,DFN,DOMAIN,ECNT,FILTER,ID,RSLT,UID,HMP97,HMPI,WRAP
"RTN","HMPDJFSG",222,0)
 S FILTER("noHead")=1
"RTN","HMPDJFSG",223,0)
 S DFN=$P(SEQNODE,U),DOMAIN=$P(SEQNODE,U,2),ID=$P(SEQNODE,U,3),ACT=$P(SEQNODE,U,4)
"RTN","HMPDJFSG",224,0)
 ;I ACT="@" D  Q
"RTN","HMPDJFSG",225,0)
 .;I '$D(^TMP("HMP",$J,1)),ACT="@" D
"RTN","HMPDJFSG",226,0)
 ;. S UID=$$SETUID^HMPUTILS(DOMAIN,$S(+DFN>0:DFN,1:""),ID)
"RTN","HMPDJFSG",227,0)
 ;. S DELETE(UID)=""
"RTN","HMPDJFSG",228,0)
 I ACT'="@" D
"RTN","HMPDJFSG",229,0)
 . S FILTER("id")=ID
"RTN","HMPDJFSG",230,0)
 . S FILTER("domain")=DOMAIN
"RTN","HMPDJFSG",231,0)
 . I DFN="OPD" D GET^HMPEF(.RSLT,.FILTER)
"RTN","HMPDJFSG",232,0)
 . I +DFN>0 D
"RTN","HMPDJFSG",233,0)
 . . S FILTER("patientId")=DFN
"RTN","HMPDJFSG",234,0)
 . . D GET^HMPDJ(.RSLT,.FILTER)
"RTN","HMPDJFSG",235,0)
 I ACT'="@",$L($G(^TMP("HMP",$J,"error")))>0 D BLDSERR(DFN,.ERROR)  Q
"RTN","HMPDJFSG",236,0)
 ;
"RTN","HMPDJFSG",237,0)
 ;I '$D(^TMP("HMP",$J,1)) D  Q
"RTN","HMPDJFSG",238,0)
 ;. S UID=$$SETUID^HMPUTILS(DOMAIN,$S(+DFN>0:DFN,1:""),ID)
"RTN","HMPDJFSG",239,0)
 ;. S DELETE(UID)=""
"RTN","HMPDJFSG",240,0)
 I '$D(^TMP("HMP",$J,1)) S ACT="@"
"RTN","HMPDJFSG",241,0)
 I ACT="@" D
"RTN","HMPDJFSG",242,0)
 . S UID=$$SETUID^HMPUTILS(DOMAIN,$S(+DFN>0:DFN,1:""),ID)
"RTN","HMPDJFSG",243,0)
 . S HMP97=UID
"RTN","HMPDJFSG",244,0)
 . K ^TMP("HMP",$J) S ^TMP("HMP",$J,1)="{1:1}" ; Need to dummy this up or it will never get set later
"RTN","HMPDJFSG",245,0)
 ;
"RTN","HMPDJFSG",246,0)
 ;Add syncstart, data and syncstatus to JSON for unsolicited updates - US4588 & US3682
"RTN","HMPDJFSG",247,0)
 I (DOMAIN="pt-select")!(DOMAIN="user")!(DOMAIN["asu-")!(DOMAIN="doc-def")!(DFN=+DFN) D ADHOC^HMPUTIL1(DOMAIN,.HMPFCNT,DFN) Q
"RTN","HMPDJFSG",248,0)
 ;
"RTN","HMPDJFSG",249,0)
 S WRAP=$$WRAPPER(DOMAIN,$$PIDS^HMPDJFS(DFN),1,1)
"RTN","HMPDJFSG",250,0)
 F HMPI=1:1 Q:'$D(^TMP("HMP",$J,HMPI))  D
"RTN","HMPDJFSG",251,0)
 . S HMPFCNT=HMPFCNT+1
"RTN","HMPDJFSG",252,0)
 . M ^TMP("HMPF",$J,HMPFCNT)=^TMP("HMP",$J,HMPI)
"RTN","HMPDJFSG",253,0)
 . S ^TMP("HMPF",$J,HMPFCNT,.3)=WRAP
"RTN","HMPDJFSG",254,0)
 Q
"RTN","HMPDJFSG",255,0)
 ;
"RTN","HMPDJFSG",256,0)
BLDSERR(DFN,ERROR) ; Create syncError object in ERRJSON
"RTN","HMPDJFSG",257,0)
 ; expects: HMPBATCH, HMPFSYS, HMPFZTSK
"RTN","HMPDJFSG",258,0)
 N COUNT,ERRVAL,ERROBJ,ERR,ERRMSG,SYNCERR
"RTN","HMPDJFSG",259,0)
 ;S ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,NODE,.3)="{"  ; replace , with { for decoding JSON
"RTN","HMPDJFSG",260,0)
 M ERRVAL=^TMP("HMP",$J,"error")
"RTN","HMPDJFSG",261,0)
 I $G(ERRVAL)="" Q
"RTN","HMPDJFSG",262,0)
 S ERRVAL="{"_ERRVAL_"}"
"RTN","HMPDJFSG",263,0)
 D DECODE^HMPJSON("ERRVAL","ERROBJ","ERR")
"RTN","HMPDJFSG",264,0)
 I $D(ERR) S $EC=",UJSON decode error,"
"RTN","HMPDJFSG",265,0)
 S ERRMSG=ERROBJ("error","message")
"RTN","HMPDJFSG",266,0)
 Q:'$L(ERRMSG)
"RTN","HMPDJFSG",267,0)
 S SYNCERR("uid")="urn:va:syncError:"_HMPFSYS_":"_DFN_":FRESHNESS"
"RTN","HMPDJFSG",268,0)
 S SYNCERR("collection")=DOMAIN
"RTN","HMPDJFSG",269,0)
 S SYNCERR("error")=ERRMSG
"RTN","HMPDJFSG",270,0)
 D ENCODE^HMPJSON("SYNCERR","ERRJSON","ERR") I $D(ERR) S $EC=",UJSON encode error," Q
"RTN","HMPDJFSG",271,0)
 S COUNT=$O(ERROR(""),-1)+1
"RTN","HMPDJFSG",272,0)
 M ERROR(COUNT)=ERRJSON
"RTN","HMPDJFSG",273,0)
 Q
"RTN","HMPDJFSG",274,0)
WRAPPER(DOMAIN,PIDS,OFFSET,DOMSIZE) ; return JSON wrapper for each item
"RTN","HMPDJFSG",275,0)
 ; add object tag if extract total not zero or if total passed as -1
"RTN","HMPDJFSG",276,0)
 ; seq and total tags only added if non-zero
"RTN","HMPDJFSG",277,0)
 N X,Y,Z
"RTN","HMPDJFSG",278,0)
 ; Ensure that X exists
"RTN","HMPDJFSG",279,0)
 S X=""
"RTN","HMPDJFSG",280,0)
 S Z=$P(SNODE,U,3)
"RTN","HMPDJFSG",281,0)
 S HMPSTMP=$G(^XTMP(Z,"HMPSTMP"))
"RTN","HMPDJFSG",282,0)
 ; This was working for operational data, not patient data
"RTN","HMPDJFSG",283,0)
 ; DFN will be OPD if this is operational data (non-obvious I know)
"RTN","HMPDJFSG",284,0)
 I DFN="OPD" D
"RTN","HMPDJFSG",285,0)
 . S:$G(DOMAIN)'="syncStart" X="},{""collection"":"""_$P(DOMAIN,"#")_""""_PIDS
"RTN","HMPDJFSG",286,0)
 E  S X="},{""collection"":"""_$P(DOMAIN,"#")_""""_PIDS  ; If ONLY patient data exists
"RTN","HMPDJFSG",287,0)
 I $P(DOMAIN,"#")="syncStart",$O(^XTMP(Z,0))]"" D  Q X
"RTN","HMPDJFSG",288,0)
 .; --- Start US3907 ---
"RTN","HMPDJFSG",289,0)
 .; Pass JobId and RootJobId back in the response if we were given them
"RTN","HMPDJFSG",290,0)
 .; This bridges the gap between Job status and Sync Status (since VistA will be giving the syncStatus)
"RTN","HMPDJFSG",291,0)
 .S Y=$G(^XTMP(Z,"JOBID"))
"RTN","HMPDJFSG",292,0)
 .I Y]"" S X=X_",""jobId"":"""_Y_""""
"RTN","HMPDJFSG",293,0)
 .S Y=$G(^XTMP(Z,"ROOTJOBID"))
"RTN","HMPDJFSG",294,0)
 .I Y]"" S X=X_",""rootJobId"":"""_Y_""""
"RTN","HMPDJFSG",295,0)
 .; --- End US3907 ---
"RTN","HMPDJFSG",296,0)
 .;I DFN'="OPD",$$NODATA^HMPUTILS(Z) Q
"RTN","HMPDJFSG",297,0)
 .I DFN'="OPD" D META^HMPUTILS(SNODE) ; If ONLY patient data exists
"RTN","HMPDJFSG",298,0)
 .E  D META1^HMPUTILS(SNODE,HMPSTMP) ; If BOTH patient data and operational data exist
"RTN","HMPDJFSG",299,0)
 S X=X_","
"RTN","HMPDJFSG",300,0)
 I $G(OFFSET)>-1 S X=X_"""seq"":"_OFFSET_","
"RTN","HMPDJFSG",301,0)
 I $G(DOMSIZE)>-1 S X=X_"""total"":"_DOMSIZE_","
"RTN","HMPDJFSG",302,0)
 I $G(OFFSET)>-1 S X=X_"""object"":"
"RTN","HMPDJFSG",303,0)
 Q X
"RTN","HMPDJFSG",304,0)
 ;
"RTN","HMPDJFSG",305,0)
APIHDR(COUNT,LASTITM) ; return JSON
"RTN","HMPDJFSG",306,0)
 ; expects HMPFSYS
"RTN","HMPDJFSG",307,0)
 N X
"RTN","HMPDJFSG",308,0)
 S X="{""apiVersion"":1.02,""params"":{""domain"":"""_$$KSP^XUPARAM("WHERE")_""""
"RTN","HMPDJFSG",309,0)
 S X=X_",""systemId"":"""_HMPFSYS_"""},""data"":{""updated"":"""_$$HL7NOW^HMPDJ_""""
"RTN","HMPDJFSG",310,0)
 S X=X_",""totalItems"":"_COUNT_",""lastUpdate"":"""_LASTITM_""""_$$PROGRESS^HMPDJFS(LASTITM)
"RTN","HMPDJFSG",311,0)
 S X=X_",""items"":["
"RTN","HMPDJFSG",312,0)
 Q X
"RTN","HMPDJFSG",313,0)
 ;
"RTN","HMPDJFSG",314,0)
NOOP(LASTITM) ; No-op, don't return any items
"RTN","HMPDJFSG",315,0)
 S ^TMP("HMPF",$J,.5)=$$APIHDR(0,LASTITM)_"]}}"
"RTN","HMPDJFSG",316,0)
 Q
"RTN","HMPDJFSG",317,0)
VERMATCH(HMPIEN,VERSION) ; true if middle tier HMP and VistA version match
"RTN","HMPDJFSG",318,0)
 ; versions match, queue any patients waiting for match
"RTN","HMPDJFSG",319,0)
 I $P($$GET^XPAR("PKG","HMP JSON SCHEMA"),".")=$P(VERSION,".") D  QUIT 1
"RTN","HMPDJFSG",320,0)
 . Q:'$G(^XTMP("HMPFS~"_HMPIEN,"waiting"))  ; no patients awaiting queuing
"RTN","HMPDJFSG",321,0)
 . S ^XTMP("HMPFS~"_HMPIEN,"waiting")=0
"RTN","HMPDJFSG",322,0)
 . N DOMAINS,BATCH,HMPNAME
"RTN","HMPDJFSG",323,0)
 . S HMPNAME=$P(^HMP(800000,HMPIEN,0),U)
"RTN","HMPDJFSG",324,0)
 . D PTDOMS^HMPDJFSD(.DOMAINS)
"RTN","HMPDJFSG",325,0)
 . S DFN=0 F  S DFN=$O(^XTMP("HMPFS~"_HMPIEN,"waiting",DFN)) Q:'DFN  D
"RTN","HMPDJFSG",326,0)
 . . S BATCH="HMPFX~"_HMPNAME_"~"_DFN
"RTN","HMPDJFSG",327,0)
 . . D QUINIT^HMPDJFSP(BATCH,DFN,.DOMAINS)
"RTN","HMPDJFSG",328,0)
 . K ^XTMP("HMPFS~"_HMPIEN)
"RTN","HMPDJFSG",329,0)
 ;
"RTN","HMPDJFSG",330,0)
 ; otherwise, hold things
"RTN","HMPDJFSG",331,0)
 D NEWXTMP^HMPDJFS("HMPFS~"_HMPIEN,8,"HMP Awaiting Version Match")
"RTN","HMPDJFSG",332,0)
 S ^XTMP("HMPFS~"_HMPIEN,"waiting")=1
"RTN","HMPDJFSG",333,0)
 Q 0
"RTN","HMPDJFSG",334,0)
 ;
"RTN","HMPDJFSG",335,0)
LASTUPD(HMPSRV,LASTUPD) ; save the last update
"RTN","HMPDJFSG",336,0)
 ; TODO: change this to use Fileman call
"RTN","HMPDJFSG",337,0)
 N IEN,CURRUPD,REPEAT
"RTN","HMPDJFSG",338,0)
 S IEN=$O(^HMP(800000,"B",HMPSRV,0)) Q:'IEN
"RTN","HMPDJFSG",339,0)
 Q:LASTUPD["^"
"RTN","HMPDJFSG",340,0)
 S CURRUPD=$P(^HMP(800000,IEN,0),"^",2),REPEAT=$P(^HMP(800000,IEN,0),"^",4)
"RTN","HMPDJFSG",341,0)
 I LASTUPD=CURRUPD S $P(^HMP(800000,IEN,0),"^",4)=REPEAT+1 QUIT
"RTN","HMPDJFSG",342,0)
 S $P(^HMP(800000,IEN,0),"^",2)=LASTUPD,$P(^HMP(800000,IEN,0),"^",4)=0
"RTN","HMPDJFSG",343,0)
 Q
"RTN","HMPDJFSG",344,0)
JSONOUT ; Write out JSON in ^TMP
"RTN","HMPDJFSG",345,0)
 N X
"RTN","HMPDJFSG",346,0)
 S X=$NA(^TMP("HMPF",$J))
"RTN","HMPDJFSG",347,0)
 F  S X=$Q(@X) Q:($QS(X,1)'="HMPF")!($QS(X,2)'=$J)  W !,@X
"RTN","HMPDJFSG",348,0)
 Q
"RTN","HMPDJFSM")
0^47^B89659473
"RTN","HMPDJFSM",1,0)
HMPDJFSM ;SLC/KCM -- Monitoring Tools for Extracts
"RTN","HMPDJFSM",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJFSM",3,0)
 ;
"RTN","HMPDJFSM",4,0)
EN ; Show information for one server
"RTN","HMPDJFSM",5,0)
 N IEN
"RTN","HMPDJFSM",6,0)
 S IEN=$$GETSRV() Q:IEN'>0
"RTN","HMPDJFSM",7,0)
 D LOOP(IEN)
"RTN","HMPDJFSM",8,0)
 Q
"RTN","HMPDJFSM",9,0)
ALL ; Show information for all servers
"RTN","HMPDJFSM",10,0)
 S IEN=0 F  S IEN=$O(^HMP(800000,IEN)) Q:'IEN  W ! D SHOWSRV(IEN)
"RTN","HMPDJFSM",11,0)
 Q
"RTN","HMPDJFSM",12,0)
ADDPT(PAT) ; Add patient to server
"RTN","HMPDJFSM",13,0)
 N SRV,ARGS,RESULT
"RTN","HMPDJFSM",14,0)
 I '$G(PAT) S PAT=$$GETPAT() Q:'PAT
"RTN","HMPDJFSM",15,0)
 S SRV=$$GETSRV() Q:SRV'>0
"RTN","HMPDJFSM",16,0)
 I $G(^HMP(800000,"AITEM",PAT,SRV))>0 W !,"Patient "_PAT_" already synced."
"RTN","HMPDJFSM",17,0)
 ;
"RTN","HMPDJFSM",18,0)
 S ARGS("command")="putPtSubscription"
"RTN","HMPDJFSM",19,0)
 S ARGS("server")=$P(^HMP(800000,SRV,0),"^")
"RTN","HMPDJFSM",20,0)
 S ARGS("localId")=PAT
"RTN","HMPDJFSM",21,0)
 D API^HMPDJFS(.RESULT,.ARGS)
"RTN","HMPDJFSM",22,0)
 I ^TMP("HMPF",$J,1)["location" W !,$P($G(^DPT(PAT,0)),"^")," is being synced."
"RTN","HMPDJFSM",23,0)
 E  W !,"Subscription failed."
"RTN","HMPDJFSM",24,0)
 Q
"RTN","HMPDJFSM",25,0)
LOGLVL ; Set log level
"RTN","HMPDJFSM",26,0)
 N DIR,DTOUT,DUOUT,DIRUT,Y,ERR
"RTN","HMPDJFSM",27,0)
 W !,"Set freshness logging level."
"RTN","HMPDJFSM",28,0)
 W !,"Current level is ",$$GET^XPAR("ALL","HMP LOG LEVEL")
"RTN","HMPDJFSM",29,0)
 S DIR(0)="S^0:no logging;1:request logging;2:response logging;C:clear logs"
"RTN","HMPDJFSM",30,0)
 D ^DIR
"RTN","HMPDJFSM",31,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT) Q
"RTN","HMPDJFSM",32,0)
 I Y="C" K ^XTMP("HMPFLOG") Q
"RTN","HMPDJFSM",33,0)
 I Y>0 K ^XTMP("HMPFLOG")
"RTN","HMPDJFSM",34,0)
 D PUT^XPAR("SYS","HMP LOG LEVEL",1,Y,.ERR)
"RTN","HMPDJFSM",35,0)
 I $G(ERR) W !,"Error saving log level"
"RTN","HMPDJFSM",36,0)
 Q
"RTN","HMPDJFSM",37,0)
THLTH ; test health
"RTN","HMPDJFSM",38,0)
 K ^TMP("HMPF",$J)
"RTN","HMPDJFSM",39,0)
 N ARGS,HMPFHMP,HMPSYS,HMPFRSP
"RTN","HMPDJFSM",40,0)
 S ARGS("server")="Test-Server-1"
"RTN","HMPDJFSM",41,0)
 S HMPFRSP=$NA(^TMP("HMPF",$J))
"RTN","HMPDJFSM",42,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPDJFSM",43,0)
 S HMPFHMP=$TR($G(ARGS("server")),"~","=")
"RTN","HMPDJFSM",44,0)
 D HLTHCHK(.ARGS)
"RTN","HMPDJFSM",45,0)
 N I S I=0 F  S I=$O(^TMP("HMPF",$J,I)) Q:'I  W !,^TMP("HMPF",$J,I)
"RTN","HMPDJFSM",46,0)
 Q
"RTN","HMPDJFSM",47,0)
HLTHCHK(ARGS) ; Check health of VistA Server subscription
"RTN","HMPDJFSM",48,0)
 ; expect HMPFRSP, HMPFHMP, HMPSYS to be created by API^HMPDJFS
"RTN","HMPDJFSM",49,0)
 ; . ARGS("server")=HMP Server Id
"RTN","HMPDJFSM",50,0)
 ; return a list of extracts that are currently active
"RTN","HMPDJFSM",51,0)
 ; {pid="ABCD;229",domainsCompleted=8,domainsPending=20,objectCount=137,
"RTN","HMPDJFSM",52,0)
 ;  subscribeTime=20140609112734,extractStatus="initializing"}
"RTN","HMPDJFSM",53,0)
 ; ^TMP("HMPF",$J,1)=results
"RTN","HMPDJFSM",54,0)
 ;
"RTN","HMPDJFSM",55,0)
 N HMPIEN,STS,TIME,DFN
"RTN","HMPDJFSM",56,0)
 S HMPIEN=$O(^HMP(800000,"B",HMPFHMP,0))
"RTN","HMPDJFSM",57,0)
 I 'HMPIEN D SETERR^HMPDJFS("Server not registered") QUIT
"RTN","HMPDJFSM",58,0)
 S NODE=0
"RTN","HMPDJFSM",59,0)
 S STS="" F  S STS=$O(^HMP(800000,HMPIEN,1,"AP",STS)) Q:'$L(STS)  D
"RTN","HMPDJFSM",60,0)
 . S TIME="" F  S TIME=$O(^HMP(800000,HMPIEN,1,"AP",STS,TIME)) Q:'$L(TIME)  D
"RTN","HMPDJFSM",61,0)
 . . S DFN="" F  S DFN=$O(^HMP(800000,HMPIEN,1,"AP",STS,TIME,DFN)) Q:'DFN  D
"RTN","HMPDJFSM",62,0)
 . . . S NODE=NODE+1
"RTN","HMPDJFSM",63,0)
 . . . S ^TMP("HMPF",$J,NODE)=$$HLTHINFO(HMPFHMP,HMPIEN,DFN)
"RTN","HMPDJFSM",64,0)
 S ^TMP("HMPF",$J,.5)=$$HLTHHDR(NODE)
"RTN","HMPDJFSM",65,0)
 S ^TMP("HMPF",$J,NODE+1)="]}}"
"RTN","HMPDJFSM",66,0)
 Q
"RTN","HMPDJFSM",67,0)
HLTHINFO(SRV,SRVIEN,DFN) ; Return a string of JSON reporting progress for this domain
"RTN","HMPDJFSM",68,0)
 ; {pid,domainsCompleted,domainsPending,objectCount,queuedTime,phase(waiting,extracting)
"RTN","HMPDJFSM",69,0)
 N BATCH,QTIME,DONE,PEND,CNT,DOM,INFO,STS,JSON
"RTN","HMPDJFSM",70,0)
 S BATCH="HMPFX~"_SRV_"~"_DFN
"RTN","HMPDJFSM",71,0)
 S QTIME=$G(^XTMP(BATCH,0,"time")) S:$L(QTIME) QTIME=$$HTFM^XLFDT(QTIME)
"RTN","HMPDJFSM",72,0)
 S DONE=0,PEND=0,CNT=0
"RTN","HMPDJFSM",73,0)
 S DOM="" F  S DOM=$O(^XTMP(BATCH,0,"status",DOM)) Q:DOM=""  D
"RTN","HMPDJFSM",74,0)
 . S CNT=CNT+$G(^XTMP(BATCH,0,"count",DOM))
"RTN","HMPDJFSM",75,0)
 . I $G(^XTMP(BATCH,0,"status",DOM)) S DONE=DONE+1 QUIT
"RTN","HMPDJFSM",76,0)
 . S PEND=PEND+1
"RTN","HMPDJFSM",77,0)
 S INFO("pid")=$$PID^HMPDJFS(DFN)
"RTN","HMPDJFSM",78,0)
 S INFO("domainsCompleted")=DONE
"RTN","HMPDJFSM",79,0)
 S INFO("domainsPending")=PEND
"RTN","HMPDJFSM",80,0)
 S INFO("objectCount")=CNT
"RTN","HMPDJFSM",81,0)
 I $L(QTIME) S INFO("queuedTime")=$P($$FMTHL7^XLFDT(QTIME),"-")
"RTN","HMPDJFSM",82,0)
 S STS=$P($G(^HMP(800000,SRVIEN,1,DFN,0)),"^",2)
"RTN","HMPDJFSM",83,0)
 S INFO("extractStatus")=$S(STS=1:"initializing",STS=2:"initialized",1:"uninitialized")
"RTN","HMPDJFSM",84,0)
 D ENCODE^HMPJSON("INFO","JSON")
"RTN","HMPDJFSM",85,0)
 Q JSON(1)
"RTN","HMPDJFSM",86,0)
 ;
"RTN","HMPDJFSM",87,0)
HLTHHDR(COUNT) ; return JSON
"RTN","HMPDJFSM",88,0)
 ; expects HMPFSYS
"RTN","HMPDJFSM",89,0)
 N X
"RTN","HMPDJFSM",90,0)
 S X="{""apiVersion"":1.02,""params"":{""domain"":"""_$$KSP^XUPARAM("WHERE")_""""
"RTN","HMPDJFSM",91,0)
 S X=X_",""systemId"":"""_HMPSYS_"""},""data"":{""updated"":"""_$$HL7NOW^HMPDJ_""""
"RTN","HMPDJFSM",92,0)
 S X=X_",""totalItems"":"_COUNT
"RTN","HMPDJFSM",93,0)
 S X=X_",""items"":["
"RTN","HMPDJFSM",94,0)
 Q X
"RTN","HMPDJFSM",95,0)
 ;
"RTN","HMPDJFSM",96,0)
LOOP(SRV) ; Monitor refresh loop
"RTN","HMPDJFSM",97,0)
 D HOME^%ZIS
"RTN","HMPDJFSM",98,0)
 N ACT,IEN
"RTN","HMPDJFSM",99,0)
 S ACT="R" F  D  Q:"RV"'[ACT
"RTN","HMPDJFSM",100,0)
 . I ACT="R" D SHOWMAIN(SRV)
"RTN","HMPDJFSM",101,0)
 . I ACT="V" D SHOWHMPN
"RTN","HMPDJFSM",102,0)
 . W ! S ACT=$$GETCMD
"RTN","HMPDJFSM",103,0)
 Q
"RTN","HMPDJFSM",104,0)
GETSRV() ; Return the IEN for the server to monitor
"RTN","HMPDJFSM",105,0)
 N DIC,Y
"RTN","HMPDJFSM",106,0)
 S DIC="^HMP(800000,",DIC(0)="AEMQ",DIC("A")="Select HMP server instance: "
"RTN","HMPDJFSM",107,0)
 D ^DIC
"RTN","HMPDJFSM",108,0)
 Q +Y
"RTN","HMPDJFSM",109,0)
 ;
"RTN","HMPDJFSM",110,0)
GETPAT() ; Return DFN for a patient
"RTN","HMPDJFSM",111,0)
 N DIC,Y
"RTN","HMPDJFSM",112,0)
 S DIC="^DPT(",DIC(0)="AEMQ"
"RTN","HMPDJFSM",113,0)
 D ^DIC
"RTN","HMPDJFSM",114,0)
 Q +Y
"RTN","HMPDJFSM",115,0)
 ;
"RTN","HMPDJFSM",116,0)
GETCMD() ; Get the next command
"RTN","HMPDJFSM",117,0)
 N X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","HMPDJFSM",118,0)
 S DIR(0)="SB^R:Refresh;V:View HMP Nodes;Q:Quit"
"RTN","HMPDJFSM",119,0)
 S DIR("B")="Refresh"
"RTN","HMPDJFSM",120,0)
 D ^DIR
"RTN","HMPDJFSM",121,0)
 I $D(DIRUT)!$D(DIROUT) S Y="Q"
"RTN","HMPDJFSM",122,0)
 Q Y
"RTN","HMPDJFSM",123,0)
 ;
"RTN","HMPDJFSM",124,0)
SHOWHMPN ; Show HMP global nodes
"RTN","HMPDJFSM",125,0)
 W !!,"Current HMP temporary nodes",?40,"High Numeric or Last Subscript",!
"RTN","HMPDJFSM",126,0)
 N X,Y,J
"RTN","HMPDJFSM",127,0)
 S X="VPQ~" F  S X=$O(^XTMP(X)) Q:$E(X,1,3)'="HMP"  D
"RTN","HMPDJFSM",128,0)
 . W !,"^XTMP("""_X_""")"
"RTN","HMPDJFSM",129,0)
 . S Y=$O(^XTMP(X," "),-1) S:'$L(Y) Y=$O(^XTMP(X,""),-1) W ?40,Y
"RTN","HMPDJFSM",130,0)
 W !
"RTN","HMPDJFSM",131,0)
 S X="VPQ~" F  S X=$O(^TMP(X)) Q:$E(X,1,3)'="HMP"  D
"RTN","HMPDJFSM",132,0)
 . S J=0 F  S J=$O(^TMP(X,J)) Q:'J  D
"RTN","HMPDJFSM",133,0)
 . . W !,"^TMP("""_X_""","_J_")"
"RTN","HMPDJFSM",134,0)
 . . S Y=$O(^TMP(X,J," "),-1) S:'$L(Y) Y=$O(^TMP(X,J,""),-1) W ?40,Y
"RTN","HMPDJFSM",135,0)
 S J=0 F  S J=$O(^TMP(J)) Q:'J  D
"RTN","HMPDJFSM",136,0)
 . S X="VPQ~" F  S X=$O(^TMP(J,X)) Q:$E(X,1,3)'="HMP"  D
"RTN","HMPDJFSM",137,0)
 . . W !,"^TMP("_J_","""_X_""")"
"RTN","HMPDJFSM",138,0)
 . . S Y=$O(^TMP(J,X," "),-1) S:'$L(Y) Y=$O(^TMP(J,X,""),-1) W ?40,Y
"RTN","HMPDJFSM",139,0)
 Q
"RTN","HMPDJFSM",140,0)
SHOWMAIN(SRV) ; Show main information for server
"RTN","HMPDJFSM",141,0)
 N STREAM
"RTN","HMPDJFSM",142,0)
 S STREAM=$$LSTREAM(SRV)
"RTN","HMPDJFSM",143,0)
 W @IOF
"RTN","HMPDJFSM",144,0)
 W !,$$HTE^XLFDT($H),?64,"Slots Open: ",$$SLOTS,!
"RTN","HMPDJFSM",145,0)
 I STREAM="" W !,"No HMP extract stream found." Q
"RTN","HMPDJFSM",146,0)
 D SHOWSRV(SRV)
"RTN","HMPDJFSM",147,0)
 D LJOBS(SRV)
"RTN","HMPDJFSM",148,0)
 D LQUEUE(SRV,10)
"RTN","HMPDJFSM",149,0)
 Q 
"RTN","HMPDJFSM",150,0)
SHOWSRV(IEN) ; Show information for a server
"RTN","HMPDJFSM",151,0)
 N X0,ROOT,BATCH,STREAM,SRVNM,LASTUP,REPEAT,TASK,TASKS
"RTN","HMPDJFSM",152,0)
 S X0=^HMP(800000,IEN,0)
"RTN","HMPDJFSM",153,0)
 S SRVNM=$P(X0,"^"),LASTUP=$P(X0,"^",2),REPEAT=$P(X0,"^",4)
"RTN","HMPDJFSM",154,0)
 S STREAM=$$LSTREAM(IEN)
"RTN","HMPDJFSM",155,0)
 W !,SRVNM,?30,"Last Update: ",LASTUP W:REPEAT "  x",REPEAT
"RTN","HMPDJFSM",156,0)
 I $D(^XTMP(STREAM)) D
"RTN","HMPDJFSM",157,0)
 . W !,?29,"End of Queue: ",$P(STREAM,"~",3),"-",$G(^XTMP(STREAM,"last"))
"RTN","HMPDJFSM",158,0)
 ; loop thru extracts for this server
"RTN","HMPDJFSM",159,0)
 S ROOT="HMPFX~"_SRVNM_"~",BATCH=ROOT
"RTN","HMPDJFSM",160,0)
 S BATCH=ROOT F  S BATCH=$O(^XTMP(BATCH)) Q:$E(BATCH,1,$L(ROOT))'=ROOT  D
"RTN","HMPDJFSM",161,0)
 . W !,$J($P(BATCH,"~",3),12)
"RTN","HMPDJFSM",162,0)
 . S TASK=0,TASKS=""
"RTN","HMPDJFSM",163,0)
 . F  S TASK=$O(^XTMP(BATCH,0,"task",TASK)) Q:'TASK  S TASKS=TASKS_$S($L(TASKS):",",1:"")_TASK
"RTN","HMPDJFSM",164,0)
 . W ?14,"Task(s)"_TASKS
"RTN","HMPDJFSM",165,0)
 . I '$D(^XTMP(BATCH,0,"wait")) W ?34,"waiting: ",$$WAIT(BATCH)," seconds" Q
"RTN","HMPDJFSM",166,0)
 . W ?31,"extracting: ",$$LOBJ(BATCH,TASK)
"RTN","HMPDJFSM",167,0)
 Q
"RTN","HMPDJFSM",168,0)
WAIT(BATCH) ; Return the number of seconds the batch has been waiting
"RTN","HMPDJFSM",169,0)
 N START
"RTN","HMPDJFSM",170,0)
 S START=$G(^XTMP(BATCH,0,"time")) Q:'START 0
"RTN","HMPDJFSM",171,0)
 Q $$HDIFF^XLFDT($H,START,2)
"RTN","HMPDJFSM",172,0)
 ;
"RTN","HMPDJFSM",173,0)
LOBJ(BATCH,TASK) ; Return the last domain>count retrieved for this batch
"RTN","HMPDJFSM",174,0)
 Q:'TASK "no task"
"RTN","HMPDJFSM",175,0)
 N LASTITM,DOMAIN,NUM
"RTN","HMPDJFSM",176,0)
 S LASTITM=""
"RTN","HMPDJFSM",177,0)
 S DOMAIN="",LASTITM=""
"RTN","HMPDJFSM",178,0)
 F  S DOMAIN=$O(^XTMP(BATCH,0,"status",DOMAIN)) Q:'$L(DOMAIN)  D  Q:$L(LASTITM)
"RTN","HMPDJFSM",179,0)
 . I $G(^XTMP(BATCH,0,"status",DOMAIN)) Q  ; domain complete
"RTN","HMPDJFSM",180,0)
 . S NUM=$O(^XTMP(BATCH,TASK,DOMAIN,""),-1)
"RTN","HMPDJFSM",181,0)
 . S LASTITM=DOMAIN_$S(NUM:" #"_NUM,1:"")
"RTN","HMPDJFSM",182,0)
 Q $S('$L(LASTITM):"<finished>",1:LASTITM)
"RTN","HMPDJFSM",183,0)
 ;
"RTN","HMPDJFSM",184,0)
SLOTS() ; Return the number of slots available
"RTN","HMPDJFSM",185,0)
 N OUT
"RTN","HMPDJFSM",186,0)
 D FIND^DIC(3.54,"","1","BX","HMP EXTRACT RESOURCE","","","","","OUT")
"RTN","HMPDJFSM",187,0)
 Q $G(OUT("DILIST","ID",1,1))
"RTN","HMPDJFSM",188,0)
 ;
"RTN","HMPDJFSM",189,0)
LJOBS(SRV) ; Show jobs polling in this stream
"RTN","HMPDJFSM",190,0)
 N STREAM,JOBLIST,JOBNUM,JOBNA,X,Y
"RTN","HMPDJFSM",191,0)
 S STREAM=$$LSTREAM(SRV),JOBLIST="",JOBNA=0
"RTN","HMPDJFSM",192,0)
 S JOBNUM="" F  S JOBNUM=$O(^XTMP(STREAM,"job",JOBNUM)) Q:'JOBNUM  D
"RTN","HMPDJFSM",193,0)
 . ; check if job is still active
"RTN","HMPDJFSM",194,0)
 . S X=JOBNUM X ^%ZOSF("JOBPARAM") I '$L(Y) S JOBNA=JOBNA+1 QUIT  ; check if job active
"RTN","HMPDJFSM",195,0)
 . S JOBLIST=JOBLIST_$S($L(JOBLIST):", ",1:"")_JOBNUM
"RTN","HMPDJFSM",196,0)
 W !!,"Polling job number(s):  "_JOBLIST
"RTN","HMPDJFSM",197,0)
 I JOBNA W "  ("_JOBNA_" no longer active)"
"RTN","HMPDJFSM",198,0)
 Q
"RTN","HMPDJFSM",199,0)
LQUEUE(SRV,MAX) ; Show last MAX items in freshness queue
"RTN","HMPDJFSM",200,0)
 W !!,"Last items in the queue ---"
"RTN","HMPDJFSM",201,0)
 N CNT,SEQ,LIST,STREAM
"RTN","HMPDJFSM",202,0)
 S STREAM=$$LSTREAM(SRV)
"RTN","HMPDJFSM",203,0)
 S CNT=0,SEQ=" " ; reverse from space to get numeric entries
"RTN","HMPDJFSM",204,0)
 F  S SEQ=$O(^XTMP(STREAM,SEQ),-1) Q:'SEQ  D  Q:CNT>9
"RTN","HMPDJFSM",205,0)
 . S CNT=CNT+1
"RTN","HMPDJFSM",206,0)
 . S LIST(SEQ)=^XTMP(STREAM,SEQ)
"RTN","HMPDJFSM",207,0)
 S SEQ="" F  S SEQ=$O(LIST(SEQ)) Q:'SEQ  W !,SEQ,?8,LIST(SEQ)
"RTN","HMPDJFSM",208,0)
 Q
"RTN","HMPDJFSM",209,0)
LSTREAM(SRV) ; Return the latest stream for this server
"RTN","HMPDJFSM",210,0)
 N STREAM
"RTN","HMPDJFSM",211,0)
 S STREAM="HMPFS~"_$P($G(^HMP(800000,SRV,0)),"^")_"~9999999"
"RTN","HMPDJFSM",212,0)
 S STREAM=$O(^XTMP(STREAM),-1)
"RTN","HMPDJFSM",213,0)
 Q STREAM
"RTN","HMPDJFSM",214,0)
 ;
"RTN","HMPDJFSM",215,0)
EMERSTOP ; Emergency Stop for Freshness
"RTN","HMPDJFSM",216,0)
 D SETFRUP(0)
"RTN","HMPDJFSM",217,0)
 Q
"RTN","HMPDJFSM",218,0)
RSTRTFR ; Re-start freshness updates
"RTN","HMPDJFSM",219,0)
 D SETFRUP(1)
"RTN","HMPDJFSM",220,0)
 Q
"RTN","HMPDJFSM",221,0)
SETFRUP(START) ; Set flag for freshness updates
"RTN","HMPDJFSM",222,0)
 I 'START D
"RTN","HMPDJFSM",223,0)
 . W !,"WARNING!  This will stop freshness updates for the HMP."
"RTN","HMPDJFSM",224,0)
 . W !,"          It will be necessary to re-synch patient data.",!
"RTN","HMPDJFSM",225,0)
 I START D
"RTN","HMPDJFSM",226,0)
 . W !,"This will --RESUME-- freshness updates for the HMP."
"RTN","HMPDJFSM",227,0)
 . W !,"It may be necessary to re-synch patient and operational data.",!
"RTN","HMPDJFSM",228,0)
 N TYPLST,ALPHA,I,TYPE
"RTN","HMPDJFSM",229,0)
 D EVNTYPS(.TYPLST)
"RTN","HMPDJFSM",230,0)
 S I=0 F  S I=$O(TYPLST(I)) Q:'I  S ALPHA(TYPLST(I))=""
"RTN","HMPDJFSM",231,0)
 S TYPE=$$GETFTYP(.ALPHA,START)
"RTN","HMPDJFSM",232,0)
 Q:TYPE=""
"RTN","HMPDJFSM",233,0)
 I TYPE="*" D  Q
"RTN","HMPDJFSM",234,0)
 . S TYPE="" F  S TYPE=$O(ALPHA(TYPE)) Q:TYPE=""  D CHGFTYP(TYPE,START)
"RTN","HMPDJFSM",235,0)
 D CHGFTYP(TYPE,START)
"RTN","HMPDJFSM",236,0)
 Q
"RTN","HMPDJFSM",237,0)
CHGFTYP(TYPE,START) ; Change the freshness update flag for a type
"RTN","HMPDJFSM",238,0)
 I START D STRTFTYP(TYPE) Q
"RTN","HMPDJFSM",239,0)
 ; otherwise
"RTN","HMPDJFSM",240,0)
 D STOPFTYP(TYPE)
"RTN","HMPDJFSM",241,0)
 Q
"RTN","HMPDJFSM",242,0)
STOPFTYP(TYPE) ; Stop freshness updates for type
"RTN","HMPDJFSM",243,0)
 I '$D(^XTMP("HMP-off",0)) D NEWXTMP^HMPDJFS("HMP-off",999,"Switch off HMP freshness updates")
"RTN","HMPDJFSM",244,0)
 W !,"Stopping freshess updates for: ",TYPE
"RTN","HMPDJFSM",245,0)
 S ^XTMP("HMP-off",TYPE)=1
"RTN","HMPDJFSM",246,0)
 Q
"RTN","HMPDJFSM",247,0)
STRTFTYP(TYPE) ; Resume freshness updates for type
"RTN","HMPDJFSM",248,0)
 W !,"Resuming freshness updates for: ",TYPE
"RTN","HMPDJFSM",249,0)
 K ^XTMP("HMP-off",TYPE)
"RTN","HMPDJFSM",250,0)
 Q
"RTN","HMPDJFSM",251,0)
GETFTYP(ALPHA,START) ; Return item from the list
"RTN","HMPDJFSM",252,0)
 N X,T,P
"RTN","HMPDJFSM",253,0)
 S P=$S(START:"start",1:"stop")
"RTN","HMPDJFSM",254,0)
 F  D  Q:X'["?"
"RTN","HMPDJFSM",255,0)
 . D SHOWFTYP(.ALPHA)
"RTN","HMPDJFSM",256,0)
 . W !!,"Choose domain to "_P_" (* "_P_"s all): "
"RTN","HMPDJFSM",257,0)
 . R X:300 S:$E(X)="^" X="" Q:X=""  Q:X="*"
"RTN","HMPDJFSM",258,0)
 . S X=$$LOW^XLFSTR(X)
"RTN","HMPDJFSM",259,0)
 . Q:$D(ALPHA(X))
"RTN","HMPDJFSM",260,0)
 . S T=$O(ALPHA(X))
"RTN","HMPDJFSM",261,0)
 . I X=$E(T,1,$L(X)) W "  ",T S X=T Q
"RTN","HMPDJFSM",262,0)
 . W "  ??",! S X="?"
"RTN","HMPDJFSM",263,0)
 Q X
"RTN","HMPDJFSM",264,0)
 ;
"RTN","HMPDJFSM",265,0)
SHOWFTYP(ALPHA) ; Show freshness types
"RTN","HMPDJFSM",266,0)
 N I,X,P
"RTN","HMPDJFSM",267,0)
 S I=0,X="" F  S X=$O(ALPHA(X)) Q:'$L(X)  D
"RTN","HMPDJFSM",268,0)
 . S I=I+1,P=I#3
"RTN","HMPDJFSM",269,0)
 . W:P=1 !,X
"RTN","HMPDJFSM",270,0)
 . W:P=2 ?26,X
"RTN","HMPDJFSM",271,0)
 . W:P=0 ?52,X
"RTN","HMPDJFSM",272,0)
 Q
"RTN","HMPDJFSM",273,0)
EVNTYPS(LIST) ; load event types
"RTN","HMPDJFSM",274,0)
 ;;allergy
"RTN","HMPDJFSM",275,0)
 ;;med
"RTN","HMPDJFSM",276,0)
 ;;auxiliary
"RTN","HMPDJFSM",277,0)
 ;;appointment
"RTN","HMPDJFSM",278,0)
 ;;diagnosis
"RTN","HMPDJFSM",279,0)
 ;;document
"RTN","HMPDJFSM",280,0)
 ;;factor
"RTN","HMPDJFSM",281,0)
 ;;immunization
"RTN","HMPDJFSM",282,0)
 ;;lab
"RTN","HMPDJFSM",283,0)
 ;;obs
"RTN","HMPDJFSM",284,0)
 ;;order
"RTN","HMPDJFSM",285,0)
 ;;problem
"RTN","HMPDJFSM",286,0)
 ;;procedure
"RTN","HMPDJFSM",287,0)
 ;;consult
"RTN","HMPDJFSM",288,0)
 ;;image
"RTN","HMPDJFSM",289,0)
 ;;surgery
"RTN","HMPDJFSM",290,0)
 ;;task
"RTN","HMPDJFSM",291,0)
 ;;visit
"RTN","HMPDJFSM",292,0)
 ;;vital
"RTN","HMPDJFSM",293,0)
 ;;mh
"RTN","HMPDJFSM",294,0)
 ;;ptf
"RTN","HMPDJFSM",295,0)
 ;;exam
"RTN","HMPDJFSM",296,0)
 ;;cpt
"RTN","HMPDJFSM",297,0)
 ;;education
"RTN","HMPDJFSM",298,0)
 ;;pov
"RTN","HMPDJFSM",299,0)
 ;;skin
"RTN","HMPDJFSM",300,0)
 ;;treatment
"RTN","HMPDJFSM",301,0)
 ;;roadtrip
"RTN","HMPDJFSM",302,0)
 ;;diet
"RTN","HMPDJFSM",303,0)
 ;;pt-select
"RTN","HMPDJFSM",304,0)
 ;;patient
"RTN","HMPDJFSM",305,0)
 ;;roster
"RTN","HMPDJFSM",306,0)
 ;;user
"RTN","HMPDJFSM",307,0)
 ;;zzzzz
"RTN","HMPDJFSM",308,0)
 N I,X
"RTN","HMPDJFSM",309,0)
 F I=1:1 S X=$P($T(EVNTYPS+I),";;",2,99) Q:X="zzzzz"  S LIST(I)=X
"RTN","HMPDJFSM",310,0)
 Q
"RTN","HMPDJFSM",311,0)
 ;
"RTN","HMPDJFSP")
0^48^B168413377
"RTN","HMPDJFSP",1,0)
HMPDJFSP ;SLC/KCM -- PUT/POST for Extract and Freshness Stream
"RTN","HMPDJFSP",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJFSP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJFSP",4,0)
 ;
"RTN","HMPDJFSP",5,0)
 ;
"RTN","HMPDJFSP",6,0)
 ; --- create a new patient subscription
"RTN","HMPDJFSP",7,0)
 ;
"RTN","HMPDJFSP",8,0)
PUTSUB(ARGS) ; return location after creating a new subscription
"RTN","HMPDJFSP",9,0)
 ;  fn returns      : /hmp/subscription/{hmpSrvId}/patient/{sysId;dfn}
"RTN","HMPDJFSP",10,0)
 ;                  : "" if error, errors in ^TMP("HMPFERR",$J)
"RTN","HMPDJFSP",11,0)
 ; .ARGS("server")  : name of HMP server
"RTN","HMPDJFSP",12,0)
 ; .ARGS("localId") : dfn for patient to subscribe or "OPD" (operational data)
"RTN","HMPDJFSP",13,0)
 ; .ARGS("icn")     : icn for patient to subscribe
"RTN","HMPDJFSP",14,0)
 ; .ARGS("domains") : optional array of domains to initialize (deprecated)
"RTN","HMPDJFSP",15,0)
 ;
"RTN","HMPDJFSP",16,0)
 I '$$TM^%ZTLOAD D SETERR^HMPDJFS("Taskman not running") Q ""
"RTN","HMPDJFSP",17,0)
 ;
"RTN","HMPDJFSP",18,0)
 N HMPSRV,HMPFDFN,HMPBATCH,HMPFERR,NEWSUB,DOMAINS
"RTN","HMPDJFSP",19,0)
 ;
"RTN","HMPDJFSP",20,0)
 ; make sure we can identify the patient ("OPD" signals sync operational)
"RTN","HMPDJFSP",21,0)
 S HMPFDFN=$G(ARGS("localId"))
"RTN","HMPDJFSP",22,0)
 I HMPFDFN'="OPD" D  Q:$G(HMPFERR) ""
"RTN","HMPDJFSP",23,0)
 . I '$L(HMPFDFN),$L(ARGS("icn")) S HMPFDFN=+$$GETDFN^MPIF001(ARGS("icn"))
"RTN","HMPDJFSP",24,0)
 . I 'HMPFDFN D SETERR^HMPDJFS("No patient specified") Q
"RTN","HMPDJFSP",25,0)
 . I '$D(^DPT(HMPFDFN)) D SETERR^HMPDJFS("Patient not found")
"RTN","HMPDJFSP",26,0)
 ;
"RTN","HMPDJFSP",27,0)
 ; make sure server is known and create batch id
"RTN","HMPDJFSP",28,0)
 S HMPSRV=HMPFHMP  ; TODO: switch to HMPFHMP as server ien
"RTN","HMPDJFSP",29,0)
 I '$L(HMPSRV) D SETERR^HMPDJFS("Missing HMP Server ID") Q ""
"RTN","HMPDJFSP",30,0)
 S HMPSRV("ien")=$O(^HMP(800000,"B",HMPSRV,0))
"RTN","HMPDJFSP",31,0)
 I 'HMPSRV("ien") D SETERR^HMPDJFS("HMP Server not registered") Q ""
"RTN","HMPDJFSP",32,0)
 S HMPBATCH="HMPFX~"_HMPSRV_"~"_HMPFDFN
"RTN","HMPDJFSP",33,0)
 ;
"RTN","HMPDJFSP",34,0)
 ; set up domains to extract
"RTN","HMPDJFSP",35,0)
 D @($S(HMPFDFN="OPD":"OPDOMS",1:"PTDOMS")_"^HMPDJFSD(.DOMAINS)")
"RTN","HMPDJFSP",36,0)
 ; ejk US5647
"RTN","HMPDJFSP",37,0)
 ; the below code restores selective domain functionality. 
"RTN","HMPDJFSP",38,0)
 ; once the complete list of domains is returned from HMPDJFSD,
"RTN","HMPDJFSP",39,0)
 ; if ARGS("domains") is passed in, anything not in that parameter
"RTN","HMPDJFSP",40,0)
 ; will be excluded from the ODS extract.
"RTN","HMPDJFSP",41,0)
 ;
"RTN","HMPDJFSP",42,0)
 I $G(ARGS("domains"))'="" D
"RTN","HMPDJFSP",43,0)
 . S I=""
"RTN","HMPDJFSP",44,0)
 . F I=1:1 Q:'$D(DOMAINS(I))  D
"RTN","HMPDJFSP",45,0)
 .. I ARGS("domains")'[DOMAINS(I) K DOMAINS(I)
"RTN","HMPDJFSP",46,0)
 .. Q
"RTN","HMPDJFSP",47,0)
 . Q
"RTN","HMPDJFSP",48,0)
 ;
"RTN","HMPDJFSP",49,0)
 ; see if this is new subscription and task extract if new
"RTN","HMPDJFSP",50,0)
 D SETPAT(HMPFDFN,HMPSRV,.NEWSUB) Q:$G(HMPFERR) ""
"RTN","HMPDJFSP",51,0)
 I NEWSUB D  Q:$G(HMPFERR) ""
"RTN","HMPDJFSP",52,0)
 . I HMPFDFN="OPD" D                       ; queue each operational domain
"RTN","HMPDJFSP",53,0)
 . . S I="" F  S I=$O(DOMAINS(I)) Q:'I  D
"RTN","HMPDJFSP",54,0)
 . . . N HMPFDOM
"RTN","HMPDJFSP",55,0)
 . . . S HMPFDOM(1)=DOMAINS(I)
"RTN","HMPDJFSP",56,0)
 . . . D QUINIT(HMPBATCH,HMPFDFN,.HMPFDOM)
"RTN","HMPDJFSP",57,0)
 . E  D                                    ; queue all domains for patient
"RTN","HMPDJFSP",58,0)
 . . N HMPFDOM
"RTN","HMPDJFSP",59,0)
 . . M HMPFDOM=DOMAINS
"RTN","HMPDJFSP",60,0)
 . . ; if patients extracts are held (version mismatch), put DFN on wait list
"RTN","HMPDJFSP",61,0)
 . . I $G(^XTMP("HMPFS~"_HMPSRV("ien"),"waiting")) S ^XTMP("HMPFS~"_HMPSRV("ien"),"waiting",HMPFDFN)="" QUIT
"RTN","HMPDJFSP",62,0)
 . . ; otherwise queue patient
"RTN","HMPDJFSP",63,0)
 . . D QUINIT(HMPBATCH,HMPFDFN,.HMPFDOM)
"RTN","HMPDJFSP",64,0)
 ;===JD START===
"RTN","HMPDJFSP",65,0)
 ; For patient resubscribes, need to send demographics ONLY
"RTN","HMPDJFSP",66,0)
 I 'NEWSUB,HMPFDFN'="OPD",'$D(^XTMP(HMPBATCH)) D
"RTN","HMPDJFSP",67,0)
 . K DOMAINS S DOMAINS(1)="patient"
"RTN","HMPDJFSP",68,0)
 . N HMPFDOM
"RTN","HMPDJFSP",69,0)
 . M HMPFDOM=DOMAINS
"RTN","HMPDJFSP",70,0)
 . D QUINIT(HMPBATCH,HMPFDFN,.HMPFDOM)
"RTN","HMPDJFSP",71,0)
 ;===JD END===
"RTN","HMPDJFSP",72,0)
 Q "/hmp/subscription/"_HMPSRV_"/patient/"_$$PID^HMPDJFS(HMPFDFN) ;_"?task="_$O(^XTMP(HMPBATCH,0,"task",0))
"RTN","HMPDJFSP",73,0)
 ;
"RTN","HMPDJFSP",74,0)
QUINIT(HMPBATCH,HMPFDFN,HMPFDOM) ; Queue the initial extracts for a patient
"RTN","HMPDJFSP",75,0)
 ; HMPBATCH="HMPFX~hmpsrvid~dfn"  example: HMPFX~hmpXYZ~229
"RTN","HMPDJFSP",76,0)
 ; HMPFDOM(n)="domainName"
"RTN","HMPDJFSP",77,0)
 ; 
"RTN","HMPDJFSP",78,0)
 ; ^XTMP("HMPFX~hmpsrvid~dfn",0)=expires^created^HMP Patient Extract
"RTN","HMPDJFSP",79,0)
 ;                           ,0,"status",domain)=0:waiting;1:ready
"RTN","HMPDJFSP",80,0)
 ;                           ,0,"task",taskIen)=""
"RTN","HMPDJFSP",81,0)
 ;                           ,taskIen,domain,... (extract data)
"RTN","HMPDJFSP",82,0)
 ;
"RTN","HMPDJFSP",83,0)
 ; only done once when beginning the batch, no matter how many tasked jobs
"RTN","HMPDJFSP",84,0)
 L +^XTMP(HMPBATCH):5 E  D SETERR^HMPDJFS("Cannot lock batch:"_HMPBATCH) QUIT
"RTN","HMPDJFSP",85,0)
 I '$D(^XTMP(HMPBATCH)) D
"RTN","HMPDJFSP",86,0)
 . D NEWXTMP^HMPDJFS(HMPBATCH,2,"HMP Patient Extract")
"RTN","HMPDJFSP",87,0)
 . I $G(ARGS("jobId"))]"" S ^XTMP(HMPBATCH,"JOBID")=ARGS("jobId")  ;US3907
"RTN","HMPDJFSP",88,0)
 . I $G(ARGS("rootJobId"))]"" S ^XTMP(HMPBATCH,"ROOTJOBID")=ARGS("rootJobId")  ;US3907
"RTN","HMPDJFSP",89,0)
 . I $G(ARGS("hmpstmp"))'="" S ^XTMP(HMPBATCH,"HMPSTMP")=ARGS("hmpstmp")  ; Add Operational data stamp time to XTMP
"RTN","HMPDJFSP",90,0)
 . S ^XTMP(HMPBATCH,0,"time")=$H
"RTN","HMPDJFSP",91,0)
 . D SETMARK("Start",HMPFDFN,HMPBATCH) ; sends full demographics
"RTN","HMPDJFSP",92,0)
 L -^XTMP(HMPBATCH)
"RTN","HMPDJFSP",93,0)
 ;
"RTN","HMPDJFSP",94,0)
 ; set up the domains to be done by this task
"RTN","HMPDJFSP",95,0)
 N I S I=0 F  S I=$O(HMPFDOM(I)) Q:'I  D SETDOM("status",HMPFDOM(I),0)
"RTN","HMPDJFSP",96,0)
 ;
"RTN","HMPDJFSP",97,0)
 ; now create the task for this set of domains within the batch
"RTN","HMPDJFSP",98,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTSAVE,ZTKIL,ZTSYNC,ZTSK
"RTN","HMPDJFSP",99,0)
 S ZTRTN="DQINIT^HMPDJFSP",ZTIO="HMP EXTRACT RESOURCE",ZTDTH=$H
"RTN","HMPDJFSP",100,0)
 S ZTSAVE("HMPBATCH")="",ZTSAVE("HMPFDFN")="",ZTSAVE("HMPFDOM(")=""
"RTN","HMPDJFSP",101,0)
 S ZTSAVE("HMPENVIR(")=""  ; environment information
"RTN","HMPDJFSP",102,0)
 S ZTDESC="Build HMP domains for a patient"
"RTN","HMPDJFSP",103,0)
 D ^%ZTLOAD
"RTN","HMPDJFSP",104,0)
 ; 
"RTN","HMPDJFSP",105,0)
 I $G(ZTSK) S ^XTMP(HMPBATCH,0,"task",ZTSK)="" I 1
"RTN","HMPDJFSP",106,0)
 E  D SETERR^HMPDJFS("Task not created")
"RTN","HMPDJFSP",107,0)
 Q
"RTN","HMPDJFSP",108,0)
SETDOM(ATTRIB,DOMAIN,VALUE) ; Set value for a domain
"RTN","HMPDJFSP",109,0)
 ; ATTRIB: "status" or "count" attribute
"RTN","HMPDJFSP",110,0)
 ; for status, VALUE: 0=waiting, 1=ready
"RTN","HMPDJFSP",111,0)
 ; for count,  VALUE: count of items
"RTN","HMPDJFSP",112,0)
 S ^XTMP(HMPBATCH,0,ATTRIB,DOMAIN)=VALUE
"RTN","HMPDJFSP",113,0)
 Q
"RTN","HMPDJFSP",114,0)
SETMARK(TYPE,HMPFDFN,HMPBATCH) ; Post markers for begin and end of initial synch
"RTN","HMPDJFSP",115,0)
 ; ^XTMP("HMPFP","tidy",hmpServer,fmDate,sequence)=batch
"RTN","HMPDJFSP",116,0)
 Q:$G(HMPENVIR("converting"))  ; don't set markers during conversion
"RTN","HMPDJFSP",117,0)
 N HPMSRV,NODES,X
"RTN","HMPDJFSP",118,0)
 S HMPSRV=$P(HMPBATCH,"~",2)
"RTN","HMPDJFSP",119,0)
 D POST^HMPDJFS(HMPFDFN,"sync"_TYPE,HMPBATCH,"",HMPSRV,.NODES)
"RTN","HMPDJFSP",120,0)
 Q:TYPE="Start"
"RTN","HMPDJFSP",121,0)
 D SETTIDY("<done>",.NODES)
"RTN","HMPDJFSP",122,0)
 Q
"RTN","HMPDJFSP",123,0)
DQINIT ; Dequeue initial extracts
"RTN","HMPDJFSP",124,0)
 ; expects:  HMPBATCH, HMPFDFN, HMPFDOM, ZTSK
"RTN","HMPDJFSP",125,0)
 I '$D(^XTMP(HMPBATCH,0,"task",ZTSK)) Q  ; extract was superceded
"RTN","HMPDJFSP",126,0)
 N COUNT,HMPFDOMI,HMPFSYS,HMPFZTSK
"RTN","HMPDJFSP",127,0)
 K ^TMP("HMPERR",$J)
"RTN","HMPDJFSP",128,0)
 S HMPFSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPDJFSP",129,0)
 S HMPFZTSK=ZTSK ; just in case the unexpected happens to ZTSK
"RTN","HMPDJFSP",130,0)
 S ^XTMP(HMPBATCH,0,"task",ZTSK,"job")=$J
"RTN","HMPDJFSP",131,0)
 S ^XTMP(HMPBATCH,0,"task",ZTSK,"wait")=$$HDIFF^XLFDT($H,$G(^XTMP(HMPBATCH,0,"time")),2)
"RTN","HMPDJFSP",132,0)
 D UPDSTS(HMPFDFN,$P(HMPBATCH,"~",2),1)
"RTN","HMPDJFSP",133,0)
 S HMPFDOMI="" F  S HMPFDOMI=$O(HMPFDOM(HMPFDOMI)) Q:'HMPFDOMI  D
"RTN","HMPDJFSP",134,0)
 . I HMPFDFN="OPD" D DOMOPD(HMPFDOM(HMPFDOMI))
"RTN","HMPDJFSP",135,0)
 . I +HMPFDFN D DOMPT(HMPFDOM(HMPFDOMI))
"RTN","HMPDJFSP",136,0)
 . ; if superceded, stop processing domains
"RTN","HMPDJFSP",137,0)
 . I '$D(^XTMP(HMPBATCH,0,"task",HMPFZTSK)) S HMPFDOMI=999 Q
"RTN","HMPDJFSP",138,0)
 . D SETDOM("status",HMPFDOM(HMPFDOMI),1) ; ready
"RTN","HMPDJFSP",139,0)
 ; if superceded, remove extracts produced by this task
"RTN","HMPDJFSP",140,0)
 I '$D(^XTMP(HMPBATCH,0,"task",HMPFZTSK)) K ^XTMP(HMPBATCH,HMPFZTSK) Q
"RTN","HMPDJFSP",141,0)
 ; don't assume initialized, since we may split domains to other tasks
"RTN","HMPDJFSP",142,0)
 I $$INITDONE(HMPBATCH) D             ; if all domains extracted
"RTN","HMPDJFSP",143,0)
 . S COUNT=$O(^TMP("HMPERR",$J,"")) I COUNT>0 D POSTERR(COUNT,HMPFDFN)
"RTN","HMPDJFSP",144,0)
 . D SETMARK("Done",HMPFDFN,HMPBATCH) ; - add updated syncStatus
"RTN","HMPDJFSP",145,0)
 . D MVFRUPD(HMPBATCH,HMPFDFN)        ; - move freshness updates over
"RTN","HMPDJFSP",146,0)
 K ^XTMP(HMPBATCH,0,"task",HMPFZTSK)  ; this task is done
"RTN","HMPDJFSP",147,0)
 Q
"RTN","HMPDJFSP",148,0)
DOMPT(HMPFADOM) ; Load a patient domain
"RTN","HMPDJFSP",149,0)
 N FILTER,RSLT,HMPFEST
"RTN","HMPDJFSP",150,0)
 S FILTER("noHead")=1
"RTN","HMPDJFSP",151,0)
 S FILTER("domain")=HMPFADOM
"RTN","HMPDJFSP",152,0)
 S FILTER("patientId")=HMPFDFN
"RTN","HMPDJFSP",153,0)
 D GET^HMPDJ(.RSLT,.FILTER)
"RTN","HMPDJFSP",154,0)
 D MOD4STRM(HMPFADOM)
"RTN","HMPDJFSP",155,0)
 D POSTSEC(HMPFADOM)
"RTN","HMPDJFSP",156,0)
 Q
"RTN","HMPDJFSP",157,0)
DOMOPD(HMPFADOM) ; Load an operational domain in smaller batches
"RTN","HMPDJFSP",158,0)
 ; expects HMPBATCH,HMPFZTSK
"RTN","HMPDJFSP",159,0)
 N FILTER,RSLT,NEXTID,DONE,HMPFEST,HMPFSEC,HMPFSIZE
"RTN","HMPDJFSP",160,0)
 S HMPFSIZE=1000               ; section size (adjust to taste)
"RTN","HMPDJFSP",161,0)
 S HMPFEST=$$TOTAL(HMPFADOM)   ; set estimated domain total
"RTN","HMPDJFSP",162,0)
 S NEXTID=0,HMPFSEC=0,DONE=0
"RTN","HMPDJFSP",163,0)
 S HMPFADOM=HMPFADOM_"#"_HMPFSEC
"RTN","HMPDJFSP",164,0)
 F  D  Q:DONE
"RTN","HMPDJFSP",165,0)
 . N FILTER,RSLT
"RTN","HMPDJFSP",166,0)
 . S FILTER("noHead")=1
"RTN","HMPDJFSP",167,0)
 . S FILTER("domain")=HMPFADOM ; include section for ^XTMP location
"RTN","HMPDJFSP",168,0)
 . S FILTER("start")=NEXTID
"RTN","HMPDJFSP",169,0)
 . S FILTER("limit")=HMPFSIZE
"RTN","HMPDJFSP",170,0)
 . D GET^HMPEF(.RSLT,.FILTER)
"RTN","HMPDJFSP",171,0)
 . I '$D(^XTMP(HMPBATCH,0,"task",HMPFZTSK)) S DONE=1 QUIT  ; superceded
"RTN","HMPDJFSP",172,0)
 . I $G(^XTMP(HMPBATCH,HMPFZTSK,HMPFADOM,"total"),0)=0,(HMPFSEC>0) S DONE=1 QUIT
"RTN","HMPDJFSP",173,0)
 . I $G(^XTMP(HMPBATCH,HMPFZTSK,HMPFADOM,"finished")) S DONE=1
"RTN","HMPDJFSP",174,0)
 . D MOD4STRM(HMPFADOM)
"RTN","HMPDJFSP",175,0)
 . I DONE S HMPFEST=^XTMP(HMPBATCH,0,"count",$P(HMPFADOM,"#")) S:'HMPFEST HMPFEST=1
"RTN","HMPDJFSP",176,0)
 . D POSTSEC(HMPFADOM,HMPFEST,HMPFSIZE)
"RTN","HMPDJFSP",177,0)
 . Q:DONE
"RTN","HMPDJFSP",178,0)
 . S NEXTID=$G(^XTMP(HMPBATCH,HMPFZTSK,HMPFADOM,"last"),0)
"RTN","HMPDJFSP",179,0)
 . S HMPFSEC=HMPFSEC+1
"RTN","HMPDJFSP",180,0)
 . S $P(HMPFADOM,"#",2)=HMPFSEC
"RTN","HMPDJFSP",181,0)
 Q
"RTN","HMPDJFSP",182,0)
MOD4STRM(DOMAIN) ; modify extract to be ready for stream
"RTN","HMPDJFSP",183,0)
 ; expects: HMPBATCH, HMPFSYS, HMPFZTSK
"RTN","HMPDJFSP",184,0)
 ; results are in ^XTMP("HMPFX~hmpsrv~dfn",DFN,DOMAIN,...)
"RTN","HMPDJFSP",185,0)
 ; syncError: {uid,collection,error}  uid=urn:va:syncError:sysId:dfn:extract
"RTN","HMPDJFSP",186,0)
 N DFN,HMPSRV,COUNT,DOMONLY
"RTN","HMPDJFSP",187,0)
 S DOMONLY=$P(DOMAIN,"#")
"RTN","HMPDJFSP",188,0)
 S DFN=$P(HMPBATCH,"~",3),HMPSRV=$P(HMPBATCH,"~",2)
"RTN","HMPDJFSP",189,0)
 S COUNT=+$G(^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,"total"),0)
"RTN","HMPDJFSP",190,0)
 I COUNT=0 S ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,1,1)="null"
"RTN","HMPDJFSP",191,0)
 ; if error, add syncError object (from COUNT+2)
"RTN","HMPDJFSP",192,0)
 I $D(^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,"error")) D
"RTN","HMPDJFSP",193,0)
 . N JSON
"RTN","HMPDJFSP",194,0)
 . ;D BLDSERR(DFN,DOMAIN,.JSON) Q:'$D(JSON)
"RTN","HMPDJFSP",195,0)
 . ;S COUNT=COUNT+1
"RTN","HMPDJFSP",196,0)
 . ;S ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,COUNT,1)=","
"RTN","HMPDJFSP",197,0)
 . ;M ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,COUNT,1)=JSON
"RTN","HMPDJFSP",198,0)
 S ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,"total")=COUNT    ;incl errors and/or empty
"RTN","HMPDJFSP",199,0)
 D SETDOM("count",DOMONLY,$G(^XTMP(HMPBATCH,0,"count",DOMONLY),0)+COUNT)
"RTN","HMPDJFSP",200,0)
 Q
"RTN","HMPDJFSP",201,0)
POSTSEC(DOMAIN,ETOTAL,SECSIZE) ; post domain section to stream and set tidy nodes
"RTN","HMPDJFSP",202,0)
 N DFN,HMPSRV,COUNT,X,NODES
"RTN","HMPDJFSP",203,0)
 S COUNT=^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,"total")
"RTN","HMPDJFSP",204,0)
 S ETOTAL=$G(ETOTAL,COUNT)
"RTN","HMPDJFSP",205,0)
 s SECSIZE=$G(SECSIZE,0)
"RTN","HMPDJFSP",206,0)
 S DFN=$P(HMPBATCH,"~",3)
"RTN","HMPDJFSP",207,0)
 S HMPSRV=$P(HMPBATCH,"~",2)
"RTN","HMPDJFSP",208,0)
 D POST^HMPDJFS(DFN,"syncDomain",DOMAIN_":"_HMPFZTSK_":"_COUNT_":"_ETOTAL_":"_SECSIZE,"",HMPSRV,.NODES)
"RTN","HMPDJFSP",209,0)
 D SETTIDY(DOMAIN,.NODES)
"RTN","HMPDJFSP",210,0)
 Q
"RTN","HMPDJFSP",211,0)
SETTIDY(DOMAIN,NODES) ; Set tidy nodes for clean-up of the extracts in ^XTMP
"RTN","HMPDJFSP",212,0)
 ; expects HMPBATCH,HMPFZTSK
"RTN","HMPDJFSP",213,0)
 N X,STREAM,SEQ
"RTN","HMPDJFSP",214,0)
 S X="" F  S X=$O(NODES(X)) Q:X=""  D      ; iterate hmp servers
"RTN","HMPDJFSP",215,0)
 . S STREAM="HMPFS~"_X_"~"_$P(NODES(X),U)  ; HMPFS~hmpSrv~fmDate
"RTN","HMPDJFSP",216,0)
 . S SEQ=$P(NODES(X),U,2)
"RTN","HMPDJFSP",217,0)
 . S ^XTMP(STREAM,"tidy",SEQ,"batch")=HMPBATCH
"RTN","HMPDJFSP",218,0)
 . S ^XTMP(STREAM,"tidy",SEQ,"domain")=DOMAIN
"RTN","HMPDJFSP",219,0)
 . S ^XTMP(STREAM,"tidy",SEQ,"task")=HMPFZTSK
"RTN","HMPDJFSP",220,0)
 Q
"RTN","HMPDJFSP",221,0)
MVFRUPD(HMPBATCH,HMPFDFN) ; Move freshness updates over active stream
"RTN","HMPDJFSP",222,0)
 N I,X,FROM,HMPSRV,DFN,TYPE,ID,ACT
"RTN","HMPDJFSP",223,0)
 S HMPSRV=$P(HMPBATCH,"~",2)
"RTN","HMPDJFSP",224,0)
 D UPDSTS(HMPFDFN,HMPSRV,2)              ; now initialized 
"RTN","HMPDJFSP",225,0)
 S FROM="HMPFH~"_HMPSRV_"~"_HMPFDFN
"RTN","HMPDJFSP",226,0)
 S I=0 F  S I=$O(^XTMP(FROM,I)) Q:'I  D  ; move over held updates
"RTN","HMPDJFSP",227,0)
 . S X=^XTMP(FROM,I)
"RTN","HMPDJFSP",228,0)
 . S DFN=$P(X,U),TYPE=$P(X,U,2),ID=$P(X,U,3),ACT=$P(X,U,4)
"RTN","HMPDJFSP",229,0)
 . D POST^HMPDJFS(DFN,TYPE,ID,ACT,HMPSRV)
"RTN","HMPDJFSP",230,0)
 K ^XTMP(FROM)
"RTN","HMPDJFSP",231,0)
 Q
"RTN","HMPDJFSP",232,0)
BLDSERR(DFN,DOMAIN,ERRJSON) ; Create syncError object in ERRJSON
"RTN","HMPDJFSP",233,0)
 ; expects: HMPBATCH, HMPFSYS, HMPFZTSK
"RTN","HMPDJFSP",234,0)
 N COUNT,ERRVAL,ERROBJ,ERR,ERRMSG,SYNCERR
"RTN","HMPDJFSP",235,0)
 ;S ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,NODE,.3)="{"  ; replace , with { for decoding JSON
"RTN","HMPDJFSP",236,0)
 M ERRVAL=^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,"error")
"RTN","HMPDJFSP",237,0)
 I $G(ERRVAL)="" Q
"RTN","HMPDJFSP",238,0)
 S ERRVAL="{"_ERRVAL_"}"
"RTN","HMPDJFSP",239,0)
 D DECODE^HMPJSON("ERRVAL","ERROBJ","ERR")
"RTN","HMPDJFSP",240,0)
 I $D(ERR) S $EC=",UJSON decode error,"
"RTN","HMPDJFSP",241,0)
 K ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,"error")
"RTN","HMPDJFSP",242,0)
 S ERRMSG=ERROBJ("error","message")
"RTN","HMPDJFSP",243,0)
 Q:'$L(ERRMSG)
"RTN","HMPDJFSP",244,0)
 S SYNCERR("uid")="urn:va:syncError:"_HMPFSYS_":"_DFN_":"_DOMAIN
"RTN","HMPDJFSP",245,0)
 S SYNCERR("collection")=DOMAIN
"RTN","HMPDJFSP",246,0)
 S SYNCERR("error")=ERRMSG
"RTN","HMPDJFSP",247,0)
 D ENCODE^HMPJSON("SYNCERR","ERRJSON","ERR") I $D(ERR) S $EC=",UJSON encode error," Q
"RTN","HMPDJFSP",248,0)
 S COUNT=$O(^TMP("HMPERR",$J,""),-1)+1
"RTN","HMPDJFSP",249,0)
 ;D POST^HMPDJFS(DFN,"syncError","error:"_HMPFZTSK_":1:1","",HMPSRV)
"RTN","HMPDJFSP",250,0)
 M ^TMP("HMPERR",$J,COUNT)=ERRJSON
"RTN","HMPDJFSP",251,0)
 Q
"RTN","HMPDJFSP",252,0)
 ;
"RTN","HMPDJFSP",253,0)
POSTERR(COUNT,DFN) ;
"RTN","HMPDJFSP",254,0)
 N CNT,NODE,HMPSRV
"RTN","HMPDJFSP",255,0)
 S HMPSRV=$P(HMPBATCH,"~",2)
"RTN","HMPDJFSP",256,0)
 S CNT=0 F  S CNT=$O(^TMP("HMPERR",$J,CNT)) Q:CNT'>0  D
"RTN","HMPDJFSP",257,0)
 .S NODE=$G(^TMP("HMPERR",$J,CNT,1))
"RTN","HMPDJFSP",258,0)
 .S ^XTMP(HMPBATCH,HMPFZTSK,"error",CNT,1)=NODE
"RTN","HMPDJFSP",259,0)
 .I CNT>1 S ^XTMP(HMPBATCH,HMPFZTSK,"error",CNT,.3)=","
"RTN","HMPDJFSP",260,0)
 D POST^HMPDJFS(DFN,"syncError","error:"_HMPFZTSK_":"_COUNT_":"_COUNT,"",HMPSRV)
"RTN","HMPDJFSP",261,0)
 Q
"RTN","HMPDJFSP",262,0)
 ;
"RTN","HMPDJFSP",263,0)
INITDONE(HMPBATCH) ; Return 1 if all domains are done
"RTN","HMPDJFSP",264,0)
 N X,DONE
"RTN","HMPDJFSP",265,0)
 S X="",DONE=1
"RTN","HMPDJFSP",266,0)
 F  S X=$O(^XTMP(HMPBATCH,0,"status",X)) Q:'$L(X)  I '^(X) S DONE=0
"RTN","HMPDJFSP",267,0)
 Q DONE
"RTN","HMPDJFSP",268,0)
 ;
"RTN","HMPDJFSP",269,0)
SETPAT(DFN,SRV,NEWSUB) ; Add patient to 800000 if not there
"RTN","HMPDJFSP",270,0)
 N ERR,FDA,IEN,IENROOT
"RTN","HMPDJFSP",271,0)
 S IEN=$O(^HMP(800000,"B",SRV,0))
"RTN","HMPDJFSP",272,0)
 I 'IEN D SETERR^HMPDJFS("Unable to find server: "_SRV) QUIT
"RTN","HMPDJFSP",273,0)
 ; for operational, only start sync if not yet subscribed
"RTN","HMPDJFSP",274,0)
 I DFN="OPD" D  QUIT
"RTN","HMPDJFSP",275,0)
 . L +^HMP(800000,IEN):5 E  D SETERR^HMPDJFS("Unable to lock server: "_SRV) Q
"RTN","HMPDJFSP",276,0)
 . ; status is empty string (not 0) when unsubscribed
"RTN","HMPDJFSP",277,0)
 . S NEWSUB='$L($P($G(^HMP(800000,IEN,0)),U,3))
"RTN","HMPDJFSP",278,0)
 . I NEWSUB D UPDOPD(IEN,1) ; set to subscribed
"RTN","HMPDJFSP",279,0)
 . L -^HMP(800000,IEN)
"RTN","HMPDJFSP",280,0)
 ;
"RTN","HMPDJFSP",281,0)
 ; for patient, check subscribed and get the PID
"RTN","HMPDJFSP",282,0)
 L +^HMP(800000,IEN,1,DFN):5 E  D SETERR^HMPDJFS("Unable to lock patient: "_DFN) Q
"RTN","HMPDJFSP",283,0)
 S NEWSUB='$D(^HMP(800000,IEN,1,DFN))
"RTN","HMPDJFSP",284,0)
 I NEWSUB D ADDPAT(DFN,IEN)
"RTN","HMPDJFSP",285,0)
 L -^HMP(800000,IEN,1,DFN)
"RTN","HMPDJFSP",286,0)
 Q
"RTN","HMPDJFSP",287,0)
 ;
"RTN","HMPDJFSP",288,0)
UPDOPD(SRV,STS) ; Update status of operational synch
"RTN","HMPDJFSP",289,0)
 N FDA,ERR,DIERR
"RTN","HMPDJFSP",290,0)
 S FDA(800000,SRV_",",.03)=STS
"RTN","HMPDJFSP",291,0)
 D FILE^DIE("","FDA","ERR")
"RTN","HMPDJFSP",292,0)
 I $D(ERR) D SETERR^HMPDJFS("Error changing operational status")
"RTN","HMPDJFSP",293,0)
 D CLEAN^DILF
"RTN","HMPDJFSP",294,0)
 Q
"RTN","HMPDJFSP",295,0)
ADDPAT(DFN,SRV) ; Add a patient as subscribed for server
"RTN","HMPDJFSP",296,0)
 N FDA,FDAIEN,DIERR,ERR,IENS
"RTN","HMPDJFSP",297,0)
 S IENS="?+"_DFN_","_SRV_","
"RTN","HMPDJFSP",298,0)
 S FDAIEN(DFN)=DFN  ; help DINUM to work
"RTN","HMPDJFSP",299,0)
 S FDA(800000.01,IENS,.01)=DFN
"RTN","HMPDJFSP",300,0)
 S FDA(800000.01,IENS,2)=0
"RTN","HMPDJFSP",301,0)
 S FDA(800000.01,IENS,3)=$$NOW^XLFDT
"RTN","HMPDJFSP",302,0)
 D UPDATE^DIE("","FDA","FDAIEN","ERR")
"RTN","HMPDJFSP",303,0)
 I $D(ERR) D SETERR^HMPDJFS("Error adding patient subscription")
"RTN","HMPDJFSP",304,0)
 D CLEAN^DILF
"RTN","HMPDJFSP",305,0)
 Q
"RTN","HMPDJFSP",306,0)
UPDSTS(DFN,SRVNM,STS) ; Update the sync status
"RTN","HMPDJFSP",307,0)
 N SRV
"RTN","HMPDJFSP",308,0)
 S SRV=$O(^HMP(800000,"B",SRVNM,0)) I 'SRV D SETERR^HMPDJFS("Missing Server") Q
"RTN","HMPDJFSP",309,0)
 I DFN="OPD" D UPDOPD(SRV,STS) QUIT
"RTN","HMPDJFSP",310,0)
 ;
"RTN","HMPDJFSP",311,0)
 S FDA(800000.01,DFN_","_SRV_",",2)=STS
"RTN","HMPDJFSP",312,0)
 S FDA(800000.01,DFN_","_SRV_",",3)=$$NOW^XLFDT
"RTN","HMPDJFSP",313,0)
 D FILE^DIE("","FDA","ERR")
"RTN","HMPDJFSP",314,0)
 I $D(ERR) D SETERR^HMPDJFS("Error updating patient sync status")
"RTN","HMPDJFSP",315,0)
 D CLEAN^DILF
"RTN","HMPDJFSP",316,0)
 Q
"RTN","HMPDJFSP",317,0)
UPDPAT(DFN,SRV,STS) ; DEPRECATED?
"RTN","HMPDJFSP",318,0)
 N ERR,FDA,IEN
"RTN","HMPDJFSP",319,0)
 S IEN=$O(^HMP(800000,"B",SRV,"")) I +IEN'>0 Q
"RTN","HMPDJFSP",320,0)
 I DFN="OPD" D
"RTN","HMPDJFSP",321,0)
 . S FDA(800000,"?"_IEN_",",.01)=SRV
"RTN","HMPDJFSP",322,0)
 . S FDA(800000,"?"_IEN_",",.03)=STS
"RTN","HMPDJFSP",323,0)
 I +DFN>0 D
"RTN","HMPDJFSP",324,0)
 .S FDA(800000.01,"?"_DFN_","_IEN_",",.01)=DFN
"RTN","HMPDJFSP",325,0)
 .S FDA(800000.01,"?"_DFN_","_IEN_",",2)=STS
"RTN","HMPDJFSP",326,0)
 D UPDATE^DIE("","FDA","","ERR")
"RTN","HMPDJFSP",327,0)
 ;I $D(ERR) M ^AGP("error")=ERR
"RTN","HMPDJFSP",328,0)
 Q
"RTN","HMPDJFSP",329,0)
TOTAL(DOMAIN) ;
"RTN","HMPDJFSP",330,0)
 N I,X,SIZE,ROOT
"RTN","HMPDJFSP",331,0)
 S SIZE=0
"RTN","HMPDJFSP",332,0)
 F I=1:1 S X=$T(OPDOMS+I^HMPDJFSD) Q:$P(X,";",3)="zzzzz"  D  Q:SIZE
"RTN","HMPDJFSP",333,0)
 . I $P(X,";",3)'=DOMAIN Q
"RTN","HMPDJFSP",334,0)
 . S ROOT=$P(X,";",4)
"RTN","HMPDJFSP",335,0)
 . I ROOT="^HMP(800000.11)" S SIZE=$G(^HMP(800000.11,"ACNT",DOMAIN)) Q
"RTN","HMPDJFSP",336,0)
 . ;I $L(ROOT) S SIZE=$P(@ROOT@(0),U,4) ;  <<<<<<<<  ORIGINAL LINE
"RTN","HMPDJFSP",337,0)
 . I $L(ROOT) S SIZE=$P($G(@ROOT@(0)),U,4) ;   <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  TEST 12.2 
"RTN","HMPDJFSP",338,0)
 Q $S(SIZE:SIZE,1:9999)
"RTN","HMPDJFSP",339,0)
 ;
"RTN","HMPDJFSP",340,0)
TESTPUT ;
"RTN","HMPDJFSP",341,0)
 ;;{"server":"hmpTest","localId":"229"}
"RTN","HMPDJFSP",342,0)
 ;;{"server":"hmpTest","localId":"229","domains":["allergy","lab","med"]}
"RTN","HMPDJFSP",343,0)
 S U="^"
"RTN","HMPDJFSP",344,0)
 D KILL^HMPDJFS
"RTN","HMPDJFSP",345,0)
 N JSON S JSON=$P($T(TESTPUT+1),";;",2,99)
"RTN","HMPDJFSP",346,0)
 W !,$$PUTSUB("",.JSON)
"RTN","HMPDJFSP",347,0)
 Q
"RTN","HMPDJFSP",348,0)
TESTDQ ;
"RTN","HMPDJFSP",349,0)
 D KILL^HMPDJFS
"RTN","HMPDJFSP",350,0)
 N HMPBATCH,HMPFDFN,HMPFDOM,ZTSK
"RTN","HMPDJFSP",351,0)
 S HMPBATCH="HMPFX~hmpTest~229"
"RTN","HMPDJFSP",352,0)
 S HMPFDFN=229
"RTN","HMPDJFSP",353,0)
 S HMPFDOM(1)="allergy",HMPFDOM(2)="lab",HMPFDOM(3)="med"
"RTN","HMPDJFSP",354,0)
 D NEWXTMP^HMPDJFS(HMPBATCH,1,"HMP Test Patient Extract")
"RTN","HMPDJFSP",355,0)
 N I S I=0 F  S I=$O(HMPFDOM(I)) Q:'I  D SETDOM("status",HMPFDOM(I),0)
"RTN","HMPDJFSP",356,0)
 S ZTSK=99999,ZTQUEUED=1
"RTN","HMPDJFSP",357,0)
 K ^XTMP(HMPBATCH)
"RTN","HMPDJFSP",358,0)
 S ^XTMP(HMPBATCH,0,"task",ZTSK)=""
"RTN","HMPDJFSP",359,0)
 D DQINIT
"RTN","HMPDJFSP",360,0)
 Q
"RTN","HMPDJFSP",361,0)
 ;
"RTN","HMPDJFSP",362,0)
TESTFRSH(SERVER,LASTUPD) ;
"RTN","HMPDJFSP",363,0)
 N I,C,LI,FILTER,RESULT
"RTN","HMPDJFSP",364,0)
 S FILTER("command")="getPtUpdates"
"RTN","HMPDJFSP",365,0)
 S FILTER("lastUpdate")=LASTUPD
"RTN","HMPDJFSP",366,0)
 S FILTER("server")=SERVER
"RTN","HMPDJFSP",367,0)
 D API^HMPDJFS(.RESULT,.FILTER)
"RTN","HMPDJFSP",368,0)
 S I=""
"RTN","HMPDJFSP",369,0)
 F  S I=$O(^TMP("HMPF",$J,I)) Q:I=""  D
"RTN","HMPDJFSP",370,0)
 .W $G(^TMP("HMPF",$J,I))
"RTN","HMPDJFSP",371,0)
 .S LI=I
"RTN","HMPDJFSP",372,0)
 .S C="" F  S C=$O(^TMP("HMPF",$J,I,C)) Q:C=""  W ^TMP("HMPF",$J,I,C)
"RTN","HMPDJFSP",373,0)
 Q
"RTN","HMPDJFSP",374,0)
 ;
"RTN","HMPDJFSP",375,0)
TESTOPD(HMPFADOM) ;
"RTN","HMPDJFSP",376,0)
 S HMPBATCH="HMPFX~test-1~OPD"
"RTN","HMPDJFSP",377,0)
 K ^XTMP(HMPBATCH)
"RTN","HMPDJFSP",378,0)
 S HMPFZTSK="123"
"RTN","HMPDJFSP",379,0)
 S ZTQUEUED=1
"RTN","HMPDJFSP",380,0)
 S ^XTMP(HMPBATCH,0,"task",HMPFZTSK)=0
"RTN","HMPDJFSP",381,0)
 D DOMOPD(HMPFADOM)
"RTN","HMPDJFSP",382,0)
 ;
"RTN","HMPDJFST")
0^49^B46894611
"RTN","HMPDJFST",1,0)
HMPDJFST ;SLC/KCM -- Tests for extract and freshness stream
"RTN","HMPDJFST",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJFST",3,0)
 ;
"RTN","HMPDJFST",4,0)
 ; Test Operational Synchronization
"RTN","HMPDJFST",5,0)
 ;
"RTN","HMPDJFST",6,0)
TESTOPD(NUM) ; Test operational data for server NUM
"RTN","HMPDJFST",7,0)
 Q:'NUM
"RTN","HMPDJFST",8,0)
 N SERVER
"RTN","HMPDJFST",9,0)
 S SERVER="Test-Server-"_NUM
"RTN","HMPDJFST",10,0)
 D RUNOPD(SERVER)
"RTN","HMPDJFST",11,0)
 Q
"RTN","HMPDJFST",12,0)
RUNOPD(SERVER) ; Test operational data
"RTN","HMPDJFST",13,0)
 K ^TMP("HMPF",$J)
"RTN","HMPDJFST",14,0)
 N LASTUP,COLLECT,DOMTOT,TOTAL,DONE,STRTERR
"RTN","HMPDJFST",15,0)
 S LASTUP=0,TOTAL=0,DONE=0
"RTN","HMPDJFST",16,0)
 D ADDSRVR(SERVER)
"RTN","HMPDJFST",17,0)
 D RSETSRV(SERVER)
"RTN","HMPDJFST",18,0)
 D OPDSTRT(SERVER) Q:$G(STRTERR)
"RTN","HMPDJFST",19,0)
 F  H 2 D GETUPDS(SERVER,.LASTUP) Q:DONE
"RTN","HMPDJFST",20,0)
 D GETUPDS(SERVER,.LASTUP) ; one last time to clear ^XTMP
"RTN","HMPDJFST",21,0)
 ; Write out the collection counts and domain totals.
"RTN","HMPDJFST",22,0)
 ; They should be the same unless 1 item, which may be just the wrapper.
"RTN","HMPDJFST",23,0)
 N NM
"RTN","HMPDJFST",24,0)
 W !!!,"Collection",?20,"Objects",?30,"Domain Totals",!
"RTN","HMPDJFST",25,0)
 S NM="" F  S NM=$O(COLLECT(NM)) Q:NM=""  D
"RTN","HMPDJFST",26,0)
 . W !,NM,?20,$J($G(COLLECT(NM)),7),?30,$J($G(COLLECT(NM,"total")),13)
"RTN","HMPDJFST",27,0)
 W !!,"Total Objects: ",TOTAL
"RTN","HMPDJFST",28,0)
 K ^TMP("HMPF",$J)
"RTN","HMPDJFST",29,0)
 Q
"RTN","HMPDJFST",30,0)
ADDSRVR(SERVER) ; add a SERVER if not there
"RTN","HMPDJFST",31,0)
 Q:$D(^HMP(800000,"B",SERVER))
"RTN","HMPDJFST",32,0)
 N FDA,FDAIEN,DIERR,ERR
"RTN","HMPDJFST",33,0)
 S FDA(800000,"+1,",.01)=SERVER
"RTN","HMPDJFST",34,0)
 D UPDATE^DIE("","FDA","FDAIEN","ERR")
"RTN","HMPDJFST",35,0)
 I $D(DIERR) W !,"Error saving server"
"RTN","HMPDJFST",36,0)
 D CLEAN^DILF
"RTN","HMPDJFST",37,0)
 Q
"RTN","HMPDJFST",38,0)
RSETSRV(SERVER) ; Reset subscriptions for named SERVER
"RTN","HMPDJFST",39,0)
 N ARGS,RSP
"RTN","HMPDJFST",40,0)
 S ARGS("command")="resetAllSubscriptions"
"RTN","HMPDJFST",41,0)
 S ARGS("server")=SERVER
"RTN","HMPDJFST",42,0)
 D API^HMPDJFS(.RSP,.ARGS)
"RTN","HMPDJFST",43,0)
 W !,"Reset",?10,@RSP@(1) ;{"apiVersion":"1.0","removed":"true"}
"RTN","HMPDJFST",44,0)
 Q
"RTN","HMPDJFST",45,0)
OPDSTRT(SERVER) ; Start operational data extracts for SERVER
"RTN","HMPDJFST",46,0)
 N ARGS,RSP
"RTN","HMPDJFST",47,0)
 S ARGS("command")="startOperationalDataExtract"
"RTN","HMPDJFST",48,0)
 S ARGS("server")=SERVER
"RTN","HMPDJFST",49,0)
 D API^HMPDJFS(.RSP,.ARGS) ;SHOULD THIS RETURN TASK #?
"RTN","HMPDJFST",50,0)
 W !,"Start",?10,@RSP@(1) ;{"apiVersion":"1.0","location":"/hmp/subscription/Test-Server-1/patient/"}
"RTN","HMPDJFST",51,0)
 I @RSP@(1)["""error"":" S STRTERR=1
"RTN","HMPDJFST",52,0)
 Q
"RTN","HMPDJFST",53,0)
GETUPDS(SERVER,LASTUP) ; Get updates for the named SERVER
"RTN","HMPDJFST",54,0)
 ; expects COLLECT,DOMTOT,TOTAL,DONE
"RTN","HMPDJFST",55,0)
 N ARGS,RSP,CNT
"RTN","HMPDJFST",56,0)
 S ARGS("command")="getPtUpdates"
"RTN","HMPDJFST",57,0)
 S ARGS("server")=SERVER
"RTN","HMPDJFST",58,0)
 S ARGS("lastUpdate")=LASTUP
"RTN","HMPDJFST",59,0)
 S ARGS("extractSchema")=2.001
"RTN","HMPDJFST",60,0)
 S ARGS("max")=1000
"RTN","HMPDJFST",61,0)
 D API^HMPDJFS(.RSP,.ARGS)
"RTN","HMPDJFST",62,0)
 S LASTUP=$$GETLUPD(),CNT=$$CNTOBJS(),TOTAL=TOTAL+CNT
"RTN","HMPDJFST",63,0)
 W !,^TMP("HMPF",$J,.5)
"RTN","HMPDJFST",64,0)
 W !,"Fetch",?10,"Object Count: ",$J(CNT,7),"   Last Update: ",LASTUP
"RTN","HMPDJFST",65,0)
 D CNTCOLL(.COLLECT,.DONE) ; count collections
"RTN","HMPDJFST",66,0)
 D VALOBJS
"RTN","HMPDJFST",67,0)
 ;D SHOWHDRS
"RTN","HMPDJFST",68,0)
 ;D SHOWDATA("pt-select^displaygroup^")
"RTN","HMPDJFST",69,0)
 Q
"RTN","HMPDJFST",70,0)
CNTCOLL(COLL,DONE) ; add collection counts
"RTN","HMPDJFST",71,0)
 N I,NM
"RTN","HMPDJFST",72,0)
 S I=.9 F  S I=$O(^TMP("HMPF",$J,I)) Q:'I  D
"RTN","HMPDJFST",73,0)
 . S NM=$P($P($G(^TMP("HMPF",$J,I,.3)),"""collection"":""",2),"""")
"RTN","HMPDJFST",74,0)
 . Q:'$L(NM)
"RTN","HMPDJFST",75,0)
 . I NM="syncStatus" D DOMTOT(.COLL,I) S DONE=1 Q
"RTN","HMPDJFST",76,0)
 . S COLL(NM)=$G(COLL(NM))+1
"RTN","HMPDJFST",77,0)
 Q
"RTN","HMPDJFST",78,0)
DOMTOT(COLL,I) ; add domain totals to collection array
"RTN","HMPDJFST",79,0)
 N JSON,OBJ,ERR
"RTN","HMPDJFST",80,0)
 M JSON=^TMP("HMPF",$J,I)
"RTN","HMPDJFST",81,0)
 K JSON(.3)
"RTN","HMPDJFST",82,0)
 D DECODE^HMPJSON("JSON","OBJ","ERR")
"RTN","HMPDJFST",83,0)
 I $D(ERR) W !,"ERROR:  decoding syncStatus object"
"RTN","HMPDJFST",84,0)
 S NM="" F  S NM=$O(OBJ("domainTotals",NM)) Q:NM=""  S COLL(NM,"total")=OBJ("domainTotals",NM)
"RTN","HMPDJFST",85,0)
 Q
"RTN","HMPDJFST",86,0)
 ;
"RTN","HMPDJFST",87,0)
 ; Test Patient Syncronization
"RTN","HMPDJFST",88,0)
 ;
"RTN","HMPDJFST",89,0)
TESTPT(NUM) ; Test operational data for server NUM
"RTN","HMPDJFST",90,0)
 Q:'NUM
"RTN","HMPDJFST",91,0)
 N SERVER
"RTN","HMPDJFST",92,0)
 S SERVER="Test-Server-"_NUM
"RTN","HMPDJFST",93,0)
 D RUNPT(SERVER)
"RTN","HMPDJFST",94,0)
 Q
"RTN","HMPDJFST",95,0)
RUNPT(SERVER) ; Test operational data
"RTN","HMPDJFST",96,0)
 K ^TMP("HMPF",$J)
"RTN","HMPDJFST",97,0)
 N LASTUPD,COLLECT,DOMTOT,TOTAL,TOTPTS,DONEPTS,START
"RTN","HMPDJFST",98,0)
 S LASTUPD=0,TOTPTS=0,DONEPTS=0,START=$P($H,",",2)
"RTN","HMPDJFST",99,0)
 D ADDSRVR(SERVER)
"RTN","HMPDJFST",100,0)
 D RSETSRV(SERVER)
"RTN","HMPDJFST",101,0)
 D ADDPTS(SERVER,.TOTPTS)
"RTN","HMPDJFST",102,0)
 F  H 2 D LOADUPD(SERVER,.LASTUPD,.DONEPTS,.TOTPTS) Q:DONEPTS'<TOTPTS
"RTN","HMPDJFST",103,0)
 D LOADUPD(SERVER,.LASTUPD,.DONEPTS,.TOTPTS) ; one moreto clear ^XTMP
"RTN","HMPDJFST",104,0)
 W !,"Elapsed Seconds: ",$P($H,",",2)-START
"RTN","HMPDJFST",105,0)
 Q
"RTN","HMPDJFST",106,0)
ADDPTS(SERVER,TOTPTS) ; Add patients for synchronization
"RTN","HMPDJFST",107,0)
 F I=1:1 S X=$P($T(PATIENTS+I),";;",2,999) Q:X="zzzzz"  D
"RTN","HMPDJFST",108,0)
 . N ARGS,RSP
"RTN","HMPDJFST",109,0)
 . S ARGS("command")="putPtSubscription"
"RTN","HMPDJFST",110,0)
 . S ARGS("server")=SERVER
"RTN","HMPDJFST",111,0)
 . S ARGS("localId")=+X
"RTN","HMPDJFST",112,0)
 . D API^HMPDJFS(.RSP,.ARGS)
"RTN","HMPDJFST",113,0)
 . W !,$S(@RSP@(1)["""error"":":"ERROR",1:"Start"),?10,@RSP@(1)
"RTN","HMPDJFST",114,0)
 . S TOTPTS=TOTPTS+1
"RTN","HMPDJFST",115,0)
 Q
"RTN","HMPDJFST",116,0)
LOADUPD(SERVER,LASTUPD,DONEPTS,TOTPTS) ; Load updates
"RTN","HMPDJFST",117,0)
 ; expects LASTUPD
"RTN","HMPDJFST",118,0)
 N RSP,ARGS,ERR,CNT,LNODE
"RTN","HMPDJFST",119,0)
 S ARGS("command")="getPtUpdates"
"RTN","HMPDJFST",120,0)
 S ARGS("server")=SERVER
"RTN","HMPDJFST",121,0)
 S ARGS("version")=$$GET^XPAR("PKG","HMP BUILD")
"RTN","HMPDJFST",122,0)
 S ARGS("extractSchema")=2.001
"RTN","HMPDJFST",123,0)
 S ARGS("lastUpdate")=LASTUPD
"RTN","HMPDJFST",124,0)
 S ARGS("max")=1000
"RTN","HMPDJFST",125,0)
 D API^HMPDJFS(.RSP,.ARGS)
"RTN","HMPDJFST",126,0)
 S DONEPTS=DONEPTS+$$SCAN4STS
"RTN","HMPDJFST",127,0)
 S LASTUPD=$$GETLUPD
"RTN","HMPDJFST",128,0)
 S CNT=$$CNTOBJS
"RTN","HMPDJFST",129,0)
 D VALOBJS
"RTN","HMPDJFST",130,0)
 W !,^TMP("HMPF",$J,.5)
"RTN","HMPDJFST",131,0)
 W !,"lastUpdate: ",LASTUPD,"  items: ",CNT,?50,"loaded: ",DONEPTS_"/"_TOTPTS Q
"RTN","HMPDJFST",132,0)
 ;
"RTN","HMPDJFST",133,0)
 ; Common functions
"RTN","HMPDJFST",134,0)
 ;
"RTN","HMPDJFST",135,0)
SCAN4STS() ; Scan headers for syncDone objects
"RTN","HMPDJFST",136,0)
 N I,STSCNT
"RTN","HMPDJFST",137,0)
 S STSCNT=0,I=0 F  S I=$O(^TMP("HMPF",$J,I)) Q:'I  D
"RTN","HMPDJFST",138,0)
 . I $G(^TMP("HMPF",$J,I,.3))["syncStatus" S STSCNT=STSCNT+1
"RTN","HMPDJFST",139,0)
 Q STSCNT
"RTN","HMPDJFST",140,0)
 ;
"RTN","HMPDJFST",141,0)
GETLUPD() ; Return last update value
"RTN","HMPDJFST",142,0)
 N X
"RTN","HMPDJFST",143,0)
 S X=^TMP("HMPF",$J,.5),X=$P(X,"""lastUpdate"":""",2),X=$P(X,""",")
"RTN","HMPDJFST",144,0)
 Q X
"RTN","HMPDJFST",145,0)
 ;
"RTN","HMPDJFST",146,0)
SHOWHDRS ; Show object header info
"RTN","HMPDJFST",147,0)
 N I,X
"RTN","HMPDJFST",148,0)
 S I=0 F  S I=$O(^TMP("HMPF",$J,I)) Q:'I  D
"RTN","HMPDJFST",149,0)
 . S X=$G(^TMP("HMPF",$J,I,.3))
"RTN","HMPDJFST",150,0)
 . Q:'$L(X)
"RTN","HMPDJFST",151,0)
 . W !,"Hdr: ",X
"RTN","HMPDJFST",152,0)
 Q
"RTN","HMPDJFST",153,0)
SHOWDATA(COLL) ; Show the JSON objects being returned
"RTN","HMPDJFST",154,0)
 N I,X
"RTN","HMPDJFST",155,0)
 S I=.5 F  S I=$O(^TMP("HMPF",$J,I)) Q:'I  D
"RTN","HMPDJFST",156,0)
 . S X=$G(^TMP("HMPF",$J,I,.3))
"RTN","HMPDJFST",157,0)
 . S X=$P($P(X,"collection"":""",2),"""")
"RTN","HMPDJFST",158,0)
 . Q:'$L(X)  Q:'(COLL[X)
"RTN","HMPDJFST",159,0)
 . W !,"Hdr:",$G(^TMP("HMPF",$J,I,.3))
"RTN","HMPDJFST",160,0)
 . W !,"Dta:",$G(^TMP("HMPF",$J,I,1))
"RTN","HMPDJFST",161,0)
 Q
"RTN","HMPDJFST",162,0)
VALOBJS ; Validate objects
"RTN","HMPDJFST",163,0)
 N I,HDR
"RTN","HMPDJFST",164,0)
 S I=.5 F  S I=$O(^TMP("HMPF",$J,I)) Q:'I  D
"RTN","HMPDJFST",165,0)
 . S HDR=$G(^TMP("HMPF",$J,I,.3))
"RTN","HMPDJFST",166,0)
 . Q:'$L(HDR)
"RTN","HMPDJFST",167,0)
 . ;W !,"Hdr: ",HDR
"RTN","HMPDJFST",168,0)
 . N OBJ,JSON,LAST,ERROR
"RTN","HMPDJFST",169,0)
 . M JSON=^TMP("HMPF",$J,I)
"RTN","HMPDJFST",170,0)
 . I $E(JSON(.3))="}" S JSON(.3)=$E(JSON(.3),3,$L(JSON(.3)))
"RTN","HMPDJFST",171,0)
 . S LAST=$O(JSON(""),-1),LAST=LAST+1 S JSON(LAST)="}"
"RTN","HMPDJFST",172,0)
 . D DECODE^HMPJSON("JSON","OBJ","ERROR")
"RTN","HMPDJFST",173,0)
 . ;W:'$D(ERROR) " ok"
"RTN","HMPDJFST",174,0)
 . I $D(ERROR) W !,"  >>> ERROR:  ",HDR
"RTN","HMPDJFST",175,0)
 Q
"RTN","HMPDJFST",176,0)
CNTOBJS() ; Return count of objects returned
"RTN","HMPDJFST",177,0)
 N I,C
"RTN","HMPDJFST",178,0)
 S C=0
"RTN","HMPDJFST",179,0)
 S I=.9 ; skip .5 header node
"RTN","HMPDJFST",180,0)
 F  S I=$O(^TMP("HMPF",$J,I)) Q:'I  I $L($G(^TMP("HMPF",$J,I,1))) S C=C+1
"RTN","HMPDJFST",181,0)
 Q C
"RTN","HMPDJFST",182,0)
 ;
"RTN","HMPDJFST",183,0)
TOTALS ;
"RTN","HMPDJFST",184,0)
 N P,T
"RTN","HMPDJFST",185,0)
 S T=0
"RTN","HMPDJFST",186,0)
 S P=0 F  S P=$O(^XTMP("HMPFP",P)) Q:'P  S T=T+^XTMP("HMPFP",P,"hmpTest","total")
"RTN","HMPDJFST",187,0)
 W !,"TOTAL: ",T
"RTN","HMPDJFST",188,0)
 Q
"RTN","HMPDJFST",189,0)
GETFEW ;
"RTN","HMPDJFST",190,0)
 S ARGS("command")="getPtUpdates"
"RTN","HMPDJFST",191,0)
 S ARGS("server")="hmpTest"
"RTN","HMPDJFST",192,0)
 S ARGS("lastUpdate")="3140115-251"
"RTN","HMPDJFST",193,0)
 S ARGS("max")=10
"RTN","HMPDJFST",194,0)
 D API^HMPDJFS(.RSP,.ARGS)
"RTN","HMPDJFST",195,0)
 Q
"RTN","HMPDJFST",196,0)
PATIENTS ; list of patients
"RTN","HMPDJFST",197,0)
 ;;25     AVIVAPATIENT,TWENTYTHREE
"RTN","HMPDJFST",198,0)
 ;;100848 AVIVAPATIENT,EIGHT
"RTN","HMPDJFST",199,0)
 ;;100851 AVIVAPATIENT,ELEVEN
"RTN","HMPDJFST",200,0)
 ;;100846 AVIVAPATIENT,FIVE
"RTN","HMPDJFST",201,0)
 ;;100845 AVIVAPATIENT,FOUR
"RTN","HMPDJFST",202,0)
 ;;100849 AVIVAPATIENT,NINE
"RTN","HMPDJFST",203,0)
 ;;100842 AVIVAPATIENT,ONE
"RTN","HMPDJFST",204,0)
 ;;100841 AVIVAPATIENT,SEVEN
"RTN","HMPDJFST",205,0)
 ;;100847 AVIVAPATIENT,SIX
"RTN","HMPDJFST",206,0)
 ;;100850 AVIVAPATIENT,TEN
"RTN","HMPDJFST",207,0)
 ;;8      AVIVAPATIENT,THIRTY
"RTN","HMPDJFST",208,0)
 ;;100844 AVIVAPATIENT,THREE
"RTN","HMPDJFST",209,0)
 ;;100852 AVIVAPATIENT,TWELVE
"RTN","HMPDJFST",210,0)
 ;;3      AVIVAPATIENT,TWENTYEIGHT
"RTN","HMPDJFST",211,0)
 ;;231    AVIVAPATIENT,TWENTYFIVE
"RTN","HMPDJFST",212,0)
 ;;229    AVIVAPATIENT,TWENTYFOUR
"RTN","HMPDJFST",213,0)
 ;;217    AVIVAPATIENT,TWENTYNINE
"RTN","HMPDJFST",214,0)
 ;;237    AVIVAPATIENT,TWENTYONE
"RTN","HMPDJFST",215,0)
 ;;253    AVIVAPATIENT,TWENTYSEVEN
"RTN","HMPDJFST",216,0)
 ;;418    AVIVAPATIENT,TWENTYSIX
"RTN","HMPDJFST",217,0)
 ;;205    AVIVAPATIENT,TWENTYTWO
"RTN","HMPDJFST",218,0)
 ;;100843 AVIVAPATIENT,TWO
"RTN","HMPDJFST",219,0)
 ;;zzzzz
"RTN","HMPDJT")
0^50^B9992032
"RTN","HMPDJT",1,0)
HMPDJT ;SLC/MKB -- Test VistA data JSON RPC ;10/18/12 6:26pm
"RTN","HMPDJT",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJT",4,0)
 ;
"RTN","HMPDJT",5,0)
 ; External References          DBIA#
"RTN","HMPDJT",6,0)
 ; -------------------          -----
"RTN","HMPDJT",7,0)
 ; DIC                           2051
"RTN","HMPDJT",8,0)
 ; DIR                          10026
"RTN","HMPDJT",9,0)
 ;
"RTN","HMPDJT",10,0)
EN ; -- test GET^HMPDJ, write results to screen
"RTN","HMPDJT",11,0)
 N DFN,TYPE,TEXT,START,STOP,MAX,ID,IN,OUT,IDX
"RTN","HMPDJT",12,0)
 F  S DFN=$$PATIENT Q:DFN<1  D 
"RTN","HMPDJT",13,0)
 . F  S TYPE=$$DOMAIN Q:"^"[TYPE  D
"RTN","HMPDJT",14,0)
 .. D RPC W !!
"RTN","HMPDJT",15,0)
 .. K IN,TEXT,START,STOP,MAX
"RTN","HMPDJT",16,0)
 Q
"RTN","HMPDJT",17,0)
 ;
"RTN","HMPDJT",18,0)
RPC ; -- get search parameters, run and display
"RTN","HMPDJT",19,0)
 I TYPE="DOCUMENT" S TEXT=$$SHOW Q:TEXT="^"
"RTN","HMPDJT",20,0)
 S START=$$START Q:START="^"
"RTN","HMPDJT",21,0)
 I START S STOP=$$STOP(START) Q:STOP="^"
"RTN","HMPDJT",22,0)
 S MAX=$$TOTAL Q:MAX="^"
"RTN","HMPDJT",23,0)
 ; ID=$$ITEM
"RTN","HMPDJT",24,0)
 ;
"RTN","HMPDJT",25,0)
 S IN("patientId")=+$G(DFN)
"RTN","HMPDJT",26,0)
 S IN("domain")=$G(TYPE)
"RTN","HMPDJT",27,0)
 S:$L($G(TEXT)) IN("text")=TEXT
"RTN","HMPDJT",28,0)
 S:$G(START) IN("start")=START
"RTN","HMPDJT",29,0)
 S:$G(STOP) IN("stop")=STOP
"RTN","HMPDJT",30,0)
 S:$G(MAX) IN("max")=MAX
"RTN","HMPDJT",31,0)
 S:$D(ID) IN("id")=ID
"RTN","HMPDJT",32,0)
 D GET^HMPDJ(.OUT,.IN)
"RTN","HMPDJT",33,0)
 ;
"RTN","HMPDJT",34,0)
 S IDX=OUT W !
"RTN","HMPDJT",35,0)
 F  S IDX=$Q(@IDX) Q:IDX'?1"^TMP(""HMP"","1.N.E  Q:+$P(IDX,",",2)'=$J  W !,@IDX
"RTN","HMPDJT",36,0)
 Q
"RTN","HMPDJT",37,0)
 ;
"RTN","HMPDJT",38,0)
PATIENT() ; -- select patient
"RTN","HMPDJT",39,0)
 N X,Y,DIC
"RTN","HMPDJT",40,0)
 S DIC=2,DIC(0)="AEQM" D ^DIC
"RTN","HMPDJT",41,0)
 Q Y
"RTN","HMPDJT",42,0)
 ;
"RTN","HMPDJT",43,0)
DOMAIN() ; -- select domain
"RTN","HMPDJT",44,0)
 N X,Y,I,DIR,HMP
"RTN","HMPDJT",45,0)
 S DIR(0)="SAO^",DIR("A")="Select DOMAIN: "
"RTN","HMPDJT",46,0)
 F I=1:1 S X=$P($T(TYPE+I),";",3) Q:X=99  S DIR(0)=DIR(0)_X_";",HMP(+X)=$P(X,":",2)
"RTN","HMPDJT",47,0)
 D ^DIR S:Y Y=HMP(Y)
"RTN","HMPDJT",48,0)
 I Y="RADIOLOGY" S Y="IMAGE"
"RTN","HMPDJT",49,0)
 Q Y
"RTN","HMPDJT",50,0)
 ;
"RTN","HMPDJT",51,0)
TYPE ;;CODE:NAME
"RTN","HMPDJT",52,0)
 ;;1:ALLERGY
"RTN","HMPDJT",53,0)
 ;;2:APPOINTMENT
"RTN","HMPDJT",54,0)
 ;;3:CONSULT
"RTN","HMPDJT",55,0)
 ;;4:CPT
"RTN","HMPDJT",56,0)
 ;;5:DOCUMENT
"RTN","HMPDJT",57,0)
 ;;6:EDUCATION
"RTN","HMPDJT",58,0)
 ;;7:EXAM
"RTN","HMPDJT",59,0)
 ;;8:FACTOR
"RTN","HMPDJT",60,0)
 ;;9:IMMUNIZATION
"RTN","HMPDJT",61,0)
 ;;10:LAB
"RTN","HMPDJT",62,0)
 ;;11:MED
"RTN","HMPDJT",63,0)
 ;;12:OBSERVATION
"RTN","HMPDJT",64,0)
 ;;13:ORDER
"RTN","HMPDJT",65,0)
 ;;14:PATIENT
"RTN","HMPDJT",66,0)
 ;;15:POV
"RTN","HMPDJT",67,0)
 ;;16:PROBLEM
"RTN","HMPDJT",68,0)
 ;;17:PROCEDURE
"RTN","HMPDJT",69,0)
 ;;18:RADIOLOGY
"RTN","HMPDJT",70,0)
 ;;19:SKIN
"RTN","HMPDJT",71,0)
 ;;20:SURGERY
"RTN","HMPDJT",72,0)
 ;;21:VISIT
"RTN","HMPDJT",73,0)
 ;;22:VITAL
"RTN","HMPDJT",74,0)
 ;;99
"RTN","HMPDJT",75,0)
 ;
"RTN","HMPDJT",76,0)
SHOW() ; -- true/false to include body of note
"RTN","HMPDJT",77,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","HMPDJT",78,0)
 S DIR(0)="YAO",DIR("A")="Include the text of each document? "
"RTN","HMPDJT",79,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","HMPDJT",80,0)
 Q Y
"RTN","HMPDJT",81,0)
 ;
"RTN","HMPDJT",82,0)
START() ; -- select a start date
"RTN","HMPDJT",83,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","HMPDJT",84,0)
 S DIR(0)="DAO^::AEPT",DIR("A")="Select START DATE: "
"RTN","HMPDJT",85,0)
 S DIR("?")="Enter an optional date[.time] to begin searching for data"
"RTN","HMPDJT",86,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","HMPDJT",87,0)
 Q Y
"RTN","HMPDJT",88,0)
 ;
"RTN","HMPDJT",89,0)
STOP(START) ; -- select a stop date
"RTN","HMPDJT",90,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","HMPDJT",91,0)
 S DIR(0)="DA^"_START_"::AEPT",DIR("A")="Select STOP DATE: "
"RTN","HMPDJT",92,0)
 S DIR("?")="Enter a date[.time] after the START to end searching for data"
"RTN","HMPDJT",93,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","HMPDJT",94,0)
 Q Y
"RTN","HMPDJT",95,0)
 ;
"RTN","HMPDJT",96,0)
TOTAL() ; -- select the max# to return
"RTN","HMPDJT",97,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","HMPDJT",98,0)
 S DIR(0)="NAO^1:9999",DIR("A")="Select TOTAL #items: "
"RTN","HMPDJT",99,0)
 S DIR("?")="Enter an optional maximum number of items to return, up to 9999"
"RTN","HMPDJT",100,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","HMPDJT",101,0)
 Q Y
"RTN","HMPDJX")
0^51^B35974883
"RTN","HMPDJX",1,0)
HMPDJX ;SLC/MKB -- New data update ; 11/5/13 7:02pm
"RTN","HMPDJX",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDJX",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDJX",4,0)
 ;
"RTN","HMPDJX",5,0)
 ; External References          DBIA#
"RTN","HMPDJX",6,0)
 ; -------------------          -----
"RTN","HMPDJX",7,0)
 ; ^DPT                         10035
"RTN","HMPDJX",8,0)
 ; MPIF001                       2701
"RTN","HMPDJX",9,0)
 ; XLFSTR                       10104
"RTN","HMPDJX",10,0)
 ;
"RTN","HMPDJX",11,0)
EN(LAST,MAX) ; -- get data from ^XTMP("HMP-<date>",n)
"RTN","HMPDJX",12,0)
 ; Expects HMP=$NA(^TMP("HMP",$J))
"RTN","HMPDJX",13,0)
 ;
"RTN","HMPDJX",14,0)
 N SYS,X,Y,HMPTOTL,DFN,PATCNT,ICN,DOMCNT,TYPE,RTN,HMPLASTI,HMPID,DATA,DELETE,UID,CNT,TSTART,TSTOP
"RTN","HMPDJX",15,0)
 S TSTART=$$NOW^XLFDT()
"RTN","HMPDJX",16,0)
 S LAST=$G(LAST),SYS=$G(FILTER("systemID")) Q:SYS=""
"RTN","HMPDJX",17,0)
 S MAX=$G(MAX,999)
"RTN","HMPDJX",18,0)
 D GETLIST(LAST,SYS,MAX)
"RTN","HMPDJX",19,0)
 ;
"RTN","HMPDJX",20,0)
 S (DFN,PATCNT,HMPTOTL)=0 F  S DFN=$O(^TMP("HMPX",$J,DFN)) Q:DFN<1  D
"RTN","HMPDJX",21,0)
 . K ^TMP($J,"HMP ERROR")
"RTN","HMPDJX",22,0)
 . S PATCNT=PATCNT+1,ICN=+$$GETICN^MPIF001(DFN),ERRPAT=DFN
"RTN","HMPDJX",23,0)
 . S DOMCNT=0 K DATA,DELETE
"RTN","HMPDJX",24,0)
 . S TYPE="" F  S TYPE=$O(^TMP("HMPX",$J,DFN,TYPE)) Q:TYPE=""  D
"RTN","HMPDJX",25,0)
 .. S RTN=$$TAG^HMPDJ(TYPE)_"^HMPDJ0" Q:'$L($T(@RTN))
"RTN","HMPDJX",26,0)
 .. S DOMCNT=DOMCNT+1
"RTN","HMPDJX",27,0)
 .. ;
"RTN","HMPDJX",28,0)
 .. N HMP S HMP=$NA(^TMP("HMP",$J,PATCNT,DOMCNT)),HMPI=0,HMPID=""
"RTN","HMPDJX",29,0)
 .. F  S HMPID=$O(^TMP("HMPX",$J,DFN,TYPE,HMPID)) Q:HMPID=""  S X=$G(^(HMPID)) D
"RTN","HMPDJX",30,0)
 ... N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJX",31,0)
 ... S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJX",32,0)
 ... S ERRMSG="A problem occurred when trying to refresh patient data from an API."
"RTN","HMPDJX",33,0)
 ... ;
"RTN","HMPDJX",34,0)
 ... I X="@" D DELETE(TYPE,DFN,HMPID) Q
"RTN","HMPDJX",35,0)
 ... S HMPLASTI=HMPI D @RTN   ;creates @HMP@(HMPI+1)
"RTN","HMPDJX",36,0)
 ... ;
"RTN","HMPDJX",37,0)
 ... ; if no new item, assume the record has been deleted
"RTN","HMPDJX",38,0)
 ... I HMPI'>HMPLASTI D DELETE(TYPE,DFN,HMPID) Q
"RTN","HMPDJX",39,0)
 ... S HMPTOTL=HMPTOTL+1,DATA=1
"RTN","HMPDJX",40,0)
 .. I 'HMPI S DOMCNT=DOMCNT-1 Q   ;no data, or error
"RTN","HMPDJX",41,0)
 .. ;
"RTN","HMPDJX",42,0)
 .. S:DOMCNT>1 @HMP@(.3)=","
"RTN","HMPDJX",43,0)
 .. S @HMP@(.5)="{""domainName"":"""_TYPE_""",""total"":"_HMPI_",""items"":["
"RTN","HMPDJX",44,0)
 .. S HMPI=HMPI+1,@HMP@(HMPI)="]}"
"RTN","HMPDJX",45,0)
 . ;
"RTN","HMPDJX",46,0)
A . ; HMP=$NA(^TMP("HMP",$J)) again
"RTN","HMPDJX",47,0)
 . S:PATCNT>1 @HMP@(PATCNT,.3)=","
"RTN","HMPDJX",48,0)
 . S @HMP@(PATCNT,.5)="{""patientDfn"":"_DFN_",""patientIcn"":"""_ICN_""""
"RTN","HMPDJX",49,0)
 . I DOMCNT D
"RTN","HMPDJX",50,0)
 .. S @HMP@(PATCNT,.6)=",""domains"":["
"RTN","HMPDJX",51,0)
 .. S DOMCNT=DOMCNT+1,@HMP@(PATCNT,DOMCNT)="]"
"RTN","HMPDJX",52,0)
 . ;
"RTN","HMPDJX",53,0)
 . I $D(DELETE) D
"RTN","HMPDJX",54,0)
 .. S DOMCNT=DOMCNT+1,@HMP@(PATCNT,DOMCNT,.5)=",""deletes"":["
"RTN","HMPDJX",55,0)
 .. S HMPI=0,UID="" F  S UID=$O(DELETE(UID)) Q:UID=""  D
"RTN","HMPDJX",56,0)
 ... S TYPE=DELETE(UID),HMPI=HMPI+1
"RTN","HMPDJX",57,0)
 ... S:HMPI>1 @HMP@(PATCNT,DOMCNT,HMPI,.3)=","
"RTN","HMPDJX",58,0)
 ... S @HMP@(PATCNT,DOMCNT,HMPI,1)="{""uid"":"""_UID_""",""domainName"":"""_TYPE_"""}"
"RTN","HMPDJX",59,0)
 .. S HMPI=HMPI+1,@HMP@(PATCNT,DOMCNT,HMPI)="]"
"RTN","HMPDJX",60,0)
 . ;
"RTN","HMPDJX",61,0)
 . I $D(^TMP($J,"HMP ERROR")) D
"RTN","HMPDJX",62,0)
 .. N ERROR D BUILDERR^HMPDJ(.ERROR)
"RTN","HMPDJX",63,0)
 .. S DOMCNT=DOMCNT+1,@HMP@(PATCNT,DOMCNT,.3)=","
"RTN","HMPDJX",64,0)
 .. M @HMP@(PATCNT,DOMCNT)=ERROR
"RTN","HMPDJX",65,0)
 .. K ^TMP($J,"HMP ERROR")
"RTN","HMPDJX",66,0)
 . ;
"RTN","HMPDJX",67,0)
 . S DOMCNT=DOMCNT+1,@HMP@(PATCNT,DOMCNT)="}"
"RTN","HMPDJX",68,0)
 ;
"RTN","HMPDJX",69,0)
 S Y=$G(^TMP("HMPX",$J,0)) S:Y="" Y=LAST
"RTN","HMPDJX",70,0)
 S T=$$NOW^XLFDT()
"RTN","HMPDJX",71,0)
 S @HMP@(.5)="{""apiVersion"":""1.01"",""data"":{""lastUpdate"":"""_Y_""",""startDateTime"":"""_TSTART_""",""totalPatients"":"_PATCNT
"RTN","HMPDJX",72,0)
 S:PATCNT @HMP@(.6)=",""patients"":[",PATCNT=PATCNT+1,@HMP@(PATCNT)="]"
"RTN","HMPDJX",73,0)
 ;
"RTN","HMPDJX",74,0)
B ;
"RTN","HMPDJX",75,0)
 I $D(^TMP("HMPX",$J,"OP")) D         ;operational data
"RTN","HMPDJX",76,0)
 . S (HMPTOTL,DOMCNT)=0,PATCNT=PATCNT+1 K DATA,DELETE
"RTN","HMPDJX",77,0)
 . S TYPE="" F  S TYPE=$O(^TMP("HMPX",$J,"OP",TYPE)) Q:TYPE=""  D
"RTN","HMPDJX",78,0)
 .. S RTN=$$TAG^HMPEF(TYPE)_"^HMPEF" Q:'$L($T(@RTN))
"RTN","HMPDJX",79,0)
 .. S DOMCNT=DOMCNT+1,DFN=""
"RTN","HMPDJX",80,0)
 .. ;
"RTN","HMPDJX",81,0)
 .. N HMP S HMP=$NA(^TMP("HMP",$J,PATCNT,DOMCNT)),HMPI=0,HMPID=""
"RTN","HMPDJX",82,0)
 .. F  S HMPID=$O(^TMP("HMPX",$J,"OP",TYPE,HMPID)) Q:HMPID=""  S X=$G(^(HMPID)) D
"RTN","HMPDJX",83,0)
 ... I X="@" D DELETE(TYPE,DFN,HMPID) Q
"RTN","HMPDJX",84,0)
 ... S HMPLASTI=HMPI D @RTN           ;creates @HMP@(HMPI+1)
"RTN","HMPDJX",85,0)
 ... ; if no new item, assume the record has been deleted
"RTN","HMPDJX",86,0)
 ... I HMPI'>HMPLASTI D DELETE(TYPE,DFN,HMPID) Q
"RTN","HMPDJX",87,0)
 ... S HMPTOTL=HMPTOTL+1,DATA=1
"RTN","HMPDJX",88,0)
 .. I 'HMPI S DOMCNT=DOMCNT-1 Q       ;no data, or error
"RTN","HMPDJX",89,0)
 .. ;
"RTN","HMPDJX",90,0)
 .. S:DOMCNT>1 @HMP@(.3)=","
"RTN","HMPDJX",91,0)
 .. S @HMP@(.5)="{""domainName"":"""_TYPE_""",""total"":"_HMPI_",""items"":["
"RTN","HMPDJX",92,0)
 .. S HMPI=HMPI+1,@HMP@(HMPI)="]}"
"RTN","HMPDJX",93,0)
 . ;
"RTN","HMPDJX",94,0)
C . ; HMP=$NA(^TMP("HMP",$J)) again
"RTN","HMPDJX",95,0)
 . I 'DOMCNT,'$D(DELETE) Q  ;no data, or error
"RTN","HMPDJX",96,0)
 . S @HMP@(PATCNT,.5)=",""operational"":{"
"RTN","HMPDJX",97,0)
 . I DOMCNT D
"RTN","HMPDJX",98,0)
 .. S @HMP@(PATCNT,.6)="""domains"":["
"RTN","HMPDJX",99,0)
 .. S DOMCNT=DOMCNT+1 S @HMP@(PATCNT,DOMCNT)="]"
"RTN","HMPDJX",100,0)
 . ;
"RTN","HMPDJX",101,0)
 . I $D(DELETE) D
"RTN","HMPDJX",102,0)
 .. S DOMCNT=DOMCNT+1 S:DOMCNT>1 @HMP@(PATCNT,DOMCNT,.3)=","
"RTN","HMPDJX",103,0)
 .. S @HMP@(PATCNT,DOMCNT,.5)="""deletes"":["
"RTN","HMPDJX",104,0)
 .. S HMPI=0,UID="" F  S UID=$O(DELETE(UID)) Q:UID=""  D
"RTN","HMPDJX",105,0)
 ... S TYPE=DELETE(UID),HMPI=HMPI+1
"RTN","HMPDJX",106,0)
 ... S:HMPI>1 @HMP@(PATCNT,DOMCNT,HMPI,.3)=","
"RTN","HMPDJX",107,0)
 ... S @HMP@(PATCNT,DOMCNT,HMPI,1)="{""uid"":"""_UID_""",""domainName"":"""_TYPE_"""}"
"RTN","HMPDJX",108,0)
 .. S HMPI=HMPI+1,@HMP@(PATCNT,DOMCNT,HMPI)="]"
"RTN","HMPDJX",109,0)
 . ;
"RTN","HMPDJX",110,0)
 . S DOMCNT=DOMCNT+1,@HMP@(PATCNT,DOMCNT)="}"
"RTN","HMPDJX",111,0)
 ; 
"RTN","HMPDJX",112,0)
 S TSTOP=$$NOW^XLFDT()
"RTN","HMPDJX",113,0)
 S PATCNT=PATCNT+1,@HMP@(PATCNT)=",""endDateTime"":"""_TSTOP_"""}}" ;close JSON
"RTN","HMPDJX",114,0)
 K ^TMP("HMPX",$J),^TMP("HMPTEXT",$J)
"RTN","HMPDJX",115,0)
 Q
"RTN","HMPDJX",116,0)
 ;
"RTN","HMPDJX",117,0)
DELETE(NAME,DFN,ID) ; -- set DELETE nodes
"RTN","HMPDJX",118,0)
 N UID
"RTN","HMPDJX",119,0)
 S UID=$$SETUID^HMPUTILS(NAME,DFN,ID)
"RTN","HMPDJX",120,0)
 S DELETE(UID)=NAME
"RTN","HMPDJX",121,0)
 Q
"RTN","HMPDJX",122,0)
 ;
"RTN","HMPDJX",123,0)
GETLIST(LAST,SYS,MAX) ; -- build list of updates for client
"RTN","HMPDJX",124,0)
 ; Returns ^TMP("HMPX",$J,0) = last DATE:SEQ included
"RTN","HMPDJX",125,0)
 ;         ^TMP("HMPX",$J,DFN,TYPE,ID)=ACT
"RTN","HMPDJX",126,0)
 N DATE,SEQ,DA,END,IDX,X0,DFN,TYPE,ID,ACT,D,N,CNT
"RTN","HMPDJX",127,0)
 K ^TMP("HMPX",$J)
"RTN","HMPDJX",128,0)
 S DATE=+LAST,SEQ=+$P(LAST,":",2),CNT=0
"RTN","HMPDJX",129,0)
 S DA=$$FIND^HMPPATS(SYS) Q:'DA
"RTN","HMPDJX",130,0)
 ;
"RTN","HMPDJX",131,0)
 ; generate list ID, and end point
"RTN","HMPDJX",132,0)
 S D=DT,N=+$O(^XTMP("HMP-"_DT,"A"),-1)       ;last entry, as of now
"RTN","HMPDJX",133,0)
 I DATE=DT,SEQ=N S ^TMP("HMPX",$J,0)=LAST Q  ;no new items
"RTN","HMPDJX",134,0)
 ;
"RTN","HMPDJX",135,0)
 S IDX=$NA(^XTMP("HMP-"_DATE,SEQ)),END=N     ;init loop where left off
"RTN","HMPDJX",136,0)
 F  S IDX=$Q(@IDX) Q:$$DONE  D  Q:CNT'<MAX
"RTN","HMPDJX",137,0)
 . S D=+$P(IDX,"-",2),N=+$P(IDX,",",2)
"RTN","HMPDJX",138,0)
 . S X0=@IDX,DFN=$P(X0,U) S:DFN="" DFN="OP"
"RTN","HMPDJX",139,0)
 . I DFN,'$D(^HMP(800000,"ADFN",DFN,DA)) Q
"RTN","HMPDJX",140,0)
 . S TYPE=$P(X0,U,2),ID=$P(X0,U,3),ACT=$P(X0,U,4)
"RTN","HMPDJX",141,0)
 . I TYPE=""!(ID="") Q  ;error
"RTN","HMPDJX",142,0)
 . I TYPE="ROSTER",'$D(^HMP(800000,"AROS",ID,DA)) Q
"RTN","HMPDJX",143,0)
 . S:'$D(^TMP("HMPX",$J,DFN,TYPE,ID)) CNT=CNT+1
"RTN","HMPDJX",144,0)
 . S ^TMP("HMPX",$J,DFN,TYPE,ID)=ACT
"RTN","HMPDJX",145,0)
 S ^TMP("HMPX",$J,0)=D_":"_N                 ;final date:seq
"RTN","HMPDJX",146,0)
 Q
"RTN","HMPDJX",147,0)
 ;
"RTN","HMPDJX",148,0)
DONE() ; -- Return 1 or 0, if loop has finished
"RTN","HMPDJX",149,0)
 I IDX'?1"^XTMP(""HMP-"7N.E  Q 1       ;end of ^XTMP("HMP")
"RTN","HMPDJX",150,0)
 N D,N S D=+$P(IDX,"-",2),N=+$P(IDX,",",2)
"RTN","HMPDJX",151,0)
 ; check HMP-DATE subscript
"RTN","HMPDJX",152,0)
 I D<DT Q 0                            ;prior day: keep going
"RTN","HMPDJX",153,0)
 I D>DT Q 1                            ;next day:  stop loop
"RTN","HMPDJX",154,0)
 ; D=DT: check sequence# subscript
"RTN","HMPDJX",155,0)
 I N>END Q 1
"RTN","HMPDJX",156,0)
 Q 0
"RTN","HMPDLR")
0^52^B24583034
"RTN","HMPDLR",1,0)
HMPDLR ;SLC/MKB -- Laboratory extract ;8/2/11  15:29
"RTN","HMPDLR",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDLR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDLR",4,0)
 ;
"RTN","HMPDLR",5,0)
 ; External References          DBIA#
"RTN","HMPDLR",6,0)
 ; -------------------          -----
"RTN","HMPDLR",7,0)
 ; ^DPT                         10035
"RTN","HMPDLR",8,0)
 ; ^LAB(60                      10054
"RTN","HMPDLR",9,0)
 ; ^LAB(61                        524
"RTN","HMPDLR",10,0)
 ; ^LRO(69                       2407
"RTN","HMPDLR",11,0)
 ; ^LR                            525
"RTN","HMPDLR",12,0)
 ; DIC                           2051
"RTN","HMPDLR",13,0)
 ; DIQ                           2056
"RTN","HMPDLR",14,0)
 ; LR7OR1,^TMP("LRRR",$J)        2503
"RTN","HMPDLR",15,0)
 ; XUAF4                         2171
"RTN","HMPDLR",16,0)
 ;
"RTN","HMPDLR",17,0)
 ; ------------ Get results from VistA ------------
"RTN","HMPDLR",18,0)
 ;
"RTN","HMPDLR",19,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's lab results
"RTN","HMPDLR",20,0)
 N HMPSUB,HMPIDT,HMPN,HMPITM,LRDFN,SUB
"RTN","HMPDLR",21,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","HMPDLR",22,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDLR",23,0)
 K ^TMP("LRRR",$J,DFN) S LRDFN=$G(^DPT(DFN,"LR")),HMPSUB="CH"
"RTN","HMPDLR",24,0)
 ;
"RTN","HMPDLR",25,0)
 ; get result(s)
"RTN","HMPDLR",26,0)
 I $L($G(ID)) D  Q:HMPN  ;done
"RTN","HMPDLR",27,0)
 . S HMPSUB=$P(ID,";"),HMPIDT=+$P(ID,";",2),(BEG,END)=9999999-HMPIDT
"RTN","HMPDLR",28,0)
 . S HMPN=$P(ID,";",3) I HMPN D  ;skip loop - single result
"RTN","HMPDLR",29,0)
 .. D RR^LR7OR1(DFN,,BEG,END,HMPSUB)
"RTN","HMPDLR",30,0)
 .. S SUB=$S("CH^MI"[HMPSUB:HMPSUB,1:"AP")_"(.HMPITM)"
"RTN","HMPDLR",31,0)
 .. D @SUB,XML(.HMPITM)
"RTN","HMPDLR",32,0)
 .. K ^TMP("LRRR",$J,DFN)
"RTN","HMPDLR",33,0)
 ;
"RTN","HMPDLR",34,0)
 D RR^LR7OR1(DFN,,BEG,END,HMPSUB,,,MAX)
"RTN","HMPDLR",35,0)
 S HMPSUB="" F  S HMPSUB=$O(^TMP("LRRR",$J,DFN,HMPSUB)) Q:HMPSUB=""  D
"RTN","HMPDLR",36,0)
 . S HMPIDT=0 F  S HMPIDT=$O(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT)) Q:HMPIDT<1  D
"RTN","HMPDLR",37,0)
 .. S HMPN=0 F  S HMPN=$O(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT,HMPN)) Q:HMPN<1  D
"RTN","HMPDLR",38,0)
 ... K HMPITM S SUB=$S("CH^MI"[HMPSUB:HMPSUB,1:"AP")_"(.HMPITM)"
"RTN","HMPDLR",39,0)
 ... D @SUB,XML(.HMPITM)
"RTN","HMPDLR",40,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","HMPDLR",41,0)
 Q
"RTN","HMPDLR",42,0)
 ;
"RTN","HMPDLR",43,0)
CH(LAB) ; -- return a Chemistry result in LAB("attribute")=value
"RTN","HMPDLR",44,0)
 ;      Expects ^TMP("LRRR",$J,DFN,"CH",HMPIDT,HMPN),LRDFN
"RTN","HMPDLR",45,0)
 N CDT,LR0,LRI,X0,X,LOINC,ORD,CMMT K LAB
"RTN","HMPDLR",46,0)
 S LAB("id")="CH;"_HMPIDT_";"_HMPN,LAB("type")="CH"
"RTN","HMPDLR",47,0)
 S CDT=9999999-HMPIDT,LAB("collected")=CDT
"RTN","HMPDLR",48,0)
 S LR0=$G(^LR(LRDFN,"CH",HMPIDT,0)),LRI=$G(^(HMPN))
"RTN","HMPDLR",49,0)
 S LAB("status")="completed",LAB("resulted")=$P(LR0,U,3)
"RTN","HMPDLR",50,0)
 S X0=$G(^TMP("LRRR",$J,DFN,"CH",HMPIDT,HMPN))
"RTN","HMPDLR",51,0)
 S LAB("test")=$P($G(^LAB(60,+X0,0)),U) ;$P(X0,U,10)?
"RTN","HMPDLR",52,0)
 S:$L($P(X0,U,2)) LAB("result")=$P(X0,U,2)
"RTN","HMPDLR",53,0)
 S:$L($P(X0,U,4)) LAB("units")=$P(X0,U,4)
"RTN","HMPDLR",54,0)
 S:$L($P(X0,U,3)) LAB("interpretation")=$P(X0,U,3)
"RTN","HMPDLR",55,0)
 S X=$P(X0,U,5) I $L(X),X["-" S LAB("low")=$P(X,"-"),LAB("high")=$P(X,"-",2)
"RTN","HMPDLR",56,0)
 S LAB("localName")=$S($L($P(X0,U,15)):$P(X0,U,15),1:LAB("test"))
"RTN","HMPDLR",57,0)
 S LAB("groupName")=$P(X0,U,16) ;accession#
"RTN","HMPDLR",58,0)
 S X=+$P(X0,U,19) I X D  ;specimen
"RTN","HMPDLR",59,0)
 . N IENS,HMPY S IENS=X_","
"RTN","HMPDLR",60,0)
 . D GETS^DIQ(61,IENS,".01;2",,"HMPY")
"RTN","HMPDLR",61,0)
 . S LAB("specimen")=$G(HMPY(61,IENS,2))_U_$G(HMPY(61,IENS,.01)) ;SNOMED^name
"RTN","HMPDLR",62,0)
 . S LAB("sample")=$$GET1^DIQ(61,X_",",4.1) ;name
"RTN","HMPDLR",63,0)
 S ORD=+$P(X0,U,17) S:ORD LAB("labOrderID")=ORD
"RTN","HMPDLR",64,0)
 S X=$$ORDER(ORD,+X0) S:X LAB("orderID")=X
"RTN","HMPDLR",65,0)
 S X=$P($P(LRI,U,3),"!",3) S:X LOINC=$$GET1^DIQ(95.3,X_",",.01)
"RTN","HMPDLR",66,0)
 I $G(LOINC) S LAB("loinc")=LOINC,LAB("vuid")=$$VUID^HMPD(+LOINC,95.3)
"RTN","HMPDLR",67,0)
 S X=$P(LR0,U,14)
"RTN","HMPDLR",68,0)
 S:X LAB("facility")=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","HMPDLR",69,0)
 I 'X S LAB("facility")=$$FAC^HMPD ;local stn#^name
"RTN","HMPDLR",70,0)
 I $D(^TMP("LRRR",$J,DFN,"CH",HMPIDT,"N")) M CMMT=^("N") S LAB("comment")=$$STRING^HMPD(.CMMT)
"RTN","HMPDLR",71,0)
 Q
"RTN","HMPDLR",72,0)
 ;
"RTN","HMPDLR",73,0)
ORDER(LABORD,TEST) ; -- return #100 order for Lab order# & Test
"RTN","HMPDLR",74,0)
 N Y,D,S,T S Y=""
"RTN","HMPDLR",75,0)
 S D=$O(^LRO(69,"C",LABORD,0)) I D D
"RTN","HMPDLR",76,0)
 . S S=0 F  S S=$O(^LRO(69,"C",LABORD,D,S)) Q:S<1  D
"RTN","HMPDLR",77,0)
 .. S T=0 F  S T=$O(^LRO(69,D,1,S,2,T)) Q:T<1  I +$G(^(T,0))=TEST S Y=+$P(^(0),U,7)
"RTN","HMPDLR",78,0)
 Q Y
"RTN","HMPDLR",79,0)
 ;
"RTN","HMPDLR",80,0)
MI(LAB) ; -- return a Microbiology result in LAB("attribute")=value
"RTN","HMPDLR",81,0)
 ;    Expects ^TMP("LRRR",$J,DFN,"MI",HMPIDT,HMPN),LRDFN
"RTN","HMPDLR",82,0)
 N ID,CDT,X0,X,CMMT,LR0 K LAB
"RTN","HMPDLR",83,0)
 S X0=$G(^TMP("LRRR",$J,DFN,"MI",HMPIDT,HMPN)) Q:$L($P(X0,U))'>1
"RTN","HMPDLR",84,0)
 S LAB("id")="MI;"_HMPIDT_"#"_HMPN,LAB("status")="completed"
"RTN","HMPDLR",85,0)
 S LAB("type")="MI",CDT=9999999-HMPIDT,LAB("collected")=CDT
"RTN","HMPDLR",86,0)
 S LR0=$G(^LR(LRDFN,"MI",HMPIDT,0)),LAB("resulted")=$P(LR0,U,3)
"RTN","HMPDLR",87,0)
 S:$L($P(X0,U,2)) LAB("result")=$P(X0,U,2)
"RTN","HMPDLR",88,0)
 S:$L($P(X0,U,4)) LAB("units")=$P(X0,U,4)
"RTN","HMPDLR",89,0)
 S:$L($P(X0,U,3)) LAB("interpretation")=$P(X0,U,3)
"RTN","HMPDLR",90,0)
 S (LAB("test"),LAB("localName"))=$P(X0,U,15)
"RTN","HMPDLR",91,0)
 S X=+$P(X0,U,19) I X D  ;specimen
"RTN","HMPDLR",92,0)
 . N IENS,HMPY S IENS=X_","
"RTN","HMPDLR",93,0)
 . D GETS^DIQ(61,IENS,".01;2",,"HMPY")
"RTN","HMPDLR",94,0)
 . S LAB("specimen")=$G(HMPY(61,IENS,2))_U_$G(HMPY(61,IENS,.01)) ;SNOMED^name
"RTN","HMPDLR",95,0)
 . S LAB("sample")=$$GET1^DIQ(61,X_",",4.1) ;name
"RTN","HMPDLR",96,0)
 S X=$P(LR0,U,14)
"RTN","HMPDLR",97,0)
 S:X LAB("facility")=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","HMPDLR",98,0)
 I 'X S LAB("facility")=$$FAC^HMPD ;local stn#^name
"RTN","HMPDLR",99,0)
 I $D(^TMP("LRRR",$J,DFN,"MI",HMPIDT,"N")) M CMMT=^("N") S LAB("comment")=$$STRING^HMPD(.CMMT)
"RTN","HMPDLR",100,0)
 Q
"RTN","HMPDLR",101,0)
 ;
"RTN","HMPDLR",102,0)
AP(LAB) ; -- return a Pathology result in LAB("attribute")=value
"RTN","HMPDLR",103,0)
 K LAB  ;implemented in HMPDLRA
"RTN","HMPDLR",104,0)
 Q
"RTN","HMPDLR",105,0)
 ;
"RTN","HMPDLR",106,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDLR",107,0)
 ;
"RTN","HMPDLR",108,0)
XML(LAB) ; -- Return result as XML in @HMP@(#)
"RTN","HMPDLR",109,0)
 N ATT,X,Y,P,NAMES,TAG
"RTN","HMPDLR",110,0)
 D ADD("<lab>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDLR",111,0)
 S ATT="" F  S ATT=$O(LAB(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDLR",112,0)
 . S X=$G(LAB(ATT)),Y="" Q:'$L(X)
"RTN","HMPDLR",113,0)
 . I ATT="comment" S Y="<"_ATT_" xml:space='preserve'>"_$$ESC^HMPD(X)_"</"_ATT_">" Q
"RTN","HMPDLR",114,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDLR",115,0)
 . I $L(X)>1 D  S Y=""
"RTN","HMPDLR",116,0)
 .. S Y="<"_ATT_" ",NAMES="code^name^Z"
"RTN","HMPDLR",117,0)
 .. F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDLR",118,0)
 .. S Y=Y_"/>" D ADD(Y)
"RTN","HMPDLR",119,0)
 D ADD("</lab>")
"RTN","HMPDLR",120,0)
 Q
"RTN","HMPDLR",121,0)
 ;
"RTN","HMPDLR",122,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPDLR",123,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDLR",124,0)
 S @HMP@(HMPI)=X
"RTN","HMPDLR",125,0)
 Q
"RTN","HMPDLRA")
0^53^B75872905
"RTN","HMPDLRA",1,0)
HMPDLRA ;SLC/MKB -- Laboratory extract by accession ;8/2/11  15:29
"RTN","HMPDLRA",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDLRA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDLRA",4,0)
 ;
"RTN","HMPDLRA",5,0)
 ; External References          DBIA#
"RTN","HMPDLRA",6,0)
 ; -------------------          -----
"RTN","HMPDLRA",7,0)
 ; ^DPT                         10035
"RTN","HMPDLRA",8,0)
 ; ^LAB(60                      10054
"RTN","HMPDLRA",9,0)
 ; ^LAB(61                        524
"RTN","HMPDLRA",10,0)
 ; ^LRO(68                       1963
"RTN","HMPDLRA",11,0)
 ; ^LRO(69                       2407
"RTN","HMPDLRA",12,0)
 ; ^LR                            525
"RTN","HMPDLRA",13,0)
 ; ^SC                          10040
"RTN","HMPDLRA",14,0)
 ; ^VA(200                      10060
"RTN","HMPDLRA",15,0)
 ; DIC                           2051
"RTN","HMPDLRA",16,0)
 ; DIQ                           2056
"RTN","HMPDLRA",17,0)
 ; LR7OR1,^TMP("LRRR",$J)        2503
"RTN","HMPDLRA",18,0)
 ; LR7OSUM,^TMP("LRC",$J),       2766
"RTN","HMPDLRA",19,0)
 ;  ^TMP("LRH",$J),^TMP("LRT",$J)
"RTN","HMPDLRA",20,0)
 ; ORX8                          2467
"RTN","HMPDLRA",21,0)
 ; PXAPI                         1894
"RTN","HMPDLRA",22,0)
 ; XUAF4                         2171
"RTN","HMPDLRA",23,0)
 ;
"RTN","HMPDLRA",24,0)
 ; ------------ Get results from VistA ------------
"RTN","HMPDLRA",25,0)
 ;
"RTN","HMPDLRA",26,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's lab results
"RTN","HMPDLRA",27,0)
 N HMPSUB,HMPIDT,HMPN,HMPITM,LRDFN,LR0,ORD,X
"RTN","HMPDLRA",28,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","HMPDLRA",29,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDLRA",30,0)
 S LRDFN=$G(^DPT(DFN,"LR")),HMPSUB=$G(FILTER("type"))
"RTN","HMPDLRA",31,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","HMPDLRA",32,0)
 ;
"RTN","HMPDLRA",33,0)
 ; get result(s)
"RTN","HMPDLRA",34,0)
 I $L($G(ID)) D  ;reset search parameters
"RTN","HMPDLRA",35,0)
 . S HMPSUB=$P(ID,";"),HMPIDT=+$P(ID,";",2)
"RTN","HMPDLRA",36,0)
 . S:HMPIDT (BEG,END)=9999999-HMPIDT
"RTN","HMPDLRA",37,0)
 ;
"RTN","HMPDLRA",38,0)
 D RR^LR7OR1(DFN,,BEG,END,HMPSUB,,,MAX)
"RTN","HMPDLRA",39,0)
 S HMPSUB="" F  S HMPSUB=$O(^TMP("LRRR",$J,DFN,HMPSUB)) Q:HMPSUB=""  D
"RTN","HMPDLRA",40,0)
 . S HMPIDT=0 F  S HMPIDT=$O(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT)) Q:HMPIDT<1  I $O(^(HMPIDT,0)) D
"RTN","HMPDLRA",41,0)
 .. K HMPITM,ORD,CMMT,^TMP("HMPTEXT",$J)
"RTN","HMPDLRA",42,0)
 .. I "CH^MI"'[HMPSUB D AP(.HMPITM),XML(.HMPITM) Q
"RTN","HMPDLRA",43,0)
 .. S HMPITM("type")=HMPSUB,HMPITM("id")=HMPSUB_";"_HMPIDT
"RTN","HMPDLRA",44,0)
 .. S HMPITM("collected")=9999999-HMPIDT,HMPITM("status")="completed"
"RTN","HMPDLRA",45,0)
 .. S LR0=$G(^LR(LRDFN,HMPSUB,HMPIDT,0))
"RTN","HMPDLRA",46,0)
 .. S HMPITM("resulted")=$P(LR0,U,3),X=+$P(LR0,U,5) I X D
"RTN","HMPDLRA",47,0)
 ... N IENS,HMPY S IENS=X_","
"RTN","HMPDLRA",48,0)
 ... D GETS^DIQ(61,IENS,".01;2;4.1",,"HMPY")
"RTN","HMPDLRA",49,0)
 ... S HMPITM("specimen")=$G(HMPY(61,IENS,2))_U_$G(HMPY(61,IENS,.01)) ;SNOMED^name
"RTN","HMPDLRA",50,0)
 ... S HMPITM("sample")=$G(HMPY(61,IENS,4.1)) ;name
"RTN","HMPDLRA",51,0)
 .. S X=$P(LR0,U,6),HMPITM("name")=$$AREA(X),HMPITM("groupName")=X
"RTN","HMPDLRA",52,0)
 .. S X=+$P(LR0,U,14) S:X HMPITM("facility")=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","HMPDLRA",53,0)
 .. I 'X S HMPITM("facility")=$$FAC^HMPD ;local stn#^name
"RTN","HMPDLRA",54,0)
 .. I HMPSUB="MI" D  ;report
"RTN","HMPDLRA",55,0)
 ... S HMPITM("document",1)=HMPSUB_";"_HMPIDT_"^LR MICROBIOLOGY REPORT^LABORATORY NOTE"
"RTN","HMPDLRA",56,0)
 ... S:$G(HMPTEXT) HMPITM("document",1,"content")=$$TEXT(DFN,HMPSUB,HMPIDT)
"RTN","HMPDLRA",57,0)
 .. S HMPN=0 F  S HMPN=$O(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT,HMPN)) Q:HMPN<1  D
"RTN","HMPDLRA",58,0)
 ... S X=$S(HMPSUB="MI":$$MI,1:$$CH)
"RTN","HMPDLRA",59,0)
 ... S:$L(X) HMPITM("value",HMPN)=X
"RTN","HMPDLRA",60,0)
 ... S:$G(ORD) HMPITM("labOrderID")=ORD
"RTN","HMPDLRA",61,0)
 .. I $D(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT,"N")) M CMMT=^("N") S HMPITM("comment")=$$STRING^HMPD(.CMMT)
"RTN","HMPDLRA",62,0)
 .. D XML(.HMPITM)
"RTN","HMPDLRA",63,0)
 K ^TMP("LRRR",$J,DFN),^TMP("HMPTEXT",$J)
"RTN","HMPDLRA",64,0)
 Q
"RTN","HMPDLRA",65,0)
 ;
"RTN","HMPDLRA",66,0)
CH() ; -- return a Chemistry result as:
"RTN","HMPDLRA",67,0)
 ;   id^test^result^interpretation^units^low^high^localName^loinc^vuid^order
"RTN","HMPDLRA",68,0)
 ;   Expects ^TMP("LRRR",$J,DFN,"CH",HMPIDT,HMPN),LRDFN
"RTN","HMPDLRA",69,0)
 N X,Y,X0,NODE,CMMT,LOINC
"RTN","HMPDLRA",70,0)
 S X0=$G(^TMP("LRRR",$J,DFN,"CH",HMPIDT,HMPN)),NODE=$G(^LR(LRDFN,"CH",HMPIDT,HMPN))
"RTN","HMPDLRA",71,0)
 S X=$P($G(^LAB(60,+X0,0)),U)
"RTN","HMPDLRA",72,0)
 S Y="CH;"_HMPIDT_";"_HMPN_U_X_U_$P(X0,U,2,4)
"RTN","HMPDLRA",73,0)
 S X=$P(X0,U,5) I $L(X),X["-" S X=$TR(X,"- ","^"),$P(Y,U,6,7)=X
"RTN","HMPDLRA",74,0)
 S $P(Y,U,8)=$P(X0,U,15) ;test short name
"RTN","HMPDLRA",75,0)
 S X=$P($P(NODE,U,3),"!",3) S:X LOINC=$$GET1^DIQ(95.3,X_",",.01)
"RTN","HMPDLRA",76,0)
 S:$G(LOINC) $P(Y,U,9,10)=LOINC_U_$$VUID^HMPD(+LOINC,95.3)
"RTN","HMPDLRA",77,0)
 S ORD=+$P(X0,U,17),X=$$ORDER(ORD,+X0) S:X $P(Y,U,11)=X
"RTN","HMPDLRA",78,0)
 Q Y
"RTN","HMPDLRA",79,0)
 ;
"RTN","HMPDLRA",80,0)
MI() ; -- return a Microbiology result as:
"RTN","HMPDLRA",81,0)
 ;   id^test^result^interpretation^units
"RTN","HMPDLRA",82,0)
 ;   Expects ^TMP("LRRR",$J,DFN,"MI",HMPIDT,HMPN)
"RTN","HMPDLRA",83,0)
 N Y,X0
"RTN","HMPDLRA",84,0)
 S X0=$G(^TMP("LRRR",$J,DFN,"MI",HMPIDT,HMPN)),Y=""
"RTN","HMPDLRA",85,0)
 S:$L($P(X0,U))>1 Y="MI;"_HMPIDT_";"_HMPN_U_$P(X0,U,1,4)
"RTN","HMPDLRA",86,0)
 S ORD=+$P(X0,U,17)
"RTN","HMPDLRA",87,0)
 Q Y
"RTN","HMPDLRA",88,0)
 ;
"RTN","HMPDLRA",89,0)
AP(LAB) ; -- return a Pathology result in LAB("attribute")=value
"RTN","HMPDLRA",90,0)
 N LR0,X,I,NODE
"RTN","HMPDLRA",91,0)
 S LR0=$G(^LR(LRDFN,HMPSUB,HMPIDT,0))
"RTN","HMPDLRA",92,0)
 S LAB("type")=HMPSUB,LAB("id")=HMPSUB_";"_HMPIDT
"RTN","HMPDLRA",93,0)
 S LAB("collected")=9999999-HMPIDT,LAB("status")="completed"
"RTN","HMPDLRA",94,0)
 S LAB("resulted")=$P(LR0,U,11),LAB("groupName")=$P(LR0,U,6)
"RTN","HMPDLRA",95,0)
 S X="",I=0 F  S I=$O(^LR(LRDFN,HMPSUB,HMPIDT,.1,I)) Q:I<1  S X=X_$S($L(X):", ",1:"")_$P($G(^(I,0)),U)
"RTN","HMPDLRA",96,0)
 S:$L(X) LAB("specimen")=U_X
"RTN","HMPDLRA",97,0)
 S LAB("facility")=$$FAC^HMPD
"RTN","HMPDLRA",98,0)
 S NODE=$S(HMPSUB="AU":$NA(^LR(LRDFN,101)),1:$NA(^LR(LRDFN,HMPSUB,HMPIDT,.05)))
"RTN","HMPDLRA",99,0)
 S I=0 F  S I=$O(@NODE@(I)) Q:I<1  S X=+$P($G(@NODE@(I,0)),U,2) I X D
"RTN","HMPDLRA",100,0)
 . N LT,NT,HMPY
"RTN","HMPDLRA",101,0)
 . S LT=$$GET1^DIQ(8925,+X_",",.01) Q:$P(LT," ")="Addendum"
"RTN","HMPDLRA",102,0)
 . S NT=$$GET1^DIQ(8925,+X_",",".01:1501") S:NT="" NT="LABORATORY NOTE"
"RTN","HMPDLRA",103,0)
 . S LAB("document",I)=+X_U_LT_U_NT
"RTN","HMPDLRA",104,0)
 . S:$G(HMPTEXT) LAB("document",I,"content")=$$TEXT^HMPDTIU(+X)
"RTN","HMPDLRA",105,0)
 I '$O(LAB("document",0)) D  ;non-TIU reports
"RTN","HMPDLRA",106,0)
 . S LAB("document",1)=HMPSUB_";"_HMPIDT_"^LR "_$$NAME(HMPSUB)_" REPORT^LABORATORY NOTE"
"RTN","HMPDLRA",107,0)
 . S:$G(HMPTEXT) LAB("document",1,"content")=$$TEXT(DFN,HMPSUB,HMPIDT)
"RTN","HMPDLRA",108,0)
 Q
"RTN","HMPDLRA",109,0)
 ;
"RTN","HMPDLRA",110,0)
ORDER(LABORD,TEST) ; -- return #100 order^name for Lab order# & Test
"RTN","HMPDLRA",111,0)
 N Y,D,S,T
"RTN","HMPDLRA",112,0)
 S D=$P(9999999-HMPIDT,"."),Y=""
"RTN","HMPDLRA",113,0)
 S S=0 F  S S=$O(^LRO(69,"C",LABORD,D,S)) Q:S<1  D  Q:Y
"RTN","HMPDLRA",114,0)
 . S T=0 F  S T=$O(^LRO(69,D,1,S,2,T)) Q:T<1  I 'TEST!(+$G(^(T,0))=TEST) S Y=+$P(^(0),U,7)
"RTN","HMPDLRA",115,0)
 ;I Y S Y=Y_U_$P($$OI^ORX8(Y),U,2)
"RTN","HMPDLRA",116,0)
 Q Y
"RTN","HMPDLRA",117,0)
 ;
"RTN","HMPDLRA",118,0)
NAME(X) ; -- Return name of subscript X
"RTN","HMPDLRA",119,0)
 I X="AU" Q "AUTOPSY"
"RTN","HMPDLRA",120,0)
 I X="BB" Q "BLOOD BANK"
"RTN","HMPDLRA",121,0)
 I X="CH" Q "CHEM,HEM,TOX,RIA,SER,etc."
"RTN","HMPDLRA",122,0)
 I X="CY" Q "CYTOPATHOLOGY"
"RTN","HMPDLRA",123,0)
 I X="EM" Q "ELECTRON MICROSCOPY"
"RTN","HMPDLRA",124,0)
 I X="MI" Q "MICROBIOLOGY"
"RTN","HMPDLRA",125,0)
 I X="SP" Q "SURGICAL PATHOLOGY"
"RTN","HMPDLRA",126,0)
 Q "ANATOMIC PATHOLOGY"
"RTN","HMPDLRA",127,0)
 ;
"RTN","HMPDLRA",128,0)
AREA(ACCNUM) ; -- Return name of accession area
"RTN","HMPDLRA",129,0)
 N X,Y,HMPA
"RTN","HMPDLRA",130,0)
 S X=$P($G(ACCNUM)," "),Y=""
"RTN","HMPDLRA",131,0)
 I $L(X) D FIND^DIC(68,,.01,"QX",X,,,,,"HMPA")
"RTN","HMPDLRA",132,0)
 S Y=$G(HMPA("DILIST",1,1))
"RTN","HMPDLRA",133,0)
 Q Y
"RTN","HMPDLRA",134,0)
 ;
"RTN","HMPDLRA",135,0)
 ; ------------ Get report(s) [via HMPDTIU] ------------
"RTN","HMPDLRA",136,0)
 ;
"RTN","HMPDLRA",137,0)
RPTS(DFN,BEG,END,MAX) ; -- find patient's lab reports
"RTN","HMPDLRA",138,0)
 N HMPSUB,HMPIDT,HMPITM,HMPTIU,HMPXID,LRDFN,HMPN,DA
"RTN","HMPDLRA",139,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","HMPDLRA",140,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDLRA",141,0)
 S LRDFN=$G(^DPT(DFN,"LR"))
"RTN","HMPDLRA",142,0)
 K ^TMP("LRRR",$J,DFN) D RR^LR7OR1(DFN,,BEG,END,"AP",,,MAX)
"RTN","HMPDLRA",143,0)
 S HMPSUB="" F  S HMPSUB=$O(^TMP("LRRR",$J,DFN,HMPSUB)) Q:HMPSUB=""  D
"RTN","HMPDLRA",144,0)
 . S HMPIDT=0 F  S HMPIDT=$O(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT)) Q:HMPIDT<1  I $O(^(HMPIDT,0)) D
"RTN","HMPDLRA",145,0)
 .. S HMPTIU=$S(HMPSUB="AU":$NA(^LR(LRDFN,101)),1:$NA(^LR(LRDFN,HMPSUB,HMPIDT,.05)))
"RTN","HMPDLRA",146,0)
 .. K HMPITM S HMPXID=HMPSUB_";"_HMPIDT
"RTN","HMPDLRA",147,0)
 .. I '$O(@HMPTIU@(0)) D RPT1(DFN,HMPXID,.HMPITM),XML^HMPDTIU(.HMPITM):$D(HMPITM) Q
"RTN","HMPDLRA",148,0)
 .. S HMPN=0 F  S HMPN=$O(@HMPTIU@(HMPN)) Q:HMPN<1  D
"RTN","HMPDLRA",149,0)
 ... S DA=+$P($G(@HMPTIU@(HMPN,0)),U,2) Q:DA<1  K HMPITM
"RTN","HMPDLRA",150,0)
 ... D EN1^HMPDTIU(DA,.HMPITM),XML^HMPDTIU(.HMPITM):$D(HMPITM)
"RTN","HMPDLRA",151,0)
 K ^TMP("LRRR",$J,DFN),^TMP("HMPTEXT",$J)
"RTN","HMPDLRA",152,0)
 Q
"RTN","HMPDLRA",153,0)
 ;
"RTN","HMPDLRA",154,0)
RPT1(DFN,ID,RPT) ; -- return report as a TIU document
"RTN","HMPDLRA",155,0)
 S DFN=+$G(DFN),ID=$G(ID) Q:DFN<1  Q:'$L(ID)
"RTN","HMPDLRA",156,0)
 N SUB,IDT,LRDFN,LR0,X,LOC
"RTN","HMPDLRA",157,0)
 K RPT,^TMP("HMPTEXT",$J)
"RTN","HMPDLRA",158,0)
 S SUB=$P(ID,";"),IDT=+$P(ID,";",2),LRDFN=$G(^DPT(DFN,"LR"))
"RTN","HMPDLRA",159,0)
 S LR0=$S(SUB="AU":$G(^LR(LRDFN,"AU")),1:$G(^LR(LRDFN,SUB,IDT,0)))
"RTN","HMPDLRA",160,0)
 S RPT("id")=ID,RPT("referenceDateTime")=9999999-IDT
"RTN","HMPDLRA",161,0)
 S RPT("localTitle")="LR "_$$NAME(SUB)_" REPORT"
"RTN","HMPDLRA",162,0)
 S RPT("documentClass")="LR LABORATORY REPORTS"
"RTN","HMPDLRA",163,0)
 S RPT("nationalTitle")="4697105^LABORATORY NOTE"
"RTN","HMPDLRA",164,0)
 S RPT("nationalTitleSubject")="4697104^LABORATORY"
"RTN","HMPDLRA",165,0)
 S RPT("nationalTitleType")="4696120^NOTE"
"RTN","HMPDLRA",166,0)
 S RPT("type")="LR",RPT("status")="COMPLETED"
"RTN","HMPDLRA",167,0)
 S:$G(FILTER("loinc")) RPT("loinc")=$P(FILTER("loinc"),U)
"RTN","HMPDLRA",168,0)
 S X=$P(LR0,U,$S(SUB="AU":5,1:8)),LOC="" S:$L(X) LOC=+$O(^SC("B",X,0))
"RTN","HMPDLRA",169,0)
 S RPT("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDLRA",170,0)
 I LOC D  ;look-up visit
"RTN","HMPDLRA",171,0)
 . N CDT S CDT=9999999-IDT
"RTN","HMPDLRA",172,0)
 . S X=$$GETENC^PXAPI(DFN,CDT,LOC)
"RTN","HMPDLRA",173,0)
 . S:X RPT("encounter")=+X
"RTN","HMPDLRA",174,0)
 S X=+$P(LR0,U,$S(SUB="AU":10,1:2)) ;pathologist
"RTN","HMPDLRA",175,0)
 S:X RPT("clinician",1)=X_U_$P($G(^VA(200,X,0)),U)_"^A"
"RTN","HMPDLRA",176,0)
 S X=$S(SUB="AU":$P(LR0,U,15,16),1:$P(LR0,U,11)_U_$P(LR0,U,13)) I X D
"RTN","HMPDLRA",177,0)
 . N Y S Y=$P(X,U,2)
"RTN","HMPDLRA",178,0)
 . S RPT("clinician",2)=Y_U_$P($G(^VA(200,+Y,0)),U)_"^S^"_+X_U_$P($G(^VA(200,+Y,20)),U,2)
"RTN","HMPDLRA",179,0)
 S:$G(HMPTEXT) RPT("content")=$$TEXT(DFN,SUB,IDT)
"RTN","HMPDLRA",180,0)
 Q
"RTN","HMPDLRA",181,0)
 ;
"RTN","HMPDLRA",182,0)
TEXT(DFN,SUB,IDT) ; -- Get report text, return temp array name
"RTN","HMPDLRA",183,0)
 N LRDFN,DATE,NAME,HMPS,HMPY,I,X,Y
"RTN","HMPDLRA",184,0)
 K ^TMP("LRC",$J),^TMP("LRH",$J),^TMP("LRT",$J)
"RTN","HMPDLRA",185,0)
 S DATE=9999999-+$G(IDT),NAME=$$NAME(SUB),HMPS(NAME)=""
"RTN","HMPDLRA",186,0)
 D EN^LR7OSUM(.HMPY,DFN,DATE,DATE,,,.HMPS)
"RTN","HMPDLRA",187,0)
 S Y=$NA(^TMP("HMPTEXT",$J,SUB_";"_IDT)) K @Y
"RTN","HMPDLRA",188,0)
 S I=+$G(^TMP("LRH",$J,NAME)) ;LRH=header
"RTN","HMPDLRA",189,0)
 F  S I=$O(^TMP("LRC",$J,I)) Q:I<1  S X=$G(^(I,0)) Q:X?1."="  S @Y@(I)=X
"RTN","HMPDLRA",190,0)
 K ^TMP("LRC",$J),^TMP("LRH",$J),^TMP("LRT",$J)
"RTN","HMPDLRA",191,0)
 Q Y
"RTN","HMPDLRA",192,0)
 ;
"RTN","HMPDLRA",193,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDLRA",194,0)
 ;
"RTN","HMPDLRA",195,0)
XML(LAB) ; -- Return result as XML in @HMP@(#)
"RTN","HMPDLRA",196,0)
 N ATT,X,Y,NAMES,I,J
"RTN","HMPDLRA",197,0)
 D ADD("<accession>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDLRA",198,0)
 S ATT="" F  S ATT=$O(LAB(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDLRA",199,0)
 . I $O(LAB(ATT,0)) D  S Y="" Q
"RTN","HMPDLRA",200,0)
 .. D ADD("<"_ATT_"s>")
"RTN","HMPDLRA",201,0)
 .. S NAMES=$S(ATT="document":"id^localTitle^nationalTitle^Z",ATT="value":"id^test^result^interpretation^units^low^high^localName^loinc^vuid^order^Z",1:"code^name^Z")
"RTN","HMPDLRA",202,0)
 .. S I=0 F  S I=$O(LAB(ATT,I)) Q:I<1  D
"RTN","HMPDLRA",203,0)
 ... S X=$G(LAB(ATT,I))
"RTN","HMPDLRA",204,0)
 ... S Y="<"_ATT_" "_$$LOOP ;_"/>" D ADD(Y)
"RTN","HMPDLRA",205,0)
 ... S X=$G(LAB(ATT,I,"content")) I '$L(X) S Y=Y_"/>" D ADD(Y) Q
"RTN","HMPDLRA",206,0)
 ... S Y=Y_">" D ADD(Y)
"RTN","HMPDLRA",207,0)
 ... S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","HMPDLRA",208,0)
 ... S J=0 F  S J=$O(@X@(J)) Q:J<1  S Y=$$ESC^HMPD(@X@(J)) D ADD(Y)
"RTN","HMPDLRA",209,0)
 ... D ADD("</content>"),ADD("</"_ATT_">")
"RTN","HMPDLRA",210,0)
 .. D ADD("</"_ATT_"s>")
"RTN","HMPDLRA",211,0)
 . S X=$G(LAB(ATT)),Y="" Q:'$L(X)
"RTN","HMPDLRA",212,0)
 . I ATT="comment" S Y="<"_ATT_" xml:space='preserve'>"_$$ESC^HMPD(X)_"</"_ATT_">" Q
"RTN","HMPDLRA",213,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDLRA",214,0)
 . I $L(X)>1 D  S Y=""
"RTN","HMPDLRA",215,0)
 .. S NAMES="code^name^Z"
"RTN","HMPDLRA",216,0)
 .. S Y="<"_ATT_" "_$$LOOP_"/>" D ADD(Y)
"RTN","HMPDLRA",217,0)
 D ADD("</accession>")
"RTN","HMPDLRA",218,0)
 Q
"RTN","HMPDLRA",219,0)
 ;
"RTN","HMPDLRA",220,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDLRA",221,0)
 N STR,P,TAG S STR=""
"RTN","HMPDLRA",222,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDLRA",223,0)
 Q STR
"RTN","HMPDLRA",224,0)
 ;
"RTN","HMPDLRA",225,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPDLRA",226,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDLRA",227,0)
 S @HMP@(HMPI)=X
"RTN","HMPDLRA",228,0)
 Q
"RTN","HMPDLRO")
0^54^B27146176
"RTN","HMPDLRO",1,0)
HMPDLRO ;SLC/MKB -- Laboratory extract by order/panel ;8/2/11  15:29
"RTN","HMPDLRO",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDLRO",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDLRO",4,0)
 ;
"RTN","HMPDLRO",5,0)
 ; External References          DBIA#
"RTN","HMPDLRO",6,0)
 ; -------------------          -----
"RTN","HMPDLRO",7,0)
 ; ^DPT                         10035
"RTN","HMPDLRO",8,0)
 ; ^LAB(60                      10054
"RTN","HMPDLRO",9,0)
 ; ^LAB(61                        524
"RTN","HMPDLRO",10,0)
 ; ^LRO(69                       2407
"RTN","HMPDLRO",11,0)
 ; ^LR                            525
"RTN","HMPDLRO",12,0)
 ; DIQ                           2056
"RTN","HMPDLRO",13,0)
 ; LR7OR1,^TMP("LRRR",$J)        2503
"RTN","HMPDLRO",14,0)
 ; LR7OU1                        2955
"RTN","HMPDLRO",15,0)
 ; ORX8                          3071
"RTN","HMPDLRO",16,0)
 ; XUAF4                         2171
"RTN","HMPDLRO",17,0)
 ;
"RTN","HMPDLRO",18,0)
 ; ------------ Get results from VistA ------------
"RTN","HMPDLRO",19,0)
 ;
"RTN","HMPDLRO",20,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's lab results
"RTN","HMPDLRO",21,0)
 N HMPSUB,HMPIDT,HMPN,HMPLRO,HMPT,HMPITM,CMMT,LRDFN,LR0,X
"RTN","HMPDLRO",22,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","HMPDLRO",23,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDLRO",24,0)
 S LRDFN=$G(^DPT(DFN,"LR")),HMPSUB="CH"
"RTN","HMPDLRO",25,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","HMPDLRO",26,0)
 ;
"RTN","HMPDLRO",27,0)
 ; get result(s)
"RTN","HMPDLRO",28,0)
 I $G(ID)  D RR^LR7OR1(DFN,ID)
"RTN","HMPDLRO",29,0)
 I '$G(ID) D  ;no id, or accession format (no lab order)
"RTN","HMPDLRO",30,0)
 . S:$G(ID)'="" HMPSUB=$P(ID,";"),(BEG,END)=9999999-$P(ID,";",2)
"RTN","HMPDLRO",31,0)
 . D RR^LR7OR1(DFN,,BEG,END,HMPSUB,,,MAX)
"RTN","HMPDLRO",32,0)
 ;
"RTN","HMPDLRO",33,0)
 S HMPSUB="" F  S HMPSUB=$O(^TMP("LRRR",$J,DFN,HMPSUB)) Q:HMPSUB=""  D
"RTN","HMPDLRO",34,0)
 . S HMPIDT=0 F  S HMPIDT=$O(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT)) Q:HMPIDT<1  I $O(^(HMPIDT,0)) D
"RTN","HMPDLRO",35,0)
 .. I "CH^MI"'[HMPSUB Q
"RTN","HMPDLRO",36,0)
 .. D SORT ;group accession by lab orders > HMPLRO(panel,HMPN)=data node
"RTN","HMPDLRO",37,0)
 .. S HMPT="" F  S HMPT=$O(HMPLRO(HMPT)) Q:HMPT=""  D
"RTN","HMPDLRO",38,0)
 ... K HMPITM,CMMT S X=$G(HMPLRO(HMPT))
"RTN","HMPDLRO",39,0)
 ... I $G(ID),$P(ID,";",1,3)'=$P($P(X,U,3),";",1,3) Q  ;single order/specimen
"RTN","HMPDLRO",40,0)
 ... S HMPITM("id")=$P(X,U,3),HMPITM("order")=$P(X,U,1,2)
"RTN","HMPDLRO",41,0)
 ... S HMPITM("type")=HMPSUB,HMPITM("status")="completed"
"RTN","HMPDLRO",42,0)
 ... S HMPITM("collected")=9999999-HMPIDT
"RTN","HMPDLRO",43,0)
 ... S LR0=$G(^LR(LRDFN,HMPSUB,HMPIDT,0))
"RTN","HMPDLRO",44,0)
 ... S HMPITM("resulted")=$P(LR0,U,3),X=+$P(LR0,U,5) I X D  ;specimen
"RTN","HMPDLRO",45,0)
 .... N IENS,HMPY S IENS=X_","
"RTN","HMPDLRO",46,0)
 .... D GETS^DIQ(61,IENS,".01:2",,"HMPY")
"RTN","HMPDLRO",47,0)
 .... S HMPITM("specimen")=$G(HMPY(61,IENS,2))_U_$G(HMPY(61,IENS,.01)) ;SNOMED^name
"RTN","HMPDLRO",48,0)
 .... S HMPITM("sample")=$$GET1^DIQ(61,X_",",4.1) ;name
"RTN","HMPDLRO",49,0)
 ... S HMPITM("groupName")=$P(LR0,U,6),X=+$P(LR0,U,14)
"RTN","HMPDLRO",50,0)
 ... S:X HMPITM("facility")=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","HMPDLRO",51,0)
 ... I 'X S HMPITM("facility")=$$FAC^HMPD ;local stn#^name
"RTN","HMPDLRO",52,0)
 ... S HMPN=0 F  S HMPN=$O(HMPLRO(HMPT,HMPN)) Q:HMPN<1  D
"RTN","HMPDLRO",53,0)
 .... S X=$G(HMPLRO(HMPT,HMPN))
"RTN","HMPDLRO",54,0)
 .... S:HMPSUB="CH" HMPITM("value",HMPN)=$$CH(X)
"RTN","HMPDLRO",55,0)
 .... S:HMPSUB="MI" HMPITM("value",HMPN)=$$MI(X)
"RTN","HMPDLRO",56,0)
 ... I $D(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT,"N")) M CMMT=^("N") S HMPITM("comment")=$$STRING^HMPD(.CMMT)
"RTN","HMPDLRO",57,0)
 ... D XML(.HMPITM)
"RTN","HMPDLRO",58,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","HMPDLRO",59,0)
 Q
"RTN","HMPDLRO",60,0)
 ;
"RTN","HMPDLRO",61,0)
SORT ; -- return HMPLRO(PANEL) = CPRS order# ^ panel/test name ^ Lab Order string
"RTN","HMPDLRO",62,0)
 ;               HMPLRO(PANEL,HMPN) = result node
"RTN","HMPDLRO",63,0)
 N X0,NUM,ORD,ODT,SN,T,T0,ORIFN,I,HMPY,HMPLRT K HMPLRO
"RTN","HMPDLRO",64,0)
 S HMPN=$O(^TMP("LRRR",$J,DFN,HMPSUB,HMPIDT,0)),X0=$G(^(HMPN)) ;first
"RTN","HMPDLRO",65,0)
 S NUM=$P(X0,U,16),ORD=$P(X0,U,17),ODT=+$P(9999999-HMPIDT,".")
"RTN","HMPDLRO",66,0)
 ; - build HMPLRT list of result nodes for each test/panel
"RTN","HMPDLRO",67,0)
 I ORD S SN=0 F  S SN=$O(^LRO(69,"C",ORD,ODT,SN)) Q:SN<1  D  Q:$D(HMPLRT)
"RTN","HMPDLRO",68,0)
 . I $G(ID),$P(ID,";",3)'=SN Q
"RTN","HMPDLRO",69,0)
 . S T=0 F  S T=+$O(^LRO(69,ODT,1,SN,2,T)) Q:T<1  D
"RTN","HMPDLRO",70,0)
 .. I $G(ID),$P(ID,";",4),T'=$P(ID,";",4) Q
"RTN","HMPDLRO",71,0)
 .. S T0=$G(^LRO(69,ODT,1,SN,2,T,0))
"RTN","HMPDLRO",72,0)
 .. ; is test/panel part of same accession?
"RTN","HMPDLRO",73,0)
 .. S ORIFN=+$P(T0,U,7)
"RTN","HMPDLRO",74,0)
 .. Q:HMPIDT'=$P($$PKGID^ORX8(ORIFN),";",5)
"RTN","HMPDLRO",75,0)
 .. ; expand panel into unit tests
"RTN","HMPDLRO",76,0)
 .. K HMPY D EXPAND^LR7OU1(+T0,.HMPY)
"RTN","HMPDLRO",77,0)
 .. S I=0 F  S I=$O(HMPY(I)) Q:I<1  S HMPLRT(I,+T0)="" ;HMPLRT(test,panel)=""
"RTN","HMPDLRO",78,0)
 .. S HMPLRO(+T0)=$P(T0,U,7)_U_$P($G(^LAB(60,+T0,0)),U)_U_ORD_";"_ODT_";"_SN_";"_T
"RTN","HMPDLRO",79,0)
 S:'$D(HMPLRO) HMPLRO(0)=$S(HMPSUB="MI":"^MICROBIOLOGY^MI;",1:"^ACCESSION^CH;")_HMPIDT ;no Lab Order
"RTN","HMPDLRO",80,0)
 ; - build HMPLRO(panel#,HMPN) = ^TMP node
"RTN","HMPDLRO",81,0)
 S HMPN=0 F  S HMPN=$O(^TMP("LRRR",$J,DFN,"CH",HMPIDT,HMPN)) Q:HMPN<1  S X0=$G(^(HMPN)) D
"RTN","HMPDLRO",82,0)
 . I '$D(HMPLRT(+X0)) S HMPLRO(0,HMPN)=X0 Q  ;no Lab Order
"RTN","HMPDLRO",83,0)
 . S T=0 F  S T=$O(HMPLRT(+X0,T)) Q:T<1  S HMPLRO(T,HMPN)=X0
"RTN","HMPDLRO",84,0)
 Q
"RTN","HMPDLRO",85,0)
 ;
"RTN","HMPDLRO",86,0)
CH(X0) ; -- return a Chemistry result as:
"RTN","HMPDLRO",87,0)
 ;   id^test^result^interpretation^units^low^high^loinc^vuid
"RTN","HMPDLRO",88,0)
 ;   Expects X0=^TMP("LRRR",$J,DFN,"CH",HMPIDT,HMPN),LRDFN
"RTN","HMPDLRO",89,0)
 N X,Y,NODE,LOINC
"RTN","HMPDLRO",90,0)
 S NODE=$G(^LR(LRDFN,"CH",HMPIDT,HMPN))
"RTN","HMPDLRO",91,0)
 S X=$P($G(^LAB(60,+X0,0)),U)
"RTN","HMPDLRO",92,0)
 S Y="CH;"_HMPIDT_";"_HMPN_U_X_U_$P(X0,U,2,4)
"RTN","HMPDLRO",93,0)
 S X=$P(X0,U,5) I $L(X),X["-" S X=$TR(X,"- ","^"),$P(Y,U,6,7)=X
"RTN","HMPDLRO",94,0)
 S X=$P($P(NODE,U,3),"!",3) S:X LOINC=$$GET1^DIQ(95.3,X_",",.01)
"RTN","HMPDLRO",95,0)
 S:$G(LOINC) $P(Y,U,8,9)=LOINC_U_$$VUID^HMPD(+LOINC,95.3)
"RTN","HMPDLRO",96,0)
 Q Y
"RTN","HMPDLRO",97,0)
 ;
"RTN","HMPDLRO",98,0)
MI(X0) ; -- return a Microbiology result as:
"RTN","HMPDLRO",99,0)
 ;   id^test^result^interpretation^units
"RTN","HMPDLRO",100,0)
 ;   Expects X0=^TMP("LRRR",$J,DFN,"MI",HMPIDT,HMPN)
"RTN","HMPDLRO",101,0)
 N Y S Y=""
"RTN","HMPDLRO",102,0)
 S:$L($P(X0,U))>1 Y="MI;"_HMPIDT_";"_HMPN_U_$P(X0,U,1,4)
"RTN","HMPDLRO",103,0)
 Q Y
"RTN","HMPDLRO",104,0)
 ;
"RTN","HMPDLRO",105,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDLRO",106,0)
 ;
"RTN","HMPDLRO",107,0)
XML(LAB) ; -- Return result as XML in @HMP@(#)
"RTN","HMPDLRO",108,0)
 N ATT,X,Y,I,J,P,NAMES,TAG
"RTN","HMPDLRO",109,0)
 D ADD("<panel>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDLRO",110,0)
 S ATT="" F  S ATT=$O(LAB(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDLRO",111,0)
 . I $O(LAB(ATT,0)) D  S Y="" Q
"RTN","HMPDLRO",112,0)
 .. D ADD("<"_ATT_"s>")
"RTN","HMPDLRO",113,0)
 .. I ATT="value" S NAMES="id^test^result^interpretation^units^low^high^loinc^vuid^Z"
"RTN","HMPDLRO",114,0)
 .. E  S NAMES="code^name^Z"
"RTN","HMPDLRO",115,0)
 .. S I=0 F  S I=$O(LAB(ATT,I)) Q:I<1  D
"RTN","HMPDLRO",116,0)
 ... S X=$G(LAB(ATT,I)),Y="<"_ATT_" "_$$LOOP_"/>" D ADD(Y)
"RTN","HMPDLRO",117,0)
 .. D ADD("</"_ATT_"s>")
"RTN","HMPDLRO",118,0)
 . S X=$G(LAB(ATT)),Y="" Q:'$L(X)
"RTN","HMPDLRO",119,0)
 . I ATT="comment" S Y="<"_ATT_" xml:space='preserve'>"_$$ESC^HMPD(X)_"</"_ATT_">" Q
"RTN","HMPDLRO",120,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDLRO",121,0)
 . I $L(X)>1 S NAMES="code^name^Z",Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","HMPDLRO",122,0)
 D ADD("</panel>")
"RTN","HMPDLRO",123,0)
 Q
"RTN","HMPDLRO",124,0)
 ;
"RTN","HMPDLRO",125,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDLRO",126,0)
 N STR,P,TAG S STR=""
"RTN","HMPDLRO",127,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDLRO",128,0)
 Q STR
"RTN","HMPDLRO",129,0)
 ;
"RTN","HMPDLRO",130,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPDLRO",131,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDLRO",132,0)
 S @HMP@(HMPI)=X
"RTN","HMPDLRO",133,0)
 Q
"RTN","HMPDMC")
0^55^B57964365
"RTN","HMPDMC",1,0)
HMPDMC ;SLC/MKB -- Clinical Procedures (Medicine) ;3/14/12  09:03
"RTN","HMPDMC",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDMC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDMC",4,0)
 ;
"RTN","HMPDMC",5,0)
 ; External References          DBIA#
"RTN","HMPDMC",6,0)
 ; -------------------          -----
"RTN","HMPDMC",7,0)
 ; ^SC                          10040
"RTN","HMPDMC",8,0)
 ; ^TIU(8925.1                   5677
"RTN","HMPDMC",9,0)
 ; ^VA(200                      10060
"RTN","HMPDMC",10,0)
 ; %DT                          10003
"RTN","HMPDMC",11,0)
 ; DILFD                         2055
"RTN","HMPDMC",12,0)
 ; DIQ                           2056
"RTN","HMPDMC",13,0)
 ; GMRCGUIB                      2980
"RTN","HMPDMC",14,0)
 ; ICPTCOD                       1995
"RTN","HMPDMC",15,0)
 ; MCARUTL2                      3279
"RTN","HMPDMC",16,0)
 ; MCARUTL3                      3280
"RTN","HMPDMC",17,0)
 ; MDPS1,^TMP("MDHSP"/"MDPTXT"   4230
"RTN","HMPDMC",18,0)
 ; TIULQ                         2693
"RTN","HMPDMC",19,0)
 ; TIUSRVLO                      2834
"RTN","HMPDMC",20,0)
 ; XUAF4                         2171
"RTN","HMPDMC",21,0)
 ;
"RTN","HMPDMC",22,0)
 ; ------------ Get procedures from VistA ------------
"RTN","HMPDMC",23,0)
 ;
"RTN","HMPDMC",24,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's procedures
"RTN","HMPDMC",25,0)
 N HMPITM,RES,HMPN,HMPX,RTN,DATE,CONS,TIUN,X0,DA,GBL,X,Y,%DT,HMPT,LT,NT,LOC
"RTN","HMPDMC",26,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDMC",27,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDMC",28,0)
 ;
"RTN","HMPDMC",29,0)
 ; get one procedure
"RTN","HMPDMC",30,0)
 I $G(ID) D  ;reset dates for MDPS1
"RTN","HMPDMC",31,0)
 . N HMPMC,IEN,FILE
"RTN","HMPDMC",32,0)
 . S IEN=+ID,FILE=+$P(ID,"(",2) Q:FILE=702
"RTN","HMPDMC",33,0)
 . D MEDLKUP^MCARUTL3(.HMPMC,FILE,IEN)
"RTN","HMPDMC",34,0)
 . S X=$P(HMPMC,U,6) S:X (BEG,END)=X
"RTN","HMPDMC",35,0)
 ;
"RTN","HMPDMC",36,0)
 ; get all procedures
"RTN","HMPDMC",37,0)
 K ^TMP("MDHSP",$J) S RES=""
"RTN","HMPDMC",38,0)
 D EN1^MDPS1(RES,DFN,BEG,END,MAX,"",0)
"RTN","HMPDMC",39,0)
 S HMPN=0 F  S HMPN=$O(^TMP("MDHSP",$J,HMPN)) Q:HMPN<1  S HMPX=$G(^(HMPN)) D
"RTN","HMPDMC",40,0)
 . I $G(ID),ID'=+$P(HMPX,U,2) Q              ;update one procedure
"RTN","HMPDMC",41,0)
 . S RTN=$P(HMPX,U,3,4) Q:RTN="PRPRO^MDPS4"  ;skip non-CP items
"RTN","HMPDMC",42,0)
 . S X=$P(HMPX,U,6),%DT="TX" D ^%DT S:Y>0 DATE=Y
"RTN","HMPDMC",43,0)
 . S GBL=+$P(HMPX,U,2)_";"_$S(RTN="PR702^MDPS1":"MDD(702,",1:$$ROOT(DFN,$P(HMPX,U,11),DATE))
"RTN","HMPDMC",44,0)
 . Q:'GBL  I $G(ID),ID'=GBL Q                ;unknown, or not requested
"RTN","HMPDMC",45,0)
 . ;
"RTN","HMPDMC",46,0)
 . S CONS=+$P(HMPX,U,13) D:CONS DOCLIST^GMRCGUIB(.HMPD,CONS) S X0=$G(HMPD(0)) ;=^GMR(123,ID,0)
"RTN","HMPDMC",47,0)
 . S TIUN=+$P(HMPX,U,14) S:TIUN TIUN=TIUN_U_$$RESOLVE^TIUSRVLO(TIUN)
"RTN","HMPDMC",48,0)
A . ;
"RTN","HMPDMC",49,0)
 . K HMPITM S HMPITM("id")=GBL,HMPITM("name")=$P(HMPX,U)
"RTN","HMPDMC",50,0)
 . S HMPITM("dateTime")=DATE,HMPITM("category")="CP"
"RTN","HMPDMC",51,0)
 . S X=$P(HMPX,U,7) S:$L(X) HMPITM("interpretation")=X
"RTN","HMPDMC",52,0)
 . I CONS,X0 D
"RTN","HMPDMC",53,0)
 .. N HMPJ S HMPITM("consult")=CONS
"RTN","HMPDMC",54,0)
 .. S HMPITM("requested")=+X0,HMPITM("order")=+$P(X0,U,3)
"RTN","HMPDMC",55,0)
 .. S HMPITM("status")=$$EXTERNAL^DILFD(123,8,,$P(X0,U,12))
"RTN","HMPDMC",56,0)
 .. S HMPJ=0 F  S HMPJ=$O(HMPD(50,HMPJ)) Q:HMPJ<1  S X=+$G(HMPD(50,HMPJ)) D
"RTN","HMPDMC",57,0)
 ... K HMPT D EXTRACT^TIULQ(X,"HMPT",,.01) S LT=$G(HMPT(X,.01,"E"))
"RTN","HMPDMC",58,0)
 ... S NT=$$GET1^DIQ(8925.1,+$G(HMPT(X,.01,"I"))_",",1501)
"RTN","HMPDMC",59,0)
 ... S HMPITM("document",X)=X_U_LT_U_NT  ;ien^local^national title
"RTN","HMPDMC",60,0)
 ... S:$G(HMPTEXT) HMPITM("document",X,"content")=$$TEXT^HMPDTIU(X)
"RTN","HMPDMC",61,0)
 ... S:'TIUN TIUN=X ;get supporting fields
"RTN","HMPDMC",62,0)
B . ;
"RTN","HMPDMC",63,0)
 . I TIUN D
"RTN","HMPDMC",64,0)
 .. S X=$P(TIUN,U,5) S:X HMPITM("provider")=+X_U_$P(X,";",3)
"RTN","HMPDMC",65,0)
 .. S:$P(TIUN,U,11) HMPITM("hasImages")=1
"RTN","HMPDMC",66,0)
 .. K HMPT D EXTRACT^TIULQ(+TIUN,"HMPT",,".03;.05;1211",,,"I")
"RTN","HMPDMC",67,0)
 .. S HMPITM("encounter")=+$G(HMPT(+TIUN,.03,"I"))
"RTN","HMPDMC",68,0)
 .. S LOC=+$G(HMPT(+TIUN,1211,"I")) I LOC S LOC=LOC_U_$P($G(^SC(LOC,0)),U)
"RTN","HMPDMC",69,0)
 .. E  S X=$P(TIUN,U,6) S:$L(X) LOC=+$O(^SC("B",X,0))_U_X
"RTN","HMPDMC",70,0)
 .. S:LOC HMPITM("location")=LOC,HMPITM("facility")=$$FAC^HMPD(+LOC)
"RTN","HMPDMC",71,0)
 .. I '$D(HMPITM("status")) S X=+$G(HMPT(+TIUN,.05,"I")),HMPITM("status")=$S(X<6:"PARTIAL RESULTS",1:"COMPLETE")
"RTN","HMPDMC",72,0)
 .. I '$G(HMPITM("document",+TIUN)) D
"RTN","HMPDMC",73,0)
 ... K HMPT D EXTRACT^TIULQ(+TIUN,"HMPT",,.01,,,"I")
"RTN","HMPDMC",74,0)
 ... S NT=$$GET1^DIQ(8925.1,+$G(HMPT(+TIUN,.01,"I"))_",",1501)
"RTN","HMPDMC",75,0)
 ... S HMPITM("document",+TIUN)=$P(TIUN,U,1,2)_U_NT  ;ien^local^national title
"RTN","HMPDMC",76,0)
 ... S:$G(HMPTEXT) HMPITM("document",+TIUN,"content")=$$TEXT^HMPDTIU(+TIUN)
"RTN","HMPDMC",77,0)
C . ;
"RTN","HMPDMC",78,0)
 . ; if no consult or note/visit ...
"RTN","HMPDMC",79,0)
 . I '$D(HMPITM("facility")) S X=$P(X0,U,21),HMPITM("facility")=$S(X:$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U),1:$$FAC^HMPD)
"RTN","HMPDMC",80,0)
 . I '$D(HMPITM("status")) S HMPITM("status")="COMPLETE"
"RTN","HMPDMC",81,0)
 . ;I DA D  ;get CPT code from #697.2
"RTN","HMPDMC",82,0)
 . ;. K HMPT D GETS^DIQ(697.2,DA_",","1000*",,"HMPT")
"RTN","HMPDMC",83,0)
 . ;. N IENS S IENS=$O(HMPT(697.21,"")) Q:IENS=""
"RTN","HMPDMC",84,0)
 . ;. S X=HMPT(697.21,IENS,.01),HMPITM("type")=$$CPT(X)
"RTN","HMPDMC",85,0)
 . ;
"RTN","HMPDMC",86,0)
 . D XML(.HMPITM)
"RTN","HMPDMC",87,0)
ENQ ;
"RTN","HMPDMC",88,0)
 K ^TMP("MDHSP",$J),^TMP("HMPTEXT",$J)
"RTN","HMPDMC",89,0)
 Q
"RTN","HMPDMC",90,0)
 ;
"RTN","HMPDMC",91,0)
ROOT(DFN,NAME,DATE) ; -- return vptr ID for procedure instance
"RTN","HMPDMC",92,0)
 N HMPMC,Y
"RTN","HMPDMC",93,0)
 D SUB^MCARUTL2(.HMPMC,DFN,NAME,DATE,DATE)
"RTN","HMPDMC",94,0)
 S Y=$S(+$G(HMPMC):$P($G(HMPMC(HMPMC)),U,4)_",",1:"")
"RTN","HMPDMC",95,0)
 Q Y
"RTN","HMPDMC",96,0)
 ;
"RTN","HMPDMC",97,0)
CPT(IEN) ; -- return code^description for CPT code, or "^" if error
"RTN","HMPDMC",98,0)
 N X0,HMPX,N,I,X,Y S IEN=+$G(IEN)
"RTN","HMPDMC",99,0)
 S X0=$$CPT^ICPTCOD(IEN) I X0<0 Q "^"
"RTN","HMPDMC",100,0)
 S Y=$P(X0,U,2,3)                   ;CPT Code^Short Name
"RTN","HMPDMC",101,0)
 S N=$$CPTD^ICPTCOD($P(Y,U),"HMPX") ;CPT Description
"RTN","HMPDMC",102,0)
 I N>0,$L($G(HMPX(1))) D
"RTN","HMPDMC",103,0)
 . S X=$G(HMPX(1)),I=1
"RTN","HMPDMC",104,0)
 . F  S I=$O(HMPX(I)) Q:I<1  Q:HMPX(I)=" "  S X=X_" "_HMPX(I)
"RTN","HMPDMC",105,0)
 . S $P(Y,U,2)=X
"RTN","HMPDMC",106,0)
 Q Y
"RTN","HMPDMC",107,0)
 ;
"RTN","HMPDMC",108,0)
 ; ------------ Get report(s) [via HMPDTIU] ------------
"RTN","HMPDMC",109,0)
 ;
"RTN","HMPDMC",110,0)
RPTS(DFN,BEG,END,MAX) ; -- find patient's medicine reports
"RTN","HMPDMC",111,0)
 N HMPITM,HMPN,HMPX,RTN,TIUN,CONS,HMPD,I,DA,X,Y,%DT,DATE,GBL,RES
"RTN","HMPDMC",112,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","HMPDMC",113,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999),RES=""
"RTN","HMPDMC",114,0)
 K ^TMP("MDHSP",$J) D EN1^MDPS1(RES,DFN,BEG,END,MAX,"",0)
"RTN","HMPDMC",115,0)
 S HMPN=0 F  S HMPN=$O(^TMP("MDHSP",$J,HMPN)) Q:HMPN<1  S HMPX=$G(^(HMPN)) D
"RTN","HMPDMC",116,0)
 . S RTN=$P(HMPX,U,3,4) ;Q:RTN="PRPRO^MDPS4"  ;skip non-CP items
"RTN","HMPDMC",117,0)
 . S TIUN=+$P(HMPX,U,14) K HMPITM
"RTN","HMPDMC",118,0)
 . I TIUN D EN1^HMPDTIU(TIUN,.HMPITM),XML^HMPDTIU(.HMPITM):$D(HMPITM)
"RTN","HMPDMC",119,0)
 . S CONS=+$P(HMPX,U,13) D:CONS DOCLIST^GMRCGUIB(.HMPD,CONS)
"RTN","HMPDMC",120,0)
 . S I=0 F  S I=$O(HMPD(50,I)) Q:I<1  D
"RTN","HMPDMC",121,0)
 .. K HMPITM S DA=+HMPD(50,I) Q:DA=TIUN
"RTN","HMPDMC",122,0)
 .. D EN1^HMPDTIU(DA,.HMPITM),XML^HMPDTIU(.HMPITM):$D(HMPITM)
"RTN","HMPDMC",123,0)
 . Q:TIUN!$G(DA)                             ;done [got TIU note(s)]
"RTN","HMPDMC",124,0)
 . Q:RTN="PR702^MDPS1"                       ;CP, but no TIU note yet
"RTN","HMPDMC",125,0)
 . Q:RTN="PRPRO^MDPS4"                       ;non-CP procedure
"RTN","HMPDMC",126,0)
 . ; find ID for pre-TIU report
"RTN","HMPDMC",127,0)
 . S X=$P(HMPX,U,6),%DT="TX" D ^%DT S:Y>0 DATE=Y
"RTN","HMPDMC",128,0)
 . S GBL=+$P(HMPX,U,2)_";"_$$ROOT(DFN,$P(HMPX,U,11),DATE)
"RTN","HMPDMC",129,0)
 . I GBL D RPT1(DFN,GBL,.HMPITM),XML^HMPDTIU(.HMPITM):$D(HMPITM)
"RTN","HMPDMC",130,0)
 K ^TMP("MDHSP",$J),^TMP("HMPTEXT",$J)
"RTN","HMPDMC",131,0)
 Q
"RTN","HMPDMC",132,0)
 ;
"RTN","HMPDMC",133,0)
RPT1(DFN,ID,RPT) ; -- return report as a TIU document
"RTN","HMPDMC",134,0)
 S DFN=+$G(DFN),ID=$G(ID) Q:DFN<1  Q:'$L(ID)
"RTN","HMPDMC",135,0)
 N HMPY,HMPFN,X
"RTN","HMPDMC",136,0)
 S HMPFN=+$P(ID,"(",2)
"RTN","HMPDMC",137,0)
 D MEDLKUP^MCARUTL3(.HMPY,HMPFN,+ID)
"RTN","HMPDMC",138,0)
 S RPT("id")=ID,RPT("referenceDateTime")=$P(HMPY,U,6)
"RTN","HMPDMC",139,0)
 S RPT("localTitle")=$P(HMPY,U,9),RPT("category")="CP"
"RTN","HMPDMC",140,0)
 S RPT("documentClass")="CLINICAL PROCEDURES"
"RTN","HMPDMC",141,0)
 S RPT("nationalTitle")="4696566^PROCEDURE REPORT"
"RTN","HMPDMC",142,0)
 S RPT("nationalTitleService")="4696471^PROCEDURE"
"RTN","HMPDMC",143,0)
 S RPT("nationalTitleType")="4696123^REPORT"
"RTN","HMPDMC",144,0)
 S:$G(FILTER("loinc")) RPT("loinc")=$P(FILTER("loinc"),U)
"RTN","HMPDMC",145,0)
 S X=$$GET1^DIQ(HMPFN,+ID_",",1506)
"RTN","HMPDMC",146,0)
 S RPT("status")=$S($L(X):X,1:"COMPLETED")
"RTN","HMPDMC",147,0)
 S X=+$$GET1^DIQ(HMPFN,+ID_",",701,"I")
"RTN","HMPDMC",148,0)
 S:X RPT("clinician",1)=X_U_$P($G(^VA(200,X,0)),U)_"^A"
"RTN","HMPDMC",149,0)
 S X=+$$GET1^DIQ(HMPFN,+ID_",",1503,"I")
"RTN","HMPDMC",150,0)
 S:X RPT("clinician",2)=X_U_$P($G(^VA(200,X,0)),U)_"^S^"_$$GET1^DIQ(HMPFN,+ID_",",1505,"I")_U_$$SIG^HMPDTIU(X)
"RTN","HMPDMC",151,0)
 ; RPT("encounter")=$$GET1^DIQ(HMPFN,+ID_",",900,"I")
"RTN","HMPDMC",152,0)
 S RPT("facility")=$$FAC^HMPD
"RTN","HMPDMC",153,0)
 S:$G(HMPTEXT) RPT("content")=$$TEXT(DFN,ID,$P(HMPY,U,9))
"RTN","HMPDMC",154,0)
 Q
"RTN","HMPDMC",155,0)
 ;
"RTN","HMPDMC",156,0)
TEXT(DFN,ID,NAME) ; -- Get report text, return temp array name
"RTN","HMPDMC",157,0)
 N MCARGDA,MCPRO,MDALL,I,X
"RTN","HMPDMC",158,0)
 S MCARGDA=+$G(ID),MCPRO=NAME,MDALL=1 D PR690^MDPS1
"RTN","HMPDMC",159,0)
 K ^TMP("HMPTEXT",$J,ID)
"RTN","HMPDMC",160,0)
 S I=0 F  S I=$O(^TMP("MDPTXT",$J,MCARGDA,MCPRO,I)) Q:I<1  S X=$G(^(I,0)),^TMP("HMPTEXT",$J,ID,I)=X
"RTN","HMPDMC",161,0)
 S Y=$NA(^TMP("HMPTEXT",$J,ID))
"RTN","HMPDMC",162,0)
 Q Y
"RTN","HMPDMC",163,0)
 ;
"RTN","HMPDMC",164,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDMC",165,0)
 ;
"RTN","HMPDMC",166,0)
XML(PROC) ; -- Return patient procedure as XML
"RTN","HMPDMC",167,0)
 ;  as <element code='123' displayName='ABC' />
"RTN","HMPDMC",168,0)
 N ATT,X,Y,I,J,NAMES
"RTN","HMPDMC",169,0)
 D ADD("<procedure>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDMC",170,0)
 S ATT="" F  S ATT=$O(PROC(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDMC",171,0)
 . S NAMES=$S(ATT="document":"id^localTitle^nationalTitle^Z",1:"code^name^Z")
"RTN","HMPDMC",172,0)
 . I $O(PROC(ATT,0)) D  S Y="" Q  ;multiples
"RTN","HMPDMC",173,0)
 .. D ADD("<"_ATT_"s>")
"RTN","HMPDMC",174,0)
 .. S I=0 F  S I=$O(PROC(ATT,I)) Q:I<1  D
"RTN","HMPDMC",175,0)
 ... S X=$G(PROC(ATT,I)),Y="<"_ATT_" "_$$LOOP
"RTN","HMPDMC",176,0)
 ... S X=$G(PROC(ATT,I,"content")) I '$L(X) S Y=Y_"/>" D ADD(Y) Q
"RTN","HMPDMC",177,0)
 ... S Y=Y_">" D ADD(Y)
"RTN","HMPDMC",178,0)
 ... S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","HMPDMC",179,0)
 ... S J=0 F  S J=$O(@X@(J)) Q:J<1  S Y=$$ESC^HMPD(@X@(J)) D ADD(Y)
"RTN","HMPDMC",180,0)
 ... D ADD("</content>"),ADD("</"_ATT_">")
"RTN","HMPDMC",181,0)
 .. D ADD("</"_ATT_"s>")
"RTN","HMPDMC",182,0)
 . S X=$G(PROC(ATT)),Y="" Q:'$L(X)
"RTN","HMPDMC",183,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDMC",184,0)
 . I $L(X)>1 S Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","HMPDMC",185,0)
 D ADD("</procedure>")
"RTN","HMPDMC",186,0)
 Q
"RTN","HMPDMC",187,0)
 ;
"RTN","HMPDMC",188,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDMC",189,0)
 N STR,P,TAG S STR=""
"RTN","HMPDMC",190,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDMC",191,0)
 Q STR
"RTN","HMPDMC",192,0)
 ;
"RTN","HMPDMC",193,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDMC",194,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDMC",195,0)
 S @HMP@(HMPI)=X
"RTN","HMPDMC",196,0)
 Q
"RTN","HMPDMDC")
0^56^B44173396
"RTN","HMPDMDC",1,0)
HMPDMDC ;SLC/MKB,DP -- CLiO extract ;8/2/11  15:29
"RTN","HMPDMDC",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDMDC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDMDC",4,0)
 ;
"RTN","HMPDMDC",5,0)
 ; External References          DBIA#
"RTN","HMPDMDC",6,0)
 ; -------------------          -----
"RTN","HMPDMDC",7,0)
 ; ^MDC(704.101                 5748 (Private)
"RTN","HMPDMDC",8,0)
 ; ^MDC(704.102                 5748 (Private)
"RTN","HMPDMDC",9,0)
 ; ^MDC(704.117                 5748 (Private)
"RTN","HMPDMDC",10,0)
 ; ^MDC(704.118                 5748 (Private)
"RTN","HMPDMDC",11,0)
 ; DIC                          2051
"RTN","HMPDMDC",12,0)
 ; DIQ                          2056
"RTN","HMPDMDC",13,0)
 ; XLFDT                       10103
"RTN","HMPDMDC",14,0)
 ; XLFSTR                      10104
"RTN","HMPDMDC",15,0)
 ;
"RTN","HMPDMDC",16,0)
 ; ------------ Get observations from VistA ------------
"RTN","HMPDMDC",17,0)
 ;
"RTN","HMPDMDC",18,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's observations
"RTN","HMPDMDC",19,0)
 N HMPCLIO,HMPN,HMPITM,HMPCNT,X
"RTN","HMPDMDC",20,0)
 ;
"RTN","HMPDMDC",21,0)
 ; get one observation
"RTN","HMPDMDC",22,0)
 I $L($G(ID)) D EN1(ID,.HMPITM),XML(.HMPITM) Q
"RTN","HMPDMDC",23,0)
 ;
"RTN","HMPDMDC",24,0)
 ; get all patient observations
"RTN","HMPDMDC",25,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDMDC",26,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999),HMPCNT=0
"RTN","HMPDMDC",27,0)
 ;D QRYPT^MDCLIO1("HMPCLIO",DFN,BEG,END) ;all [verified] observations
"RTN","HMPDMDC",28,0)
 D QRYPT("HMPCLIO",DFN,BEG,END) ;all [verified] observations
"RTN","HMPDMDC",29,0)
 S HMPN=0 F  S HMPN=$O(HMPCLIO(HMPN)) Q:(HMPN<1)!(HMPCNT'<MAX)  D
"RTN","HMPDMDC",30,0)
 . S ID=$G(HMPCLIO(HMPN)) K HMPITM ;GUID
"RTN","HMPDMDC",31,0)
 . D EN1(ID,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDMDC",32,0)
 . D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDMDC",33,0)
 Q
"RTN","HMPDMDC",34,0)
 ;
"RTN","HMPDMDC",35,0)
EN1(GUID,CLIO) ; -- return an observation in CLIO("attribute")=value
"RTN","HMPDMDC",36,0)
 N HMPT,HMPC,LOC,I,X,Y K CLIO
"RTN","HMPDMDC",37,0)
 S GUID=$G(GUID) Q:GUID=""  ;invalid GUID
"RTN","HMPDMDC",38,0)
 ;D QRYOBS^MDCLIO1("HMPC",GUID) Q:'$D(HMPC)  ;doesn't exist
"RTN","HMPDMDC",39,0)
 D QRYOBS("HMPC",GUID) Q:'$D(HMPC)  ;doesn't exist
"RTN","HMPDMDC",40,0)
 Q:$L($G(HMPC("PARENT_ID","E")))            ;PARENT also in list
"RTN","HMPDMDC",41,0)
 S CLIO("id")=GUID,CLIO("vuid")=$G(HMPC("TERM_ID","I"))
"RTN","HMPDMDC",42,0)
 S CLIO("name")=$G(HMPC("TERM_ID","E"))
"RTN","HMPDMDC",43,0)
 S CLIO("value")=$G(HMPC("SVALUE","E"))
"RTN","HMPDMDC",44,0)
 S CLIO("units")=$G(HMPC("UNIT_ID","ABBV"))
"RTN","HMPDMDC",45,0)
 S CLIO("entered")=$G(HMPC("ENTERED_DATE_TIME","I"))
"RTN","HMPDMDC",46,0)
 S CLIO("observed")=$G(HMPC("OBSERVED_DATE_TIME","I"))
"RTN","HMPDMDC",47,0)
 ;D QRYTYPES^MDCLIO1("HMPT")
"RTN","HMPDMDC",48,0)
 D QRYTYPES("HMPT")
"RTN","HMPDMDC",49,0)
 F I=3:1:7 S X=$G(HMPT(I,"XML")) Q:I<1  I $L($G(HMPC(X,"E"))) D
"RTN","HMPDMDC",50,0)
 . S Y=HMPT(I,"NAME"),Y=$S(Y="LOCATION":"bodySite",1:$$LOW^XLFSTR(Y))
"RTN","HMPDMDC",51,0)
 . S CLIO(Y)=HMPC(X,"I")_U_HMPC(X,"E")
"RTN","HMPDMDC",52,0)
 S CLIO("range")=$G(HMPC("RANGE","E"))
"RTN","HMPDMDC",53,0)
 S CLIO("status")=$G(HMPC("STATUS","E"))
"RTN","HMPDMDC",54,0)
 S LOC=$G(HMPC("HOSPITAL_LOCATION_ID","I")),CLIO("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDMDC",55,0)
 S CLIO("location")=LOC_U_$G(HMPC("HOSPITAL_LOCATION_ID","E"))
"RTN","HMPDMDC",56,0)
 S CLIO("comment")=$G(HMPC("COMMENT","E"))
"RTN","HMPDMDC",57,0)
 Q
"RTN","HMPDMDC",58,0)
 ;
"RTN","HMPDMDC",59,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDMDC",60,0)
 ;
"RTN","HMPDMDC",61,0)
XML(OBS) ; -- Return observation as XML in @HMP@(#)
"RTN","HMPDMDC",62,0)
 N ATT,X,Y,I,J,P,NAMES,TAG
"RTN","HMPDMDC",63,0)
 D ADD("<observation>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDMDC",64,0)
 S ATT="" F  S ATT=$O(OBS(ATT)) Q:ATT=""  D
"RTN","HMPDMDC",65,0)
 . S X=$G(OBS(ATT)),Y="" Q:'$L(X)
"RTN","HMPDMDC",66,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" D ADD(Y) Q
"RTN","HMPDMDC",67,0)
 . I $L(X)>1 D
"RTN","HMPDMDC",68,0)
 .. S Y="<"_ATT_" "
"RTN","HMPDMDC",69,0)
 .. F P=1:1 S TAG=$P("code^name^Z",U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDMDC",70,0)
 .. S Y=Y_"/>" D ADD(Y)
"RTN","HMPDMDC",71,0)
 D ADD("</observation>")
"RTN","HMPDMDC",72,0)
 Q
"RTN","HMPDMDC",73,0)
 ;
"RTN","HMPDMDC",74,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDMDC",75,0)
 N STR,P,TAG S STR=""
"RTN","HMPDMDC",76,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDMDC",77,0)
 Q STR
"RTN","HMPDMDC",78,0)
 ;
"RTN","HMPDMDC",79,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDMDC",80,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDMDC",81,0)
 S @HMP@(HMPI)=X
"RTN","HMPDMDC",82,0)
 Q
"RTN","HMPDMDC",83,0)
 ;
"RTN","HMPDMDC",84,0)
 ; -- CliO specific code accessing the ^MDC( global for data
"RTN","HMPDMDC",85,0)
 ; 
"RTN","HMPDMDC",86,0)
QRYPT(HMPRET,HMPDFN,HMPFR,HMPTO,HMPSTAT) ; List of observations by pt, datetime, status
"RTN","HMPDMDC",87,0)
 K @HMPRET
"RTN","HMPDMDC",88,0)
 N HMPDT,HMPIEN
"RTN","HMPDMDC",89,0)
 S HMPSTAT=$G(HMPSTAT,1) ; Default to Verfied
"RTN","HMPDMDC",90,0)
 F HMPDT=HMPFR-.0000001:0 S HMPDT=$O(^MDC(704.117,"AS",HMPSTAT,HMPDFN,HMPDT)) Q:'HMPDT!(HMPDT>HMPTO)  D
"RTN","HMPDMDC",91,0)
 . F HMPIEN=0:0 S HMPIEN=$O(^MDC(704.117,"AS",HMPSTAT,HMPDFN,HMPDT,HMPIEN)) Q:'HMPIEN  D
"RTN","HMPDMDC",92,0)
 . . S:$P(^MDC(704.117,HMPIEN,0),U,9)=HMPSTAT @HMPRET@(HMPIEN)=$P(^MDC(704.117,HMPIEN,0),U)
"RTN","HMPDMDC",93,0)
 Q
"RTN","HMPDMDC",94,0)
 ;
"RTN","HMPDMDC",95,0)
QRYOBS(HMPRET,HMPID) ; Return a single observation
"RTN","HMPDMDC",96,0)
 K @HMPRET
"RTN","HMPDMDC",97,0)
 N HMPTMP,HMPIEN
"RTN","HMPDMDC",98,0)
 S HMPIEN=$$FIND1^DIC(704.117,"","PKX",HMPID,"PK")
"RTN","HMPDMDC",99,0)
 I HMPIEN<1 S @HMPRET@(0)="-1^No such observation '"_HMPID_"'" Q
"RTN","HMPDMDC",100,0)
 D GETS^DIQ(704.117,HMPIEN_",","*","EIR","HMPTMP")
"RTN","HMPDMDC",101,0)
 M @HMPRET=HMPTMP(704.117,HMPIEN_",") K HMPTMP
"RTN","HMPDMDC",102,0)
 S @HMPRET@("TERM_ID","I")=$$GET1^DIQ(704.117,HMPIEN_",",".07:99.99")
"RTN","HMPDMDC",103,0)
 S @HMPRET@("TERM_ID","E")=$$GET1^DIQ(704.117,HMPIEN_",",".07:.02")
"RTN","HMPDMDC",104,0)
 S @HMPRET@("TERM_ID","GUID")=$$GET1^DIQ(704.117,HMPIEN_",",".07")
"RTN","HMPDMDC",105,0)
 S @HMPRET@("TERM_ID","ABBV")=$$GET1^DIQ(704.117,HMPIEN_",",".07:.03")
"RTN","HMPDMDC",106,0)
 D:$$GET1^DIQ(704.117,HMPIEN_",",".07:.06","I")=3  ; Coded data values
"RTN","HMPDMDC",107,0)
 . S HMPTMP=$$FIND1^DIC(704.101,"","PKX",@HMPRET@("SVALUE","I"),"PK")
"RTN","HMPDMDC",108,0)
 . S @HMPRET@("SVALUE","E")=$$GET1^DIQ(704.101,HMPTMP_",",.02)
"RTN","HMPDMDC",109,0)
 D QRYQUAL(HMPRET,HMPIEN)
"RTN","HMPDMDC",110,0)
 D QRYCTX($NA(@HMPRET@("CONTEXT")),HMPID)
"RTN","HMPDMDC",111,0)
 Q
"RTN","HMPDMDC",112,0)
 ;
"RTN","HMPDMDC",113,0)
QRYQUAL(HMPRET,HMPIEN) ; Returns the qualifiers for obs in HMPIEN
"RTN","HMPDMDC",114,0)
 ; We do NOT want to kill HMPRET here because it points at the parent node of the return
"RTN","HMPDMDC",115,0)
 N HMPQUAL
"RTN","HMPDMDC",116,0)
 F Y=0:0 S Y=$O(^MDC(704.118,"PK",HMPIEN,Y)) Q:'Y  D
"RTN","HMPDMDC",117,0)
 . S HMPQUAL=$$GET1^DIQ(704.101,Y_",",".05:.02")
"RTN","HMPDMDC",118,0)
 . S @HMPRET@(HMPQUAL,"I")=$$GET1^DIQ(704.101,Y_",","99.99")
"RTN","HMPDMDC",119,0)
 . S @HMPRET@(HMPQUAL,"E")=$$GET1^DIQ(704.101,Y_",",".02")
"RTN","HMPDMDC",120,0)
 . S @HMPRET@(HMPQUAL,"GUID")=$$GET1^DIQ(704.101,Y_",",".01")
"RTN","HMPDMDC",121,0)
 . S @HMPRET@(HMPQUAL,"ABBV")=$$GET1^DIQ(704.101,Y_",",".03")
"RTN","HMPDMDC",122,0)
 Q
"RTN","HMPDMDC",123,0)
 ;
"RTN","HMPDMDC",124,0)
QRYCTX(HMPRET,HMPID) ; We need a terminology based context observation relationship here
"RTN","HMPDMDC",125,0)
 N HMPIEN,HMPCTX,HMPDT,HMPFR,HMPTO,HMPDFN,HMPTERM,HMPCNT,HMPXID,HMPOBS
"RTN","HMPDMDC",126,0)
 S HMPIEN=+$$FIND1^DIC(704.117,"","PKX",HMPID,"PK") Q:HMPIEN<1
"RTN","HMPDMDC",127,0)
 S HMPCTX=$$GET1^DIQ(704.117,HMPIEN_",",.07) ; GET THE PRIMARY TERM (GUID)
"RTN","HMPDMDC",128,0)
 ; FILTER OUT EVERYTHING BUT SpO2 for now
"RTN","HMPDMDC",129,0)
 Q:HMPCTX'="{5F84DD55-3CCF-094C-2536-B51EB7FAD999}"
"RTN","HMPDMDC",130,0)
 S HMPDFN=+$$GET1^DIQ(704.117,HMPIEN_",",.08,"I") ; GET THE PATIENT
"RTN","HMPDMDC",131,0)
 S HMPDT=+$$GET1^DIQ(704.117,HMPIEN_",",.05,"I") ; GET THE OBS DATE
"RTN","HMPDMDC",132,0)
 S HMPFR=$$FMADD^XLFDT(HMPDT,0,0,0,-30) ; PREVIOUS 30 SECONDS
"RTN","HMPDMDC",133,0)
 S HMPTO=$$FMADD^XLFDT(HMPDT,0,0,0,30) ; NEXT 30 SECONDS
"RTN","HMPDMDC",134,0)
 ; Now we find the context observations
"RTN","HMPDMDC",135,0)
 F HMPDT=HMPFR:0 S HMPDT=$O(^MDC(704.117,"PT",HMPDFN,HMPDT)) Q:'HMPDT!(HMPDT>HMPTO)  D
"RTN","HMPDMDC",136,0)
 . F HMPOBS=0:0 S HMPOBS=$O(^MDC(704.117,"PT",HMPDFN,HMPDT,HMPOBS)) Q:'HMPOBS  D
"RTN","HMPDMDC",137,0)
 . . Q:$$GET1^DIQ(704.117,HMPOBS_",",.09,"I")'=1  ; Verfied Only
"RTN","HMPDMDC",138,0)
 . . S HMPXID=$$GET1^DIQ(704.117,HMPOBS_",",.01)
"RTN","HMPDMDC",139,0)
 . . Q:HMPXID=HMPID  ; You should ignore yourself in this loop
"RTN","HMPDMDC",140,0)
 . . S HMPTERM=$$GET1^DIQ(704.117,HMPOBS_",",".07")
"RTN","HMPDMDC",141,0)
 . . ; INSERT FILTER CODE FOR O2 Flowrate and Concentration here - In the future we will find all context terms for an observation in terminology
"RTN","HMPDMDC",142,0)
 . . Q:(HMPTERM'="{56F82CAC-3564-46CE-A520-1025020DADE9}")&(HMPTERM'="{3BB314E8-9BBB-480E-B34E-B56EDE43BAC4}")
"RTN","HMPDMDC",143,0)
 . . S HMPCNT=$O(@HMPRET@(""),-1)+1,@HMPRET@(0)=HMPCNT
"RTN","HMPDMDC",144,0)
 . . S @HMPRET@(HMPCNT,"OBS_ID","I")=HMPXID
"RTN","HMPDMDC",145,0)
 . . S @HMPRET@(HMPCNT,"OBS_ID","E")=HMPXID
"RTN","HMPDMDC",146,0)
 . . S @HMPRET@(HMPCNT,"TERM_ID","I")=$$GET1^DIQ(704.117,HMPOBS_",",".07:99.99")
"RTN","HMPDMDC",147,0)
 . . S @HMPRET@(HMPCNT,"TERM_ID","E")=$$GET1^DIQ(704.117,HMPOBS_",",".07:.02")
"RTN","HMPDMDC",148,0)
 . . S @HMPRET@(HMPCNT,"SVALUE","I")=$$GET1^DIQ(704.117,HMPOBS_",",".1","I")
"RTN","HMPDMDC",149,0)
 . . S @HMPRET@(HMPCNT,"SVALUE","E")=$$GET1^DIQ(704.117,HMPOBS_",",".1","E")
"RTN","HMPDMDC",150,0)
 . . D QRYQUAL($NA(@HMPRET@(HMPCNT)),HMPOBS)
"RTN","HMPDMDC",151,0)
 Q
"RTN","HMPDMDC",152,0)
 ;
"RTN","HMPDMDC",153,0)
QRYTYPES(HMPRET) ; Return the terminology Term Types
"RTN","HMPDMDC",154,0)
 K @HMPRET
"RTN","HMPDMDC",155,0)
 N X
"RTN","HMPDMDC",156,0)
 F X=0:0 S X=$O(^MDC(704.102,X)) Q:'X  D
"RTN","HMPDMDC",157,0)
 . S @HMPRET@(X,"NAME")=$P(^MDC(704.102,X,0),U,1)
"RTN","HMPDMDC",158,0)
 . S @HMPRET@(X,"XML")=$P(^MDC(704.102,X,0),U,2)
"RTN","HMPDMDC",159,0)
 . S @HMPRET@("B",$P(^MDC(704.102,X,0),U,1),X)=""
"RTN","HMPDMDC",160,0)
 Q
"RTN","HMPDMDC",161,0)
 ;
"RTN","HMPDOR")
0^57^B13171182
"RTN","HMPDOR",1,0)
HMPDOR ;SLC/MKB -- Orders extract ;8/2/11  15:29
"RTN","HMPDOR",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDOR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDOR",4,0)
 ;
"RTN","HMPDOR",5,0)
 ; External References          DBIA#
"RTN","HMPDOR",6,0)
 ; -------------------          -----
"RTN","HMPDOR",7,0)
 ; ^ORA(102.4)                   5769
"RTN","HMPDOR",8,0)
 ; ^SC                          10040
"RTN","HMPDOR",9,0)
 ; ^VA(200)                     10060
"RTN","HMPDOR",10,0)
 ; DIQ                           2056
"RTN","HMPDOR",11,0)
 ; ORQ1,^TMP("ORR",$J)           3154
"RTN","HMPDOR",12,0)
 ; ORQ12,^TMP("ORGOTIT",$J)      5704
"RTN","HMPDOR",13,0)
 ; ORX8                          2467
"RTN","HMPDOR",14,0)
 ;
"RTN","HMPDOR",15,0)
 ; ------------ Get data from VistA ------------
"RTN","HMPDOR",16,0)
 ;
"RTN","HMPDOR",17,0)
EN(DFN,BEG,END,MAX,IFN) ; -- find a patient's orders
"RTN","HMPDOR",18,0)
 S DFN=+$G(DFN) Q:DFN<1  ;invalid patient
"RTN","HMPDOR",19,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDOR",20,0)
 N ORLIST,HMPN,HMPITM,HMPCNT
"RTN","HMPDOR",21,0)
 ;
"RTN","HMPDOR",22,0)
 ; get one order
"RTN","HMPDOR",23,0)
 I $G(IFN) D  G ENQ
"RTN","HMPDOR",24,0)
 . N ORLST S ORLST=0,ORLIST=$H
"RTN","HMPDOR",25,0)
 . D GET^ORQ12(IFN,ORLIST,1) S HMPN=1
"RTN","HMPDOR",26,0)
 . D EN1(HMPN,.HMPITM),XML(.HMPITM)
"RTN","HMPDOR",27,0)
 . K ^TMP("ORGOTIT",$J)
"RTN","HMPDOR",28,0)
 ;
"RTN","HMPDOR",29,0)
 ; get all orders
"RTN","HMPDOR",30,0)
 D EN^ORQ1(DFN_";DPT(",,6,,BEG,END,1) S HMPCNT=0
"RTN","HMPDOR",31,0)
 S HMPN=0 F  S HMPN=$O(^TMP("ORR",$J,ORLIST,HMPN)) Q:HMPN<1  D  Q:HMPCNT'<MAX
"RTN","HMPDOR",32,0)
 . K HMPITM D EN1(HMPN,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDOR",33,0)
 . D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDOR",34,0)
ENQ ; end
"RTN","HMPDOR",35,0)
 K ^TMP("ORR",$J),^TMP("HMPTEXT",$J)
"RTN","HMPDOR",36,0)
 Q
"RTN","HMPDOR",37,0)
 ;
"RTN","HMPDOR",38,0)
EN1(NUM,ORD) ; -- return an order in ORD("attribute")=value
"RTN","HMPDOR",39,0)
 ;  from EN: expects ^TMP("ORR",$J,ORLIST,HMPN)
"RTN","HMPDOR",40,0)
 N X0,IFN,LOC,X,DA
"RTN","HMPDOR",41,0)
 K ORD,^TMP("HMPTEXT",$J)
"RTN","HMPDOR",42,0)
 S X0=$G(^TMP("ORR",$J,ORLIST,NUM)),IFN=+X0
"RTN","HMPDOR",43,0)
 S ORD("id")=IFN,ORD("name")=$$OI^ORX8(+X0)
"RTN","HMPDOR",44,0)
 S ORD("group")=$P(X0,U,2),ORD("entered")=$P(X0,U,3)
"RTN","HMPDOR",45,0)
 S ORD("start")=$P(X0,U,4),ORD("stop")=$P(X0,U,5)
"RTN","HMPDOR",46,0)
 S ORD("status")=$P(X0,U,7)_U_$P(X0,U,6)_U_$$STS($P(X0,U,7))
"RTN","HMPDOR",47,0)
 M ^TMP("HMPTEXT",$J,IFN)=^TMP("ORR",$J,ORLIST,HMPN,"TX")
"RTN","HMPDOR",48,0)
 S ORD("content")=$NA(^TMP("HMPTEXT",$J,IFN))
"RTN","HMPDOR",49,0)
 S X=$$GET1^DIQ(100,IFN_",",1,"I"),ORD("provider")=X_U_$P($G(^VA(200,+X,0)),U)
"RTN","HMPDOR",50,0)
 S X=$$GET1^DIQ(100,IFN_",",6),LOC="" I $L(X) D
"RTN","HMPDOR",51,0)
 . S LOC=+$O(^SC("B",X,0)),ORD("location")=LOC_U_X
"RTN","HMPDOR",52,0)
 S ORD("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDOR",53,0)
 S ORD("service")=$$GET1^DIQ(100,IFN_",","12:1")
"RTN","HMPDOR",54,0)
 ; acknowledgements
"RTN","HMPDOR",55,0)
 S DA=0 F  S DA=$O(^ORA(102.4,"B",+IFN,DA)) Q:DA<1  D
"RTN","HMPDOR",56,0)
 . S X0=$G(^ORA(102.4,DA,0)) Q:'$P(X0,U,3)  ;stub - not ack'd
"RTN","HMPDOR",57,0)
 . S X=+$P(X0,U,2),X=$S(X:X_U_$P($G(^VA(200,X,0)),U),1:U)
"RTN","HMPDOR",58,0)
 . S ORD("acknowledgement",DA)=X_U_$P(X0,U,3)
"RTN","HMPDOR",59,0)
 Q
"RTN","HMPDOR",60,0)
 ;
"RTN","HMPDOR",61,0)
STS(X) ; -- return VUID for status abbreviation X
"RTN","HMPDOR",62,0)
 N Y,I,STS
"RTN","HMPDOR",63,0)
 S STS="dc^comp^hold^flag^pend^actv^exp^schd^part^dlay^unr^dc/e^canc^laps^rnew^none"
"RTN","HMPDOR",64,0)
 F I=1:1:16 Q:$P(STS,U,I)=X
"RTN","HMPDOR",65,0)
 S Y=$$VUID^HMPD(I,100.01)
"RTN","HMPDOR",66,0)
 Q Y
"RTN","HMPDOR",67,0)
 ;
"RTN","HMPDOR",68,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDOR",69,0)
 ;
"RTN","HMPDOR",70,0)
XML(ORD) ; -- Return patient data as XML in @HMP@(n)
"RTN","HMPDOR",71,0)
 ; as <element code='123' displayName='ABC' />
"RTN","HMPDOR",72,0)
 N ATT,X,Y,I,NAMES
"RTN","HMPDOR",73,0)
 D ADD("<order>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDOR",74,0)
 S ATT="" F  S ATT=$O(ORD(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDOR",75,0)
 . S NAMES="code^name^"_$S(ATT?1"ack".E:"date",1:"vuid")_"^Z"
"RTN","HMPDOR",76,0)
 . I ATT?1"ack".E D  S Y="" Q
"RTN","HMPDOR",77,0)
 .. D ADD("<"_ATT_"s>")
"RTN","HMPDOR",78,0)
 .. S I=0 F  S I=$O(ORD(ATT,I)) Q:I<1  D
"RTN","HMPDOR",79,0)
 ... S X=$G(ORD(ATT,I))
"RTN","HMPDOR",80,0)
 ... S Y="<"_ATT_" "_$$LOOP_"/>" D ADD(Y)
"RTN","HMPDOR",81,0)
 .. D ADD("</"_ATT_"s>")
"RTN","HMPDOR",82,0)
 . S X=$G(ORD(ATT)),Y="" Q:'$L(X)
"RTN","HMPDOR",83,0)
 . I ATT="content" D  S Y="" Q  ;text
"RTN","HMPDOR",84,0)
 .. S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","HMPDOR",85,0)
 .. S I=0 F  S I=$O(@X@(I)) Q:I<1  S Y=$$ESC^HMPD(@X@(I)) D ADD(Y)
"RTN","HMPDOR",86,0)
 .. D ADD("</content>")
"RTN","HMPDOR",87,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDOR",88,0)
 . I $L(X)>1 S Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","HMPDOR",89,0)
 D ADD("</order>")
"RTN","HMPDOR",90,0)
 Q
"RTN","HMPDOR",91,0)
 ;
"RTN","HMPDOR",92,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDOR",93,0)
 N STR,P,TAG S STR=""
"RTN","HMPDOR",94,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDOR",95,0)
 Q STR
"RTN","HMPDOR",96,0)
 ;
"RTN","HMPDOR",97,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDOR",98,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDOR",99,0)
 S @HMP@(HMPI)=X
"RTN","HMPDOR",100,0)
 Q
"RTN","HMPDPROC")
0^58^B10503927
"RTN","HMPDPROC",1,0)
HMPDPROC ;SLC/MKB -- Procedure extract ;8/2/11  15:29
"RTN","HMPDPROC",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDPROC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDPROC",4,0)
 ;
"RTN","HMPDPROC",5,0)
 ; External References          DBIA#
"RTN","HMPDPROC",6,0)
 ; -------------------          -----
"RTN","HMPDPROC",7,0)
 ; RAO7PC1                       2043
"RTN","HMPDPROC",8,0)
 ; SROESTV                       3533
"RTN","HMPDPROC",9,0)
 ;
"RTN","HMPDPROC",10,0)
 ; ------------ Get procedure(s) from VistA ------------
"RTN","HMPDPROC",11,0)
 ;
"RTN","HMPDPROC",12,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's procedures
"RTN","HMPDPROC",13,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDPROC",14,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDPROC",15,0)
 ;
"RTN","HMPDPROC",16,0)
 N HMPN,HMPCNT,HMPITM,HMPY,HMPCATG
"RTN","HMPDPROC",17,0)
 S HMPCATG=$G(FILTER("category"),"SR;RA") ;NwHIN default
"RTN","HMPDPROC",18,0)
 ;
"RTN","HMPDPROC",19,0)
 ; get one procedure
"RTN","HMPDPROC",20,0)
 I $G(ID),ID'[";" D  D:$D(HMPITM) XML(.HMPITM) Q
"RTN","HMPDPROC",21,0)
 . I ID'["-" D EN1^HMPDSR(ID,.HMPITM) Q    ;Surgery
"RTN","HMPDPROC",22,0)
 . S (BEG,END)=9999999.9999=+ID D EN1^RAO7PC1(DFN,BEG,END,"1P")
"RTN","HMPDPROC",23,0)
 . D EN1^HMPDRA(ID,.HMPITM)                ;Radiology
"RTN","HMPDPROC",24,0)
 . K ^TMP($J,"RAE1")
"RTN","HMPDPROC",25,0)
 I $G(ID),ID[";" D EN^HMPDMC(DFN,,,,ID) Q  ;CP/Medicine
"RTN","HMPDPROC",26,0)
 ;
"RTN","HMPDPROC",27,0)
SR ; get all surgeries
"RTN","HMPDPROC",28,0)
 I HMPCATG'["SR" G RA
"RTN","HMPDPROC",29,0)
 N SHOWADD S SHOWADD=1 ;to omit leading '+' with note titles
"RTN","HMPDPROC",30,0)
 D LIST^SROESTV(.HMPY,DFN,BEG,END,MAX,1)
"RTN","HMPDPROC",31,0)
 S HMPN=0 F  S HMPN=$O(@HMPY@(HMPN)) Q:HMPN<1  D
"RTN","HMPDPROC",32,0)
 . K HMPITM D ONE^HMPDSR(HMPN,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDPROC",33,0)
 . ;Q:$G(HMPITM("status"))'?1"COMP".E
"RTN","HMPDPROC",34,0)
 . D XML(.HMPITM)
"RTN","HMPDPROC",35,0)
 K @HMPY
"RTN","HMPDPROC",36,0)
 ;
"RTN","HMPDPROC",37,0)
RA ; get all radiology exams
"RTN","HMPDPROC",38,0)
 I HMPCATG'["RA" G CP
"RTN","HMPDPROC",39,0)
 K ^TMP($J,"RAE1") D EN1^RAO7PC1(DFN,BEG,END,MAX)
"RTN","HMPDPROC",40,0)
 S HMPCNT=+$G(HMPTOTL),HMPN=""
"RTN","HMPDPROC",41,0)
 F  S HMPN=$O(^TMP($J,"RAE1",DFN,HMPN)) Q:HMPN=""   D  Q:HMPCNT'<MAX  ;I $P($P($G(^(HMPN)),U,6),"~",2)?1"COMP".E
"RTN","HMPDPROC",42,0)
 . K HMPITM D EN1^HMPDRA(HMPN,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDPROC",43,0)
 . D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDPROC",44,0)
 K ^TMP($J,"RAE1")
"RTN","HMPDPROC",45,0)
 ;
"RTN","HMPDPROC",46,0)
CP ; get CP procedures
"RTN","HMPDPROC",47,0)
 D:HMPCATG["CP" EN^HMPDMC(DFN,BEG,END,MAX)
"RTN","HMPDPROC",48,0)
 ;
"RTN","HMPDPROC",49,0)
 ; V-CPT
"RTN","HMPDPROC",50,0)
 ;
"RTN","HMPDPROC",51,0)
 Q
"RTN","HMPDPROC",52,0)
 ;
"RTN","HMPDPROC",53,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDPROC",54,0)
 ;
"RTN","HMPDPROC",55,0)
XML(PROC) ; -- Return procedures as XML
"RTN","HMPDPROC",56,0)
 N ATT,X,Y,I,J,NAMES
"RTN","HMPDPROC",57,0)
 D ADD("<procedure>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDPROC",58,0)
 S ATT="" F  S ATT=$O(PROC(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDPROC",59,0)
 . S NAMES=$S(ATT="document"!(ATT="opReport"):"id^localTitle^nationalTitle^status^Z",1:"code^name^Z")
"RTN","HMPDPROC",60,0)
 . I $O(PROC(ATT,0)) D  S Y="" Q  ;multiples
"RTN","HMPDPROC",61,0)
 .. D ADD("<"_ATT_"s>")
"RTN","HMPDPROC",62,0)
 .. S I=0 F  S I=$O(PROC(ATT,I)) Q:I<1  D
"RTN","HMPDPROC",63,0)
 ... S X=$G(PROC(ATT,I))
"RTN","HMPDPROC",64,0)
 ... S Y="<"_ATT_" "_$$LOOP ;_"/>" D ADD(Y)
"RTN","HMPDPROC",65,0)
 ... S X=$G(PROC(ATT,I,"content")) I '$L(X) S Y=Y_"/>" D ADD(Y) Q
"RTN","HMPDPROC",66,0)
 ... S Y=Y_">" D ADD(Y)
"RTN","HMPDPROC",67,0)
 ... S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","HMPDPROC",68,0)
 ... S J=0 F  S J=$O(@X@(J)) Q:J<1  S Y=$$ESC^HMPD(@X@(J)) D ADD(Y)
"RTN","HMPDPROC",69,0)
 ... D ADD("</content>"),ADD("</"_ATT_">")
"RTN","HMPDPROC",70,0)
 .. D ADD("</"_ATT_"s>")
"RTN","HMPDPROC",71,0)
 . S X=$G(PROC(ATT)),Y="" Q:'$L(X)
"RTN","HMPDPROC",72,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDPROC",73,0)
 . I $L(X)>1 S Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","HMPDPROC",74,0)
 D ADD("</procedure>")
"RTN","HMPDPROC",75,0)
 Q
"RTN","HMPDPROC",76,0)
 ;
"RTN","HMPDPROC",77,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDPROC",78,0)
 N STR,P,TAG S STR=""
"RTN","HMPDPROC",79,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDPROC",80,0)
 Q STR
"RTN","HMPDPROC",81,0)
 ;
"RTN","HMPDPROC",82,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPDPROC",83,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDPROC",84,0)
 S @HMP@(HMPI)=X
"RTN","HMPDPROC",85,0)
 Q
"RTN","HMPDPS")
0^134^B18754698
"RTN","HMPDPS",1,0)
HMPDPS ;SLC/MKB -- Pharmacy extract ;8/2/11  15:29
"RTN","HMPDPS",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDPS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDPS",4,0)
 ;
"RTN","HMPDPS",5,0)
 ; External References          DBIA#
"RTN","HMPDPS",6,0)
 ; -------------------          -----
"RTN","HMPDPS",7,0)
 ; PSOORRL,^TMP("PS",$J)         2400
"RTN","HMPDPS",8,0)
 ; PSS50,^TMP($J                 4533
"RTN","HMPDPS",9,0)
 ; PSS50P7,^TMP($J               4662
"RTN","HMPDPS",10,0)
 ; PSSDI                         4551
"RTN","HMPDPS",11,0)
 ;
"RTN","HMPDPS",12,0)
 ; ------------ Get medications from VistA ------------
"RTN","HMPDPS",13,0)
 ;
"RTN","HMPDPS",14,0)
EN(DFN,BEG,END,MAX,ORIFN) ; -- find patient's meds
"RTN","HMPDPS",15,0)
 N PS0,HMPN,HMPITM,TYPE,ID K ^TMP("PS",$J)
"RTN","HMPDPS",16,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDPS",17,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDPS",18,0)
 ;
"RTN","HMPDPS",19,0)
 ; get one med
"RTN","HMPDPS",20,0)
 I $G(ORIFN) D EN1^HMPDPSOR(ORIFN,.HMPITM),XML(.HMPITM):$D(HMPITM) Q
"RTN","HMPDPS",21,0)
 ;
"RTN","HMPDPS",22,0)
 ; get all meds
"RTN","HMPDPS",23,0)
 D OCL^PSOORRL(DFN,BEG,END) M ^TMP("HMPPS",$J)=^TMP("PS",$J)
"RTN","HMPDPS",24,0)
 S TYPE=$G(FILTER("vaType"))
"RTN","HMPDPS",25,0)
 S HMPN=0 F  S HMPN=$O(^TMP("HMPPS",$J,HMPN)) Q:HMPN<1!(HMPN>MAX)  S PS0=$G(^(HMPN,0)) D  I $D(HMPITM)>9 D XML(.HMPITM)
"RTN","HMPDPS",26,0)
 . S ID=$P(PS0,U),ORIFN=+$P(PS0,U,8) K HMPITM
"RTN","HMPDPS",27,0)
 . Q:'ORIFN!'$D(^OR(100,ORIFN,0))
"RTN","HMPDPS",28,0)
 . I $L(TYPE) Q:'$$MATCH
"RTN","HMPDPS",29,0)
 . D:ORIFN EN1^HMPDPSOR(ORIFN,.HMPITM)
"RTN","HMPDPS",30,0)
 K ^TMP("HMPPS",$J),^TMP("PS",$J),^TMP($J,"PSOI")
"RTN","HMPDPS",31,0)
 Q
"RTN","HMPDPS",32,0)
 ;
"RTN","HMPDPS",33,0)
MATCH() ; -- Return 1 or 0, if order matches FILTER criteria
"RTN","HMPDPS",34,0)
 N Y S Y=0
"RTN","HMPDPS",35,0)
 I ID["O" D
"RTN","HMPDPS",36,0)
 . I TYPE="N",ID["N" S Y=1 Q
"RTN","HMPDPS",37,0)
 . I TYPE="O",ID'["N" S Y=1 Q
"RTN","HMPDPS",38,0)
 . ; TYPE="S",ID'["N",$$SUPPLY(ORIFN) S Y=1 Q
"RTN","HMPDPS",39,0)
 I ID["I" D
"RTN","HMPDPS",40,0)
 . N IV S IV=$S(ID["V":1,$G(^TMP("HMPPS",$J,HMPN,"B",0)):1,1:0)
"RTN","HMPDPS",41,0)
 . I TYPE="V",IV S Y=1
"RTN","HMPDPS",42,0)
 . I TYPE="I",'IV S Y=1
"RTN","HMPDPS",43,0)
 Q Y
"RTN","HMPDPS",44,0)
 ;
"RTN","HMPDPS",45,0)
SUPPLY(ORDER) ; -- Return 1 or 0, if ORDER is for a supply item
"RTN","HMPDPS",46,0)
 N OI,Y S OI=$$OI^ORX8(ORDER),Y=0
"RTN","HMPDPS",47,0)
 D ZERO^PSS50P7(+$P(OI,U,3),,,"PSOI")
"RTN","HMPDPS",48,0)
 S Y=+$G(^TMP($J,"PSOI",+$P(OI,U,3),.09))
"RTN","HMPDPS",49,0)
 Q Y
"RTN","HMPDPS",50,0)
 ;
"RTN","HMPDPS",51,0)
NDF(DRUG,VPI,ORD) ; -- Set NDF data for dispense DRUG ien
"RTN","HMPDPS",52,0)
 N HMPX,STR,VUID,X,I
"RTN","HMPDPS",53,0)
 S DRUG=+$G(DRUG) Q:'DRUG
"RTN","HMPDPS",54,0)
 D EN^PSSDI(50,,50,"901;902",DRUG,"HMPX")
"RTN","HMPDPS",55,0)
 S STR=$S($G(HMPX(50,DRUG,901)):$G(HMPX(50,DRUG,901))_" "_$G(HMPX(50,DRUG,902)),1:"")
"RTN","HMPDPS",56,0)
 D NDF^PSS50(DRUG,,,,,"NDF") S VPI=+$G(VPI,1)
"RTN","HMPDPS",57,0)
 S MED("product",VPI)=DRUG_U_$G(^TMP($J,"NDF",DRUG,.01))_"^^D^"_STR_U_$G(ORD) ;Drug
"RTN","HMPDPS",58,0)
 S X=$G(^TMP($J,"NDF",DRUG,20)) ;VA Generic
"RTN","HMPDPS",59,0)
 S MED("product",VPI,"G")=X_U_$$VUID^HMPD(+X,50.6)
"RTN","HMPDPS",60,0)
 S X=$G(^TMP($J,"NDF",DRUG,22)) ;VA Product
"RTN","HMPDPS",61,0)
 S MED("product",VPI,"P")=X_U_$$VUID^HMPD(+X,50.68)
"RTN","HMPDPS",62,0)
 S X=$G(^TMP($J,"NDF",DRUG,25)) ;VA Drug Class
"RTN","HMPDPS",63,0)
 S MED("product",VPI,"C")=$P(X,U,2,3)_U_$$VUID^HMPD(+X,50.605)
"RTN","HMPDPS",64,0)
 K ^TMP($J,"NDF",DRUG)
"RTN","HMPDPS",65,0)
 Q
"RTN","HMPDPS",66,0)
 ;
"RTN","HMPDPS",67,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDPS",68,0)
 ;
"RTN","HMPDPS",69,0)
XML(MED) ; -- Return patient meds as XML
"RTN","HMPDPS",70,0)
 N ATT,X,Y,I,NAMES
"RTN","HMPDPS",71,0)
 D ADD("<med>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDPS",72,0)
 S ATT="" F  S ATT=$O(MED(ATT)) Q:ATT=""  D  I $L(Y) D ADD(Y)
"RTN","HMPDPS",73,0)
 . I $O(MED(ATT,0)) D  S Y="" Q  ;multiples
"RTN","HMPDPS",74,0)
 .. D ADD("<"_ATT_"s>")
"RTN","HMPDPS",75,0)
 .. S I=0 F  S I=$O(MED(ATT,I)) Q:I<1  D
"RTN","HMPDPS",76,0)
 ... S X=$G(MED(ATT,I)),NAMES=""
"RTN","HMPDPS",77,0)
 ... I ATT="dose" S NAMES="dose^units^unitsPerDose^noun^route^schedule^duration^conjunction^doseStart^doseStop^order^Z"
"RTN","HMPDPS",78,0)
 ... I ATT="fill" S NAMES="fillDate^fillRouting^releaseDate^fillQuantity^fillDaysSupply^partial^Z"
"RTN","HMPDPS",79,0)
 ... I ATT="product" S NAMES="code^name^vuid^role^concentration^order^Z"
"RTN","HMPDPS",80,0)
 ... S Y="<"_ATT_" "_$$LOOP_$S(ATT'="product":"/>",1:">") D ADD(Y)
"RTN","HMPDPS",81,0)
 ... Q:ATT'="product"
"RTN","HMPDPS",82,0)
 ... S X=$G(MED(ATT,I,"O")) I $L(X) S Y="<ordItem "_$$LOOP_"/>" D ADD(Y)
"RTN","HMPDPS",83,0)
 ... S X=$G(MED(ATT,I,"C")) I $L(X) S Y="<class "_$$LOOP_"/>" D ADD(Y)
"RTN","HMPDPS",84,0)
 ... S X=$G(MED(ATT,I,"G")) I $L(X) S Y="<vaGeneric "_$$LOOP_"/>" D ADD(Y)
"RTN","HMPDPS",85,0)
 ... S X=$G(MED(ATT,I,"P")) I $L(X) S Y="<vaProduct "_$$LOOP_"/>" D ADD(Y)
"RTN","HMPDPS",86,0)
 ... D ADD("</product>")
"RTN","HMPDPS",87,0)
 .. D ADD("</"_ATT_"s>")
"RTN","HMPDPS",88,0)
 . S X=$G(MED(ATT)),Y="" Q:'$L(X)
"RTN","HMPDPS",89,0)
 . I ATT="sig"!(ATT?1"ptIn"1.A) S Y="<"_ATT_" xml:space='preserve'>"_$$ESC^HMPD(X)_"</"_ATT_">" Q
"RTN","HMPDPS",90,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDPS",91,0)
 . I $L(X)>1 S NAMES="code^name^Z",Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","HMPDPS",92,0)
 D ADD("</med>")
"RTN","HMPDPS",93,0)
 Q
"RTN","HMPDPS",94,0)
 ;
"RTN","HMPDPS",95,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDPS",96,0)
 N STR,P,TAG S STR=""
"RTN","HMPDPS",97,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDPS",98,0)
 Q STR
"RTN","HMPDPS",99,0)
 ;
"RTN","HMPDPS",100,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDPS",101,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDPS",102,0)
 S @HMP@(HMPI)=X
"RTN","HMPDPS",103,0)
 Q
"RTN","HMPDPSI")
0^59^B41148802
"RTN","HMPDPSI",1,0)
HMPDPSI ;SLC/MKB -- Inpatient Pharmacy extract ;8/2/11  15:29
"RTN","HMPDPSI",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDPSI",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDPSI",4,0)
 ;
"RTN","HMPDPSI",5,0)
 ; External References          DBIA#
"RTN","HMPDPSI",6,0)
 ; -------------------          -----
"RTN","HMPDPSI",7,0)
 ; ^OR(100                       5771
"RTN","HMPDPSI",8,0)
 ; ^ORD(101.43                   2843
"RTN","HMPDPSI",9,0)
 ; ^SC                          10040
"RTN","HMPDPSI",10,0)
 ; ^VA(200                      10060
"RTN","HMPDPSI",11,0)
 ; DIQ                           2056
"RTN","HMPDPSI",12,0)
 ; ORX8                      871,2467
"RTN","HMPDPSI",13,0)
 ; PSOORRL,^TMP("PS",$J)         2400
"RTN","HMPDPSI",14,0)
 ; PSS50P7                       4662
"RTN","HMPDPSI",15,0)
 ; PSS51P2                       4548
"RTN","HMPDPSI",16,0)
 ; PSS52P6                       4549
"RTN","HMPDPSI",17,0)
 ; PSS52P7                       4550
"RTN","HMPDPSI",18,0)
 ; XLFSTR                       10104
"RTN","HMPDPSI",19,0)
 ;
"RTN","HMPDPSI",20,0)
 ; ------------ Get medications from VistA ------------
"RTN","HMPDPSI",21,0)
 ;            [used to be called from HMPDPS]
"RTN","HMPDPSI",22,0)
 ;
"RTN","HMPDPSI",23,0)
IN(ID,MED) ; -- return a medication in MED("attribute")=value
"RTN","HMPDPSI",24,0)
 ; [expects HMPN, OCL^PSOORRL data]
"RTN","HMPDPSI",25,0)
 N X,PS,PS0,ORDER,DOSE,UNTS,RTE,SCH,OI,PSOI,LOC K MED
"RTN","HMPDPSI",26,0)
 M PS=^TMP("HMPPS",$J,HMPN) S PS0=PS(0)
"RTN","HMPDPSI",27,0)
 S MED("medID")=ID_";I",MED("vaType")="I"
"RTN","HMPDPSI",28,0)
 S X=$P(PS0,U,15) S:X MED("start")=X
"RTN","HMPDPSI",29,0)
 S X=$P(PS0,U,4) S:X MED("stop")=X
"RTN","HMPDPSI",30,0)
 S MED("name")=$P(PS0,U,2),X=$P(PS0,U,9),MED("vaStatus")=X,X=$E(X,1,3)
"RTN","HMPDPSI",31,0)
 S MED("status")=$S(X="DIS"!(X="PEN"):"not active",X="EXP"!(X="REN"):"historical",X="REI":"active",1:$$LOW^XLFSTR($P(PS0,U,9)))
"RTN","HMPDPSI",32,0)
 S DOSE=$P(PS0,U,6) S:DOSE="" DOSE=$G(PS("SIG",1,0))
"RTN","HMPDPSI",33,0)
 S RTE=$G(PS("MDR",1,0)),SCH=$P($G(PS("SCH",1,0)),U)
"RTN","HMPDPSI",34,0)
 S MED("dose",1)=DOSE_"^^^^"_RTE_U_SCH
"RTN","HMPDPSI",35,0)
 S MED("sig")="Give: "_DOSE_" "_RTE_" "_SCH I $G(PS("SIO",0)) D
"RTN","HMPDPSI",36,0)
 . N SIO M SIO=PS("SIO")
"RTN","HMPDPSI",37,0)
 . S MED("sig")=MED("sig")_" "_$$STRING^HMPD(.SIO)
"RTN","HMPDPSI",38,0)
 I $D(PS("P",0)) S MED("orderingProvider")=PS("P",0)
"RTN","HMPDPSI",39,0)
 I $G(PS("CLINIC",0)) S MED("IMO")=1
"RTN","HMPDPSI",40,0)
 S MED("facility")=$$FAC^HMPD ;local stn#^name
"RTN","HMPDPSI",41,0)
 S ORDER=+$P(PS0,U,8) D:ORDER ORD
"RTN","HMPDPSI",42,0)
 Q
"RTN","HMPDPSI",43,0)
 ;
"RTN","HMPDPSI",44,0)
IN1(ID,MED) ; -- return a medication in MED("attribute")=value
"RTN","HMPDPSI",45,0)
 ; [expects OEL^PSOORRL data]
"RTN","HMPDPSI",46,0)
 N X,PS,PS0,ORDER,DOSE,UNTS,RTE,SCH,OI,PSOI,DRUG,LOC K MED
"RTN","HMPDPSI",47,0)
 M PS=^TMP("PS",$J) S PS0=PS(0)
"RTN","HMPDPSI",48,0)
 S MED("medID")=ID_";I",MED("vaType")="I"
"RTN","HMPDPSI",49,0)
 S X=$P(PS0,U,5) S:X MED("start")=X
"RTN","HMPDPSI",50,0)
 S X=$P(PS0,U,3) S:X MED("stop")=X
"RTN","HMPDPSI",51,0)
 S MED("name")=$P(PS0,U),X=$P(PS0,U,6),MED("vaStatus")=X,X=$E(X,1,3)
"RTN","HMPDPSI",52,0)
 S MED("status")=$S(X="DIS"!(X="PEN"):"not active",X="EXP"!(X="REN"):"historical",X="REI":"active",1:$$LOW^XLFSTR($P(PS0,U,6)))
"RTN","HMPDPSI",53,0)
 S DOSE=$P(PS0,U,9) S:DOSE="" DOSE=$G(PS("SIG",1,0))
"RTN","HMPDPSI",54,0)
 S RTE=$G(PS("MDR",1,0)),SCH=$P($G(PS("SCH",1,0)),U)
"RTN","HMPDPSI",55,0)
 S MED("dose",1)=DOSE_"^^^^"_RTE_U_SCH
"RTN","HMPDPSI",56,0)
 S MED("sig")="Give: "_DOSE_" "_RTE_" "_SCH I $G(PS("SIO",0)) D
"RTN","HMPDPSI",57,0)
 . N SIO M SIO=PS("SIO")
"RTN","HMPDPSI",58,0)
 . S MED("sig")=MED("sig")_" "_$$STRING^HMPD(.SIO)
"RTN","HMPDPSI",59,0)
 I $D(PS("P",0)) S MED("orderingProvider")=PS("P",0)
"RTN","HMPDPSI",60,0)
 S MED("facility")=$$FAC^HMPD ;local stn#^name
"RTN","HMPDPSI",61,0)
 S ORDER=+$P(PS0,U,11) D:ORDER ORD
"RTN","HMPDPSI",62,0)
 I $P($G(^SC(+$G(LOC),0)),U,25) S MED("IMO")=1
"RTN","HMPDPSI",63,0)
 Q
"RTN","HMPDPSI",64,0)
 ;
"RTN","HMPDPSI",65,0)
IV1(ID,MED) ; -- return an infusion in MED("attribute")=value
"RTN","HMPDPSI",66,0)
 ; [expects OEL^PSOORRL data]
"RTN","HMPDPSI",67,0)
 N PS,PS0,X,ORDER,LOC K MED
"RTN","HMPDPSI",68,0)
 M PS=^TMP("PS",$J) S PS0=PS(0)
"RTN","HMPDPSI",69,0)
 S MED("medID")=ID_";I",MED("vaType")="V",MED("name")=$P(PS0,U)
"RTN","HMPDPSI",70,0)
 S X=$P(PS0,U,5) S:X MED("start")=X
"RTN","HMPDPSI",71,0)
 S X=$P(PS0,U,3) S:X MED("stop")=X
"RTN","HMPDPSI",72,0)
 S MED("vaStatus")=$P(PS0,U,6),X=$E($P(PS0,U,6),1,3)
"RTN","HMPDPSI",73,0)
 S MED("status")=$S(X="DIS"!(X="PEN"):"not active",X="EXP"!(X="PUR"):"historical",X="HOL":"hold",1:"active")
"RTN","HMPDPSI",74,0)
 S MED("dose",1)="^^^^"_$G(PS("MDR",1,0))_U_$P($G(PS("SCH",1,0)),U)
"RTN","HMPDPSI",75,0)
 S MED("rate")=$P(PS0,U,2) D IVP
"RTN","HMPDPSI",76,0)
 S X=$G(PS("IVLIM",0)) S:$L(X) MED("ivLimit")=$$IVLIM(X)
"RTN","HMPDPSI",77,0)
 I $G(PS("P",0)) S MED("orderingProvider")=PS("P",0)
"RTN","HMPDPSI",78,0)
 S MED("facility")=$$FAC^HMPD ;local stn#^name
"RTN","HMPDPSI",79,0)
 S ORDER=+$P(PS0,U,11) D:ORDER ORDLOC
"RTN","HMPDPSI",80,0)
 I $P($G(^SC(+$G(LOC),0)),U,25) S MED("IMO")=1
"RTN","HMPDPSI",81,0)
 Q
"RTN","HMPDPSI",82,0)
 ;
"RTN","HMPDPSI",83,0)
ORD ; get rest of inpatient data from ORDER
"RTN","HMPDPSI",84,0)
 S OI=$$OI^ORX8(ORDER),PSOI=+$P(OI,U,3)
"RTN","HMPDPSI",85,0)
 S MED("name")=$P(OI,U,2) I PSOI D
"RTN","HMPDPSI",86,0)
 . D ZERO^PSS50P7(PSOI,,,"OI")
"RTN","HMPDPSI",87,0)
 . S MED("form")=$P($G(^TMP($J,"OI",PSOI,.02)),U,2)
"RTN","HMPDPSI",88,0)
 S X=$$VALUE^ORX8(ORDER,"DOSE"),DOSE=DOSE_"^^^"
"RTN","HMPDPSI",89,0)
 S DRUG="" I X'="",X["&" D
"RTN","HMPDPSI",90,0)
 . S DRUG=+$P(X,"&",6)
"RTN","HMPDPSI",91,0)
 . S DOSE=$TR($P(X,"&",1,4),"&","^")
"RTN","HMPDPSI",92,0)
 . S $P(MED("dose",1),U,1,4)=DOSE
"RTN","HMPDPSI",93,0)
 S:'DRUG DRUG=+$$VALUE^ORX8(ORDER,"DRUG")
"RTN","HMPDPSI",94,0)
 D:DRUG NDF^HMPDPS(DRUG)
"RTN","HMPDPSI",95,0)
 S X=$$GET1^DIQ(100,ORDER_",",36,"I") S:X MED("parent")=X
"RTN","HMPDPSI",96,0)
 K ^TMP($J,"OI")
"RTN","HMPDPSI",97,0)
ORDLOC ; enter here for IV's
"RTN","HMPDPSI",98,0)
 N ORUPCHUK D EN^ORX8(ORDER)
"RTN","HMPDPSI",99,0)
 S MED("orderID")=ORDER
"RTN","HMPDPSI",100,0)
 S MED("ordered")=$G(ORUPCHUK("ORODT"))
"RTN","HMPDPSI",101,0)
 S LOC=+$G(ORUPCHUK("ORL")) I LOC D
"RTN","HMPDPSI",102,0)
 . S MED("location")=LOC_U_$P($G(^SC(LOC,0)),U)
"RTN","HMPDPSI",103,0)
 . S MED("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDPSI",104,0)
 Q
"RTN","HMPDPSI",105,0)
 ;
"RTN","HMPDPSI",106,0)
 ; ---------- Called from HMPDPSOR ----------
"RTN","HMPDPSI",107,0)
 ;
"RTN","HMPDPSI",108,0)
IV ; -- add IV data to MED("attribute")=value
"RTN","HMPDPSI",109,0)
 ; [expects IFN, ORPK, OEL^PSOORRL data]
"RTN","HMPDPSI",110,0)
 N PS,PS0,X,X0,ID,RTE,I
"RTN","HMPDPSI",111,0)
 S MED("vaType")="V" I ORPK,$D(^TMP("PS",$J)) D  G IVQ
"RTN","HMPDPSI",112,0)
 . M PS=^TMP("PS",$J) S PS0=$G(PS(0)),MED("name")=$P(PS0,U)
"RTN","HMPDPSI",113,0)
 . S MED("dose",1)="^^^^"_$G(PS("MDR",1,0))_U_$P($G(PS("SCH",1,0)),U)
"RTN","HMPDPSI",114,0)
 . S MED("rate")=$P(PS0,U,2),ID=ORPK D IVP
"RTN","HMPDPSI",115,0)
 . S X=$G(PS("IVLIM",0)) S:$L(X) MED("ivLimit")=$$IVLIM(X)
"RTN","HMPDPSI",116,0)
 . S X=+$P($G(^TMP("PS",$J,"RXN",0)),U,5)
"RTN","HMPDPSI",117,0)
 . S:X MED("pharmacist")=X_U_$P($G(^VA(200,X,0)),U)
"RTN","HMPDPSI",118,0)
 ; no med in PS, so use Order values
"RTN","HMPDPSI",119,0)
 S RTE=+$$VALUE^ORX8(IFN,"ROUTE") D ALL^PSS51P2(RTE,,,,"HMPTE")
"RTN","HMPDPSI",120,0)
 S MED("dose",1)="^^^^"_$G(^TMP($J,"HMPTE",RTE,1))_U_$$VALUE^ORX8(IFN,"SCHEDULE")
"RTN","HMPDPSI",121,0)
 S MED("rate")=$$VALUE^ORX8(IFN,"RATE")
"RTN","HMPDPSI",122,0)
 S I=0 F  S I=$O(^OR(100,IFN,.1,I)) Q:I<1  S X=+$G(^(I,0)) D
"RTN","HMPDPSI",123,0)
 . S X0=$G(^ORD(101.43,X,0)),MED("name")=$P(X0,U)
"RTN","HMPDPSI",124,0)
 . S MED("product",I,"O")=+$P(X0,U,2)_U_$P(X0,U)
"RTN","HMPDPSI",125,0)
 S X=$$VALUE^ORX8(IFN,"DAYS") I $L(X) D  S MED("ivLimit")=X
"RTN","HMPDPSI",126,0)
 . I X?1.A1.N S X=$$IVLIM(X) Q
"RTN","HMPDPSI",127,0)
 . ; CPRS format = "for a total of 3 doses" or "with total volume 100ml"
"RTN","HMPDPSI",128,0)
 . F I=1:1:$L(X) I $E(X,I)=+$E(X,I) S X=$E(X,I,$L(X)) Q
"RTN","HMPDPSI",129,0)
IVQ ; done
"RTN","HMPDPSI",130,0)
 K ^TMP("PS",$J),^TMP($J,"HMPTE")
"RTN","HMPDPSI",131,0)
 Q
"RTN","HMPDPSI",132,0)
 ;
"RTN","HMPDPSI",133,0)
IVP ; -- add IV products for ID,DFN
"RTN","HMPDPSI",134,0)
 ; [expects PS("A") & PS("B") data arrays from IV*/PSOORRL]
"RTN","HMPDPSI",135,0)
 N VPI,N,NAME,IEN,DRUG,X S N=0
"RTN","HMPDPSI",136,0)
 ; IV Additives
"RTN","HMPDPSI",137,0)
 S VPI=0 F  S VPI=$O(PS("A",VPI)) Q:VPI<1  D
"RTN","HMPDPSI",138,0)
 . K ^TMP($J,"HMPPSIV") S NAME=$P($G(PS("A",VPI,0)),U)
"RTN","HMPDPSI",139,0)
 . D ZERO^PSS52P6("",NAME,"","HMPPSIV")
"RTN","HMPDPSI",140,0)
 . S IEN=$O(^TMP($J,"HMPPSIV",0)),DRUG=+$G(^(IEN,1)) Q:IEN<1
"RTN","HMPDPSI",141,0)
 . S N=N+1 D:DRUG NDF^HMPDPS(DRUG,N) S:'DRUG MED("product",N)=U_NAME
"RTN","HMPDPSI",142,0)
 . S $P(MED("product",N),U,4,5)="A^"_$P($G(PS("A",VPI,0)),U,2)
"RTN","HMPDPSI",143,0)
 . S X=$G(^TMP($J,"HMPPSIV",IEN,15))
"RTN","HMPDPSI",144,0)
 . S:X MED("product",N,"O")=+X_U_$$NAME^PSS50P7(+X)
"RTN","HMPDPSI",145,0)
 ; IV Base Solutions
"RTN","HMPDPSI",146,0)
 S VPI=0 F  S VPI=$O(PS("B",VPI)) Q:VPI<1  D
"RTN","HMPDPSI",147,0)
 . K ^TMP($J,"HMPPSIV") S NAME=$P($G(PS("B",VPI,0)),U)
"RTN","HMPDPSI",148,0)
 . D ZERO^PSS52P7("",NAME,"","HMPPSIV")
"RTN","HMPDPSI",149,0)
 . S IEN=$O(^TMP($J,"HMPPSIV",0)),DRUG=+$G(^(IEN,1)) Q:IEN<1
"RTN","HMPDPSI",150,0)
 . S N=N+1 D:DRUG NDF^HMPDPS(DRUG,N) S:'DRUG MED("product",N)=U_NAME
"RTN","HMPDPSI",151,0)
 . S $P(MED("product",N),U,4,5)="B^"_$P($G(PS("B",VPI,0)),U,2)
"RTN","HMPDPSI",152,0)
 . S X=$G(^TMP($J,"HMPPSIV",IEN,9))
"RTN","HMPDPSI",153,0)
 . S:X MED("product",N,"O")=+X_U_$$NAME^PSS50P7(+X)
"RTN","HMPDPSI",154,0)
 K ^TMP($J,"HMPPSIV")
"RTN","HMPDPSI",155,0)
 Q 
"RTN","HMPDPSI",156,0)
 ;
"RTN","HMPDPSI",157,0)
IVLIM(X) ; -- Return expanded version of IV Limit X
"RTN","HMPDPSI",158,0)
 I '$L($G(X)) Q ""
"RTN","HMPDPSI",159,0)
 N Y,VAL,UNT,I
"RTN","HMPDPSI",160,0)
 S Y="",X=$$UP^XLFSTR(X)
"RTN","HMPDPSI",161,0)
 I X?1"DOSES".E S X="A"_$P(X,"DOSES",2)
"RTN","HMPDPSI",162,0)
 S UNT=$E(X),VAL=0 F I=2:1:$L(X) I $E(X,I) S VAL=$E(X,I,$L(X)) Q
"RTN","HMPDPSI",163,0)
 I UNT="A" S Y=+VAL_$S(+VAL>1:" doses",1:" dose")
"RTN","HMPDPSI",164,0)
 I UNT="D" S Y=+VAL_$S(+VAL>1:" days",1:" day")
"RTN","HMPDPSI",165,0)
 I UNT="H" S Y=+VAL_$S(+VAL>1:" hours",1:" hour")
"RTN","HMPDPSI",166,0)
 I UNT="C" S Y=+VAL_" CC"
"RTN","HMPDPSI",167,0)
 I UNT="M" S Y=+VAL_" ml"
"RTN","HMPDPSI",168,0)
 I UNT="L" S Y=+VAL_" L"
"RTN","HMPDPSI",169,0)
 Q Y
"RTN","HMPDPSO")
0^60^B15565576
"RTN","HMPDPSO",1,0)
HMPDPSO ;SLC/MKB -- Outpatient Pharmacy extract ;8/2/11  15:29
"RTN","HMPDPSO",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDPSO",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDPSO",4,0)
 ;
"RTN","HMPDPSO",5,0)
 ; External References          DBIA#
"RTN","HMPDPSO",6,0)
 ; -------------------          -----
"RTN","HMPDPSO",7,0)
 ; PSODI                         4858
"RTN","HMPDPSO",8,0)
 ; PSOORDER,^TMP("PSOR",$J)      1878
"RTN","HMPDPSO",9,0)
 ; PSS50P7                       4662
"RTN","HMPDPSO",10,0)
 ; PSS51P2                       4548
"RTN","HMPDPSO",11,0)
 ; XLFDT                        10103
"RTN","HMPDPSO",12,0)
 ; XLFSTR                       10104
"RTN","HMPDPSO",13,0)
 ;
"RTN","HMPDPSO",14,0)
 ; ------------ Get prescription from VistA ------------
"RTN","HMPDPSO",15,0)
 ;
"RTN","HMPDPSO",16,0)
RX(ID,MED) ; -- return a prescription in MED("attribute")=value
"RTN","HMPDPSO",17,0)
 N RX0,RX1,DRUG,PSOI,X,I,START,STOP,ORIFN,FILL,RFD,PRV K MED
"RTN","HMPDPSO",18,0)
 N HMP ;PSOORDER kills HMP
"RTN","HMPDPSO",19,0)
 K ^TMP("PSOR",$J) D EN^PSOORDER(DFN,+ID)
"RTN","HMPDPSO",20,0)
 S RX0=$G(^TMP("PSOR",$J,+ID,0)),RX1=$G(^(1)),DRUG=$G(^("DRUG",0))
"RTN","HMPDPSO",21,0)
 S MED("medID")=ID_";O",MED("vaType")="O",MED("type")="Prescription"
"RTN","HMPDPSO",22,0)
 S ORIFN=+$P(RX1,U,8) S:ORIFN MED("orderID")=ORIFN
"RTN","HMPDPSO",23,0)
 S PSOI=$G(^TMP("PSOR",$J,+ID,"DRUGOI",0)) I PSOI D
"RTN","HMPDPSO",24,0)
 . S MED("name")=$P(PSOI,";",2)
"RTN","HMPDPSO",25,0)
 . D ZERO^PSS50P7(+PSOI,,,"OI")
"RTN","HMPDPSO",26,0)
 . S MED("form")=$P($G(^TMP($J,"OI",+PSOI,.02)),U,2)
"RTN","HMPDPSO",27,0)
 . S:+$G(^TMP($J,"OI",+PSOI,.09)) MED("supply")=1
"RTN","HMPDPSO",28,0)
 D:DRUG NDF^HMPDPS(+DRUG) ;add NDF data
"RTN","HMPDPSO",29,0)
 S START=$P(RX0,U) S:START MED("start")=START
"RTN","HMPDPSO",30,0)
 S STOP=$P(RX0,U,12) S:STOP MED("stop")=STOP ;_".2359"?
"RTN","HMPDPSO",31,0)
 S X=$$GET1^PSODI(52,+ID_",",26,"I") S:X MED("expires")=$P(X,U,2) ;1^date
"RTN","HMPDPSO",32,0)
 S X=$P(RX0,U,17) S:X MED("ordered")=X
"RTN","HMPDPSO",33,0)
 S MED("vaStatus")=$$UP^XLFSTR($P($P(RX0,U,4),";",2)),X=$P($P(RX0,U,4),";")
"RTN","HMPDPSO",34,0)
 S MED("status")=$S(X="H":"hold",X="DC":"not active",X="D"!(X="E"):"historical",1:"active")
"RTN","HMPDPSO",35,0)
 S MED("quantity")=$P(RX0,U,6),MED("daysSupply")=$P(RX0,U,7)
"RTN","HMPDPSO",36,0)
 S MED("fillsAllowed")=$P(RX0,U,8),MED("fillsRemaining")=$P(RX0,U,9)
"RTN","HMPDPSO",37,0)
 S MED("routing")=$P($P(RX1,U,6),";"),MED("prescription")=$P(RX0,U,5)
"RTN","HMPDPSO",38,0)
 S MED("lastFilled")=$P(RX0,U,3) K FILL
"RTN","HMPDPSO",39,0)
 S I=0 F  S I=$O(^TMP("PSOR",$J,+ID,"REF",I)) Q:I<1  S X=$G(^(I,0)),FILL(+X)=X
"RTN","HMPDPSO",40,0)
 S I=0 F  S I=$O(^TMP("PSOR",$J,+ID,"RPAR",I)) Q:I<1  S X=$G(^(I,0)),$P(X,U,14)=1,FILL(+X)=X
"RTN","HMPDPSO",41,0)
 S (I,RFD,PRV)=0 F  S RFD=$O(FILL(RFD)) Q:RFD<1  S X=$G(FILL(RFD)) D  ;sort 1st
"RTN","HMPDPSO",42,0)
 . N MW,REL S I=I+1
"RTN","HMPDPSO",43,0)
 . S MW=$P($P(X,U,10),";"),REL=$P($P(X,U,8),".")
"RTN","HMPDPSO",44,0)
 . S MED("fill",I)=$P(RFD,".")_U_MW_U_REL_U_$P(X,U,4,5)_$S($P(X,U,14):"^1",1:"")
"RTN","HMPDPSO",45,0)
 . S:$P(X,U,2) PRV=$P(X,U,2) ;save last provider
"RTN","HMPDPSO",46,0)
 . ; fill comments?
"RTN","HMPDPSO",47,0)
 S X=$S($P(RX0,U,11):$P(RX0,U,11),$P(RX0,U,10):$P(RX0,U,10),1:0)
"RTN","HMPDPSO",48,0)
 S:X MED("fillCost")=X
"RTN","HMPDPSO",49,0)
 S X=$G(^TMP("PSOR",$J,+ID,"SIG",1,0)),I=1
"RTN","HMPDPSO",50,0)
 F  S I=$O(^TMP("PSOR",$J,+ID,"SIG",I)) Q:I<1  S X=X_$G(^(I,0))
"RTN","HMPDPSO",51,0)
 S MED("sig")=X
"RTN","HMPDPSO",52,0)
 S X=$G(^TMP("PSOR",$J,+ID,"PI",1,0)),I=1
"RTN","HMPDPSO",53,0)
 F  S I=$O(^TMP("PSOR",$J,+ID,"PI",I)) Q:I<1  S X=X_$G(^(I,0))
"RTN","HMPDPSO",54,0)
 S:$L(X) MED("ptInstructions")=X
"RTN","HMPDPSO",55,0)
 S I=0 F  S I=$O(^TMP("PSOR",$J,+ID,"MI",I)) Q:I<1  S X=$G(^(I,0)) D
"RTN","HMPDPSO",56,0)
 . N UD,NOUN,DOSE,UNIT,RTE,SCH,DUR,CONJ,END
"RTN","HMPDPSO",57,0)
 . S UD=$P(X,U,2),NOUN=$P(X,U,4)
"RTN","HMPDPSO",58,0)
 . S DOSE=$P(X,U),UNIT=$P($P(X,U,3),";",2)
"RTN","HMPDPSO",59,0)
 . S RTE=+$P(X,U,7) D ALL^PSS51P2(RTE,,,,"MR")
"RTN","HMPDPSO",60,0)
 . S RTE=$G(^TMP($J,"MR",RTE,1))
"RTN","HMPDPSO",61,0)
 . S DUR=$P(X,U,5),CONJ=$P(X,U,6),SCH=$P(X,U,8)
"RTN","HMPDPSO",62,0)
 . S END=$S(DUR:$$STOP(START,DUR),1:STOP)
"RTN","HMPDPSO",63,0)
 . S MED("dose",I)=DOSE_U_UNIT_U_UD_U_NOUN_U_RTE_U_SCH_U_DUR_U_CONJ_U_START_U_END
"RTN","HMPDPSO",64,0)
 . I $E(CONJ)="T",DUR S START=END
"RTN","HMPDPSO",65,0)
 S:RX1 X=$TR($P(RX1,U),";","^"),MED("orderingProvider")=X,MED("currentProvider")=X
"RTN","HMPDPSO",66,0)
 S:$G(PRV) MED("currentProvider")=$TR(PRV,";","^")
"RTN","HMPDPSO",67,0)
 S:$P(RX1,U,9) MED("pharmacist")=$TR($P(RX1,U,9),";","^")
"RTN","HMPDPSO",68,0)
 S:$P(RX1,U,4) MED("location")=$TR($P(RX1,U,4),";","^")
"RTN","HMPDPSO",69,0)
 S MED("facility")=$$FAC^HMPD(+$P(RX1,U,4))
"RTN","HMPDPSO",70,0)
 K ^TMP("PSOR",$J),^TMP($J,"MR"),^TMP($J,"NDF"),^TMP($J,"OI")
"RTN","HMPDPSO",71,0)
 Q
"RTN","HMPDPSO",72,0)
 ;
"RTN","HMPDPSO",73,0)
STOP(BEG,X) ; -- Return date after adding X to BEG
"RTN","HMPDPSO",74,0)
 N D,H,M,UNT,Y
"RTN","HMPDPSO",75,0)
 S Y=BEG,(D,H,M)=0,UNT=$P(X,+X,2),X=+X
"RTN","HMPDPSO",76,0)
 S:$E(UNT)=" " UNT=$E(UNT,2,99) I UNT="" S UNT="D"
"RTN","HMPDPSO",77,0)
 S:UNT="L" D=30*X
"RTN","HMPDPSO",78,0)
 S:UNT="W" D=7*X
"RTN","HMPDPSO",79,0)
 S:UNT="D" D=X
"RTN","HMPDPSO",80,0)
 S:UNT="H" H=X
"RTN","HMPDPSO",81,0)
 S:UNT="M" M=X
"RTN","HMPDPSO",82,0)
 S Y=$$FMADD^XLFDT(BEG,D,H,M)
"RTN","HMPDPSO",83,0)
 Q Y
"RTN","HMPDPSO",84,0)
 ;
"RTN","HMPDPSO",85,0)
ACTIVE(X) ; -- return 1 or 0, if X is an active status
"RTN","HMPDPSO",86,0)
 N Y S Y=1
"RTN","HMPDPSO",87,0)
 I X="PURGE" S Y=0
"RTN","HMPDPSO",88,0)
 I X="DELETED" S Y=0
"RTN","HMPDPSO",89,0)
 I X="EXPIRED" S Y=0 ;keep, to renew?
"RTN","HMPDPSO",90,0)
 I $P(X," ")="DISCONTINUED" S Y=0
"RTN","HMPDPSO",91,0)
 Q Y
"RTN","HMPDPSOR")
0^61^B39015653
"RTN","HMPDPSOR",1,0)
HMPDPSOR ;SLC/MKB -- Medication extract by order ;8/2/11  15:29
"RTN","HMPDPSOR",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDPSOR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDPSOR",4,0)
 ;
"RTN","HMPDPSOR",5,0)
 ; External References          DBIA#
"RTN","HMPDPSOR",6,0)
 ; -------------------          -----
"RTN","HMPDPSOR",7,0)
 ; ^OR(100                       5771
"RTN","HMPDPSOR",8,0)
 ; ^ORD(100.98                    873
"RTN","HMPDPSOR",9,0)
 ; ^SC                          10040
"RTN","HMPDPSOR",10,0)
 ; ^VA(200                      10060
"RTN","HMPDPSOR",11,0)
 ; DIQ                           2056
"RTN","HMPDPSOR",12,0)
 ; ORCD                          5493
"RTN","HMPDPSOR",13,0)
 ; ORQ1,^TMP("ORR",$J)           3154
"RTN","HMPDPSOR",14,0)
 ; ORX8                 871,2467,3071
"RTN","HMPDPSOR",15,0)
 ; PSOORRL,^TMP("PS",$J)         2400
"RTN","HMPDPSOR",16,0)
 ; PSS50P7                       4662
"RTN","HMPDPSOR",17,0)
 ; PSS51P2                       4548
"RTN","HMPDPSOR",18,0)
 ;
"RTN","HMPDPSOR",19,0)
 ; ------------ Get data from VistA ------------
"RTN","HMPDPSOR",20,0)
 ;
"RTN","HMPDPSOR",21,0)
EN(DFN,BEG,END,MAX,ORIFN) ; -- find a patient's orders
"RTN","HMPDPSOR",22,0)
 S DFN=+$G(DFN) Q:DFN<1  ;invalid patient
"RTN","HMPDPSOR",23,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDPSOR",24,0)
 N ORDIALOG              ;med dialog array, keep/reuse
"RTN","HMPDPSOR",25,0)
 ;
"RTN","HMPDPSOR",26,0)
 ; get one order
"RTN","HMPDPSOR",27,0)
 I $G(ORIFN) D EN1(ORIFN,.HMPITM),XML^HMPDPS(.HMPITM):$D(HMPITM) Q
"RTN","HMPDPSOR",28,0)
 ;
"RTN","HMPDPSOR",29,0)
 ; get all orders
"RTN","HMPDPSOR",30,0)
 N TYPE,ORDG,ORVP,ORLIST,HMPITM,HMPCNT,HMPN,ORLIST,ORIFN,X3,X4,DAD
"RTN","HMPDPSOR",31,0)
 S TYPE=$G(FILTER("vaType")) S:$L(TYPE) TYPE=$S(TYPE="N":"NV",TYPE="V":"IV",1:TYPE)_" "
"RTN","HMPDPSOR",32,0)
 S ORDG=+$O(^ORD(100.98,"B",TYPE_"RX",0)),ORVP=DFN_";DPT("
"RTN","HMPDPSOR",33,0)
 D EN^ORQ1(ORVP,ORDG,6,,BEG,END)
"RTN","HMPDPSOR",34,0)
 K ^TMP("HMPOR",$J) S (HMPCNT,HMPN)=0
"RTN","HMPDPSOR",35,0)
 F  S HMPN=$O(^TMP("ORR",$J,ORLIST,HMPN)) Q:HMPN<1  S ORIFN=$G(^(HMPN)) D  Q:HMPCNT'<MAX
"RTN","HMPDPSOR",36,0)
 . Q:$D(^TMP("HMPOR",$J,+ORIFN))  Q:$P(ORIFN,";",2)>1  S ORIFN=+ORIFN
"RTN","HMPDPSOR",37,0)
 . S X3=$G(^OR(100,ORIFN,3)),X4=$G(^(4))
"RTN","HMPDPSOR",38,0)
 . Q:$P(X3,U,3)=13  I X4["P",$P(X3,U,3)=1 Q  ;cancelled
"RTN","HMPDPSOR",39,0)
 . S DAD=$P(X3,U,9) I DAD Q:$D(^TMP("HMPOR",$J,DAD))  S ORIFN=DAD
"RTN","HMPDPSOR",40,0)
 . K HMPITM D EN1(ORIFN,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDPSOR",41,0)
 . D XML^HMPDPS(.HMPITM)
"RTN","HMPDPSOR",42,0)
 . S ^TMP("HMPOR",$J,ORIFN)="",HMPCNT=HMPCNT+1
"RTN","HMPDPSOR",43,0)
 K ^TMP("HMPOR",$J),^TMP("ORR",$J),^TMP($J,"PSOI")
"RTN","HMPDPSOR",44,0)
 Q
"RTN","HMPDPSOR",45,0)
 ;
"RTN","HMPDPSOR",46,0)
EN1(IFN,MED) ; -- return an order in MED("attribute")=value [from EN]
"RTN","HMPDPSOR",47,0)
 N ORUPCHUK,ORVP,ORPCL,ORPK,ORDUZ,ORODT,ORSTRT,ORSTOP,ORL,ORTO,ORSTS,ORNP,ORPV,ORTX
"RTN","HMPDPSOR",48,0)
 N CLS,OI,X,LOC,DRUG,DA,CNT,HMPESP K MED
"RTN","HMPDPSOR",49,0)
 S IFN=+$G(IFN) I IFN<1!'$D(^OR(100,IFN)) Q
"RTN","HMPDPSOR",50,0)
 S ORPK=$$PKGID^ORX8(IFN)
"RTN","HMPDPSOR",51,0)
 S X=$S(ORPK:$E(ORPK,$L(ORPK)),1:"Z") S:X=+X X="R" ;last char = PS file
"RTN","HMPDPSOR",52,0)
 S CLS=$S("RSN"[X:"O","UV"[X:"I",1:$$GET1^DIQ(100,IFN_",",10,"I"))
"RTN","HMPDPSOR",53,0)
 I CLS="O",ORPK=+ORPK!(ORPK["R") D RX^HMPDPSO(ORPK,.MED) S MED("id")=IFN Q
"RTN","HMPDPSOR",54,0)
 S MED("id")=IFN,MED("orderID")=IFN,MED("vaType")=CLS
"RTN","HMPDPSOR",55,0)
 S:ORPK MED("medID")=ORPK_";"_CLS
"RTN","HMPDPSOR",56,0)
 D EN^ORX8(IFN) S X="" F  S X=$O(ORUPCHUK(X)) Q:X=""  S:$D(ORUPCHUK(X))#2 @X=ORUPCHUK(X)
"RTN","HMPDPSOR",57,0)
 S MED("ordered")=$G(ORODT),MED("orderingProvider")=$G(ORNP)
"RTN","HMPDPSOR",58,0)
 S MED("currentProvider")=$$LASTPROV(IFN)
"RTN","HMPDPSOR",59,0)
 S MED("start")=$G(ORSTRT),MED("stop")=$G(ORSTOP)
"RTN","HMPDPSOR",60,0)
 S MED("vaStatus")=$P($G(ORSTS),U,2),MED("status")=$$STATUS(+$G(ORSTS))
"RTN","HMPDPSOR",61,0)
 S LOC=+$G(ORL) S:LOC MED("location")=LOC_U_$P(^SC(LOC,0),U)
"RTN","HMPDPSOR",62,0)
 I CLS="I" D
"RTN","HMPDPSOR",63,0)
 . S:$P($G(^SC(+$G(LOC),0)),U,25) MED("IMO")=1
"RTN","HMPDPSOR",64,0)
 . S X=$P($G(^OR(100,IFN,3)),U,9) S:X MED("parent")=X
"RTN","HMPDPSOR",65,0)
 S MED("facility")=$$FAC^HMPD(LOC) I ORPK D
"RTN","HMPDPSOR",66,0)
 . N IFN D OEL^PSOORRL(DFN,ORPK_";"_CLS)
"RTN","HMPDPSOR",67,0)
 I $$IV D IV^HMPDPSI Q
"RTN","HMPDPSOR",68,0)
 S:CLS="O" MED("type")="Prescription"
"RTN","HMPDPSOR",69,0)
 S:ORPK["N" MED("vaType")="N",MED("type")="OTC"
"RTN","HMPDPSOR",70,0)
ENA ; get order responses
"RTN","HMPDPSOR",71,0)
 S OI=$$OI^ORX8(IFN) I OI S MED("name")=$P(OI,U,2) D
"RTN","HMPDPSOR",72,0)
 . D ZERO^PSS50P7(+$P(OI,U,3),,,"PSOI")
"RTN","HMPDPSOR",73,0)
 . S MED("form")=$P($G(^TMP($J,"PSOI",+$P(OI,U,3),.02)),U,2)
"RTN","HMPDPSOR",74,0)
 . S:+$G(^TMP($J,"PSOI",+$P(OI,U,3),.09)) MED("supply")=1
"RTN","HMPDPSOR",75,0)
 D RESP(IFN,.HMPESP) ;order responses
"RTN","HMPDPSOR",76,0)
 S DRUG=+$G(^TMP("PS",$J,"DD",1,0)) S:'DRUG DRUG=+$G(HMPESP("DRUG",1))
"RTN","HMPDPSOR",77,0)
 S MED("sig")=$S(CLS="I":"Give: ",1:"")_$G(HMPESP("SIG",1)) ;ORTX(2)
"RTN","HMPDPSOR",78,0)
 I CLS="I"!(ORPK["N") D  G ENQ ;UD or NVA: single dose, or child orders
"RTN","HMPDPSOR",79,0)
 . I '$O(^OR(100,IFN,2,0)) S MED("dose",1)=$$DOSE(1)_U_$G(ORSTRT)_U_$G(ORSTOP) Q
"RTN","HMPDPSOR",80,0)
 . N DD,CONJ M CONJ=HMPESP("CONJ")
"RTN","HMPDPSOR",81,0)
 . S (DA,CNT)=0 F  S DA=$O(^OR(100,IFN,2,DA)) Q:DA<1  D
"RTN","HMPDPSOR",82,0)
 .. K HMPESP D RESP(DA,.HMPESP)
"RTN","HMPDPSOR",83,0)
 .. S CNT=CNT+1,MED("dose",CNT)=$$DOSE(1)_U_$P($G(^OR(100,DA,0)),U,8,9)_U_DA
"RTN","HMPDPSOR",84,0)
 .. S $P(MED("dose",CNT),U,8)=$G(CONJ(CNT))
"RTN","HMPDPSOR",85,0)
 .. I $P(MED("dose",CNT),U,10)>$G(ORSTOP) S ORSTOP=$P(MED("dose",CNT),U,10)
"RTN","HMPDPSOR",86,0)
 .. S:'DRUG DD=+$G(HMPESP("DRUG",1)),DD(DD,DA)="" ;dispense drug(s)
"RTN","HMPDPSOR",87,0)
 .. ; get ^TMP("PS",$J) from 1st child, if Inpt parent:
"RTN","HMPDPSOR",88,0)
 .. I '$D(^TMP("PS",$J)) S ORPK=$$PKGID^ORX8(DA) D OEL^PSOORRL(DFN,ORPK_";"_CLS)
"RTN","HMPDPSOR",89,0)
 . S MED("stop")=$G(ORSTOP) ;reset from last child order
"RTN","HMPDPSOR",90,0)
 . S DD=$O(DD(0)) I DD,'$O(DD(DD)) S DRUG=DD Q  ;1 drug for order
"RTN","HMPDPSOR",91,0)
 . S (DD,CNT)=0 F  S DD=$O(DD(DD)) Q:DD<1  S DA=0 F  S DA=$O(DD(DD,DA)) Q:DA<1  S CNT=CNT+1 D NDF^HMPDPS(DD,CNT,DA)
"RTN","HMPDPSOR",92,0)
 ; pending Rx: dose(s), qty, etc.
"RTN","HMPDPSOR",93,0)
 S CNT=0 F  S CNT=$O(HMPESP("INSTR",CNT)) Q:CNT<1  S MED("dose",CNT)=$$DOSE(CNT) ;_STRT^STOP
"RTN","HMPDPSOR",94,0)
 S MED("quantity")=$G(HMPESP("QTY",1))
"RTN","HMPDPSOR",95,0)
 S MED("daysSupply")=$G(HMPESP("SUPPLY",1))
"RTN","HMPDPSOR",96,0)
 S MED("routing")=$G(HMPESP("PICKUP",1))
"RTN","HMPDPSOR",97,0)
 S MED("fillsAllowed")=$G(HMPESP("REFILLS",1))
"RTN","HMPDPSOR",98,0)
 S MED("ptInstructions")=$G(HMPESP("PI",1))
"RTN","HMPDPSOR",99,0)
ENQ ; finish
"RTN","HMPDPSOR",100,0)
 D:DRUG NDF^HMPDPS(+DRUG)
"RTN","HMPDPSOR",101,0)
 S X=+$P($G(^TMP("PS",$J,"RXN",0)),U,5)
"RTN","HMPDPSOR",102,0)
 S:X MED("pharmacist")=X_U_$P($G(^VA(200,X,0)),U)
"RTN","HMPDPSOR",103,0)
 K ^TMP("PS",$J),^TMP($J,"PSOI")
"RTN","HMPDPSOR",104,0)
 Q
"RTN","HMPDPSOR",105,0)
 ;
"RTN","HMPDPSOR",106,0)
IV() ; -- Return 1 or 0, if order is for IV/infusion
"RTN","HMPDPSOR",107,0)
 I ORPK["V" Q 1
"RTN","HMPDPSOR",108,0)
 I $P($G(ORTO),U,2)?1"IV".E Q 1
"RTN","HMPDPSOR",109,0)
 I +$G(ORPCL)=130 Q 1
"RTN","HMPDPSOR",110,0)
 I $G(^TMP("PS",$J,"B",0)) Q 1
"RTN","HMPDPSOR",111,0)
 Q 0
"RTN","HMPDPSOR",112,0)
 ;
"RTN","HMPDPSOR",113,0)
DOSE(N) ; --add dosage data from HMPESP(ID,N) [instance N]
"RTN","HMPDPSOR",114,0)
 N DOSE,X,ID S N=+$G(N,1)
"RTN","HMPDPSOR",115,0)
 S DOSE=$P($G(HMPESP("DOSE",N)),"&",1,4),DOSE=$TR(DOSE,"&","^")
"RTN","HMPDPSOR",116,0)
 I '$L($P(DOSE,U)) S DOSE=$G(HMPESP("INSTR",N))_"^^^"
"RTN","HMPDPSOR",117,0)
 S X=+$G(HMPESP("ROUTE",N)) D ALL^PSS51P2(X,,,,"HMPTE")
"RTN","HMPDPSOR",118,0)
 S DOSE=DOSE_U_$G(^TMP($J,"HMPTE",X,1))
"RTN","HMPDPSOR",119,0)
 F ID="SCHEDULE","DAYS","CONJ" S DOSE=DOSE_U_$G(HMPESP(ID,N))
"RTN","HMPDPSOR",120,0)
 K ^TMP($J,"HMPTE")
"RTN","HMPDPSOR",121,0)
 Q DOSE
"RTN","HMPDPSOR",122,0)
 ;
"RTN","HMPDPSOR",123,0)
LASTPROV(IFN) ; -- return last provider who took action on order IFN
"RTN","HMPDPSOR",124,0)
 N I,X,Y S Y=""
"RTN","HMPDPSOR",125,0)
 S I="A" F  S I=$O(^OR(100,IFN,8,I),-1) Q:I<1  S X=$G(^(I,0)) D  Q:Y
"RTN","HMPDPSOR",126,0)
 . I $P(X,U,5) S Y=+$P(X,U,5) Q  ;signer
"RTN","HMPDPSOR",127,0)
 . I $P(X,U,3) S Y=+$P(X,U,3) Q  ;orderer
"RTN","HMPDPSOR",128,0)
 S:Y Y=Y_U_$P($G(^VA(200,Y,0)),U)
"RTN","HMPDPSOR",129,0)
 Q Y
"RTN","HMPDPSOR",130,0)
 ;
"RTN","HMPDPSOR",131,0)
STRING(IFN,ID) ; -- return text value as a string
"RTN","HMPDPSOR",132,0)
 N DA,I,X,Y
"RTN","HMPDPSOR",133,0)
 S DA=+$O(^OR(100,IFN,4.5,"ID",ID,0)) Q:DA<1 ""
"RTN","HMPDPSOR",134,0)
 S I=+$O(^OR(100,IFN,4.5,DA,2,0)),Y=$G(^(I,0))
"RTN","HMPDPSOR",135,0)
 F  S I=+$O(^OR(100,IFN,4.5,DA,2,I)) Q:I<1  S X=$G(^(I,0)) D
"RTN","HMPDPSOR",136,0)
 . I $E(Y,$L(Y))'=" " S Y=Y_" "
"RTN","HMPDPSOR",137,0)
 . S Y=Y_X
"RTN","HMPDPSOR",138,0)
 Q Y
"RTN","HMPDPSOR",139,0)
 ;
"RTN","HMPDPSOR",140,0)
STATUS(X) ; -- return HITSP status for 100.01 #X
"RTN","HMPDPSOR",141,0)
 S X=+$G(X) S:'X X=99  ;no status
"RTN","HMPDPSOR",142,0)
 I X=3 Q "hold"
"RTN","HMPDPSOR",143,0)
 I X=10!(X=11)!(X=5) Q "not active"
"RTN","HMPDPSOR",144,0)
 I X=1!(X=12)!(X=13) Q "not active"
"RTN","HMPDPSOR",145,0)
 I X=14!(X=99)       Q "not active"
"RTN","HMPDPSOR",146,0)
 I X=2!(X=7)!(X=15)  Q "historical"
"RTN","HMPDPSOR",147,0)
 Q "active"
"RTN","HMPDPSOR",148,0)
 ;
"RTN","HMPDPSOR",149,0)
RESP(ORIFN,RESP) ; -- return order responses [internal form]
"RTN","HMPDPSOR",150,0)
 N HMPDLG,I,J,W,ID,TYPE,X,Y
"RTN","HMPDPSOR",151,0)
 I '$D(ORDIALOG) S ORDIALOG=129 D GETDLG1^ORCD(129)
"RTN","HMPDPSOR",152,0)
 D GETORDER^ORCD(+$G(ORIFN),"HMPDLG")
"RTN","HMPDPSOR",153,0)
 S I=0 F  S I=$O(HMPDLG(I)) Q:I<1  D
"RTN","HMPDPSOR",154,0)
 . S ID=$P($G(ORDIALOG(I)),U,2) Q:'$L(ID)
"RTN","HMPDPSOR",155,0)
 . S TYPE=$P($G(ORDIALOG(I,0)),U)
"RTN","HMPDPSOR",156,0)
 . S J=0 F  S J=$O(HMPDLG(I,J)) Q:J<1  I $D(HMPDLG(I,J)) D
"RTN","HMPDPSOR",157,0)
 .. S X=HMPDLG(I,J) I TYPE'="W" S RESP(ID,J)=X Q
"RTN","HMPDPSOR",158,0)
 .. S Y=$G(@X@(1,0)),W=1 F  S W=$O(@X@(W)) Q:W<1  S Y=Y_$S($E(Y,$L(Y))'=" ":" ",1:"")_$G(@X@(W,0))
"RTN","HMPDPSOR",159,0)
 .. S:$L(Y) RESP(ID,J)=Y
"RTN","HMPDPSOR",160,0)
 Q
"RTN","HMPDPT")
0^62^B70429024
"RTN","HMPDPT",1,0)
HMPDPT ;SLC/MKB -- Patient demographics extract ;8/11/11  15:29
"RTN","HMPDPT",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDPT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDPT",4,0)
 ;
"RTN","HMPDPT",5,0)
 ; External References          DBIA#
"RTN","HMPDPT",6,0)
 ; -------------------          -----
"RTN","HMPDPT",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDPT",8,0)
 ; ^DGSL(38.1                     767
"RTN","HMPDPT",9,0)
 ; ^DIC(4                       10090
"RTN","HMPDPT",10,0)
 ; ^DIC(31                        733
"RTN","HMPDPT",11,0)
 ; ^DIC(42                  723,10039
"RTN","HMPDPT",12,0)
 ; ^DPT               3581,5597,10035
"RTN","HMPDPT",13,0)
 ; DGCV                          4156
"RTN","HMPDPT",14,0)
 ; DGMSTAPI                      2716
"RTN","HMPDPT",15,0)
 ; DGNTAPI                       3457
"RTN","HMPDPT",16,0)
 ; DGPFAPI                       3860
"RTN","HMPDPT",17,0)
 ; DGRPDB                        4807
"RTN","HMPDPT",18,0)
 ; DILFD                         2055
"RTN","HMPDPT",19,0)
 ; DIQ                           2056
"RTN","HMPDPT",20,0)
 ; MPIF001                       2701
"RTN","HMPDPT",21,0)
 ; SDUTL3                        1252
"RTN","HMPDPT",22,0)
 ; VADPT                        10061
"RTN","HMPDPT",23,0)
 ; VAFCTFU1                      2990
"RTN","HMPDPT",24,0)
 ; VASITE                       10112
"RTN","HMPDPT",25,0)
 ; XUAF4                         2171
"RTN","HMPDPT",26,0)
 ;
"RTN","HMPDPT",27,0)
 ; ------------ Get data from VistA ------------
"RTN","HMPDPT",28,0)
 ;
"RTN","HMPDPT",29,0)
EN(DFN,BEG,END,MAX,ID) ; -- find current patient demographics
"RTN","HMPDPT",30,0)
 ; [BEG,END,MAX,ID not currently used]
"RTN","HMPDPT",31,0)
 S DFN=+$G(DFN) Q:DFN<1  ;invalid patient
"RTN","HMPDPT",32,0)
 N PAT,SYS S SYS=$$SITE^VASITE
"RTN","HMPDPT",33,0)
 D DEM,SVC,PRF,ATC,SUPP,ALIAS,FAC
"RTN","HMPDPT",34,0)
 I $D(PAT)>9 D XML(.PAT)
"RTN","HMPDPT",35,0)
 Q
"RTN","HMPDPT",36,0)
 ;
"RTN","HMPDPT",37,0)
DEM ;-demographic data
"RTN","HMPDPT",38,0)
 N VADM,VA,VAERR,X
"RTN","HMPDPT",39,0)
 S X=+$$GETICN^MPIF001(DFN) S:X>1 PAT("icn")=X
"RTN","HMPDPT",40,0)
 D DEM^VADPT S X=VADM(1),PAT("fullName")=X
"RTN","HMPDPT",41,0)
 S PAT("familyName")=$P(X,","),PAT("givenNames")=$P(X,",",2,99)
"RTN","HMPDPT",42,0)
 S PAT("ssn")=$P(VADM(2),U),PAT("id")=DFN
"RTN","HMPDPT",43,0)
 S:$D(VA("BID")) PAT("bid")=$E(X)_VA("BID")
"RTN","HMPDPT",44,0)
 S PAT("dob")=+$P($P(VADM(3),U),".")
"RTN","HMPDPT",45,0)
 S PAT("gender")=$P(VADM(5),U)
"RTN","HMPDPT",46,0)
 S PAT("lrdfn")=+$G(^DPT(DFN,"LR"))
"RTN","HMPDPT",47,0)
 S X=+$P($P(VADM(6),U),".") S:X PAT("died")=X
"RTN","HMPDPT",48,0)
 S X=$$GET1^DIQ(38.1,DFN_",",2,"I") S:$L(X) PAT("sensitive")=X
"RTN","HMPDPT",49,0)
 S X=+VADM(9) S:X PAT("religion")=X
"RTN","HMPDPT",50,0)
 S X=$P(VADM(10),U,2) S:$L(X) PAT("maritalStatus")=$E(X)
"RTN","HMPDPT",51,0)
 I VADM(11) D
"RTN","HMPDPT",52,0)
 . N I S I=0
"RTN","HMPDPT",53,0)
 . F  S I=$O(VADM(11,I)) Q:I<1  S X=+VADM(11,I),PAT("ethnicity",X)=$$GET1^DIQ(2.06,X_","_DFN_",",".01:3")
"RTN","HMPDPT",54,0)
 I VADM(12) D
"RTN","HMPDPT",55,0)
 . N I S I=0
"RTN","HMPDPT",56,0)
 . F  S I=$O(VADM(12,I)) Q:I<1  S X=+VADM(12,I),PAT("race",X)=$$GET1^DIQ(2.02,X_","_DFN_",",".01:3")
"RTN","HMPDPT",57,0)
 Q
"RTN","HMPDPT",58,0)
SVC ;-service data
"RTN","HMPDPT",59,0)
 N VAEL,VASV,VAERR,X,Y,I,AO,IR,PGF,HNC,MST,CV
"RTN","HMPDPT",60,0)
 D 7^VADPT
"RTN","HMPDPT",61,0)
 S PAT("veteran")=VAEL(4)
"RTN","HMPDPT",62,0)
 S PAT("sc")=+VAEL(3) S:VAEL(3) PAT("scPercent")=+$P(VAEL(3),U,2)
"RTN","HMPDPT",63,0)
 ;
"RTN","HMPDPT",64,0)
 ; exposures
"RTN","HMPDPT",65,0)
 S AO=VASV(2),IR=VASV(3)
"RTN","HMPDPT",66,0)
 S PGF=VASV(11)!VASV(12)!VASV(13) ;OIF/OEF
"RTN","HMPDPT",67,0)
 S X=$$GETCUR^DGNTAPI(DFN,"HNC"),X=+($G(HNC("STAT")))
"RTN","HMPDPT",68,0)
 S HNC=$S(X=4:1,X=5:1,X=1:0,X=6:0,1:"")
"RTN","HMPDPT",69,0)
 S X=$P($$GETSTAT^DGMSTAPI(DFN),U,2),MST=$S(X="Y":1,X="N":0,1:"")
"RTN","HMPDPT",70,0)
 S X=$$CVEDT^DGCV(DFN),CV=$S(+X<0:"",+X=0:0,$P(X,U,3):1,1:0)
"RTN","HMPDPT",71,0)
 S PAT("exposures")=AO_U_IR_U_PGF_U_HNC_U_MST_U_CV
"RTN","HMPDPT",72,0)
 ;
"RTN","HMPDPT",73,0)
 ; rated disabilities [DGRPDB]
"RTN","HMPDPT",74,0)
 N HMPDIS,DIS,NM,DX
"RTN","HMPDPT",75,0)
 D RDIS^DGRPDB(DFN,.HMPDIS)
"RTN","HMPDPT",76,0)
 S I=0 F  S I=$O(HMPDIS(I)) Q:I<1  D
"RTN","HMPDPT",77,0)
 . S DIS=HMPDIS(I)
"RTN","HMPDPT",78,0)
 . S NM=$$GET1^DIQ(31,+DIS_",",.01),DX=$$GET1^DIQ(31,+DIS_",",2)
"RTN","HMPDPT",79,0)
 . S PAT("disability",+DX)=NM_U_$P(DIS,U,2,3) ;name^%^sc
"RTN","HMPDPT",80,0)
 Q
"RTN","HMPDPT",81,0)
PRF ;-patient record flags
"RTN","HMPDPT",82,0)
 N HMPPF,I,NAME,TEXT
"RTN","HMPDPT",83,0)
 Q:'$$GETACT^DGPFAPI(DFN,"HMPPF")
"RTN","HMPDPT",84,0)
 S I=0 F  S I=$O(HMPPF(I)) Q:I<1  D
"RTN","HMPDPT",85,0)
 . S NAME=$P(HMPPF(I,"FLAG"),U,2)
"RTN","HMPDPT",86,0)
 . M TEXT=HMPPF(I,"NARR")
"RTN","HMPDPT",87,0)
 . S PAT("flag",I)=NAME_U_$$STRING^HMPD(.TEXT)
"RTN","HMPDPT",88,0)
 Q
"RTN","HMPDPT",89,0)
ATC ;-address & telecom
"RTN","HMPDPT",90,0)
 N VAPA,I,X
"RTN","HMPDPT",91,0)
 S VAPA("P")="" D ADD^VADPT ;permanent address
"RTN","HMPDPT",92,0)
 S X="" F I=1:1:4 S X=X_VAPA(I)_U
"RTN","HMPDPT",93,0)
 S X=X_$P(VAPA(5),U,2)_U_$P(VAPA(11),U,2)
"RTN","HMPDPT",94,0)
 S PAT("address")=X ;street1^st2^st3^city^state^zip
"RTN","HMPDPT",95,0)
 S X=$$FORMAT(VAPA(8))_U_$$FORMAT($$GET1^DIQ(2,DFN_",",.134))_U_$$FORMAT($$GET1^DIQ(2,DFN_",",.132))
"RTN","HMPDPT",96,0)
 S PAT("telecom")=X ;home^cell^work phones
"RTN","HMPDPT",97,0)
 Q
"RTN","HMPDPT",98,0)
SUPP ;-support contacts
"RTN","HMPDPT",99,0)
 N VAOA,A,I,X,TYPE
"RTN","HMPDPT",100,0)
 F A="",1 K VAOA D
"RTN","HMPDPT",101,0)
 . S:A VAOA("A")=A D OAD^VADPT Q:'$L($G(VAOA(9)))
"RTN","HMPDPT",102,0)
 . S TYPE=$S(A=1:"ECON",1:"NOK")
"RTN","HMPDPT",103,0)
 . S PAT("support",TYPE)=VAOA(9)_U_VAOA(10) ;name^relationship
"RTN","HMPDPT",104,0)
 . S X="" F I=1:1:4 S X=X_VAOA(I)_U
"RTN","HMPDPT",105,0)
 . S X=X_$P(VAOA(5),U,2)_U_$P(VAOA(11),U,2)
"RTN","HMPDPT",106,0)
 . S PAT("support",TYPE,"address")=X ;street1^st2^st3^city^state^zip
"RTN","HMPDPT",107,0)
 . S I=$S(A=1:.33011,1:.21011),X=$$FORMAT(VAOA(8))_U_U_$$FORMAT($$GET1^DIQ(2,DFN_",",I))
"RTN","HMPDPT",108,0)
 . S PAT("support",TYPE,"telecom")=X ;home^cell^work phones
"RTN","HMPDPT",109,0)
 Q
"RTN","HMPDPT",110,0)
ALIAS ;-other names used
"RTN","HMPDPT",111,0)
 N I,X
"RTN","HMPDPT",112,0)
 S I=0 F  S I=$O(^DPT(DFN,.01,I)) Q:I<1  S X=$G(^(I,0)) D
"RTN","HMPDPT",113,0)
 . S PAT("alias",I)=$P(X,U)
"RTN","HMPDPT",114,0)
 Q
"RTN","HMPDPT",115,0)
FORMAT(X) ; -- enforce (xxx)xxx-xxxx phone format
"RTN","HMPDPT",116,0)
 S X=$G(X) I X?1"("3N1")"3N1"-"4N.E Q X
"RTN","HMPDPT",117,0)
 N P,N,I,Y S P=""
"RTN","HMPDPT",118,0)
 F I=1:1:$L(X) S N=$E(X,I) I N=+N S P=P_N
"RTN","HMPDPT",119,0)
 S:$L(P)<10 P=$E("0000000000",1,10-$L(P))_P
"RTN","HMPDPT",120,0)
 S Y=$S(P:"("_$E(P,1,3)_")"_$E(P,4,6)_"-"_$E(P,7,10),1:"")
"RTN","HMPDPT",121,0)
 Q Y
"RTN","HMPDPT",122,0)
FAC ;-treating facilities [see FACLIST^ORWCIRN]
"RTN","HMPDPT",123,0)
 N IFN S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDPT",124,0)
 N HMPY,HOME,LAST,I,X,IEN
"RTN","HMPDPT",125,0)
 I $L($T(TFL^VAFCTFU1)) D TFL^VAFCTFU1(.HMPY,DFN)
"RTN","HMPDPT",126,0)
 S HOME=+$P($G(^DPT(DFN,"MPI")),U,3) ;home facility
"RTN","HMPDPT",127,0)
 I $P($G(HMPY(1)),U)<0 D  Q  ;not setup
"RTN","HMPDPT",128,0)
 . S X=$O(^AUPNVSIT("AA",DFN,0)),LAST=$S(X:9999999-$P(X,"."),1:"")
"RTN","HMPDPT",129,0)
 . S X=$$SITE^VASITE
"RTN","HMPDPT",130,0)
 . S PAT("facility",+X)=$P(X,U,3)_U_$P(X,U,2)_U_LAST_U_$$GET1^DIQ(4,+X_",",60)
"RTN","HMPDPT",131,0)
 S I=0 F  S I=$O(HMPY(I)) Q:I<1  D
"RTN","HMPDPT",132,0)
 . S X=HMPY(I) Q:$P(X,U)=""  ;unknown
"RTN","HMPDPT",133,0)
 . S IEN=+$$IEN^XUAF4($P(X,U))
"RTN","HMPDPT",134,0)
 . I +X=776!(+X=200) S $P(X,U,2)="DEPT. OF DEFENSE"
"RTN","HMPDPT",135,0)
 . S PAT("facility",IEN)=$P(X,U,1,3) ;stn# ^ name ^ last date ^ VistA domain
"RTN","HMPDPT",136,0)
 . S $P(PAT("facility",IEN),U,4)=$$GET1^DIQ(4,IEN_",",60)
"RTN","HMPDPT",137,0)
 . I IEN=HOME S $P(PAT("facility",IEN),U,5)=1
"RTN","HMPDPT",138,0)
 Q
"RTN","HMPDPT",139,0)
 ;
"RTN","HMPDPT",140,0)
INPT ;-current inpt status data
"RTN","HMPDPT",141,0)
 N ADM,X
"RTN","HMPDPT",142,0)
 S ADM=+$G(^DPT(DFN,.105)) I ADM D
"RTN","HMPDPT",143,0)
 . N VAIN,VAERR,HLOC,SVC
"RTN","HMPDPT",144,0)
 . D INP^VADPT S PAT("admitted")=ADM_U_+VAIN(7)
"RTN","HMPDPT",145,0)
 . S PAT("ward")=VAIN(4),PAT("roomBed")=VAIN(5)
"RTN","HMPDPT",146,0)
 . S HLOC=+$G(^DIC(42,+VAIN(4),44)),SVC=$P($G(^(0)),U,3)
"RTN","HMPDPT",147,0)
 . S PAT("location")=HLOC_U_$P(VAIN(4),U,2)
"RTN","HMPDPT",148,0)
 . S:$L(SVC) PAT("locSvc")=SVC_U_$$EXTERNAL^DILFD(42,.03,,SVC)
"RTN","HMPDPT",149,0)
 . S PAT("specialty")=VAIN(3)
"RTN","HMPDPT",150,0)
 . S PAT("attending")=VAIN(11)
"RTN","HMPDPT",151,0)
 . S X=$$FAC^HMPD(HLOC),PAT("site")=X
"RTN","HMPDPT",152,0)
 S PAT("inpatient")=$S(ADM:"true",1:"false")
"RTN","HMPDPT",153,0)
 S X=$$OUTPTPR^SDUTL3(DFN) S:X PAT("pcProvider")=X
"RTN","HMPDPT",154,0)
 S X=$$OUTPTTM^SDUTL3(DFN) S:X PAT("pcTeam")=X
"RTN","HMPDPT",155,0)
 Q
"RTN","HMPDPT",156,0)
 ;
"RTN","HMPDPT",157,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDPT",158,0)
 ;
"RTN","HMPDPT",159,0)
XML(ITEM) ; -- Return patient data as XML in @HMP@(n)
"RTN","HMPDPT",160,0)
 ; as <element code='123' displayName='ABC' />
"RTN","HMPDPT",161,0)
 N ATT,X,Y,I,ID
"RTN","HMPDPT",162,0)
 D ADD("<patient>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDPT",163,0)
 S ATT="" F  S ATT=$O(ITEM(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDPT",164,0)
 . I ATT="exposures" D:X["1"  S Y="" Q
"RTN","HMPDPT",165,0)
 .. S I=0,Y="<exposures>" D ADD(Y)
"RTN","HMPDPT",166,0)
 .. F ID="AO","IR","PG","HNC","MST","CV" S I=I+1 I $P(X,U,I) S Y="<exposure value='"_ID_"' />" D ADD(Y)
"RTN","HMPDPT",167,0)
 .. D ADD("</exposures>")
"RTN","HMPDPT",168,0)
 . I $L($O(ITEM(ATT,""))) D  Q  ;multiples
"RTN","HMPDPT",169,0)
 .. S ID=$S($E(ATT,$L(ATT))="s":ATT_"es",$E(ATT,$L(ATT))="y":$E(ATT,1,$L(ATT)-1)_"ies",1:ATT_"s")
"RTN","HMPDPT",170,0)
 .. D ADD("<"_ID_">")
"RTN","HMPDPT",171,0)
 .. S I="" F  S I=$O(ITEM(ATT,I)) Q:I=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDPT",172,0)
 ... S X=ITEM(ATT,I),Y="<"_ATT_" "
"RTN","HMPDPT",173,0)
 ... I ATT="support" D  S Y="" Q
"RTN","HMPDPT",174,0)
 .... S Y=Y_"contactType='"_I_"' name='"_$$ESC^HMPD($P(X,U))_$S($L($P(X,U,2)):"' relationship='"_$$ESC^HMPD($P(X,U,2)),1:"")_"' >" D ADD(Y)
"RTN","HMPDPT",175,0)
 .... S X=$G(ITEM(ATT,I,"address")) I $L(X) D ADDR(X)
"RTN","HMPDPT",176,0)
 .... S X=$G(ITEM(ATT,I,"telecom")) I $L(X) D PHONE(X)
"RTN","HMPDPT",177,0)
 .... D ADD("</support>")
"RTN","HMPDPT",178,0)
 ... I ATT="alias" S Y=Y_"fullName='"_$$ESC^HMPD(X)_$S(X[",":"' familyName='"_$$ESC^HMPD($P(X,","))_"' givenNames='"_$$ESC^HMPD($P(X,",",2,99)),1:"")_"' />" Q
"RTN","HMPDPT",179,0)
 ... I ATT="flag" S Y=Y_"name='"_$$ESC^HMPD($P(X,U))_"' text='"_$$ESC^HMPD($P(X,U,2))_"' />" Q
"RTN","HMPDPT",180,0)
 ... I ATT="facility" S Y=Y_"code='"_$P(X,U)_"' name='"_$$ESC^HMPD($P(X,U,2))_"'"_$S($P(X,U,3):" latestDate='"_$P($P(X,U,3),".")_"'",1:"")_$S($L($P(X,U,4))>0:" domain='"_$P(X,U,4)_"'",1:"")_$S($P(X,U,5):" homeSite='1'",1:"")_" />" Q
"RTN","HMPDPT",181,0)
 ... I ATT="disability" S Y=Y_"vaCode='"_I_"' printName='"_$$ESC^HMPD($P(X,U))_$S($P(X,U,3):"' sc='"_$P(X,U,3)_"' scPercent='"_$P(X,U,2),1:"")_"' />" Q
"RTN","HMPDPT",182,0)
 ... S Y=Y_"value='"_$$ESC^HMPD(ITEM(ATT,I))_"' />"
"RTN","HMPDPT",183,0)
 .. D ADD("</"_ID_">") S Y=""
"RTN","HMPDPT",184,0)
 . S X=$G(ITEM(ATT)),Y="" Q:'$L(X)
"RTN","HMPDPT",185,0)
 . I ATT="address" D ADDR(X) S Y="" Q
"RTN","HMPDPT",186,0)
 . I ATT="telecom" D PHONE(X) S Y="" Q
"RTN","HMPDPT",187,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDPT",188,0)
 . S Y="<"_ATT_" code='"_$P(X,U)_"' name='"_$$ESC^HMPD($P(X,U,2))_"' />"
"RTN","HMPDPT",189,0)
 D ADD("</patient>")
"RTN","HMPDPT",190,0)
 Q
"RTN","HMPDPT",191,0)
 ;
"RTN","HMPDPT",192,0)
ADDR(X) ; -- XML address node from X=street1^st2^st3^city^state^zip
"RTN","HMPDPT",193,0)
 N I,Y Q:$L(X)'>5  ;no data
"RTN","HMPDPT",194,0)
 S Y="<address"
"RTN","HMPDPT",195,0)
 F I=1,2,3 I $L($P(X,U,I)) S Y=Y_" streetLine"_I_"='"_$$ESC^HMPD($P(X,U,I))_"'"
"RTN","HMPDPT",196,0)
 I $L($P(X,U,4)) S Y=Y_" city='"_$$ESC^HMPD($P(X,U,4))_"'"
"RTN","HMPDPT",197,0)
 I $L($P(X,U,5)) S Y=Y_" stateProvince='"_$P(X,U,5)_"'"
"RTN","HMPDPT",198,0)
 I $L($P(X,U,6)) S Y=Y_" postalCode='"_$P(X,U,6)_"'"
"RTN","HMPDPT",199,0)
 S Y=Y_" />" D ADD(Y)
"RTN","HMPDPT",200,0)
 Q
"RTN","HMPDPT",201,0)
 ;
"RTN","HMPDPT",202,0)
PHONE(X) ; -- XML telecom node from X=home^cell^work numbers
"RTN","HMPDPT",203,0)
 N I,Y Q:$L(X)'>2  ;no data
"RTN","HMPDPT",204,0)
 D ADD("<telecomList>")
"RTN","HMPDPT",205,0)
 I $L($P(X,U,1)) S Y="<telecom usageType='H' value='"_$P(X,U,1)_"' />" D ADD(Y)
"RTN","HMPDPT",206,0)
 I $L($P(X,U,2)) S Y="<telecom usageType='MC' value='"_$P(X,U,2)_"' />" D ADD(Y)
"RTN","HMPDPT",207,0)
 I $L($P(X,U,3)) S Y="<telecom usageType='WP' value='"_$P(X,U,3)_"' />" D ADD(Y)
"RTN","HMPDPT",208,0)
 D ADD("</telecomList>")
"RTN","HMPDPT",209,0)
 Q
"RTN","HMPDPT",210,0)
 ;
"RTN","HMPDPT",211,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDPT",212,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDPT",213,0)
 S @HMP@(HMPI)=X
"RTN","HMPDPT",214,0)
 Q
"RTN","HMPDPXAM")
0^63^B9554968
"RTN","HMPDPXAM",1,0)
HMPDPXAM ;SLC/MKB -- PCE V Exams ;8/2/11  15:29
"RTN","HMPDPXAM",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDPXAM",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDPXAM",4,0)
 ;
"RTN","HMPDPXAM",5,0)
 ; External References          DBIA#
"RTN","HMPDPXAM",6,0)
 ; -------------------          -----
"RTN","HMPDPXAM",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDPXAM",8,0)
 ; ^PXRMINDX                     4290
"RTN","HMPDPXAM",9,0)
 ; DILFD                         2055
"RTN","HMPDPXAM",10,0)
 ; PXPXRM                        4250
"RTN","HMPDPXAM",11,0)
 ; XUAF4                         2171
"RTN","HMPDPXAM",12,0)
 ;
"RTN","HMPDPXAM",13,0)
 ; ------------ Get data from VistA ------------
"RTN","HMPDPXAM",14,0)
 ;
"RTN","HMPDPXAM",15,0)
EN(DFN,BEG,END,MAX,IFN) ; -- find a patient's exams
"RTN","HMPDPXAM",16,0)
 S DFN=+$G(DFN) Q:DFN<1  ;invalid patient
"RTN","HMPDPXAM",17,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDPXAM",18,0)
 N HMPIDT,HMPN,HMPITM,HMPCNT
"RTN","HMPDPXAM",19,0)
 ;
"RTN","HMPDPXAM",20,0)
 ; get one exam
"RTN","HMPDPXAM",21,0)
 I $G(IFN) D  Q
"RTN","HMPDPXAM",22,0)
 . N ITM,DATE K ^TMP("HMPPX",$J)
"RTN","HMPDPXAM",23,0)
 . S ITM=0 F  S ITM=$O(^PXRMINDX(9000010.13,"PI",+$G(DFN),ITM)) Q:ITM<1  D  Q:$D(HMPITM)
"RTN","HMPDPXAM",24,0)
 .. S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.13,"PI",+$G(DFN),ITM,DATE)) Q:DATE<1  I $D(^(DATE,IFN)) D  Q
"RTN","HMPDPXAM",25,0)
 ... S HMPIDT=9999999-DATE,^TMP("HMPPX",$J,HMPIDT,IFN)=ITM_U_DATE
"RTN","HMPDPXAM",26,0)
 ... D EN1(IFN,.HMPITM),XML(.HMPITM)
"RTN","HMPDPXAM",27,0)
 ;
"RTN","HMPDPXAM",28,0)
 ; get all exams
"RTN","HMPDPXAM",29,0)
 D SORT(DFN,BEG,END) S HMPCNT=0
"RTN","HMPDPXAM",30,0)
 S HMPIDT=0 F  S HMPIDT=$O(^TMP("HMPPX",$J,HMPIDT)) Q:HMPIDT<1  D  Q:HMPCNT'<MAX
"RTN","HMPDPXAM",31,0)
 . S HMPN=0 F  S HMPN=$O(^TMP("HMPPX",$J,HMPIDT,HMPN)) Q:HMPN<1  D  Q:HMPCNT'<MAX
"RTN","HMPDPXAM",32,0)
 .. K HMPITM D EN1(HMPN,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDPXAM",33,0)
 .. D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDPXAM",34,0)
 K ^TMP("HMPPX",$J)
"RTN","HMPDPXAM",35,0)
 Q
"RTN","HMPDPXAM",36,0)
 ;
"RTN","HMPDPXAM",37,0)
SORT(DFN,START,STOP) ; -- build ^TMP("HMPPX",$J,9999999-DATE,DA)=ITM^DATE in range
"RTN","HMPDPXAM",38,0)
 ;  from ^PXRMINDX(9000010.13,"PI",DFN,ITM,DATE,DA)
"RTN","HMPDPXAM",39,0)
 N ITM,DATE,DA,IDT K ^TMP("HMPPX",$J)
"RTN","HMPDPXAM",40,0)
 S ITM=0 F  S ITM=$O(^PXRMINDX(9000010.13,"PI",+$G(DFN),ITM)) Q:ITM<1  D
"RTN","HMPDPXAM",41,0)
 . S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.13,"PI",+$G(DFN),ITM,DATE)) Q:DATE<1  D
"RTN","HMPDPXAM",42,0)
 .. Q:DATE<START  Q:DATE>STOP  S IDT=9999999-DATE
"RTN","HMPDPXAM",43,0)
 .. S DA=0 F  S DA=$O(^PXRMINDX(9000010.13,"PI",+$G(DFN),ITM,DATE,DA)) Q:DA<1  S ^TMP("HMPPX",$J,IDT,DA)=ITM_U_DATE
"RTN","HMPDPXAM",44,0)
 Q
"RTN","HMPDPXAM",45,0)
 ;
"RTN","HMPDPXAM",46,0)
EN1(IEN,PCE) ; -- return an exam in PCE("attribute")=value
"RTN","HMPDPXAM",47,0)
 ;  from EN: expects ^TMP("HMPPX",$J,HMPIDT,IEN)=ITM^DATE
"RTN","HMPDPXAM",48,0)
 N HMPF,TMP,VISIT,X0,FAC,LOC,X K PCE
"RTN","HMPDPXAM",49,0)
 D VXAM^PXPXRM(IEN,.HMPF)
"RTN","HMPDPXAM",50,0)
 S PCE("id")=IEN,X=$G(HMPF("VALUE"))
"RTN","HMPDPXAM",51,0)
 S PCE("result")=$$EXTERNAL^DILFD(9000010.13,.04,,X)
"RTN","HMPDPXAM",52,0)
 S TMP=$G(^TMP("HMPPX",$J,HMPIDT,IEN)),PCE("dateTime")=$P(TMP,U,2)
"RTN","HMPDPXAM",53,0)
 S PCE("name")=$$EXTERNAL^DILFD(9000010.13,.01,,+TMP)
"RTN","HMPDPXAM",54,0)
 S PCE("comment")=$G(HMPF("COMMENTS"))
"RTN","HMPDPXAM",55,0)
 S VISIT=$G(HMPF("VISIT")),PCE("encounter")=VISIT
"RTN","HMPDPXAM",56,0)
 S X0=$G(^AUPNVSIT(+VISIT,0))
"RTN","HMPDPXAM",57,0)
 S FAC=+$P(X0,U,6),LOC=+$P(X0,U,22)
"RTN","HMPDPXAM",58,0)
 S:FAC PCE("facility")=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDPXAM",59,0)
 S:'FAC PCE("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDPXAM",60,0)
 Q
"RTN","HMPDPXAM",61,0)
 ;
"RTN","HMPDPXAM",62,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDPXAM",63,0)
 ;
"RTN","HMPDPXAM",64,0)
XML(PCE) ; -- Return patient data as XML in @HMP@(n)
"RTN","HMPDPXAM",65,0)
 ; as <element code='123' displayName='ABC' />
"RTN","HMPDPXAM",66,0)
 N ATT,X,Y,I,ID
"RTN","HMPDPXAM",67,0)
 D ADD("<exam>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDPXAM",68,0)
 S ATT="" F  S ATT=$O(PCE(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDPXAM",69,0)
 . S X=$G(PCE(ATT)),Y="" Q:'$L(X)
"RTN","HMPDPXAM",70,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDPXAM",71,0)
 . S Y="<"_ATT_" code='"_$P(X,U)_"' name='"_$$ESC^HMPD($P(X,U,2))_"' />"
"RTN","HMPDPXAM",72,0)
 D ADD("</exam>")
"RTN","HMPDPXAM",73,0)
 Q
"RTN","HMPDPXAM",74,0)
 ;
"RTN","HMPDPXAM",75,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDPXAM",76,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDPXAM",77,0)
 S @HMP@(HMPI)=X
"RTN","HMPDPXAM",78,0)
 Q
"RTN","HMPDPXED")
0^64^B9765099
"RTN","HMPDPXED",1,0)
HMPDPXED ;SLC/MKB -- PCE V Patient Education ;8/2/11  15:29
"RTN","HMPDPXED",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDPXED",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDPXED",4,0)
 ;
"RTN","HMPDPXED",5,0)
 ; External References          DBIA#
"RTN","HMPDPXED",6,0)
 ; -------------------          -----
"RTN","HMPDPXED",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDPXED",8,0)
 ; ^PXRMINDX                     4290
"RTN","HMPDPXED",9,0)
 ; DILFD                         2055
"RTN","HMPDPXED",10,0)
 ; PXPXRM                        4250
"RTN","HMPDPXED",11,0)
 ; XUAF4                         2171
"RTN","HMPDPXED",12,0)
 ;
"RTN","HMPDPXED",13,0)
 ; ------------ Get data from VistA ------------
"RTN","HMPDPXED",14,0)
 ;
"RTN","HMPDPXED",15,0)
EN(DFN,BEG,END,MAX,IFN) ; -- find a patient's education
"RTN","HMPDPXED",16,0)
 S DFN=+$G(DFN) Q:DFN<1  ;invalid patient
"RTN","HMPDPXED",17,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDPXED",18,0)
 N HMPIDT,HMPN,HMPITM,HMPCNT
"RTN","HMPDPXED",19,0)
 ;
"RTN","HMPDPXED",20,0)
 ; get one item
"RTN","HMPDPXED",21,0)
 I $G(IFN) D  Q
"RTN","HMPDPXED",22,0)
 . N ITM,DATE K ^TMP("HMPPX",$J)
"RTN","HMPDPXED",23,0)
 . S ITM=0 F  S ITM=$O(^PXRMINDX(9000010.16,"PI",+$G(DFN),ITM)) Q:ITM<1  D  Q:$D(HMPITM)
"RTN","HMPDPXED",24,0)
 .. S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.16,"PI",+$G(DFN),ITM,DATE)) Q:DATE<1  I $D(^(DATE,IFN)) D  Q
"RTN","HMPDPXED",25,0)
 ... S HMPIDT=9999999-DATE,^TMP("HMPPX",$J,HMPIDT,IFN)=ITM_U_DATE
"RTN","HMPDPXED",26,0)
 ... D EN1(IFN,.HMPITM),XML(.HMPITM)
"RTN","HMPDPXED",27,0)
 ;
"RTN","HMPDPXED",28,0)
 ; get all items
"RTN","HMPDPXED",29,0)
 D SORT(DFN,BEG,END) S HMPCNT=0
"RTN","HMPDPXED",30,0)
 S HMPIDT=0 F  S HMPIDT=$O(^TMP("HMPPX",$J,HMPIDT)) Q:HMPIDT<1  D  Q:HMPCNT'<MAX
"RTN","HMPDPXED",31,0)
 . S HMPN=0 F  S HMPN=$O(^TMP("HMPPX",$J,HMPIDT,HMPN)) Q:HMPN<1  D  Q:HMPCNT'<MAX
"RTN","HMPDPXED",32,0)
 .. K HMPITM D EN1(HMPN,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDPXED",33,0)
 .. D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDPXED",34,0)
 K ^TMP("HMPPX",$J)
"RTN","HMPDPXED",35,0)
 Q
"RTN","HMPDPXED",36,0)
 ;
"RTN","HMPDPXED",37,0)
SORT(DFN,START,STOP) ; -- build ^TMP("HMPPX",$J,9999999-DATE,DA)=ITM^DATE in range
"RTN","HMPDPXED",38,0)
 ;  from ^PXRMINDX(9000010.16,"PI",DFN,ITM,DATE,DA)
"RTN","HMPDPXED",39,0)
 N ITM,DATE,DA,IDT K ^TMP("HMPPX",$J)
"RTN","HMPDPXED",40,0)
 S ITM=0 F  S ITM=$O(^PXRMINDX(9000010.16,"PI",+$G(DFN),ITM)) Q:ITM<1  D
"RTN","HMPDPXED",41,0)
 . S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.16,"PI",+$G(DFN),ITM,DATE)) Q:DATE<1  D
"RTN","HMPDPXED",42,0)
 .. Q:DATE<START  Q:DATE>STOP  S IDT=9999999-DATE
"RTN","HMPDPXED",43,0)
 .. S DA=0 F  S DA=$O(^PXRMINDX(9000010.16,"PI",+$G(DFN),ITM,DATE,DA)) Q:DA<1  S ^TMP("HMPPX",$J,IDT,DA)=ITM_U_DATE
"RTN","HMPDPXED",44,0)
 Q
"RTN","HMPDPXED",45,0)
 ;
"RTN","HMPDPXED",46,0)
EN1(IEN,PCE) ; -- return education in PCE("attribute")=value
"RTN","HMPDPXED",47,0)
 ;  from EN: expects ^TMP("HMPPX",$J,HMPIDT,IEN)=ITM^DATE
"RTN","HMPDPXED",48,0)
 N HMPF,TMP,VISIT,X0,FAC,LOC,X K PCE
"RTN","HMPDPXED",49,0)
 D VPEDU^PXPXRM(IEN,.HMPF)
"RTN","HMPDPXED",50,0)
 S PCE("id")=IEN,X=$G(HMPF("VALUE"))
"RTN","HMPDPXED",51,0)
 S PCE("result")=$$EXTERNAL^DILFD(9000010.16,.06,,X)
"RTN","HMPDPXED",52,0)
 S TMP=$G(^TMP("HMPPX",$J,HMPIDT,IEN)),PCE("dateTime")=$P(TMP,U,2)
"RTN","HMPDPXED",53,0)
 S PCE("name")=$$EXTERNAL^DILFD(9000010.16,.01,,+TMP)
"RTN","HMPDPXED",54,0)
 S PCE("comment")=$G(HMPF("COMMENTS"))
"RTN","HMPDPXED",55,0)
 S VISIT=$G(HMPF("VISIT")),PCE("encounter")=VISIT
"RTN","HMPDPXED",56,0)
 S X0=$G(^AUPNVSIT(+VISIT,0))
"RTN","HMPDPXED",57,0)
 S FAC=+$P(X0,U,6),LOC=+$P(X0,U,22)
"RTN","HMPDPXED",58,0)
 S:FAC PCE("facility")=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDPXED",59,0)
 S:'FAC PCE("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDPXED",60,0)
 Q
"RTN","HMPDPXED",61,0)
 ;
"RTN","HMPDPXED",62,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDPXED",63,0)
 ;
"RTN","HMPDPXED",64,0)
XML(PCE) ; -- Return patient data as XML in @HMP@(n)
"RTN","HMPDPXED",65,0)
 ; as <element code='123' displayName='ABC' />
"RTN","HMPDPXED",66,0)
 N ATT,X,Y,I,ID
"RTN","HMPDPXED",67,0)
 D ADD("<educationTopic>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDPXED",68,0)
 S ATT="" F  S ATT=$O(PCE(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDPXED",69,0)
 . S X=$G(PCE(ATT)),Y="" Q:'$L(X)
"RTN","HMPDPXED",70,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDPXED",71,0)
 . S Y="<"_ATT_" code='"_$P(X,U)_"' name='"_$$ESC^HMPD($P(X,U,2))_"' />"
"RTN","HMPDPXED",72,0)
 D ADD("</educationTopic>")
"RTN","HMPDPXED",73,0)
 Q
"RTN","HMPDPXED",74,0)
 ;
"RTN","HMPDPXED",75,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDPXED",76,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDPXED",77,0)
 S @HMP@(HMPI)=X
"RTN","HMPDPXED",78,0)
 Q
"RTN","HMPDPXHF")
0^65^B10000962
"RTN","HMPDPXHF",1,0)
HMPDPXHF ;SLC/MKB -- PCE Health Factors ;8/2/11  15:29
"RTN","HMPDPXHF",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDPXHF",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDPXHF",4,0)
 ;
"RTN","HMPDPXHF",5,0)
 ; External References          DBIA#
"RTN","HMPDPXHF",6,0)
 ; -------------------          -----
"RTN","HMPDPXHF",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDPXHF",8,0)
 ; ^AUTTHF                       4295
"RTN","HMPDPXHF",9,0)
 ; ^PXRMINDX                     4290
"RTN","HMPDPXHF",10,0)
 ; DILFD                         2055
"RTN","HMPDPXHF",11,0)
 ; DIQ                           2056
"RTN","HMPDPXHF",12,0)
 ; PXPXRM                        4250
"RTN","HMPDPXHF",13,0)
 ; XUAF4                         2171
"RTN","HMPDPXHF",14,0)
 ;
"RTN","HMPDPXHF",15,0)
 ; ------------ Get data from VistA ------------
"RTN","HMPDPXHF",16,0)
 ;
"RTN","HMPDPXHF",17,0)
EN(DFN,BEG,END,MAX,IFN) ; -- find a patient's health factors
"RTN","HMPDPXHF",18,0)
 S DFN=+$G(DFN) Q:DFN<1  ;invalid patient
"RTN","HMPDPXHF",19,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDPXHF",20,0)
 N HMPIDT,HMPN,HMPITM,HMPCNT
"RTN","HMPDPXHF",21,0)
 ;
"RTN","HMPDPXHF",22,0)
 ; get one health factor
"RTN","HMPDPXHF",23,0)
 I $G(IFN) D  Q
"RTN","HMPDPXHF",24,0)
 . N HF,DATE K ^TMP("HMPHF",$J)
"RTN","HMPDPXHF",25,0)
 . S HF=0 F  S HF=$O(^PXRMINDX(9000010.23,"PI",+$G(DFN),HF)) Q:HF<1  D  Q:$D(HMPITM)
"RTN","HMPDPXHF",26,0)
 .. S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.23,"PI",+$G(DFN),HF,DATE)) Q:DATE<1  I $D(^(DATE,IFN)) D  Q
"RTN","HMPDPXHF",27,0)
 ... S HMPIDT=9999999-DATE,^TMP("HMPHF",$J,HMPIDT,IFN)=HF_U_DATE
"RTN","HMPDPXHF",28,0)
 ... D EN1(IFN,.HMPITM),XML(.HMPITM)
"RTN","HMPDPXHF",29,0)
 ;
"RTN","HMPDPXHF",30,0)
 ; get all health factors
"RTN","HMPDPXHF",31,0)
 D SORT(DFN,BEG,END) S HMPCNT=0
"RTN","HMPDPXHF",32,0)
 S HMPIDT=0 F  S HMPIDT=$O(^TMP("HMPHF",$J,HMPIDT)) Q:HMPIDT<1  D  Q:HMPCNT'<MAX
"RTN","HMPDPXHF",33,0)
 . S HMPN=0 F  S HMPN=$O(^TMP("HMPHF",$J,HMPIDT,HMPN)) Q:HMPN<1  D  Q:HMPCNT'<MAX
"RTN","HMPDPXHF",34,0)
 .. K HMPITM D EN1(HMPN,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDPXHF",35,0)
 .. D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDPXHF",36,0)
 K ^TMP("HMPHF",$J)
"RTN","HMPDPXHF",37,0)
 Q
"RTN","HMPDPXHF",38,0)
 ;
"RTN","HMPDPXHF",39,0)
SORT(DFN,START,STOP) ; -- build ^TMP("HMPHF",$J,9999999-DATE,DA)=HF^DATE in range
"RTN","HMPDPXHF",40,0)
 ;  from ^PXRMINDX(9000010.23,"PI",DFN,HF,DATE,DA)
"RTN","HMPDPXHF",41,0)
 N HF,DATE,DA,IDT K ^TMP("HMPHF",$J)
"RTN","HMPDPXHF",42,0)
 S HF=0 F  S HF=$O(^PXRMINDX(9000010.23,"PI",+$G(DFN),HF)) Q:HF<1  D
"RTN","HMPDPXHF",43,0)
 . S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.23,"PI",+$G(DFN),HF,DATE)) Q:DATE<1  D
"RTN","HMPDPXHF",44,0)
 .. Q:DATE<START  Q:DATE>STOP  S IDT=9999999-DATE
"RTN","HMPDPXHF",45,0)
 .. S DA=0 F  S DA=$O(^PXRMINDX(9000010.23,"PI",+$G(DFN),HF,DATE,DA)) Q:DA<1  S ^TMP("HMPHF",$J,IDT,DA)=HF_U_DATE
"RTN","HMPDPXHF",46,0)
 Q
"RTN","HMPDPXHF",47,0)
 ;
"RTN","HMPDPXHF",48,0)
EN1(IEN,HF) ; -- return a health factor in HF("attribute")=value
"RTN","HMPDPXHF",49,0)
 ;  from EN: expects ^TMP("HMPHF",$J,HMPIDT,IEN)=HF^DATE
"RTN","HMPDPXHF",50,0)
 N HMPF,TMP,VISIT,X0,FAC,LOC,X K HF
"RTN","HMPDPXHF",51,0)
 D VHF^PXPXRM(IEN,.HMPF)
"RTN","HMPDPXHF",52,0)
 S HF("id")=IEN,HF("severity")=$G(HMPF("VALUE"))
"RTN","HMPDPXHF",53,0)
 S TMP=$G(^TMP("HMPHF",$J,HMPIDT,IEN)),HF("recorded")=$P(TMP,U,2)
"RTN","HMPDPXHF",54,0)
 S HF("name")=$$EXTERNAL^DILFD(9000010.23,.01,,+TMP)
"RTN","HMPDPXHF",55,0)
 S HF("comment")=$G(HMPF("COMMENTS"))
"RTN","HMPDPXHF",56,0)
 S VISIT=$G(HMPF("VISIT")),HF("encounter")=VISIT
"RTN","HMPDPXHF",57,0)
 S X0=$G(^AUPNVSIT(+VISIT,0))
"RTN","HMPDPXHF",58,0)
 S FAC=+$P(X0,U,6),LOC=+$P(X0,U,22)
"RTN","HMPDPXHF",59,0)
 S:FAC HF("facility")=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDPXHF",60,0)
 S:'FAC HF("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDPXHF",61,0)
 S X=$$GET1^DIQ(9999999.64,+TMP_",",.03,"I")
"RTN","HMPDPXHF",62,0)
 S:X HF("category")=X_U_$$GET1^DIQ(9999999.64,+TMP_",",.03)
"RTN","HMPDPXHF",63,0)
 Q
"RTN","HMPDPXHF",64,0)
 ;
"RTN","HMPDPXHF",65,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDPXHF",66,0)
 ;
"RTN","HMPDPXHF",67,0)
XML(HF) ; -- Return patient data as XML in @HMP@(n)
"RTN","HMPDPXHF",68,0)
 ; as <element code='123' displayName='ABC' />
"RTN","HMPDPXHF",69,0)
 N ATT,X,Y,I,ID
"RTN","HMPDPXHF",70,0)
 D ADD("<factor>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDPXHF",71,0)
 S ATT="" F  S ATT=$O(HF(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDPXHF",72,0)
 . S X=$G(HF(ATT)),Y="" Q:'$L(X)
"RTN","HMPDPXHF",73,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDPXHF",74,0)
 . S Y="<"_ATT_" code='"_$P(X,U)_"' name='"_$$ESC^HMPD($P(X,U,2))_"' />"
"RTN","HMPDPXHF",75,0)
 D ADD("</factor>")
"RTN","HMPDPXHF",76,0)
 Q
"RTN","HMPDPXHF",77,0)
 ;
"RTN","HMPDPXHF",78,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDPXHF",79,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDPXHF",80,0)
 S @HMP@(HMPI)=X
"RTN","HMPDPXHF",81,0)
 Q
"RTN","HMPDPXIM")
0^66^B15776836
"RTN","HMPDPXIM",1,0)
HMPDPXIM ;SLC/MKB -- Immunizations extract ;8/2/11  15:29
"RTN","HMPDPXIM",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDPXIM",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDPXIM",4,0)
 ;
"RTN","HMPDPXIM",5,0)
 ; External References          DBIA#
"RTN","HMPDPXIM",6,0)
 ; -------------------          -----
"RTN","HMPDPXIM",7,0)
 ; ^PXRMINDX                     4290
"RTN","HMPDPXIM",8,0)
 ; ^SC                          10040
"RTN","HMPDPXIM",9,0)
 ; ^VA(200                      10060
"RTN","HMPDPXIM",10,0)
 ; DILFD                         2055
"RTN","HMPDPXIM",11,0)
 ; DIQ                           2056
"RTN","HMPDPXIM",12,0)
 ; PXAPI                         1894
"RTN","HMPDPXIM",13,0)
 ; PXPXRM                        4250
"RTN","HMPDPXIM",14,0)
 ; XUAF4                         2171
"RTN","HMPDPXIM",15,0)
 ; 
"RTN","HMPDPXIM",16,0)
 ; ------------ Get immunizations from VistA ------------
"RTN","HMPDPXIM",17,0)
 ;
"RTN","HMPDPXIM",18,0)
EN(DFN,BEG,END,MAX,IFN) ; -- find patient's immunizations
"RTN","HMPDPXIM",19,0)
 S DFN=+$G(DFN) Q:DFN<1  ;invalid patient
"RTN","HMPDPXIM",20,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999),HMPCNT=0
"RTN","HMPDPXIM",21,0)
 N HMPIDT,HMPN,HMPITM,HMPCNT
"RTN","HMPDPXIM",22,0)
 ;
"RTN","HMPDPXIM",23,0)
 ; get one immunization
"RTN","HMPDPXIM",24,0)
 I $G(IFN) D  Q
"RTN","HMPDPXIM",25,0)
 . N IMZ,DATE K ^TMP("HMPIMM",$J)
"RTN","HMPDPXIM",26,0)
 . S IMZ=0 F  S IMZ=$O(^PXRMINDX(9000010.11,"PI",+$G(DFN),IMZ)) Q:IMZ<1  D  Q:$D(HMPITM)
"RTN","HMPDPXIM",27,0)
 .. S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.11,"PI",+$G(DFN),IMZ,DATE)) Q:DATE<1  I $D(^(DATE,IFN)) D  Q
"RTN","HMPDPXIM",28,0)
 ... S HMPIDT=9999999-DATE,HMPN=IFN
"RTN","HMPDPXIM",29,0)
 ... S ^TMP("HMPIMM",$J,HMPIDT,IFN)=IMZ_U_DATE ;SORT node
"RTN","HMPDPXIM",30,0)
 ... D EN1(IFN,.HMPITM),XML(.HMPITM)
"RTN","HMPDPXIM",31,0)
 . K ^TMP("HMPIMM",$J),^TMP("PXKENC",$J)
"RTN","HMPDPXIM",32,0)
 ;
"RTN","HMPDPXIM",33,0)
 ; get all immunizations
"RTN","HMPDPXIM",34,0)
 D SORT(DFN,BEG,END) S HMPCNT=0
"RTN","HMPDPXIM",35,0)
 S HMPIDT=0 F  S HMPIDT=$O(^TMP("HMPIMM",$J,HMPIDT)) Q:HMPIDT<1  D  Q:HMPCNT'<MAX
"RTN","HMPDPXIM",36,0)
 . S HMPN=0 F  S HMPN=$O(^TMP("HMPIMM",$J,HMPIDT,HMPN)) Q:HMPN<1  D  Q:HMPCNT'<MAX
"RTN","HMPDPXIM",37,0)
 .. K HMPITM D EN1(HMPN,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDPXIM",38,0)
 .. D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDPXIM",39,0)
 K ^TMP("HMPIMM",$J),^TMP("PXKENC",$J)
"RTN","HMPDPXIM",40,0)
 Q
"RTN","HMPDPXIM",41,0)
 ;
"RTN","HMPDPXIM",42,0)
SORT(DFN,START,STOP) ; -- build ^TMP("HMPIMM",$J,9999999-DATE,DA)=IMM^DATE in range
"RTN","HMPDPXIM",43,0)
 ;  from ^PXRMINDX(9000010.11,"PI",DFN,IMM,DATE,DA)
"RTN","HMPDPXIM",44,0)
 N IMZ,DATE,DA,IDT K ^TMP("HMPIMM",$J)
"RTN","HMPDPXIM",45,0)
 S IMZ=0 F  S IMZ=$O(^PXRMINDX(9000010.11,"PI",+$G(DFN),IMZ)) Q:IMZ<1  D
"RTN","HMPDPXIM",46,0)
 . S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.11,"PI",+$G(DFN),IMZ,DATE)) Q:DATE<1  D
"RTN","HMPDPXIM",47,0)
 .. Q:DATE<START  Q:DATE>STOP  S IDT=9999999-DATE
"RTN","HMPDPXIM",48,0)
 .. S DA=0 F  S DA=$O(^PXRMINDX(9000010.11,"PI",+$G(DFN),IMZ,DATE,DA)) Q:DA<1  S ^TMP("HMPIMM",$J,IDT,DA)=IMZ_U_DATE
"RTN","HMPDPXIM",49,0)
 Q
"RTN","HMPDPXIM",50,0)
 ;
"RTN","HMPDPXIM",51,0)
EN1(IEN,IMM) ; -- return an immunization in IMM("attribute")=value
"RTN","HMPDPXIM",52,0)
 ; Expects ^TMP("HMPIMM",$J,HMPIDT,HMPN)=IMM^DATE from EN/SORT
"RTN","HMPDPXIM",53,0)
 N TMP,HMPM,VISIT,X0,FAC,LOC,X12,X,I K IMM
"RTN","HMPDPXIM",54,0)
 S TMP=$G(^TMP("HMPIMM",$J,HMPIDT,HMPN))
"RTN","HMPDPXIM",55,0)
 S IMM("id")=IEN,IMM("administered")=+$P(TMP,U,2)
"RTN","HMPDPXIM",56,0)
 S IMM("name")=$$EXTERNAL^DILFD(9000010.11,.01,,+TMP)
"RTN","HMPDPXIM",57,0)
 D VIMM^PXPXRM(IEN,.HMPM)
"RTN","HMPDPXIM",58,0)
 S X=$G(HMPM("SERIES")),IMM("series")=$$EXTERNAL^DILFD(9000010.11,.04,,X)
"RTN","HMPDPXIM",59,0)
 S X=$G(HMPM("REACTION")),IMM("reaction")=$$EXTERNAL^DILFD(9000010.11,.06,,X)
"RTN","HMPDPXIM",60,0)
 S IMM("contraindicated")=+$G(HMPM("CONTRAINDICATED"))
"RTN","HMPDPXIM",61,0)
 S IMM("comment")=$G(HMPM("COMMENTS"))
"RTN","HMPDPXIM",62,0)
 S VISIT=+$G(HMPM("VISIT")),IMM("encounter")=VISIT
"RTN","HMPDPXIM",63,0)
 I '$D(^TMP("PXKENC",$J,VISIT)) D ENCEVENT^PXAPI(VISIT,1)
"RTN","HMPDPXIM",64,0)
 S X0=$G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0))
"RTN","HMPDPXIM",65,0)
 S FAC=+$P(X0,U,6),LOC=+$P(X0,U,22)
"RTN","HMPDPXIM",66,0)
 S:FAC IMM("facility")=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDPXIM",67,0)
 S:'FAC IMM("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDPXIM",68,0)
 S IMM("location")=$P($G(^SC(LOC,0)),U)
"RTN","HMPDPXIM",69,0)
 S X12=$G(^TMP("PXKENC",$J,VISIT,"IMM",IEN,12))
"RTN","HMPDPXIM",70,0)
 S X=$P(X12,U,4) S:'X X=$P(X12,U,2)
"RTN","HMPDPXIM",71,0)
 I 'X S I=0 F  S I=$O(^TMP("PXKENC",$J,VISIT,"PRV",I)) Q:I<1  I $P($G(^(I,0)),U,4)="P" S X=+^(0) Q
"RTN","HMPDPXIM",72,0)
 S:X IMM("provider")=X_U_$P($G(^VA(200,X,0)),U)
"RTN","HMPDPXIM",73,0)
 ; CPT mapping
"RTN","HMPDPXIM",74,0)
 S X=+$$FIND1^DIC(811.1,,"QX",IEN_";AUTTIMM(","B") I X>0 D
"RTN","HMPDPXIM",75,0)
 . S Y=$$GET1^DIQ(811.1,X_",",.02,"I") Q:Y<1
"RTN","HMPDPXIM",76,0)
 . N CPT S CPT=$G(@(U_$P(Y,";",2)_+Y_",0)"))
"RTN","HMPDPXIM",77,0)
 . S IMM("cpt")=$P(CPT,U,1,2)
"RTN","HMPDPXIM",78,0)
 Q
"RTN","HMPDPXIM",79,0)
 ;
"RTN","HMPDPXIM",80,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDPXIM",81,0)
 ;
"RTN","HMPDPXIM",82,0)
XML(IMM) ; -- Return immunizations as XML
"RTN","HMPDPXIM",83,0)
 N ATT,X,Y,I,P,NAMES,TAG
"RTN","HMPDPXIM",84,0)
 D ADD("<immunization>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDPXIM",85,0)
 S ATT="" F  S ATT=$O(IMM(ATT)) Q:ATT=""  D
"RTN","HMPDPXIM",86,0)
 . S X=$G(IMM(ATT)),Y="" Q:'$L(X)
"RTN","HMPDPXIM",87,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" D ADD(Y) Q
"RTN","HMPDPXIM",88,0)
 . I $L(X)>1 D
"RTN","HMPDPXIM",89,0)
 .. S Y="<"_ATT_" "
"RTN","HMPDPXIM",90,0)
 .. F P=1:1 S TAG=$P("code^name^Z",U,P) Q:TAG="Z"  I $L($P(X,U,P)) S Y=Y_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDPXIM",91,0)
 .. S Y=Y_"/>" D ADD(Y)
"RTN","HMPDPXIM",92,0)
 D ADD("</immunization>")
"RTN","HMPDPXIM",93,0)
 Q
"RTN","HMPDPXIM",94,0)
 ;
"RTN","HMPDPXIM",95,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPDPXIM",96,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDPXIM",97,0)
 S @HMP@(HMPI)=X
"RTN","HMPDPXIM",98,0)
 Q
"RTN","HMPDPXSK")
0^67^B9640619
"RTN","HMPDPXSK",1,0)
HMPDPXSK ;SLC/MKB -- PCE V Skin Tests ;8/2/11  15:29
"RTN","HMPDPXSK",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDPXSK",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDPXSK",4,0)
 ;
"RTN","HMPDPXSK",5,0)
 ; External References          DBIA#
"RTN","HMPDPXSK",6,0)
 ; -------------------          -----
"RTN","HMPDPXSK",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDPXSK",8,0)
 ; ^PXRMINDX                     4290
"RTN","HMPDPXSK",9,0)
 ; DILFD                         2055
"RTN","HMPDPXSK",10,0)
 ; PXPXRM                        4250
"RTN","HMPDPXSK",11,0)
 ; XUAF4                         2171
"RTN","HMPDPXSK",12,0)
 ;
"RTN","HMPDPXSK",13,0)
 ; ------------ Get data from VistA ------------
"RTN","HMPDPXSK",14,0)
 ;
"RTN","HMPDPXSK",15,0)
EN(DFN,BEG,END,MAX,IFN) ; -- find a patient's skin tests
"RTN","HMPDPXSK",16,0)
 S DFN=+$G(DFN) Q:DFN<1  ;invalid patient
"RTN","HMPDPXSK",17,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDPXSK",18,0)
 N HMPIDT,HMPN,HMPITM,HMPCNT
"RTN","HMPDPXSK",19,0)
 ;
"RTN","HMPDPXSK",20,0)
 ; get one skin test
"RTN","HMPDPXSK",21,0)
 I $G(IFN) D  Q
"RTN","HMPDPXSK",22,0)
 . N ITM,DATE K ^TMP("HMPPX",$J)
"RTN","HMPDPXSK",23,0)
 . S ITM=0 F  S ITM=$O(^PXRMINDX(9000010.12,"PI",+$G(DFN),ITM)) Q:ITM<1  D  Q:$D(HMPITM)
"RTN","HMPDPXSK",24,0)
 .. S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.12,"PI",+$G(DFN),ITM,DATE)) Q:DATE<1  I $D(^(DATE,IFN)) D  Q
"RTN","HMPDPXSK",25,0)
 ... S HMPIDT=9999999-DATE,^TMP("HMPPX",$J,HMPIDT,IFN)=ITM_U_DATE
"RTN","HMPDPXSK",26,0)
 ... D EN1(IFN,.HMPITM),XML(.HMPITM)
"RTN","HMPDPXSK",27,0)
 ;
"RTN","HMPDPXSK",28,0)
 ; get all skin tests
"RTN","HMPDPXSK",29,0)
 D SORT(DFN,BEG,END) S HMPCNT=0
"RTN","HMPDPXSK",30,0)
 S HMPIDT=0 F  S HMPIDT=$O(^TMP("HMPPX",$J,HMPIDT)) Q:HMPIDT<1  D  Q:HMPCNT'<MAX
"RTN","HMPDPXSK",31,0)
 . S HMPN=0 F  S HMPN=$O(^TMP("HMPPX",$J,HMPIDT,HMPN)) Q:HMPN<1  D  Q:HMPCNT'<MAX
"RTN","HMPDPXSK",32,0)
 .. K HMPITM D EN1(HMPN,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDPXSK",33,0)
 .. D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDPXSK",34,0)
 K ^TMP("HMPPX",$J)
"RTN","HMPDPXSK",35,0)
 Q
"RTN","HMPDPXSK",36,0)
 ;
"RTN","HMPDPXSK",37,0)
SORT(DFN,START,STOP) ; -- build ^TMP("HMPPX",$J,9999999-DATE,DA)=ITM^DATE in range
"RTN","HMPDPXSK",38,0)
 ;  from ^PXRMINDX(9000010.12,"PI",DFN,ITM,DATE,DA)
"RTN","HMPDPXSK",39,0)
 N ITM,DATE,DA,IDT K ^TMP("HMPPX",$J)
"RTN","HMPDPXSK",40,0)
 S ITM=0 F  S ITM=$O(^PXRMINDX(9000010.12,"PI",+$G(DFN),ITM)) Q:ITM<1  D
"RTN","HMPDPXSK",41,0)
 . S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.12,"PI",+$G(DFN),ITM,DATE)) Q:DATE<1  D
"RTN","HMPDPXSK",42,0)
 .. Q:DATE<START  Q:DATE>STOP  S IDT=9999999-DATE
"RTN","HMPDPXSK",43,0)
 .. S DA=0 F  S DA=$O(^PXRMINDX(9000010.12,"PI",+$G(DFN),ITM,DATE,DA)) Q:DA<1  S ^TMP("HMPPX",$J,IDT,DA)=ITM_U_DATE
"RTN","HMPDPXSK",44,0)
 Q
"RTN","HMPDPXSK",45,0)
 ;
"RTN","HMPDPXSK",46,0)
EN1(IEN,PCE) ; -- return a skin test in PCE("attribute")=value
"RTN","HMPDPXSK",47,0)
 ;  from EN: expects ^TMP("HMPPX",$J,HMPIDT,IEN)=ITM^DATE
"RTN","HMPDPXSK",48,0)
 N HMPF,TMP,VISIT,X0,FAC,LOC,X K PCE
"RTN","HMPDPXSK",49,0)
 D VSKIN^PXPXRM(IEN,.HMPF)
"RTN","HMPDPXSK",50,0)
 S PCE("id")=IEN,X=$G(HMPF("VALUE"))
"RTN","HMPDPXSK",51,0)
 S PCE("result")=$$EXTERNAL^DILFD(9000010.12,.04,,X)
"RTN","HMPDPXSK",52,0)
 S TMP=$G(^TMP("HMPPX",$J,HMPIDT,IEN)),PCE("dateTime")=$P(TMP,U,2)
"RTN","HMPDPXSK",53,0)
 S PCE("name")=$$EXTERNAL^DILFD(9000010.12,.01,,+TMP)
"RTN","HMPDPXSK",54,0)
 S PCE("comment")=$G(HMPF("COMMENTS"))
"RTN","HMPDPXSK",55,0)
 S VISIT=$G(HMPF("VISIT")),PCE("encounter")=VISIT
"RTN","HMPDPXSK",56,0)
 S X0=$G(^AUPNVSIT(+VISIT,0))
"RTN","HMPDPXSK",57,0)
 S FAC=+$P(X0,U,6),LOC=+$P(X0,U,22)
"RTN","HMPDPXSK",58,0)
 S:FAC PCE("facility")=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDPXSK",59,0)
 S:'FAC PCE("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDPXSK",60,0)
 Q
"RTN","HMPDPXSK",61,0)
 ;
"RTN","HMPDPXSK",62,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDPXSK",63,0)
 ;
"RTN","HMPDPXSK",64,0)
XML(PCE) ; -- Return patient data as XML in @HMP@(n)
"RTN","HMPDPXSK",65,0)
 ; as <element code='123' displayName='ABC' />
"RTN","HMPDPXSK",66,0)
 N ATT,X,Y,I,ID
"RTN","HMPDPXSK",67,0)
 D ADD("<skinTest>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDPXSK",68,0)
 S ATT="" F  S ATT=$O(PCE(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDPXSK",69,0)
 . S X=$G(PCE(ATT)),Y="" Q:'$L(X)
"RTN","HMPDPXSK",70,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDPXSK",71,0)
 . S Y="<"_ATT_" code='"_$P(X,U)_"' name='"_$$ESC^HMPD($P(X,U,2))_"' />"
"RTN","HMPDPXSK",72,0)
 D ADD("</skinTest>")
"RTN","HMPDPXSK",73,0)
 Q
"RTN","HMPDPXSK",74,0)
 ;
"RTN","HMPDPXSK",75,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDPXSK",76,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDPXSK",77,0)
 S @HMP@(HMPI)=X
"RTN","HMPDPXSK",78,0)
 Q
"RTN","HMPDRA")
0^68^B41653266
"RTN","HMPDRA",1,0)
HMPDRA ;SLC/MKB -- Radiology extract ;8/2/11  15:29
"RTN","HMPDRA",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDRA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDRA",4,0)
 ;
"RTN","HMPDRA",5,0)
 ; External References          DBIA#
"RTN","HMPDRA",6,0)
 ; -------------------          -----
"RTN","HMPDRA",7,0)
 ; ^RADPT                        2480
"RTN","HMPDRA",8,0)
 ; ^RARPT                        8000005
"RTN","HMPDRA",9,0)
 ; ^SC(                         10040
"RTN","HMPDRA",10,0)
 ; ^VA(200                      10060
"RTN","HMPDRA",11,0)
 ; DIQ                           2056
"RTN","HMPDRA",12,0)
 ; ICPTCOD                       1995
"RTN","HMPDRA",13,0)
 ; RAO7PC1                  2043,2265
"RTN","HMPDRA",14,0)
 ; RAO7PC3                       2877
"RTN","HMPDRA",15,0)
 ;
"RTN","HMPDRA",16,0)
 ; ------------ Get exam(s) from VistA ------------
"RTN","HMPDRA",17,0)
 ;
"RTN","HMPDRA",18,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's radiology exams
"RTN","HMPDRA",19,0)
 N HMPITM,HMPXID
"RTN","HMPDRA",20,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDRA",21,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)_"P"
"RTN","HMPDRA",22,0)
 K ^TMP($J,"RAE1") D EN1^RAO7PC1(DFN,BEG,END,MAX)
"RTN","HMPDRA",23,0)
 ;
"RTN","HMPDRA",24,0)
 ; get exam(s)
"RTN","HMPDRA",25,0)
 I $G(ID) D EN1(ID,.HMPITM),XML(.HMPITM) G ENQ
"RTN","HMPDRA",26,0)
 ;
"RTN","HMPDRA",27,0)
 ; get all exams
"RTN","HMPDRA",28,0)
 S HMPXID="" F  S HMPXID=$O(^TMP($J,"RAE1",DFN,HMPXID)) Q:HMPXID=""  D
"RTN","HMPDRA",29,0)
 . K HMPITM D EN1(HMPXID,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDRA",30,0)
 . D XML(.HMPITM)
"RTN","HMPDRA",31,0)
ENQ ; end
"RTN","HMPDRA",32,0)
 K ^TMP($J,"RAE1"),^TMP("HMPTEXT",$J)
"RTN","HMPDRA",33,0)
 Q
"RTN","HMPDRA",34,0)
 ;
"RTN","HMPDRA",35,0)
EN1(ID,EXAM) ; -- return an exam in EXAM("attribute")=value
"RTN","HMPDRA",36,0)
 ;   Expects ^TMP($J,"RAE1",DFN,ID) from EN1^RAO7PC1
"RTN","HMPDRA",37,0)
 N X0,SET,PROC,DATE,LOC,X,Y,IENS
"RTN","HMPDRA",38,0)
 K EXAM,^TMP("HMPTEXT",$J)
"RTN","HMPDRA",39,0)
 S X0=$G(^TMP($J,"RAE1",DFN,ID)),SET=$G(^(ID,"CPRS")),PROC=$P(X0,U)
"RTN","HMPDRA",40,0)
 S EXAM("id")=ID,EXAM("name")=PROC,EXAM("case")=$P(X0,U,2)
"RTN","HMPDRA",41,0)
 S DATE=9999999.9999-+ID,EXAM("dateTime")=DATE
"RTN","HMPDRA",42,0)
 I $P(X0,U,5) D  ;report exists
"RTN","HMPDRA",43,0)
 . N NM S NM=$S(+SET=2:$P(SET,U,2),1:PROC)     ;2 = shared report
"RTN","HMPDRA",44,0)
 . S EXAM("document",1)=ID_U_NM_"^^"_$P(X0,U,3) ;id^localTitle^^status
"RTN","HMPDRA",45,0)
 . S:$G(HMPTEXT) EXAM("document",1,"content")=$$TEXT(DFN,ID)
"RTN","HMPDRA",46,0)
 S:$L($P(X0,U,6)) EXAM("status")=$P($P(X0,U,6),"~",2)
"RTN","HMPDRA",47,0)
 S X=$P(X0,U,7),LOC="" I $L(X) D
"RTN","HMPDRA",48,0)
 . S LOC=+$O(^SC("B",X,0)),EXAM("location")=LOC_U_X
"RTN","HMPDRA",49,0)
 S EXAM("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDRA",50,0)
 I $L($P(X0,U,8)) S X=$TR($P(X0,U,8),"~","^"),EXAM("imagingType")=X
"RTN","HMPDRA",51,0)
 S IENS=$P(ID,"-",2)_","_+ID_","_DFN_","
"RTN","HMPDRA",52,0)
 S X=$P(X0,U,10) I X D
"RTN","HMPDRA",53,0)
 . S EXAM("type")=$$CPT(X)
"RTN","HMPDRA",54,0)
 . I $D(^TMP($J,"RAE1",DFN,ID,"CMOD")) M EXAM("modifier")=^("CMOD")
"RTN","HMPDRA",55,0)
 I $P(X0,U,11) S EXAM("order")=+$P(X0,U,11)_U_$S($L(SET):$P(SET,U,2),1:PROC)
"RTN","HMPDRA",56,0)
 S EXAM("hasImages")=$S($P(X0,U,12)="Y":1,1:0)
"RTN","HMPDRA",57,0)
 I $P(X0,U,4)="Y"!($P(X0,U,9)="Y") S EXAM("interpretation")="ABNORMAL"
"RTN","HMPDRA",58,0)
 S EXAM("encounter")=$$GET1^DIQ(70.03,IENS,27,"I")
"RTN","HMPDRA",59,0)
 S ID=DFN_U_$TR(ID,"-","^") D EN3^RAO7PC1(ID) D  ;get additional values
"RTN","HMPDRA",60,0)
 . S X=+$G(^TMP($J,"RAE2",DFN,+$P(ID,U,3),PROC,"P"))
"RTN","HMPDRA",61,0)
 . I X S EXAM("provider")=X_U_$P($G(^VA(200,X,0)),U)
"RTN","HMPDRA",62,0)
 S EXAM("category")="RA"
"RTN","HMPDRA",63,0)
 Q
"RTN","HMPDRA",64,0)
 ;
"RTN","HMPDRA",65,0)
CPT(IEN) ; -- return code^description for CPT code, or "^" if error
"RTN","HMPDRA",66,0)
 N X0,HMPX,N,I,X,Y S IEN=+$G(IEN)
"RTN","HMPDRA",67,0)
 S X0=$$CPT^ICPTCOD(IEN) I X0<0 Q "^"
"RTN","HMPDRA",68,0)
 S Y=$P(X0,U,2,3)                  ;CPT Code^Short Name
"RTN","HMPDRA",69,0)
 S N=$$CPTD^ICPTCOD($P(Y,U),"HMPX") ;CPT Description
"RTN","HMPDRA",70,0)
 I N>0,$L($G(HMPX(1))) D
"RTN","HMPDRA",71,0)
 . S X=$G(HMPX(1)),I=1
"RTN","HMPDRA",72,0)
 . F  S I=$O(HMPX(I)) Q:I<1  Q:HMPX(I)=" "  S X=X_" "_HMPX(I)
"RTN","HMPDRA",73,0)
 . S $P(Y,U,2)=X
"RTN","HMPDRA",74,0)
 Q Y
"RTN","HMPDRA",75,0)
 ;
"RTN","HMPDRA",76,0)
TEXT(PAT,ID) ; -- Get report text, return temp array name
"RTN","HMPDRA",77,0)
 S PAT=+$G(PAT),ID=$G(ID) I PAT<1!(ID<1) Q ""
"RTN","HMPDRA",78,0)
 N DFN,EXAM,CASE,PROC,I,X,Y
"RTN","HMPDRA",79,0)
 S EXAM=PAT_U_$TR(ID,"-","^") D EN3^RAO7PC3(EXAM)
"RTN","HMPDRA",80,0)
 S Y=$NA(^TMP("HMPTEXT",$J,ID)) K @Y
"RTN","HMPDRA",81,0)
 S CASE=$O(^TMP($J,"RAE3",PAT,0)),PROC=$O(^(CASE,""))
"RTN","HMPDRA",82,0)
 S I=0 F  S I=$O(^TMP($J,"RAE3",PAT,CASE,PROC,I)) Q:I<1  S X=^(I),@Y@(I)=X
"RTN","HMPDRA",83,0)
 K ^TMP($J,"RAE3",PAT)
"RTN","HMPDRA",84,0)
 Q Y
"RTN","HMPDRA",85,0)
 ;
"RTN","HMPDRA",86,0)
 ; ------------ Get report(s) [via HMPDTIU] ------------
"RTN","HMPDRA",87,0)
 ;
"RTN","HMPDRA",88,0)
RPTS(DFN,BEG,END,MAX) ; -- find patient's radiology reports
"RTN","HMPDRA",89,0)
 N HMPITM,HMPXID,STS,PSET
"RTN","HMPDRA",90,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDRA",91,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)_"P"
"RTN","HMPDRA",92,0)
 K ^TMP($J,"RAE1") D EN1^RAO7PC1(DFN,BEG,END,MAX)
"RTN","HMPDRA",93,0)
 S HMPXID="" F  S HMPXID=$O(^TMP($J,"RAE1",DFN,HMPXID)) Q:HMPXID=""  D
"RTN","HMPDRA",94,0)
 . S STS=$P($G(^TMP($J,"RAE1",DFN,HMPXID)),U,3),PSET=$G(^(HMPXID,"CPRS"))
"RTN","HMPDRA",95,0)
 . Q:STS="No Report"!(STS="Deleted")  ;!(STS["Draft") ??
"RTN","HMPDRA",96,0)
 . I +PSET=2,$G(PSET(+HMPXID,$P(PSET,U,2))) Q  ;already have report
"RTN","HMPDRA",97,0)
 . K HMPITM D RPT1(DFN,HMPXID,.HMPITM) D:$D(HMPITM) XML^HMPDTIU(.HMPITM)
"RTN","HMPDRA",98,0)
 . I +PSET=2 S PSET(+HMPXID,$P(PSET,U,2))=$P(HMPXID,"-",2) ;parent
"RTN","HMPDRA",99,0)
 K ^TMP($J,"RAE1"),^TMP("HMPTEXT",$J)
"RTN","HMPDRA",100,0)
 Q
"RTN","HMPDRA",101,0)
 ;
"RTN","HMPDRA",102,0)
RPT1(DFN,ID,RPT) ; -- return report as a TIU document
"RTN","HMPDRA",103,0)
 S DFN=+$G(DFN),ID=$G(ID) Q:DFN<1  Q:ID<1
"RTN","HMPDRA",104,0)
 N EXAM,CASE,PROC,RAE3,RAE1,I,X,Y,IENS,LOC
"RTN","HMPDRA",105,0)
 K RPT,^TMP("HMPTEXT",$J)
"RTN","HMPDRA",106,0)
 S EXAM=DFN_U_$TR(ID,"-","^") D
"RTN","HMPDRA",107,0)
 . N DFN D EN3^RAO7PC3(EXAM) ;report
"RTN","HMPDRA",108,0)
 . D EN3^RAO7PC1(EXAM)       ;add'l values
"RTN","HMPDRA",109,0)
 S CASE=$O(^TMP($J,"RAE3",DFN,0)),PROC=$O(^(CASE,"")),RAE3=$G(^(PROC))
"RTN","HMPDRA",110,0)
 S RAE1=$G(^TMP($J,"RAE1",DFN,ID))
"RTN","HMPDRA",111,0)
 I $G(HMPTEXT) D
"RTN","HMPDRA",112,0)
 . S Y=$NA(^TMP("HMPTEXT",$J,ID))
"RTN","HMPDRA",113,0)
 . S I=0 F  S I=$O(^TMP($J,"RAE3",DFN,CASE,PROC,I)) Q:I<1  S X=^(I),@Y@(I)=X
"RTN","HMPDRA",114,0)
 . S RPT("content")=Y
"RTN","HMPDRA",115,0)
 S RPT("id")=ID,RPT("status")=$P(RAE3,U)
"RTN","HMPDRA",116,0)
 S X=9999999.9999-(+ID),RPT("referenceDateTime")=X
"RTN","HMPDRA",117,0)
 S X=+$G(^TMP($J,"RAE2",DFN,CASE,PROC,"P"))
"RTN","HMPDRA",118,0)
 I X S RPT("clinician",1)=X_U_$P($G(^VA(200,X,0)),U)_"^A"
"RTN","HMPDRA",119,0)
 S X=$G(^TMP($J,"RAE2",DFN,CASE,PROC,"V")) I X D
"RTN","HMPDRA",120,0)
 . N Y S Y=$$GET1^DIQ(74,+$P(RAE1,U,5)_",",7,"I")
"RTN","HMPDRA",121,0)
 . S RPT("clinician",2)=+X_U_$P($G(^VA(200,+X,0)),U)_"^S^"_Y_U_$P(X,U,2)
"RTN","HMPDRA",122,0)
 I $D(^TMP($J,"RAE3",DFN,"PRINT_SET")) S PROC=$G(^("ORD")) ;use parent, if printset
"RTN","HMPDRA",123,0)
 S RPT("localTitle")=PROC,RPT("category")="RA"
"RTN","HMPDRA",124,0)
 S RPT("nationalTitle")="4695068^RADIOLOGY REPORT"
"RTN","HMPDRA",125,0)
 S RPT("nationalTitleSubject")="4693357^RADIOLOGY"
"RTN","HMPDRA",126,0)
 S RPT("nationalTitleType")="4696123^REPORT"
"RTN","HMPDRA",127,0)
 S X=$P(RAE1,U,7),LOC="" I $L(X) D
"RTN","HMPDRA",128,0)
 . S LOC=+$O(^SC("B",X,0)) ;,EXAM("location")=LOC_U_X
"RTN","HMPDRA",129,0)
 S RPT("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDRA",130,0)
 S IENS=$P(ID,"-",2)_","_+ID_","_DFN_","
"RTN","HMPDRA",131,0)
 S RPT("encounter")=$$GET1^DIQ(70.03,IENS,27,"I")
"RTN","HMPDRA",132,0)
 S:$G(FILTER("loinc")) RPT("loinc")=$P(FILTER("loinc"),U)
"RTN","HMPDRA",133,0)
 K ^TMP($J,"RAE3",DFN),^TMP($J,"RAE2",DFN)
"RTN","HMPDRA",134,0)
 Q
"RTN","HMPDRA",135,0)
 ;
"RTN","HMPDRA",136,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDRA",137,0)
 ;
"RTN","HMPDRA",138,0)
XML(EXAM) ; -- Return exams as XML
"RTN","HMPDRA",139,0)
 N ATT,X,Y,NAMES,I,J
"RTN","HMPDRA",140,0)
 D ADD("<radiology>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDRA",141,0)
 S ATT="" F  S ATT=$O(EXAM(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDRA",142,0)
 . S NAMES=$S(ATT="document":"id^localTitle^nationalTitle^status^Z",1:"code^name^Z")
"RTN","HMPDRA",143,0)
 . I $O(EXAM(ATT,0)) D  S Y="" Q  ;multiples
"RTN","HMPDRA",144,0)
 .. D ADD("<"_ATT_"s>")
"RTN","HMPDRA",145,0)
 .. S I=0 F  S I=$O(EXAM(ATT,I)) Q:I<1  D
"RTN","HMPDRA",146,0)
 ... S X=$G(EXAM(ATT,I))
"RTN","HMPDRA",147,0)
 ... S Y="<"_ATT_" "_$$LOOP ;_"/>" D ADD(Y)
"RTN","HMPDRA",148,0)
 ... S X=$G(EXAM(ATT,I,"content")) I '$L(X) S Y=Y_"/>" D ADD(Y) Q
"RTN","HMPDRA",149,0)
 ... S Y=Y_">" D ADD(Y)
"RTN","HMPDRA",150,0)
 ... S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","HMPDRA",151,0)
 ... S J=0 F  S J=$O(@X@(J)) Q:J<1  S Y=$$ESC^HMPD(@X@(J)) D ADD(Y)
"RTN","HMPDRA",152,0)
 ... D ADD("</content>"),ADD("</"_ATT_">")
"RTN","HMPDRA",153,0)
 .. D ADD("</"_ATT_"s>")
"RTN","HMPDRA",154,0)
 . S X=$G(EXAM(ATT)),Y="" Q:'$L(X)
"RTN","HMPDRA",155,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDRA",156,0)
 . I $L(X)>1 S Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","HMPDRA",157,0)
 D ADD("</radiology>")
"RTN","HMPDRA",158,0)
 Q
"RTN","HMPDRA",159,0)
 ;
"RTN","HMPDRA",160,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDRA",161,0)
 N STR,P,TAG S STR=""
"RTN","HMPDRA",162,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDRA",163,0)
 Q STR
"RTN","HMPDRA",164,0)
 ;
"RTN","HMPDRA",165,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPDRA",166,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDRA",167,0)
 S @HMP@(HMPI)=X
"RTN","HMPDRA",168,0)
 Q
"RTN","HMPDSDAM")
0^69^B20015480
"RTN","HMPDSDAM",1,0)
HMPDSDAM ;SLC/MKB -- Appointment extract ;8/2/11  15:29
"RTN","HMPDSDAM",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDSDAM",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDSDAM",4,0)
 ;
"RTN","HMPDSDAM",5,0)
 ; External References          DBIA#
"RTN","HMPDSDAM",6,0)
 ; -------------------          -----
"RTN","HMPDSDAM",7,0)
 ; ^DGS(41.1                     3796
"RTN","HMPDSDAM",8,0)
 ; ^DIC(42                      10039
"RTN","HMPDSDAM",9,0)
 ; ^SC                          10040
"RTN","HMPDSDAM",10,0)
 ; ^VA(200                      10060
"RTN","HMPDSDAM",11,0)
 ; DIQ                           2056
"RTN","HMPDSDAM",12,0)
 ; SDAMA301                      4433
"RTN","HMPDSDAM",13,0)
 ;
"RTN","HMPDSDAM",14,0)
 ; ------------ Get appointment(s) from VistA ------------
"RTN","HMPDSDAM",15,0)
 ;
"RTN","HMPDSDAM",16,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's [future] appointments
"RTN","HMPDSDAM",17,0)
 N HMPX,HMPNUM,HMPDT,HMPCNT,HMPITM,HMPA,X
"RTN","HMPDSDAM",18,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDSDAM",19,0)
 S BEG=$G(BEG,DT),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDSDAM",20,0)
 S HMPX(1)=BEG_";"_END,HMPX(4)=DFN,HMPX("FLDS")="1;2;3;10;13",HMPX("SORT")="P"
"RTN","HMPDSDAM",21,0)
 ;
"RTN","HMPDSDAM",22,0)
 ; get one appt
"RTN","HMPDSDAM",23,0)
 I $L($G(ID)) D  Q
"RTN","HMPDSDAM",24,0)
 . S (BEG,END)=$P(ID,";",2),HMPX(1)=BEG_";"_END,HMPX(2)=$P(ID,";",3)
"RTN","HMPDSDAM",25,0)
 . S HMPNUM=$$SDAPI^SDAMA301(.HMPX) Q:HMPNUM<1
"RTN","HMPDSDAM",26,0)
 . D EN1(BEG,.HMPITM),XML(.HMPITM)
"RTN","HMPDSDAM",27,0)
 . K ^TMP($J,"SDAMA301",DFN)
"RTN","HMPDSDAM",28,0)
 ;
"RTN","HMPDSDAM",29,0)
 ; get all [future] appointments
"RTN","HMPDSDAM",30,0)
 S HMPX(3)="R;I;NS;NSR;NT" ;no cancelled appt's
"RTN","HMPDSDAM",31,0)
 S HMPNUM=$$SDAPI^SDAMA301(.HMPX),(HMPDT,HMPCNT)=0
"RTN","HMPDSDAM",32,0)
 F  S HMPDT=$O(^TMP($J,"SDAMA301",DFN,HMPDT)) Q:HMPDT<1  D  Q:HMPCNT'<MAX
"RTN","HMPDSDAM",33,0)
 . S X=$P($G(^TMP($J,"SDAMA301",DFN,HMPDT)),U,3)
"RTN","HMPDSDAM",34,0)
 . I HMPDT<DT,$P(X,";")'["NS" Q   ;no prior kept appt's
"RTN","HMPDSDAM",35,0)
 . K HMPITM D EN1(HMPDT,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDSDAM",36,0)
 . D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDSDAM",37,0)
 K ^TMP($J,"SDAMA301",DFN)
"RTN","HMPDSDAM",38,0)
 ;
"RTN","HMPDSDAM",39,0)
 ; get scheduled admissions
"RTN","HMPDSDAM",40,0)
 S HMPA=0 F  S HMPA=$O(^DGS(41.1,"B",DFN,HMPA)) Q:HMPA<1  D  Q:HMPCNT'<MAX
"RTN","HMPDSDAM",41,0)
 . S HMPX=$G(^DGS(41.1,HMPA,0))
"RTN","HMPDSDAM",42,0)
 . Q:$P(HMPX,U,13)  Q:$P(HMPX,U,17)  ;cancelled or admitted
"RTN","HMPDSDAM",43,0)
 . S X=$P(HMPX,U,2) Q:X<BEG!(X>END)  ;out of date range
"RTN","HMPDSDAM",44,0)
 . K HMPITM D DGS(HMPA,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDSDAM",45,0)
 . D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDSDAM",46,0)
 Q
"RTN","HMPDSDAM",47,0)
 ;
"RTN","HMPDSDAM",48,0)
EN1(DATE,APPT) ; -- return an appointment in APPT("attribute")=value
"RTN","HMPDSDAM",49,0)
 ;  Expects ^TMP($J,"SDAMA301",DFN,DATE)
"RTN","HMPDSDAM",50,0)
 N X,HLOC,STS,CLS,SV,PRV K APPT
"RTN","HMPDSDAM",51,0)
 S X=$G(^TMP($J,"SDAMA301",DFN,DATE))
"RTN","HMPDSDAM",52,0)
 S DATE=+$G(DATE),HLOC=$P(X,U,2),APPT("type")=$TR($P(X,U,10),";","^")
"RTN","HMPDSDAM",53,0)
 S STS=$P(X,U,3),CLS=$S($E(STS)="I":"I",1:"O")
"RTN","HMPDSDAM",54,0)
 S APPT("id")="A;"_DATE_";"_+HLOC,APPT("dateTime")=DATE I HLOC D
"RTN","HMPDSDAM",55,0)
 . S APPT("location")=$P(HLOC,";",2)
"RTN","HMPDSDAM",56,0)
 . S APPT("clinicStop")=$$AMIS^HMPDVSIT(+$P(X,U,13))
"RTN","HMPDSDAM",57,0)
 . S SV=$$GET1^DIQ(44,+HLOC_",",9.5,"I")
"RTN","HMPDSDAM",58,0)
 . I SV S APPT("service")=$$SERV(SV)
"RTN","HMPDSDAM",59,0)
 . ;find default provider
"RTN","HMPDSDAM",60,0)
 . S PRV=+$$GET1^DIQ(44,+HLOC_",",16,"I") I 'PRV D
"RTN","HMPDSDAM",61,0)
 .. N HMPP,I,FIRST
"RTN","HMPDSDAM",62,0)
 .. D GETS^DIQ(44,+HLOC_",","2600*","I","HMPP")
"RTN","HMPDSDAM",63,0)
 .. S FIRST=$O(HMPP(44.1,"")),I=""
"RTN","HMPDSDAM",64,0)
 .. F  S I=$O(HMPP(44.1,I)) Q:I=""  I $G(HMPP(44.1,I,.02,"I")) S PRV=$G(HMPP(44.1,I,.01,"I")) Q
"RTN","HMPDSDAM",65,0)
 .. I 'PRV,FIRST S PRV=$G(HMPP(44.1,FIRST,.01,"I"))
"RTN","HMPDSDAM",66,0)
 . I PRV S APPT("provider")=PRV_U_$P($G(^VA(200,PRV,0)),U) Q
"RTN","HMPDSDAM",67,0)
 S APPT("facility")=$$FAC^HMPD(+HLOC)
"RTN","HMPDSDAM",68,0)
 S APPT("patientClass")=$S(CLS="I":"IMP",1:"AMB")
"RTN","HMPDSDAM",69,0)
 S APPT("serviceCategory")=$S(CLS="I":"I^INPATIENT VISIT",1:"A^AMBULATORY")
"RTN","HMPDSDAM",70,0)
 S APPT("apptStatus")=$P(STS,";",2)
"RTN","HMPDSDAM",71,0)
 S APPT("visitString")=+HLOC_";"_DATE_";A"
"RTN","HMPDSDAM",72,0)
 Q
"RTN","HMPDSDAM",73,0)
 ;
"RTN","HMPDSDAM",74,0)
SERV(FTS) ; -- Return #42.4 Service for a Facility Treating Specialty
"RTN","HMPDSDAM",75,0)
 N Y S Y="",FTS=+$G(FTS)
"RTN","HMPDSDAM",76,0)
 S Y=$$GET1^DIQ(45.7,FTS_",","1:3","E")
"RTN","HMPDSDAM",77,0)
 Q Y
"RTN","HMPDSDAM",78,0)
 ;
"RTN","HMPDSDAM",79,0)
DGS(IFN,ADM) ; -- return a scheduled admission in ADM("attribute")=value
"RTN","HMPDSDAM",80,0)
 N X0,DATE,HLOC,SV,X K ADM
"RTN","HMPDSDAM",81,0)
 S X0=$G(^DGS(41.1,+$G(IFN),0)) Q:X0=""  ;deleted
"RTN","HMPDSDAM",82,0)
 S DATE=+$P(X0,U,2),HLOC=+$G(^DIC(42,+$P(X0,U,8),44))
"RTN","HMPDSDAM",83,0)
 S ADM("id")="H;"_DATE,ADM("dateTime")=DATE I HLOC D
"RTN","HMPDSDAM",84,0)
 . S ADM("id")=ADM("id")_";"_HLOC,ADM("visitString")=HLOC_";"_DATE_";H"
"RTN","HMPDSDAM",85,0)
 . S ADM("location")=HLOC_U_$P($G(^SC(HLOC,0)),U)
"RTN","HMPDSDAM",86,0)
 . S X=$$GET1^DIQ(44,HLOC_",",8,"I"),ADM("clinicStop")=$$AMIS^HMPDVSIT(X)
"RTN","HMPDSDAM",87,0)
 . S SV=$$GET1^DIQ(44,HLOC_",",9.5,"I")
"RTN","HMPDSDAM",88,0)
 . I SV S ADM("service")=$$SERV(SV)
"RTN","HMPDSDAM",89,0)
 S ADM("facility")=$$FAC^HMPD(HLOC)
"RTN","HMPDSDAM",90,0)
 S X=$P(X0,U,5) I X S ADM("provider")=X_U_$P($G(^VA(200,X,0)),U)
"RTN","HMPDSDAM",91,0)
 S ADM("patientClass")="IMP",ADM("serviceCategory")="H^HOSPITALIZATION"
"RTN","HMPDSDAM",92,0)
 S ADM("apptStatus")=$S($P(X0,U,17):"ADMITTED",$P(X0,U,13):"CANCELLED",1:"SCHEDULED")
"RTN","HMPDSDAM",93,0)
 Q
"RTN","HMPDSDAM",94,0)
 ;
"RTN","HMPDSDAM",95,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDSDAM",96,0)
 ;
"RTN","HMPDSDAM",97,0)
XML(APPT) ; -- Return appointment as XML
"RTN","HMPDSDAM",98,0)
 N ATT,X,Y,NAMES
"RTN","HMPDSDAM",99,0)
 D ADD("<appointment>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDSDAM",100,0)
 S ATT="" F  S ATT=$O(APPT(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDSDAM",101,0)
 . S X=$G(APPT(ATT)),Y="" Q:'$L(X)
"RTN","HMPDSDAM",102,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDSDAM",103,0)
 . I $L(X)>1 S NAMES="code^name^Z",Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","HMPDSDAM",104,0)
 D ADD("</appointment>")
"RTN","HMPDSDAM",105,0)
 Q
"RTN","HMPDSDAM",106,0)
 ;
"RTN","HMPDSDAM",107,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDSDAM",108,0)
 N STR,P,TAG S STR=""
"RTN","HMPDSDAM",109,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDSDAM",110,0)
 Q STR
"RTN","HMPDSDAM",111,0)
 ;
"RTN","HMPDSDAM",112,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPDSDAM",113,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDSDAM",114,0)
 S @HMP@(HMPI)=X
"RTN","HMPDSDAM",115,0)
 Q
"RTN","HMPDSR")
0^70^B30238500
"RTN","HMPDSR",1,0)
HMPDSR ;SLC/MKB -- Surgical Procedures ;8/2/11  15:29
"RTN","HMPDSR",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDSR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDSR",4,0)
 ;
"RTN","HMPDSR",5,0)
 ; External References          DBIA#
"RTN","HMPDSR",6,0)
 ; -------------------          -----
"RTN","HMPDSR",7,0)
 ; ^SRF(130                      5675
"RTN","HMPDSR",8,0)
 ; ^SRO(136                      4872
"RTN","HMPDSR",9,0)
 ; DIQ                           2056
"RTN","HMPDSR",10,0)
 ; ICPTCOD                       1995
"RTN","HMPDSR",11,0)
 ; ICPTMOD                       1996
"RTN","HMPDSR",12,0)
 ; SROESTV                       3533
"RTN","HMPDSR",13,0)
 ;
"RTN","HMPDSR",14,0)
 ; ------------ Get surgery(ies) from VistA ------------
"RTN","HMPDSR",15,0)
 ;
"RTN","HMPDSR",16,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's surgeries
"RTN","HMPDSR",17,0)
 N HMPN,HMPCNT,HMPITM,HMPY
"RTN","HMPDSR",18,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDSR",19,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDSR",20,0)
 ;
"RTN","HMPDSR",21,0)
 ; get one surgery
"RTN","HMPDSR",22,0)
 I $G(ID) D EN1(ID,.HMPITM),XML(.HMPITM) G ENQ
"RTN","HMPDSR",23,0)
 ;
"RTN","HMPDSR",24,0)
 ; get all surgeries
"RTN","HMPDSR",25,0)
 Q:'$L($T(LIST^SROESTV))
"RTN","HMPDSR",26,0)
 N SHOWADD S SHOWADD=1 ;to omit leading '+' with note titles
"RTN","HMPDSR",27,0)
 D LIST^SROESTV(.HMPY,DFN,BEG,END,MAX,1)
"RTN","HMPDSR",28,0)
 S HMPN=0 F  S HMPN=$O(@HMPY@(HMPN)) Q:HMPN<1  D
"RTN","HMPDSR",29,0)
 . K HMPITM D ONE(HMPN,.HMPITM)
"RTN","HMPDSR",30,0)
 . I $D(HMPITM) D XML(.HMPITM)
"RTN","HMPDSR",31,0)
 K @HMPY
"RTN","HMPDSR",32,0)
ENQ ; end
"RTN","HMPDSR",33,0)
 K ^TMP("HMPTEXT",$J)
"RTN","HMPDSR",34,0)
 Q
"RTN","HMPDSR",35,0)
 ;
"RTN","HMPDSR",36,0)
ONE(NUM,SURG) ; -- return a surgery in SURG("attribute")=value
"RTN","HMPDSR",37,0)
 ;  Expects DFN, @HMPY@(NUM) from LIST^SROESTV
"RTN","HMPDSR",38,0)
 N IEN,HMPX,X,Y,I,HMPMOD,HMPOTH
"RTN","HMPDSR",39,0)
 K SURG,^TMP("HMPTEXT",$J)
"RTN","HMPDSR",40,0)
 S HMPX=$G(@HMPY@(NUM)),IEN=+$P(HMPX,U) Q:IEN<1
"RTN","HMPDSR",41,0)
 S SURG("id")=IEN,X=$P(HMPX,U,2),SURG("status")="COMPLETED"
"RTN","HMPDSR",42,0)
 I X?1"* Aborted * ".E S X=$E(X,13,999),SURG("status")="ABORTED"
"RTN","HMPDSR",43,0)
 S SURG("name")=X,SURG("dateTime")=$P(HMPX,U,3)
"RTN","HMPDSR",44,0)
 S X=$P(HMPX,U,4) S:X SURG("provider")=$TR(X,";","^")
"RTN","HMPDSR",45,0)
 S X=$$GET1^DIQ(130,IEN_",",50,"I"),SURG("facility")=$$FAC^HMPD(X)
"RTN","HMPDSR",46,0)
 S SURG("encounter")=$$GET1^DIQ(130,IEN_",",.015,"I")
"RTN","HMPDSR",47,0)
 S X=$$GET1^DIQ(136,IEN_",",.02,"I") I X D
"RTN","HMPDSR",48,0)
 . S SURG("type")=$$CPT(X)
"RTN","HMPDSR",49,0)
 . D GETS^DIQ(136,IEN_",","1*","I","HMPMOD") ;CPT modifiers
"RTN","HMPDSR",50,0)
 . S I="" F  S I=$O(HMPMOD(136.01,I)) Q:I=""  D
"RTN","HMPDSR",51,0)
 .. S X=+$G(HMPMOD(136.01,I,.01,"I")),Y=$$MOD^ICPTMOD(X,"I")
"RTN","HMPDSR",52,0)
 .. S SURG("modifier",+I)=$P(Y,U,2,3)
"RTN","HMPDSR",53,0)
 D GETS^DIQ(136,IEN_",","3*","I","HMPOTH") ;other procedures
"RTN","HMPDSR",54,0)
 S I="" F  S I=$O(HMPOTH(136.03,I)) Q:I=""  D
"RTN","HMPDSR",55,0)
 . S X=+$G(HMPOTH(136.03,I,.01,"I")) Q:'X
"RTN","HMPDSR",56,0)
 . S SURG("otherProcedure",+I)=$$CPT(X)
"RTN","HMPDSR",57,0)
 S I=0 F  S I=$O(@HMPY@(NUM,I)) Q:I<1  S X=$G(@HMPY@(NUM,I)) I X D
"RTN","HMPDSR",58,0)
 . N LT,NT S LT=$P(X,U,2) Q:$P(LT," ")="Addendum"
"RTN","HMPDSR",59,0)
 . S NT=$$GET1^DIQ(8925,+X_",",".01:1501")
"RTN","HMPDSR",60,0)
 . S SURG("document",I)=+X_U_LT_U_NT
"RTN","HMPDSR",61,0)
 . S:$G(HMPTEXT) SURG("document",I,"content")=$$TEXT^HMPDTIU(+X)
"RTN","HMPDSR",62,0)
 . I LT["OPERATION REPORT"!(LT["PROCEDURE REPORT") S SURG("opReport")=+X_U_LT_U_NT
"RTN","HMPDSR",63,0)
 S SURG("category")="SR"
"RTN","HMPDSR",64,0)
 Q
"RTN","HMPDSR",65,0)
 ;
"RTN","HMPDSR",66,0)
EN1(IEN,SURG) ; -- return a surgery in SURG("attribute")=value
"RTN","HMPDSR",67,0)
 N HMPX,HMPY,X,Y,I,HMPMOD,HMPOTH,SHOWADD
"RTN","HMPDSR",68,0)
 K SURG,^TMP("HMPTEXT",$J)
"RTN","HMPDSR",69,0)
 S SHOWADD=1 ;to omit leading '+' with note titles
"RTN","HMPDSR",70,0)
 D ONE^SROESTV("HMPY",IEN) S HMPX=$G(HMPY(IEN)) Q:HMPX=""
"RTN","HMPDSR",71,0)
 S SURG("id")=IEN,X=$P(HMPX,U,2),SURG("status")="COMPLETED"
"RTN","HMPDSR",72,0)
 I X?1"* Aborted * ".E S X=$E(X,13,999),SURG("status")="ABORTED"
"RTN","HMPDSR",73,0)
 S SURG("name")=X,SURG("dateTime")=$P(HMPX,U,3)
"RTN","HMPDSR",74,0)
 S X=$P(HMPX,U,4) S:X SURG("provider")=$TR(X,";","^")
"RTN","HMPDSR",75,0)
 S X=$$GET1^DIQ(130,IEN_",",50,"I"),SURG("facility")=$$FAC^HMPD(X)
"RTN","HMPDSR",76,0)
 S SURG("encounter")=$$GET1^DIQ(130,IEN_",",.015,"I")
"RTN","HMPDSR",77,0)
 S X=$$GET1^DIQ(136,IEN_",",.02,"I") I X D
"RTN","HMPDSR",78,0)
 . S SURG("type")=$$CPT(X)
"RTN","HMPDSR",79,0)
 . D GETS^DIQ(136,IEN_",","1*","I","HMPMOD") ;CPT modifiers
"RTN","HMPDSR",80,0)
 . S I="" F  S I=$O(HMPMOD(136.01,I)) Q:I=""  D
"RTN","HMPDSR",81,0)
 .. S X=+$G(HMPMOD(136.01,I,.01,"I")),Y=$$MOD^ICPTMOD(X,"I")
"RTN","HMPDSR",82,0)
 .. S SURG("modifier",+I)=$P(Y,U,2,3)
"RTN","HMPDSR",83,0)
 D GETS^DIQ(136,IEN_",","3*","I","HMPOTH") ;other procedures
"RTN","HMPDSR",84,0)
 S I="" F  S I=$O(HMPOTH(136.03,I)) Q:I=""  D
"RTN","HMPDSR",85,0)
 . S X=+$G(HMPOTH(136.03,I,.01,"I")) Q:'X
"RTN","HMPDSR",86,0)
 . S SURG("otherProcedure",+I)=$$CPT(X)
"RTN","HMPDSR",87,0)
 S I=0 F  S I=$O(HMPY(IEN,I)) Q:I<1  S X=$G(HMPY(IEN,I)) I X D
"RTN","HMPDSR",88,0)
 . N LT,NT S LT=$P(X,U,2) Q:$P(LT," ")="Addendum"
"RTN","HMPDSR",89,0)
 . S NT=$$GET1^DIQ(8925,+X_",",".01:1501")
"RTN","HMPDSR",90,0)
 . S SURG("document",I)=+X_U_LT_U_NT
"RTN","HMPDSR",91,0)
 . S:$G(HMPTEXT) SURG("document",I,"content")=$$TEXT^HMPDTIU(+X)
"RTN","HMPDSR",92,0)
 . I LT["OPERATION REPORT"!(LT["PROCEDURE REPORT") S SURG("opReport")=+X_U_LT_U_NT
"RTN","HMPDSR",93,0)
 S SURG("category")="SR"
"RTN","HMPDSR",94,0)
 Q
"RTN","HMPDSR",95,0)
 ;
"RTN","HMPDSR",96,0)
CPT(IEN) ; -- return code^description for CPT code, or "^" if error
"RTN","HMPDSR",97,0)
 N X0,HMPX,N,I,X,Y S IEN=+$G(IEN)
"RTN","HMPDSR",98,0)
 S X0=$$CPT^ICPTCOD(IEN) I X0<0 Q "^"
"RTN","HMPDSR",99,0)
 S Y=$P(X0,U,2,3)                  ;CPT Code^Short Name
"RTN","HMPDSR",100,0)
 S N=$$CPTD^ICPTCOD($P(Y,U),"HMPX") ;CPT Description
"RTN","HMPDSR",101,0)
 I N>0,$L($G(HMPX(1))) D
"RTN","HMPDSR",102,0)
 . S X=$G(HMPX(1)),I=1
"RTN","HMPDSR",103,0)
 . F  S I=$O(HMPX(I)) Q:I<1  Q:HMPX(I)=" "  S X=X_" "_HMPX(I)
"RTN","HMPDSR",104,0)
 . S $P(Y,U,2)=X
"RTN","HMPDSR",105,0)
 Q Y
"RTN","HMPDSR",106,0)
 ;
"RTN","HMPDSR",107,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDSR",108,0)
 ;
"RTN","HMPDSR",109,0)
XML(SURG) ; -- Return surgery as XML
"RTN","HMPDSR",110,0)
 N ATT,X,Y,NAMES,I,J
"RTN","HMPDSR",111,0)
 D ADD("<surgery>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDSR",112,0)
 S ATT="" F  S ATT=$O(SURG(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDSR",113,0)
 . I $O(SURG(ATT,0)) D  S Y="" Q  ;multiples
"RTN","HMPDSR",114,0)
 .. D ADD("<"_ATT_"s>")
"RTN","HMPDSR",115,0)
 .. S I=0 F  S I=$O(SURG(ATT,I)) Q:I<1  D
"RTN","HMPDSR",116,0)
 ... S X=$G(SURG(ATT,I)),NAMES=""
"RTN","HMPDSR",117,0)
 ... S NAMES=$S(ATT="document":"id^localTitle^nationalTitle^Z",1:"code^name^Z")
"RTN","HMPDSR",118,0)
 ... S Y="<"_ATT_" "_$$LOOP ;_"/>" D ADD(Y)
"RTN","HMPDSR",119,0)
 ... S X=$G(SURG(ATT,I,"content")) I '$L(X) S Y=Y_"/>" D ADD(Y) Q
"RTN","HMPDSR",120,0)
 ... S Y=Y_">" D ADD(Y)
"RTN","HMPDSR",121,0)
 ... S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","HMPDSR",122,0)
 ... S J=0 F  S J=$O(@X@(J)) Q:J<1  S Y=$$ESC^HMPD(@X@(J)) D ADD(Y)
"RTN","HMPDSR",123,0)
 ... D ADD("</content>"),ADD("</"_ATT_">")
"RTN","HMPDSR",124,0)
 .. D ADD("</"_ATT_"s>")
"RTN","HMPDSR",125,0)
 . S X=$G(SURG(ATT)),Y="" Q:'$L(X)
"RTN","HMPDSR",126,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDSR",127,0)
 . S NAMES=$S(ATT="opReport":"id^localTitle^nationalTitle^Z",1:"code^name^Z")
"RTN","HMPDSR",128,0)
 . I $L(X)>1 S Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","HMPDSR",129,0)
 D ADD("</surgery>")
"RTN","HMPDSR",130,0)
 Q
"RTN","HMPDSR",131,0)
 ;
"RTN","HMPDSR",132,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDSR",133,0)
 N STR,P,TAG S STR=""
"RTN","HMPDSR",134,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDSR",135,0)
 Q STR
"RTN","HMPDSR",136,0)
 ;
"RTN","HMPDSR",137,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPDSR",138,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDSR",139,0)
 S @HMP@(HMPI)=X
"RTN","HMPDSR",140,0)
 Q
"RTN","HMPDTIU")
0^71^B80060367
"RTN","HMPDTIU",1,0)
HMPDTIU ;SLC/MKB -- TIU extract ;8/2/11  15:29
"RTN","HMPDTIU",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDTIU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDTIU",4,0)
 ;
"RTN","HMPDTIU",5,0)
 ; External References          DBIA#
"RTN","HMPDTIU",6,0)
 ; -------------------          -----
"RTN","HMPDTIU",7,0)
 ; ^SC(                         10040
"RTN","HMPDTIU",8,0)
 ; ^TIU(8925.1              2321,5677
"RTN","HMPDTIU",9,0)
 ; ^TIU(8926.1                   5678
"RTN","HMPDTIU",10,0)
 ; ^VA(200                      10060
"RTN","HMPDTIU",11,0)
 ; DIQ                           2056
"RTN","HMPDTIU",12,0)
 ; RAO7PC1                       2043
"RTN","HMPDTIU",13,0)
 ; TIUCNSLT                      5546
"RTN","HMPDTIU",14,0)
 ; TIUCP                         3568
"RTN","HMPDTIU",15,0)
 ; TIULQ                         2693
"RTN","HMPDTIU",16,0)
 ; TIULX                         3058
"RTN","HMPDTIU",17,0)
 ; TIUSROI                       5676
"RTN","HMPDTIU",18,0)
 ; TIUSRVLO                 2834,2865
"RTN","HMPDTIU",19,0)
 ; TIUSRVR1                      2944
"RTN","HMPDTIU",20,0)
 ; XLFSTR                       10104
"RTN","HMPDTIU",21,0)
 ;
"RTN","HMPDTIU",22,0)
 ; ------------ Get documents from VistA ------------
"RTN","HMPDTIU",23,0)
 ;
"RTN","HMPDTIU",24,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's documents
"RTN","HMPDTIU",25,0)
 N HMPITM,HMPN,HMPX,HMPY,HMPCNT
"RTN","HMPDTIU",26,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","HMPDTIU",27,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDTIU",28,0)
 ;
"RTN","HMPDTIU",29,0)
 ; get one document
"RTN","HMPDTIU",30,0)
 I $L($G(ID)),ID[";" D  G ENQ
"RTN","HMPDTIU",31,0)
 . I ID D RPT1^HMPDMC(DFN,ID,.HMPITM),XML(.HMPITM) Q  ;CP
"RTN","HMPDTIU",32,0)
 . D RPT1^HMPDLRA(DFN,ID,.HMPITM),XML(.HMPITM) Q      ;Lab
"RTN","HMPDTIU",33,0)
 I $G(ID),ID["-" D  G ENQ                             ;Radiology
"RTN","HMPDTIU",34,0)
 . S (BEG,END)=9999999.9999-+ID D EN1^RAO7PC1(DFN,BEG,END,"99P")
"RTN","HMPDTIU",35,0)
 . D RPT1^HMPDRA(DFN,ID,.HMPITM),XML(.HMPITM)
"RTN","HMPDTIU",36,0)
 . K ^TMP($J,"RAE1")
"RTN","HMPDTIU",37,0)
 I $G(ID) D EN1(ID,.HMPITM),XML(.HMPITM):$D(HMPITM) G ENQ
"RTN","HMPDTIU",38,0)
 ;
"RTN","HMPDTIU",39,0)
 ; get all documents
"RTN","HMPDTIU",40,0)
 N CLASS,SUBCLASS,TITLE,SERVICE,SUBJECT,NOTSUBJ,STATUS,HMPC,CLS,HMPS,CTXT
"RTN","HMPDTIU",41,0)
 D SETUP S HMPCNT=0 ;define search criteria
"RTN","HMPDTIU",42,0)
 I CLASS="CP" D RPTS^HMPDMC(DFN,BEG,END,MAX) Q
"RTN","HMPDTIU",43,0)
 I CLASS="RA" D RPTS^HMPDRA(DFN,BEG,END,MAX) Q
"RTN","HMPDTIU",44,0)
 I CLASS="LR" D RPTS^HMPDLRA(DFN,BEG,END,MAX) Q
"RTN","HMPDTIU",45,0)
 F HMPC=1:1:$L(CLASS,U) S CLS=$P(CLASS,U,HMPC) D  Q:HMPCNT'<MAX
"RTN","HMPDTIU",46,0)
 . F HMPS=1:1:$L(STATUS,U) S CTXT=$P(STATUS,U,HMPS) D  Q:HMPCNT'<MAX
"RTN","HMPDTIU",47,0)
 .. D CONTEXT^TIUSRVLO(.HMPY,CLS,CTXT,DFN,BEG,END,,MAX,,1)
"RTN","HMPDTIU",48,0)
 .. S HMPN=0 F  S HMPN=$O(@HMPY@(HMPN)) Q:HMPN<1  D  Q:HMPCNT'<MAX
"RTN","HMPDTIU",49,0)
 ... S HMPX=$G(@HMPY@(HMPN)) Q:'$$MATCH(HMPX)
"RTN","HMPDTIU",50,0)
 ... Q:$D(^TMP("HMPD",$J,+HMPX))  ;already included
"RTN","HMPDTIU",51,0)
 ... K HMPITM D EN1(HMPX,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDTIU",52,0)
 ... D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDTIU",53,0)
 .. K @HMPY
"RTN","HMPDTIU",54,0)
ENQ ; end
"RTN","HMPDTIU",55,0)
 K ^TMP("HMPTEXT",$J)
"RTN","HMPDTIU",56,0)
 Q
"RTN","HMPDTIU",57,0)
 ;
"RTN","HMPDTIU",58,0)
EN1(HMPX,DOC) ; -- return a document in DOC("attribute")=value
"RTN","HMPDTIU",59,0)
 ;  Expects DFN, HMPX=IEN^$$RESOLVE^TIUSRVLO(IEN)
"RTN","HMPDTIU",60,0)
 N IEN,X,NAME,HMPTIU,ES,I,HMPY
"RTN","HMPDTIU",61,0)
 K DOC,^TMP("HMPTEXT",$J)
"RTN","HMPDTIU",62,0)
 S IEN=+$G(HMPX) Q:IEN<1  ;invalid ien
"RTN","HMPDTIU",63,0)
 I +HMPX=HMPX D  ;get data string, if needed
"RTN","HMPDTIU",64,0)
 . N SHOWADD,DA S SHOWADD=1,DA=+HMPX
"RTN","HMPDTIU",65,0)
 . S HMPX=DA_U_$$RESOLVE^TIUSRVLO(DA)
"RTN","HMPDTIU",66,0)
 Q:"UNKNOWN"[$P($G(HMPX),U,2)  ;null or invalid
"RTN","HMPDTIU",67,0)
 S NAME=$P(HMPX,U,2) ;I $P(HMPX,U,14),$P(NAME," ")="Addendum" Q
"RTN","HMPDTIU",68,0)
 S DOC("id")=IEN,DOC("localTitle")=NAME
"RTN","HMPDTIU",69,0)
 D EXTRACT^TIULQ(IEN,"HMPTIU",,".01:.04;1501:1508")
"RTN","HMPDTIU",70,0)
 S X=$$GET1^DIQ(8925,IEN_",",".01:1501","I") I X D
"RTN","HMPDTIU",71,0)
 . N IENS,TIU,Y,FNUM
"RTN","HMPDTIU",72,0)
 . S IENS=X_"," D GETS^DIQ(8926.1,IENS,"*","IE","TIU")
"RTN","HMPDTIU",73,0)
 . S DOC("nationalTitle")=$G(TIU(8926.1,IENS,99.99,"E"))_U_$G(TIU(8926.1,IENS,.01,"E"))
"RTN","HMPDTIU",74,0)
 . F I=".04^Subject^2",".05^Role^3",".06^Setting^4",".07^Service^5",".08^Type^6" D
"RTN","HMPDTIU",75,0)
 .. S Y=+$G(TIU(8926.1,IENS,+I,"I")) Q:Y'>0
"RTN","HMPDTIU",76,0)
 .. S FNUM="8926."_+$P(I,U,3)
"RTN","HMPDTIU",77,0)
 .. S DOC("nationalTitle"_$P(I,U,2))=$$VUID^HMPD(Y,FNUM)_U_$G(TIU(8926.1,IENS,+I,"E"))
"RTN","HMPDTIU",78,0)
 S:$G(FILTER("loinc")) DOC("loinc")=$P(FILTER("loinc"),U)
"RTN","HMPDTIU",79,0)
 S X=+$G(HMPTIU(IEN,.01,"I")),X=$$CATG(X),(DOC("type"),DOC("category"))=X
"RTN","HMPDTIU",80,0)
 S DOC("documentClass")=$S(X="LR":"LR LABORATORY REPORTS",X="SR":"SURGICAL REPORTS",X="CP":"CLINICAL PROCEDURES",X="DS":"DISCHARGE SUMMARY",1:"PROGRESS NOTES")
"RTN","HMPDTIU",81,0)
 S DOC("referenceDateTime")=$P(HMPX,U,3)
"RTN","HMPDTIU",82,0)
 S X=$P(HMPX,U,6) D  ;S:$L(X) DOC("location")=X
"RTN","HMPDTIU",83,0)
 . N LOC S LOC=$S($L(X):+$O(^SC("B",X,0)),1:0)
"RTN","HMPDTIU",84,0)
 . S DOC("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDTIU",85,0)
 S X=$P(HMPX,U,7) S:$L(X) DOC("status")=X
"RTN","HMPDTIU",86,0)
 S:$P(HMPX,U,11) DOC("images")=+$P(HMPX,U,11)
"RTN","HMPDTIU",87,0)
 S:$L($P(HMPX,U,12)) DOC("subject")=$P(HMPX,U,12)
"RTN","HMPDTIU",88,0)
 ; X=$S($P(HMPX,U,13)[">":"C",$P(HMPX,U,13)["<":"I",1:"") ;componentType
"RTN","HMPDTIU",89,0)
 I $P(HMPX,U,14)>5 S DOC("parent")=$P(HMPX,U,14) ;ID notes
"RTN","HMPDTIU",90,0)
 S DOC("encounter")=$G(HMPTIU(IEN,.03,"I"))
"RTN","HMPDTIU",91,0)
 S:$G(HMPTEXT) DOC("content")=$$TEXT(IEN)
"RTN","HMPDTIU",92,0)
 ; providers &/or signatures
"RTN","HMPDTIU",93,0)
 S X=$P(HMPX,U,5),I=0 S:X I=I+1,DOC("clinician",I)=+X_U_$P(X,";",3)_"^A" ;author
"RTN","HMPDTIU",94,0)
 M ES=HMPTIU(IEN) I ES(1501,"I") D
"RTN","HMPDTIU",95,0)
 . S I=I+1
"RTN","HMPDTIU",96,0)
 . S DOC("clinician",I)=ES(1502,"I")_U_ES(1502,"E")_"^S^"_ES(1501,"I")_U_$$SIG(ES(1502,"I"))
"RTN","HMPDTIU",97,0)
 I ES(1507,"I") D  ; cosigner
"RTN","HMPDTIU",98,0)
 . S I=I+1
"RTN","HMPDTIU",99,0)
 . S DOC("clinician",I)=ES(1508,"I")_U_ES(1508,"E")_"^C^"_ES(1507,"I")_U_$$SIG(ES(1508,"I"))
"RTN","HMPDTIU",100,0)
 Q
"RTN","HMPDTIU",101,0)
 ;
"RTN","HMPDTIU",102,0)
CATG(DA) ; -- Return a code for document type #8925.1 DA
"RTN","HMPDTIU",103,0)
 N X
"RTN","HMPDTIU",104,0)
 D ISCNSLT^TIUCNSLT(.X,DA) I X Q "CR"  ;consult result
"RTN","HMPDTIU",105,0)
 I $$ISA^TIULX(DA,25) Q "A"            ;CWAD note/Allergy
"RTN","HMPDTIU",106,0)
 I $$ISA^TIULX(DA,27) Q "D"            ;CWAD note/Advance Directive
"RTN","HMPDTIU",107,0)
 I $$ISA^TIULX(DA,30) Q "C"            ;CWAD note/Crisis Note
"RTN","HMPDTIU",108,0)
 I $$ISA^TIULX(DA,31) Q "W"            ;CWAD note/Clinical Warning
"RTN","HMPDTIU",109,0)
 I $$ISA^TIULX(DA,3) Q "PN"            ;progress note
"RTN","HMPDTIU",110,0)
 ;
"RTN","HMPDTIU",111,0)
 I $$ISA^TIULX(DA,244) Q "DS"          ;discharge summary
"RTN","HMPDTIU",112,0)
 D ISCP^TIUCP(.X,DA) I X Q "CP"        ;clinical procedure
"RTN","HMPDTIU",113,0)
 D ISSURG^TIUSROI(.X,DA) I X Q "SR"    ;surgery
"RTN","HMPDTIU",114,0)
 I $$ISA^TIULX(DA,$$LR) Q "LR"         ;laboratory
"RTN","HMPDTIU",115,0)
 Q ""
"RTN","HMPDTIU",116,0)
 ;
"RTN","HMPDTIU",117,0)
LR() ; -- Return ien of Lab class
"RTN","HMPDTIU",118,0)
 N Y S Y=+$O(^TIU(8925.1,"B","LR LABORATORY REPORTS",0))
"RTN","HMPDTIU",119,0)
 I Y>0,$S($P($G(^TIU(8925.1,Y,0)),U,4)="CL":0,$P($G(^(0)),U,4)="DC":0,1:1) S Y=0
"RTN","HMPDTIU",120,0)
 Q Y
"RTN","HMPDTIU",121,0)
 ;
"RTN","HMPDTIU",122,0)
SIG(X) ; -- Return Signature Block Name_Title
"RTN","HMPDTIU",123,0)
 N X20,Y S X20=$G(^VA(200,+$G(X),20))
"RTN","HMPDTIU",124,0)
 S Y=$P(X20,U,2)_" "_$P(X20,U,3)
"RTN","HMPDTIU",125,0)
 Q Y
"RTN","HMPDTIU",126,0)
 ;
"RTN","HMPDTIU",127,0)
RPT(HMPY,IFN) ; -- Return text of document in @HMPY@(n)
"RTN","HMPDTIU",128,0)
 N I,J ;protect for calling loops
"RTN","HMPDTIU",129,0)
 D TGET^TIUSRVR1(.HMPY,IFN)
"RTN","HMPDTIU",130,0)
 Q
"RTN","HMPDTIU",131,0)
 ;
"RTN","HMPDTIU",132,0)
TEXT(IFN) ; -- Get document IFN text, return temp array name
"RTN","HMPDTIU",133,0)
 N HMPY,Y,I,J ;protect I&J for calling loops
"RTN","HMPDTIU",134,0)
 S IFN=+$G(IFN) D TGET^TIUSRVR1(.HMPY,IFN)
"RTN","HMPDTIU",135,0)
 M ^TMP("HMPTEXT",$J,IFN)=@HMPY K @HMPY
"RTN","HMPDTIU",136,0)
 S Y=$NA(^TMP("HMPTEXT",$J,IFN))
"RTN","HMPDTIU",137,0)
 Q Y
"RTN","HMPDTIU",138,0)
 ;
"RTN","HMPDTIU",139,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDTIU",140,0)
 ;
"RTN","HMPDTIU",141,0)
XML(DOC) ; -- Return patient documents as XML
"RTN","HMPDTIU",142,0)
 N ATT,X,Y,NAMES,TYPE,I
"RTN","HMPDTIU",143,0)
 D ADD("<document>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDTIU",144,0)
 S ATT="" F  S ATT=$O(DOC(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDTIU",145,0)
 . I $O(DOC(ATT,0)) D  S Y="" Q  ;multiples
"RTN","HMPDTIU",146,0)
 .. D ADD("<"_ATT_"s>")
"RTN","HMPDTIU",147,0)
 .. S I=0 F  S I=$O(DOC(ATT,I)) Q:I<1  D
"RTN","HMPDTIU",148,0)
 ... S X=$G(DOC(ATT,I)),NAMES=""
"RTN","HMPDTIU",149,0)
 ... I ATT="clinician" S NAMES="code^name^role^dateTime^signature^Z"
"RTN","HMPDTIU",150,0)
 ... S Y="<"_ATT_" "_$$LOOP_"/>" D ADD(Y)
"RTN","HMPDTIU",151,0)
 .. D ADD("</"_ATT_"s>")
"RTN","HMPDTIU",152,0)
 . S X=$G(DOC(ATT)),Y="" Q:'$L(X)
"RTN","HMPDTIU",153,0)
 . I ATT="content" D  S Y="" Q  ;text
"RTN","HMPDTIU",154,0)
 .. S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","HMPDTIU",155,0)
 .. S I=0 F  S I=$O(@X@(I)) Q:I<1  S Y=$$ESC^HMPD(@X@(I)) D ADD(Y)
"RTN","HMPDTIU",156,0)
 .. D ADD("</content>")
"RTN","HMPDTIU",157,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDTIU",158,0)
 . I $L(X)>1 S NAMES="code^name^Z",Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","HMPDTIU",159,0)
 D ADD("</document>")
"RTN","HMPDTIU",160,0)
 Q
"RTN","HMPDTIU",161,0)
 ;
"RTN","HMPDTIU",162,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDTIU",163,0)
 N STR,P,TAG S STR=""
"RTN","HMPDTIU",164,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDTIU",165,0)
 Q STR
"RTN","HMPDTIU",166,0)
 ;
"RTN","HMPDTIU",167,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPDTIU",168,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDTIU",169,0)
 S @HMP@(HMPI)=X
"RTN","HMPDTIU",170,0)
 Q
"RTN","HMPDTIU",171,0)
 ;
"RTN","HMPDTIU",172,0)
 ; ------------ Get/apply search criteria ------------
"RTN","HMPDTIU",173,0)
 ;
"RTN","HMPDTIU",174,0)
SETUP ; -- convert FILTER("attribute") = value to TIU criteria
"RTN","HMPDTIU",175,0)
 ; Expects: FILTER("category") = code (see $$CATG)
"RTN","HMPDTIU",176,0)
 ;          FILTER("loinc")    = LOINC
"RTN","HMPDTIU",177,0)
 ;          FILTER("status")   = 'all','completed','unsigned'
"RTN","HMPDTIU",178,0)
 ; Returns CLASS,[SUBCLASS,TITLE,SERVICE,SUBJECT,STATUS]
"RTN","HMPDTIU",179,0)
 ;
"RTN","HMPDTIU",180,0)
 N LOINC,TYPE,STS,CP
"RTN","HMPDTIU",181,0)
 S LOINC=+$G(FILTER("loinc")),TYPE=$$UP^XLFSTR($G(FILTER("category")))
"RTN","HMPDTIU",182,0)
 S CLASS="3^244",(SUBCLASS,TITLE,SERVICE,SUBJECT,NOTSUBJ,STATUS)=""
"RTN","HMPDTIU",183,0)
 ;
"RTN","HMPDTIU",184,0)
 ; status [default='complete']
"RTN","HMPDTIU",185,0)
 S STS=$$LOW^XLFSTR($G(FILTER("status")))
"RTN","HMPDTIU",186,0)
 S STATUS=$S(STS?1"unsig".E:2,STS="all":"5^2",1:5)  ;TIUSRVLO statuses
"RTN","HMPDTIU",187,0)
 ;
"RTN","HMPDTIU",188,0)
 ; progress notes
"RTN","HMPDTIU",189,0)
 I TYPE="PN" S CLASS=3 Q
"RTN","HMPDTIU",190,0)
 I TYPE="CR"!(LOINC=11488) S CLASS=3,SUBCLASS=+$$CLASS^TIUCNSLT Q
"RTN","HMPDTIU",191,0)
 ; LOINC=26442 S CLASS=3,SUBJECT="^114^" Q         ;OB/GYN
"RTN","HMPDTIU",192,0)
 I LOINC=34117 S CLASS=3,SERVICE="^88^" Q          ;H&P
"RTN","HMPDTIU",193,0)
 I TYPE="CWAD" S CLASS=3,SUBCLASS="25^27^30^31" Q  ;CWAD
"RTN","HMPDTIU",194,0)
 I TYPE="C" S CLASS=3,SUBCLASS=30 Q                ;Crisis Note
"RTN","HMPDTIU",195,0)
 I TYPE="W" S CLASS=3,SUBCLASS=31 Q                ;Clinical Warning
"RTN","HMPDTIU",196,0)
 I TYPE="A" S CLASS=3,SUBCLASS=25 Q                ;Allergy Note
"RTN","HMPDTIU",197,0)
 I TYPE="D"!(LOINC=42348) S CLASS=3,SUBCLASS=27 Q  ;Advance Directive
"RTN","HMPDTIU",198,0)
 ;
"RTN","HMPDTIU",199,0)
 ; discharge summaries
"RTN","HMPDTIU",200,0)
 I TYPE="DS"!(LOINC=18842) S CLASS=244 Q
"RTN","HMPDTIU",201,0)
 ;
"RTN","HMPDTIU",202,0)
 ; procedures
"RTN","HMPDTIU",203,0)
 I TYPE="SR"!(LOINC=29752) S CLASS=+$$CLASS^TIUSROI("SURGICAL REPORTS") Q
"RTN","HMPDTIU",204,0)
 D CPCLASS^TIUCP(.CP)
"RTN","HMPDTIU",205,0)
 I TYPE="CP" S CLASS=$S(STATUS=2:CP,1:"CP") Q       ;CLINICAL PROCEDURES
"RTN","HMPDTIU",206,0)
 I LOINC=26441 D  Q                                 ;CARDIOLOGY
"RTN","HMPDTIU",207,0)
 . S CLASS=CP_"^3"
"RTN","HMPDTIU",208,0)
 . S SUBJECT="^18^142^174^",SERVICE="^75^76^115^"
"RTN","HMPDTIU",209,0)
 I LOINC=27896 D  Q                                 ;PULMONARY
"RTN","HMPDTIU",210,0)
 . S CLASS=CP_"^3"
"RTN","HMPDTIU",211,0)
 . S SUBJECT="^23^142^",SERVICE="^75^76^115^"
"RTN","HMPDTIU",212,0)
 I LOINC=27895 D  Q                                 ;GASTROENTEROLOGY
"RTN","HMPDTIU",213,0)
 . S CLASS=CP_"^3"
"RTN","HMPDTIU",214,0)
 . S SUBJECT="^20^",SERVICE="^75^76^115^"
"RTN","HMPDTIU",215,0)
 I LOINC=27897 D  Q                                 ;NEUROLOGY
"RTN","HMPDTIU",216,0)
 . S CLASS=CP_"^3"
"RTN","HMPDTIU",217,0)
 . S SUBJECT="^44^45^52^111^112^143^146^",SERVICE="^75^76^115^"
"RTN","HMPDTIU",218,0)
 I LOINC=28619 D  Q                                 ;OPHTH/OPTOMETRY
"RTN","HMPDTIU",219,0)
 . S CLASS=CP_"^3"
"RTN","HMPDTIU",220,0)
 . S SUBJECT="^13^14^103^",SERVICE="^75^76^115^"
"RTN","HMPDTIU",221,0)
 I LOINC=28634 D  Q                                 ;MISC/ALL OTHERS
"RTN","HMPDTIU",222,0)
 . S CLASS=CP_"^3",SERVICE="^75^76^115^"
"RTN","HMPDTIU",223,0)
 . S NOTSUBJ="^18^142^174^23^142^20^44^45^52^111^112^143^146^13^14^103^"
"RTN","HMPDTIU",224,0)
 I LOINC=28570 D  Q                                 ;UNSPECIFIED/ALL
"RTN","HMPDTIU",225,0)
 . S CLASS=CP_"^3"
"RTN","HMPDTIU",226,0)
 . S SERVICE="^75^76^115^"
"RTN","HMPDTIU",227,0)
 ;
"RTN","HMPDTIU",228,0)
 ; pathology/lab
"RTN","HMPDTIU",229,0)
 I TYPE="LR"!(LOINC=27898) S CLASS=$S(STATUS=2:$$LR,1:"LR") Q
"RTN","HMPDTIU",230,0)
 ;
"RTN","HMPDTIU",231,0)
 ; radiology
"RTN","HMPDTIU",232,0)
 I TYPE="RA"!(LOINC=18726) S CLASS="RA" Q
"RTN","HMPDTIU",233,0)
 ;
"RTN","HMPDTIU",234,0)
 ; unknown
"RTN","HMPDTIU",235,0)
 I $L(TYPE)!LOINC S CLASS=0
"RTN","HMPDTIU",236,0)
 Q
"RTN","HMPDTIU",237,0)
 ;
"RTN","HMPDTIU",238,0)
MATCH(DOC) ; -- Return 1 or 0, if document DA matches search criteria
"RTN","HMPDTIU",239,0)
 N Y,DA,LOCAL,NATL,X0,OK S Y=0
"RTN","HMPDTIU",240,0)
 S DA=+$G(DOC) G:DA<1 MQ
"RTN","HMPDTIU",241,0)
 ; include addenda if pulling only unsigned items
"RTN","HMPDTIU",242,0)
 I $P(DOC,U,2)?1"Addendum ".E,STATUS'=2 G MQ
"RTN","HMPDTIU",243,0)
 ; TIU unsigned list can include completed parent notes
"RTN","HMPDTIU",244,0)
 I CTXT=2,$P(DOC,U,7)'="unsigned" G MQ
"RTN","HMPDTIU",245,0)
 S LOCAL=$$GET1^DIQ(8925,DA_",",.01,"I") ;local Title 8925.1 ien
"RTN","HMPDTIU",246,0)
 I $L(SUBCLASS) D  G:'OK MQ
"RTN","HMPDTIU",247,0)
 . N I,X S OK=0
"RTN","HMPDTIU",248,0)
 . F I=1:1:$L(SUBCLASS,"^") S X=$P(SUBCLASS,U,I) I $$ISA^TIULX(LOCAL,X) S OK=1 Q
"RTN","HMPDTIU",249,0)
 S NATL=+$$GET1^DIQ(8925.1,LOCAL_",",1501,"I") ;Natl Title 8926.1 ien
"RTN","HMPDTIU",250,0)
 I $L(TITLE) G:TITLE'[(U_+NATL_U) MQ
"RTN","HMPDTIU",251,0)
 S X0=$G(^TIU(8926.1,NATL,0))
"RTN","HMPDTIU",252,0)
 I $L(SERVICE) G:SERVICE'[(U_+$P(X0,U,7)_U) MQ
"RTN","HMPDTIU",253,0)
 I $L(SUBJECT) G:SUBJECT'[(U_+$P(X0,U,4)_U) MQ
"RTN","HMPDTIU",254,0)
 I $L(NOTSUBJ) G:NOTSUBJ[(U_+$P(X0,U,4)_U) MQ
"RTN","HMPDTIU",255,0)
 S Y=1
"RTN","HMPDTIU",256,0)
MQ Q Y
"RTN","HMPDTIUX")
0^72^B21288550
"RTN","HMPDTIUX",1,0)
HMPDTIUX ;SLC/MKB -- TIU search utilities ;8/2/11  15:29
"RTN","HMPDTIUX",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDTIUX",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDTIUX",4,0)
 ;
"RTN","HMPDTIUX",5,0)
 ; External References          DBIA#
"RTN","HMPDTIUX",6,0)
 ; -------------------          -----
"RTN","HMPDTIUX",7,0)
 ; ^TIU(8925.1              2321,5677
"RTN","HMPDTIUX",8,0)
 ; ^TIU(8926.1                   5678
"RTN","HMPDTIUX",9,0)
 ; DIQ                           2056
"RTN","HMPDTIUX",10,0)
 ; TIUCNSLT                      5546
"RTN","HMPDTIUX",11,0)
 ; TIUCP                         3568
"RTN","HMPDTIUX",12,0)
 ; TIULQ                         2693
"RTN","HMPDTIUX",13,0)
 ; TIULX                         3058
"RTN","HMPDTIUX",14,0)
 ; TIUSROI                       5676
"RTN","HMPDTIUX",15,0)
 ; XLFSTR                       10104
"RTN","HMPDTIUX",16,0)
 ;
"RTN","HMPDTIUX",17,0)
 ;
"RTN","HMPDTIUX",18,0)
 ; ------------ Get/apply search criteria ------------
"RTN","HMPDTIUX",19,0)
 ;                  [from EN^HMPDTIU]
"RTN","HMPDTIUX",20,0)
 ;
"RTN","HMPDTIUX",21,0)
SETUP ; -- convert FILTER("attribute") = value to TIU criteria
"RTN","HMPDTIUX",22,0)
 ; Expects: FILTER("category") = code (see $$CATG)
"RTN","HMPDTIUX",23,0)
 ;          FILTER("loinc")    = LOINC
"RTN","HMPDTIUX",24,0)
 ;          FILTER("status")   = 'all','completed','unsigned'
"RTN","HMPDTIUX",25,0)
 ; Returns: CLASS,[SUBCLASS,TITLE,SERVICE,SUBJECT,STATUS]
"RTN","HMPDTIUX",26,0)
 ;
"RTN","HMPDTIUX",27,0)
 N LOINC,TYPE,STS,CP
"RTN","HMPDTIUX",28,0)
 S LOINC=+$G(FILTER("loinc")),TYPE=$$UP^XLFSTR($G(FILTER("category")))
"RTN","HMPDTIUX",29,0)
 S CLASS="3^244",(SUBCLASS,TITLE,SERVICE,SUBJECT,NOTSUBJ,STATUS)=""
"RTN","HMPDTIUX",30,0)
 ;
"RTN","HMPDTIUX",31,0)
 ; status [default='complete']
"RTN","HMPDTIUX",32,0)
 S STS=$$LOW^XLFSTR($G(FILTER("status")))
"RTN","HMPDTIUX",33,0)
 S STATUS=$S(STS?1"unsig".E:2,STS="all":"5^2",1:5)  ;TIUSRVLO statuses
"RTN","HMPDTIUX",34,0)
 ;
"RTN","HMPDTIUX",35,0)
 ; all documents
"RTN","HMPDTIUX",36,0)
 I TYPE="ALL" S CLASS="3^244^"_+$$CLASS^TIUSROI("SURGICAL REPORTS")_"^CP^LR^RA" Q
"RTN","HMPDTIUX",37,0)
 I 'LOINC,TYPE="" S CLASS="3^244^"_+$$CLASS^TIUSROI("SURGICAL REPORTS")_"^CP^LR^RA" Q
"RTN","HMPDTIUX",38,0)
 ;
"RTN","HMPDTIUX",39,0)
 ; progress notes
"RTN","HMPDTIUX",40,0)
 I TYPE="PN" S CLASS=3 Q
"RTN","HMPDTIUX",41,0)
 I TYPE="CR"!(LOINC=11488) S CLASS=3,SUBCLASS=+$$CLASS^TIUCNSLT Q
"RTN","HMPDTIUX",42,0)
 ; LOINC=26442 S CLASS=3,SUBJECT="^114^" Q         ;OB/GYN
"RTN","HMPDTIUX",43,0)
 I LOINC=34117 S CLASS=3,SERVICE="^88^" Q          ;H&P
"RTN","HMPDTIUX",44,0)
 I TYPE="CWAD" S CLASS=3,SUBCLASS="25^27^30^31" Q  ;CWAD
"RTN","HMPDTIUX",45,0)
 I TYPE="C" S CLASS=3,SUBCLASS=30 Q                ;Crisis Note
"RTN","HMPDTIUX",46,0)
 I TYPE="W" S CLASS=3,SUBCLASS=31 Q                ;Clinical Warning
"RTN","HMPDTIUX",47,0)
 I TYPE="A" S CLASS=3,SUBCLASS=25 Q                ;Allergy Note
"RTN","HMPDTIUX",48,0)
 I TYPE="D"!(LOINC=42348) S CLASS=3,SUBCLASS=27 Q  ;Advance Directive
"RTN","HMPDTIUX",49,0)
 ;
"RTN","HMPDTIUX",50,0)
 ; discharge summaries
"RTN","HMPDTIUX",51,0)
 I TYPE="DS"!(LOINC=18842) S CLASS=244 Q
"RTN","HMPDTIUX",52,0)
 ;
"RTN","HMPDTIUX",53,0)
 ; procedures
"RTN","HMPDTIUX",54,0)
 I TYPE="SR"!(LOINC=29752) S CLASS=+$$CLASS^TIUSROI("SURGICAL REPORTS") Q
"RTN","HMPDTIUX",55,0)
 D CPCLASS^TIUCP(.CP)
"RTN","HMPDTIUX",56,0)
 I TYPE="CP" S CLASS=$S(STATUS=2:CP,1:"CP") Q       ;CLINICAL PROCEDURES
"RTN","HMPDTIUX",57,0)
 I LOINC=26441 D  Q                                 ;CARDIOLOGY
"RTN","HMPDTIUX",58,0)
 . S CLASS=CP_"^3"
"RTN","HMPDTIUX",59,0)
 . S SUBJECT="^18^142^174^",SERVICE="^75^76^115^"
"RTN","HMPDTIUX",60,0)
 I LOINC=27896 D  Q                                 ;PULMONARY
"RTN","HMPDTIUX",61,0)
 . S CLASS=CP_"^3"
"RTN","HMPDTIUX",62,0)
 . S SUBJECT="^23^142^",SERVICE="^75^76^115^"
"RTN","HMPDTIUX",63,0)
 I LOINC=27895 D  Q                                 ;GASTROENTEROLOGY
"RTN","HMPDTIUX",64,0)
 . S CLASS=CP_"^3"
"RTN","HMPDTIUX",65,0)
 . S SUBJECT="^20^",SERVICE="^75^76^115^"
"RTN","HMPDTIUX",66,0)
 I LOINC=27897 D  Q                                 ;NEUROLOGY
"RTN","HMPDTIUX",67,0)
 . S CLASS=CP_"^3"
"RTN","HMPDTIUX",68,0)
 . S SUBJECT="^44^45^52^111^112^143^146^",SERVICE="^75^76^115^"
"RTN","HMPDTIUX",69,0)
 I LOINC=28619 D  Q                                 ;OPHTH/OPTOMETRY
"RTN","HMPDTIUX",70,0)
 . S CLASS=CP_"^3"
"RTN","HMPDTIUX",71,0)
 . S SUBJECT="^13^14^103^",SERVICE="^75^76^115^"
"RTN","HMPDTIUX",72,0)
 I LOINC=28634 D  Q                                 ;MISC/ALL OTHERS
"RTN","HMPDTIUX",73,0)
 . S CLASS=CP_"^3",SERVICE="^75^76^115^"
"RTN","HMPDTIUX",74,0)
 . S NOTSUBJ="^18^142^174^23^142^20^44^45^52^111^112^143^146^13^14^103^"
"RTN","HMPDTIUX",75,0)
 I LOINC=28570 D  Q                                 ;UNSPECIFIED/ALL
"RTN","HMPDTIUX",76,0)
 . S CLASS=CP_"^3"
"RTN","HMPDTIUX",77,0)
 . S SERVICE="^75^76^115^"
"RTN","HMPDTIUX",78,0)
 ;
"RTN","HMPDTIUX",79,0)
 ; pathology/lab
"RTN","HMPDTIUX",80,0)
 I TYPE="LR"!(LOINC=27898) S CLASS=$S(STATUS=2:$$LR,1:"LR") Q
"RTN","HMPDTIUX",81,0)
 ;
"RTN","HMPDTIUX",82,0)
 ; radiology
"RTN","HMPDTIUX",83,0)
 I TYPE="RA"!(LOINC=18726) S CLASS="RA" Q
"RTN","HMPDTIUX",84,0)
 ;
"RTN","HMPDTIUX",85,0)
 ; unknown
"RTN","HMPDTIUX",86,0)
 I $L(TYPE)!LOINC S CLASS=0
"RTN","HMPDTIUX",87,0)
 Q
"RTN","HMPDTIUX",88,0)
 ;
"RTN","HMPDTIUX",89,0)
LR() ; -- Return ien of Lab class
"RTN","HMPDTIUX",90,0)
 N Y S Y=+$O(^TIU(8925.1,"B","LR LABORATORY REPORTS",0))
"RTN","HMPDTIUX",91,0)
 I Y>0,$S($P($G(^TIU(8925.1,Y,0)),U,4)="CL":0,$P($G(^(0)),U,4)="DC":0,1:1) S Y=0
"RTN","HMPDTIUX",92,0)
 Q Y
"RTN","HMPDTIUX",93,0)
 ;
"RTN","HMPDTIUX",94,0)
MATCH(DOC,STS) ; -- Return 1 or 0, if document DA matches search criteria
"RTN","HMPDTIUX",95,0)
 N Y,DA,LOCAL,NATL,X0,OK S Y=0
"RTN","HMPDTIUX",96,0)
 S DA=+$G(DOC) G:DA<1 MQ
"RTN","HMPDTIUX",97,0)
 ; include addenda if pulling only unsigned items
"RTN","HMPDTIUX",98,0)
 I $P(DOC,U,2)?1"Addendum ".E,STATUS'=2 G MQ
"RTN","HMPDTIUX",99,0)
 ; TIU unsigned list can include completed parent notes
"RTN","HMPDTIUX",100,0)
 I $G(STS)=2,$P(DOC,U,7)'="unsigned" G MQ
"RTN","HMPDTIUX",101,0)
 S LOCAL=$$GET1^DIQ(8925,DA_",",.01,"I") ;local Title 8925.1 ien
"RTN","HMPDTIUX",102,0)
 I $L(SUBCLASS) D  G:'OK MQ
"RTN","HMPDTIUX",103,0)
 . N I,X S OK=0
"RTN","HMPDTIUX",104,0)
 . F I=1:1:$L(SUBCLASS,"^") S X=$P(SUBCLASS,U,I) I $$ISA^TIULX(LOCAL,X) S OK=1 Q
"RTN","HMPDTIUX",105,0)
 S NATL=+$$GET1^DIQ(8925.1,LOCAL_",",1501,"I") ;Natl Title 8926.1 ien
"RTN","HMPDTIUX",106,0)
 I $L(TITLE) G:TITLE'[(U_+NATL_U) MQ
"RTN","HMPDTIUX",107,0)
 S X0=$G(^TIU(8926.1,NATL,0))
"RTN","HMPDTIUX",108,0)
 I $L(SERVICE) G:SERVICE'[(U_+$P(X0,U,7)_U) MQ
"RTN","HMPDTIUX",109,0)
 I $L(SUBJECT) G:SUBJECT'[(U_+$P(X0,U,4)_U) MQ
"RTN","HMPDTIUX",110,0)
 I $L(NOTSUBJ) G:NOTSUBJ[(U_+$P(X0,U,4)_U) MQ
"RTN","HMPDTIUX",111,0)
 S Y=1
"RTN","HMPDTIUX",112,0)
MQ Q Y
"RTN","HMPDTIUX",113,0)
 ;
"RTN","HMPDTIUX",114,0)
TYPE(X) ; -- Return name of category type X
"RTN","HMPDTIUX",115,0)
 S X=$G(X)
"RTN","HMPDTIUX",116,0)
 I X="PN" Q "Progress Note"
"RTN","HMPDTIUX",117,0)
 I X="DS" Q "Discharge Summary"
"RTN","HMPDTIUX",118,0)
 I X="CP" Q "Clinical Procedure"
"RTN","HMPDTIUX",119,0)
 I X="SR" Q "Surgery Report"
"RTN","HMPDTIUX",120,0)
 I X="LR" Q "Laboratory Report"
"RTN","HMPDTIUX",121,0)
 I X="RA" Q "Radiology Report"
"RTN","HMPDTIUX",122,0)
 I X="CR" Q "Consult Report"
"RTN","HMPDTIUX",123,0)
 I X="C"  Q "Crisis Note"
"RTN","HMPDTIUX",124,0)
 I X="W"  Q "Clinical Warning"
"RTN","HMPDTIUX",125,0)
 I X="A"  Q "Allergy/Adverse Reaction"
"RTN","HMPDTIUX",126,0)
 I X="D"  Q "Advance Directive"
"RTN","HMPDTIUX",127,0)
 Q ""
"RTN","HMPDVSIT")
0^136^B89189669
"RTN","HMPDVSIT",1,0)
HMPDVSIT ;SLC/MKB -- Visit/Encounter extract ;8/2/11  15:29
"RTN","HMPDVSIT",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPDVSIT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDVSIT",4,0)
 ;
"RTN","HMPDVSIT",5,0)
 ; External References          DBIA#
"RTN","HMPDVSIT",6,0)
 ; -------------------          -----
"RTN","HMPDVSIT",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDVSIT",8,0)
 ; ^DIC(40.7                      557
"RTN","HMPDVSIT",9,0)
 ; ^DIC(42                      10039
"RTN","HMPDVSIT",10,0)
 ; ^DIC(45.7                     1154
"RTN","HMPDVSIT",11,0)
 ; ^DPT(                        10035
"RTN","HMPDVSIT",12,0)
 ; ^SC                          10040
"RTN","HMPDVSIT",13,0)
 ; ^VA(200                      10060
"RTN","HMPDVSIT",14,0)
 ; DGPTFAPI                      3157
"RTN","HMPDVSIT",15,0)
 ; DIC                           2051
"RTN","HMPDVSIT",16,0)
 ; DILFD                         2055
"RTN","HMPDVSIT",17,0)
 ; DIQ                           2056
"RTN","HMPDVSIT",18,0)
 ; ICDCODE                       3990
"RTN","HMPDVSIT",19,0)
 ; ICPTCOD                       1995
"RTN","HMPDVSIT",20,0)
 ; PXAPI,^TMP("PXKENC",$J        1894
"RTN","HMPDVSIT",21,0)
 ; SDOE                          2546
"RTN","HMPDVSIT",22,0)
 ; VADPT                        10061
"RTN","HMPDVSIT",23,0)
 ; VADPT2                         325
"RTN","HMPDVSIT",24,0)
 ; XUAF4                         2171
"RTN","HMPDVSIT",25,0)
 ;
"RTN","HMPDVSIT",26,0)
 ; ------------ Get encounter(s) from VistA ------------
"RTN","HMPDVSIT",27,0)
 ;
"RTN","HMPDVSIT",28,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's visits and appointments
"RTN","HMPDVSIT",29,0)
 N HMPCNT,HMPITM,HMPDT,HMPLOC,HMPDA
"RTN","HMPDVSIT",30,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDVSIT",31,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDVSIT",32,0)
 ;
"RTN","HMPDVSIT",33,0)
 ; get one visit
"RTN","HMPDVSIT",34,0)
 I $G(ID) D EN1(ID,.HMPITM),XML(.HMPITM) G ENQ
"RTN","HMPDVSIT",35,0)
 ;
"RTN","HMPDVSIT",36,0)
 ; -- get all visits
"RTN","HMPDVSIT",37,0)
 I END,END'["." S END=END_".24" ;assume end of day
"RTN","HMPDVSIT",38,0)
 S HMPCNT=0
"RTN","HMPDVSIT",39,0)
 ;F  S IDX=$Q(@IDX,-1) Q:DFN'=$P(IDX,",",2)  Q:$P(IDX,",",3)<BEG  I $P(IDX,",",5)["P" D
"RTN","HMPDVSIT",40,0)
 S HMPDT=END F  S HMPDT=$O(^AUPNVSIT("AET",DFN,HMPDT),-1)  Q:HMPDT<BEG  D  Q:HMPCNT'<MAX
"RTN","HMPDVSIT",41,0)
 . S HMPLOC=0 F  S HMPLOC=$O(^AUPNVSIT("AET",DFN,HMPDT,HMPLOC)) Q:HMPLOC<1  D
"RTN","HMPDVSIT",42,0)
 .. S HMPDA=0 F  S HMPDA=$O(^AUPNVSIT("AET",DFN,HMPDT,HMPLOC,"P",HMPDA)) Q:HMPDA<1  D
"RTN","HMPDVSIT",43,0)
 ... K HMPITM D EN1(HMPDA,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDVSIT",44,0)
 ... D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDVSIT",45,0)
ENQ ; end
"RTN","HMPDVSIT",46,0)
 K ^TMP("HMPTEXT",$J)
"RTN","HMPDVSIT",47,0)
 Q
"RTN","HMPDVSIT",48,0)
 ;
"RTN","HMPDVSIT",49,0)
ENAA(DFN,BEG,END,MAX,ID) ; -- find patient's visits and appointments [AA]
"RTN","HMPDVSIT",50,0)
 N IDT,DA,HMPCNT,HMPITM
"RTN","HMPDVSIT",51,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDVSIT",52,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDVSIT",53,0)
 I $G(ID) D EN1(ID,.HMPITM),XML(.HMPITM) Q  ;one visit
"RTN","HMPDVSIT",54,0)
 D IDT S HMPCNT=0
"RTN","HMPDVSIT",55,0)
 S IDT=BEG F  S IDT=$O(^AUPNVSIT("AA",DFN,IDT)) Q:IDT<1!(IDT>END)  D  Q:HMPCNT'<MAX
"RTN","HMPDVSIT",56,0)
 . S DA=0 F  S DA=$O(^AUPNVSIT("AA",DFN,IDT,DA)) Q:DA<1  D
"RTN","HMPDVSIT",57,0)
 .. K HMPITM D EN1(DA,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDVSIT",58,0)
 .. D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDVSIT",59,0)
 Q
"RTN","HMPDVSIT",60,0)
IDT ; -- invert BEG and END dates for visit format:
"RTN","HMPDVSIT",61,0)
 ;  IDT=(9999999-$P(VDT,"."))_"."_$P(VDT,".",2)
"RTN","HMPDVSIT",62,0)
 N X S X=BEG
"RTN","HMPDVSIT",63,0)
 S BEG=(9999999-$P(END,"."))
"RTN","HMPDVSIT",64,0)
 S END=(9999999-$P(X,"."))_".2359"
"RTN","HMPDVSIT",65,0)
 Q
"RTN","HMPDVSIT",66,0)
 ;
"RTN","HMPDVSIT",67,0)
EN1(IEN,VST) ; -- return a visit in VST("attribute")=value
"RTN","HMPDVSIT",68,0)
 N X0,X15,X,FAC,LOC,CATG,INPT,DA
"RTN","HMPDVSIT",69,0)
 K VST,^TMP("HMPTEXT",$J)
"RTN","HMPDVSIT",70,0)
 S IEN=+$G(IEN) Q:IEN<1  ;invalid
"RTN","HMPDVSIT",71,0)
 D ENCEVENT^PXAPI(IEN)
"RTN","HMPDVSIT",72,0)
 S X0=$G(^TMP("PXKENC",$J,IEN,"VST",IEN,0)),X15=$G(^(150))
"RTN","HMPDVSIT",73,0)
 Q:$P(X15,U,3)'="P"  Q:$P(X0,U,7)="E"  ;want primary, not historical
"RTN","HMPDVSIT",74,0)
 I $P(X0,U,7)="H" D ADM(IEN,+X0,.VST) Q
"RTN","HMPDVSIT",75,0)
 S VST("id")=IEN,VST("dateTime")=+X0
"RTN","HMPDVSIT",76,0)
 S FAC=+$P(X0,U,6),CATG=$P(X0,U,7),LOC=+$P(X0,U,22)
"RTN","HMPDVSIT",77,0)
 S:FAC VST("facility")=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDVSIT",78,0)
 S:'FAC VST("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDVSIT",79,0)
 S VST("serviceCategory")=CATG_U_$$CATG(CATG)
"RTN","HMPDVSIT",80,0)
 S VST("visitString")=LOC_";"_+X0_";"_CATG
"RTN","HMPDVSIT",81,0)
 S INPT=$P(X15,U,2) S:INPT="" INPT=$S("H^I^R^D"[CATG:1,1:0)
"RTN","HMPDVSIT",82,0)
 S X=$$CPT(IEN) S:X VST("type")=$P($$CPT^ICPTCOD(X),U,2,3)
"RTN","HMPDVSIT",83,0)
 I 'X S VST("type")=U_$S('INPT&LOC:$P($G(^SC(LOC,0)),U)_" VISIT",1:$$CATG(CATG))
"RTN","HMPDVSIT",84,0)
 S VST("patientClass")=$S(INPT:"IMP",1:"AMB")
"RTN","HMPDVSIT",85,0)
 S X=$P(X0,U,8) S:X VST("stopCode")=$$AMIS(X) I LOC D
"RTN","HMPDVSIT",86,0)
 . N L0 S L0=$G(^SC(LOC,0))
"RTN","HMPDVSIT",87,0)
 . I 'X S VST("stopCode")=$$AMIS($P(L0,U,7))
"RTN","HMPDVSIT",88,0)
 . S VST("location")=$P(L0,U),VST("service")=$$SERV($P(L0,U,20))
"RTN","HMPDVSIT",89,0)
 . S X=$P(L0,U,18) S:X VST("creditStopCode")=$$AMIS(X)
"RTN","HMPDVSIT",90,0)
 S VST("reason")=$$POV(IEN)
"RTN","HMPDVSIT",91,0)
 ; provider(s)
"RTN","HMPDVSIT",92,0)
 S DA=0 F  S DA=$O(^TMP("PXKENC",$J,IEN,"PRV",DA)) Q:DA<1  S X0=$G(^(DA,0)) D
"RTN","HMPDVSIT",93,0)
 . S VST("provider",DA)=+X0_U_$P($G(^VA(200,+X0,0)),U)_$S($P(X0,U,4)="P":"^P^1",1:"^S^")
"RTN","HMPDVSIT",94,0)
 ; note(s)
"RTN","HMPDVSIT",95,0)
 D TIU(IEN)
"RTN","HMPDVSIT",96,0)
 K ^TMP("PXKENC",$J,IEN)
"RTN","HMPDVSIT",97,0)
 Q
"RTN","HMPDVSIT",98,0)
 ;
"RTN","HMPDVSIT",99,0)
TIU(VISIT) ; -- add notes to VST("document")
"RTN","HMPDVSIT",100,0)
 N X,Y,I,HMPX,LT,NT,DA,CNT,HMPY
"RTN","HMPDVSIT",101,0)
 D FIND^DIC(8925,,.01,"QX",+$G(VISIT),,"V",,,"HMPX")
"RTN","HMPDVSIT",102,0)
 S Y="",(I,CNT)=0
"RTN","HMPDVSIT",103,0)
 F  S I=$O(HMPX("DILIST",1,I)) Q:I<1  D
"RTN","HMPDVSIT",104,0)
 . S LT=$G(HMPX("DILIST","ID",I,.01)) Q:$P(LT," ")="Addendum"
"RTN","HMPDVSIT",105,0)
 . S DA=$G(HMPX("DILIST",2,I))
"RTN","HMPDVSIT",106,0)
 . S NT=$$GET1^DIQ(8925,+DA_",",".01:1501")
"RTN","HMPDVSIT",107,0)
 . S CNT=CNT+1,VST("document",CNT)=DA_U_LT_U_NT
"RTN","HMPDVSIT",108,0)
 . S:$G(HMPTEXT) VST("document",CNT,"content")=$$TEXT^HMPDTIU(DA)
"RTN","HMPDVSIT",109,0)
 Q
"RTN","HMPDVSIT",110,0)
 ;
"RTN","HMPDVSIT",111,0)
POV(VISIT) ; -- return the primary Purpose of Visit as ICD^ProviderNarrative
"RTN","HMPDVSIT",112,0)
 N DA,Y,X,X0,ICD S Y=""
"RTN","HMPDVSIT",113,0)
 S DA=0 F  S DA=$O(^TMP("PXKENC",$J,VISIT,"POV",DA)) Q:DA<1  S X0=$G(^(DA,0)) I $P(X0,U,12)="P" D  Q:$L(Y)
"RTN","HMPDVSIT",114,0)
 . S X=+$P(X0,U,4),ICD=$$ICD(+X0)
"RTN","HMPDVSIT",115,0)
 . S Y=ICD_U_$$EXTERNAL^DILFD(9000010.07,.04,,X)
"RTN","HMPDVSIT",116,0)
 Q Y
"RTN","HMPDVSIT",117,0)
 ;
"RTN","HMPDVSIT",118,0)
ICD(IEN) ; -- return code^description for ICD code, or "^" if error
"RTN","HMPDVSIT",119,0)
 N X0,HMPX,N,I,X,Y S IEN=+$G(IEN)
"RTN","HMPDVSIT",120,0)
 S X0=$$ICDDX^ICDCODE(IEN) I X0<0 Q "^"
"RTN","HMPDVSIT",121,0)
 S Y=$P(X0,U,2)_U_$P(X0,U,4)       ;ICD Code^Dx name
"RTN","HMPDVSIT",122,0)
 S N=$$ICDD^ICDCODE($P(Y,U),"HMPX") ;ICD Description
"RTN","HMPDVSIT",123,0)
 I N>0,$L($G(HMPX(1))) S $P(Y,U,2)=HMPX(1)
"RTN","HMPDVSIT",124,0)
 Q Y
"RTN","HMPDVSIT",125,0)
 ;
"RTN","HMPDVSIT",126,0)
CPT(VISIT) ; -- Return CPT code of encounter type
"RTN","HMPDVSIT",127,0)
 N DA,Y,X,X0 S Y=""
"RTN","HMPDVSIT",128,0)
 S DA=0 F  S DA=$O(^TMP("PXKENC",$J,VISIT,"CPT",DA)) Q:DA<1  S X0=$G(^(DA,0)) D  Q:$L(Y)
"RTN","HMPDVSIT",129,0)
 . S X=$P(X0,U) I X?1"992"2N S Y=X Q
"RTN","HMPDVSIT",130,0)
 Q Y
"RTN","HMPDVSIT",131,0)
 ;
"RTN","HMPDVSIT",132,0)
AMIS(X) ; -- return the AMIS code^name of Credit Stop X
"RTN","HMPDVSIT",133,0)
 N Y,X0 S Y=""
"RTN","HMPDVSIT",134,0)
 S X0=$G(^DIC(40.7,+$G(X),0)) S:$L(X0) Y=$P(X0,U,2)_U_$P(X0,U)
"RTN","HMPDVSIT",135,0)
 Q Y
"RTN","HMPDVSIT",136,0)
 ;
"RTN","HMPDVSIT",137,0)
CATG(X) ; -- Return name of visit Service Category code X
"RTN","HMPDVSIT",138,0)
 N Y S Y=""
"RTN","HMPDVSIT",139,0)
 I X="A" S Y="AMBULATORY"
"RTN","HMPDVSIT",140,0)
 I X="H" S Y="HOSPITALIZATION"
"RTN","HMPDVSIT",141,0)
 I X="I" S Y="IN HOSPITAL"
"RTN","HMPDVSIT",142,0)
 I X="C" S Y="CHART REVIEW"
"RTN","HMPDVSIT",143,0)
 I X="T" S Y="TELECOMMUNICATIONS"
"RTN","HMPDVSIT",144,0)
 I X="N" S Y="NOT FOUND"
"RTN","HMPDVSIT",145,0)
 I X="S" S Y="DAY SURGERY"
"RTN","HMPDVSIT",146,0)
 I X="O" S Y="OBSERVATION"
"RTN","HMPDVSIT",147,0)
 I X="E" S Y="EVENT (HISTORICAL)"
"RTN","HMPDVSIT",148,0)
 I X="R" S Y="NURSING HOME"
"RTN","HMPDVSIT",149,0)
 I X="D" S Y="DAILY HOSPITALIZATION DATA"
"RTN","HMPDVSIT",150,0)
 I X="X" S Y="ANCILLARY PACKAGE DAILY DATA"
"RTN","HMPDVSIT",151,0)
 Q Y
"RTN","HMPDVSIT",152,0)
 ;
"RTN","HMPDVSIT",153,0)
SERV(FTS) ; -- Return #42.4 Service for a Facility Treating Specialty
"RTN","HMPDVSIT",154,0)
 N Y S Y="",FTS=+$G(FTS)
"RTN","HMPDVSIT",155,0)
 S Y=$$GET1^DIQ(45.7,FTS_",","1:3","E")
"RTN","HMPDVSIT",156,0)
 Q Y
"RTN","HMPDVSIT",157,0)
 ;
"RTN","HMPDVSIT",158,0)
ADM(IEN,DATE,ADM) ; -- return an admission in ADM("attribute")=value
"RTN","HMPDVSIT",159,0)
 N VAINDT,VADMVT,VAIP,VAIN,VAERR,HLOC,ICD,I K ADM
"RTN","HMPDVSIT",160,0)
 S IEN=+$G(IEN),DATE=+$G(DATE) Q:IEN<1  Q:DATE<1
"RTN","HMPDVSIT",161,0)
 S VAINDT=DATE D ADM^VADPT2 Q:VADMVT<1
"RTN","HMPDVSIT",162,0)
 I VADMVT=$G(^DPT(DFN,.105)) D INPT Q  ;current inpatient
"RTN","HMPDVSIT",163,0)
 S VAIP("E")=VADMVT D IN5^VADPT Q:'$G(VAIP(1))  ;deleted
"RTN","HMPDVSIT",164,0)
 S ADM("id")=IEN,ADM("patientClass")="IMP"
"RTN","HMPDVSIT",165,0)
 ; ADM("admitType")=$P($G(VAIP(4)),U,2)
"RTN","HMPDVSIT",166,0)
 S DATE=+$G(VAIP(13,1)),(ADM("dateTime"),ADM("arrivalDateTime"))=DATE,I=0
"RTN","HMPDVSIT",167,0)
 S:$G(VAIP(7)) I=I+1,ADM("provider",I)=VAIP(7)_"^P^1" ;primary
"RTN","HMPDVSIT",168,0)
 S:$G(VAIP(18)) I=I+1,ADM("provider",I)=VAIP(18)_"^A" ;attending
"RTN","HMPDVSIT",169,0)
 S ADM("specialty")=$P($G(VAIP(8)),U,2)
"RTN","HMPDVSIT",170,0)
 S X=$$SERV(+$G(VAIP(8))),ADM("service")=X
"RTN","HMPDVSIT",171,0)
 S ICD=$$POV(IEN) S:'ICD ICD=$$PTF(DFN,VAIP(12)) ;PTF>ICD
"RTN","HMPDVSIT",172,0)
 S ADM("reason")=ICD_U_$G(VAIP(9)) ;ICD code^description^Dx text
"RTN","HMPDVSIT",173,0)
 S HLOC=+$G(^DIC(42,+$G(VAIP(5)),44))
"RTN","HMPDVSIT",174,0)
 S:HLOC ADM("location")=$P($G(^SC(HLOC,0)),U)
"RTN","HMPDVSIT",175,0)
 S ADM("facility")=$$FAC^HMPD(+HLOC),ADM("roomBed")=$P(VAIP(6),U,2)
"RTN","HMPDVSIT",176,0)
 S ADM("serviceCategory")="H^HOSPITALIZATION"
"RTN","HMPDVSIT",177,0)
 S X=$$CPT(IEN),ADM("type")=$S(X:$P($$CPT^ICPTCOD(X),U,2,3),1:U_$$CATG("H"))
"RTN","HMPDVSIT",178,0)
 I $G(VAIP(17)) D
"RTN","HMPDVSIT",179,0)
 . S ADM("departureDateTime")=+$G(VAIP(17,1))
"RTN","HMPDVSIT",180,0)
 . ; ADM("disposition")=$G(VAIP(17,3)) ;Discharge Mvt Type
"RTN","HMPDVSIT",181,0)
 S ADM("visitString")=HLOC_";"_DATE_";H"
"RTN","HMPDVSIT",182,0)
 D TIU(IEN) ;notes/summary
"RTN","HMPDVSIT",183,0)
 Q
"RTN","HMPDVSIT",184,0)
 ;
"RTN","HMPDVSIT",185,0)
INPT ; -- return current admission in ADM("attribute")=value [from ADM]
"RTN","HMPDVSIT",186,0)
 K VAINDT D INP^VADPT Q:VAIN(1)<1
"RTN","HMPDVSIT",187,0)
 S ADM("id")=IEN,ADM("patientClass")="IMP"
"RTN","HMPDVSIT",188,0)
 ; ADM("admitType")=$P($G(VAIN(8)),U,2)
"RTN","HMPDVSIT",189,0)
 S DATE=+$G(VAIN(7)),(ADM("dateTime"),ADM("arrivalDateTime"))=DATE,I=0
"RTN","HMPDVSIT",190,0)
 S:$G(VAIN(2)) I=I+1,ADM("provider",I)=VAIN(2)_"^P^1" ;primary
"RTN","HMPDVSIT",191,0)
 S:$G(VAIN(11)) I=I+1,ADM("provider",I)=VAIN(11)_"^A" ;attending
"RTN","HMPDVSIT",192,0)
 S ADM("specialty")=$P($G(VAIN(3)),U,2)
"RTN","HMPDVSIT",193,0)
 S X=$$SERV(+$G(VAIN(3))),ADM("service")=X
"RTN","HMPDVSIT",194,0)
 S ICD=$$POV(IEN) S:'ICD ICD=$$PTF(DFN,VAIN(10)) ;PTF>ICD
"RTN","HMPDVSIT",195,0)
 S ADM("reason")=ICD_U_$G(VAIN(9)) ;ICD code^description^Dx text
"RTN","HMPDVSIT",196,0)
 S HLOC=+$G(^DIC(42,+$G(VAIN(4)),44))
"RTN","HMPDVSIT",197,0)
 S:HLOC ADM("location")=$P($G(^SC(HLOC,0)),U)
"RTN","HMPDVSIT",198,0)
 S ADM("facility")=$$FAC^HMPD(+HLOC),ADM("roomBed")=$P(VAIN(5),U,2)
"RTN","HMPDVSIT",199,0)
 S ADM("serviceCategory")="H^HOSPITALIZATION"
"RTN","HMPDVSIT",200,0)
 S X=$$CPT(IEN),ADM("type")=$S(X:$P($$CPT^ICPTCOD(X),U,2,3),1:U_$$CATG("H"))
"RTN","HMPDVSIT",201,0)
 ; ADM("visitString")=HLOC_";"_DATE_";H"
"RTN","HMPDVSIT",202,0)
 D TIU(IEN) ;notes/summary
"RTN","HMPDVSIT",203,0)
 Q
"RTN","HMPDVSIT",204,0)
 ;
"RTN","HMPDVSIT",205,0)
PTF(DFN,PTF) ; -- return ICD code^description for a PTF record
"RTN","HMPDVSIT",206,0)
 N HMPPTF,N,HMPX
"RTN","HMPDVSIT",207,0)
 D:$G(PTF) RPC^DGPTFAPI(.HMPPTF,+PTF) I $G(HMPPTF(0))<1 Q "^"
"RTN","HMPDVSIT",208,0)
 S Y=$P($G(HMPPTF(1)),U,3)_U
"RTN","HMPDVSIT",209,0)
 S N=$$ICDD^ICDCODE(Y,"HMPX") ;ICD Description
"RTN","HMPDVSIT",210,0)
 I N>0,$L($G(HMPX(1))) S Y=Y_HMPX(1)
"RTN","HMPDVSIT",211,0)
 Q Y
"RTN","HMPDVSIT",212,0)
 ;
"RTN","HMPDVSIT",213,0)
ENC(IEN,ENC) ; -- return an encounter in ENC("attribute")=value
"RTN","HMPDVSIT",214,0)
 N X0,DATE,HLOC,TYPE,STS,X,Y K ENC
"RTN","HMPDVSIT",215,0)
 S IEN=+$G(IEN) Q:IEN<1  ;invalid ien
"RTN","HMPDVSIT",216,0)
 S ENC("id")="E"_IEN,X0=$$GETOE^SDOE(IEN) ;^SCE(IEN,0) node
"RTN","HMPDVSIT",217,0)
 S DATE=+X0,ENC("dateTime")=DATE
"RTN","HMPDVSIT",218,0)
 S HLOC=+$P(X0,U,4) I HLOC D
"RTN","HMPDVSIT",219,0)
 . S HLOC=HLOC_U_$P($G(^SC(HLOC,0)),U)
"RTN","HMPDVSIT",220,0)
 . S ENC("location")=$P(HLOC,U,2)
"RTN","HMPDVSIT",221,0)
 . S X=$$GET1^DIQ(44,+HLOC_",",9.5,"I")
"RTN","HMPDVSIT",222,0)
 . I X S ENC("service")=$$SERV(X)
"RTN","HMPDVSIT",223,0)
 S ENC("facility")=$$FAC^HMPD(+HLOC)
"RTN","HMPDVSIT",224,0)
 S STS=$$EXTERNAL^DILFD(409.68,.12,,$P(X0,U,12))
"RTN","HMPDVSIT",225,0)
 S X=$S(STS?1"INP".E:"IMP",1:"AMB"),ENC("patientClass")=X,TYPE=$E(X)
"RTN","HMPDVSIT",226,0)
 S ENC("type")=U_$S(HLOC:$P(HLOC,U,2)_" VISIT",1:$$CATG(TYPE))
"RTN","HMPDVSIT",227,0)
 S ENC("serviceCategory")=TYPE_U_$$CATG(TYPE)
"RTN","HMPDVSIT",228,0)
 S ENC("visitString")=+HLOC_";"_DATE_";"_TYPE
"RTN","HMPDVSIT",229,0)
 Q
"RTN","HMPDVSIT",230,0)
 ;
"RTN","HMPDVSIT",231,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDVSIT",232,0)
 ;
"RTN","HMPDVSIT",233,0)
XML(VISIT) ; -- Return patient visit as XML
"RTN","HMPDVSIT",234,0)
 N ATT,X,Y,NAMES,I,J
"RTN","HMPDVSIT",235,0)
 D ADD("<visit>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDVSIT",236,0)
 S ATT="" F  S ATT=$O(VISIT(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDVSIT",237,0)
 . I $O(VISIT(ATT,0)) D  S Y="" Q  ;multiples
"RTN","HMPDVSIT",238,0)
 .. D ADD("<"_ATT_"s>")
"RTN","HMPDVSIT",239,0)
 .. S I=0 F  S I=$O(VISIT(ATT,I)) Q:I<1  D
"RTN","HMPDVSIT",240,0)
 ... S X=$G(VISIT(ATT,I)),NAMES=""
"RTN","HMPDVSIT",241,0)
 ... I ATT="document" S NAMES="id^localTitle^nationalTitle^Z"
"RTN","HMPDVSIT",242,0)
 ... I ATT="provider" S NAMES="code^name^role^primary^Z"
"RTN","HMPDVSIT",243,0)
 ... S Y="<"_ATT_" "_$$LOOP ;_"/>" D ADD(Y)
"RTN","HMPDVSIT",244,0)
 ... S X=$G(VISIT(ATT,I,"content")) I '$L(X) S Y=Y_"/>" D ADD(Y) Q
"RTN","HMPDVSIT",245,0)
 ... S Y=Y_">" D ADD(Y)
"RTN","HMPDVSIT",246,0)
 ... S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","HMPDVSIT",247,0)
 ... S J=0 F  S J=$O(@X@(J)) Q:J<1  S Y=$$ESC^HMPD(@X@(J)) D ADD(Y)
"RTN","HMPDVSIT",248,0)
 ... D ADD("</content>"),ADD("</"_ATT_">")
"RTN","HMPDVSIT",249,0)
 .. D ADD("</"_ATT_"s>")
"RTN","HMPDVSIT",250,0)
 . S X=$G(VISIT(ATT)),Y="" Q:'$L(X)
"RTN","HMPDVSIT",251,0)
 . S NAMES="code^name^"_$S(ATT="reason":"narrative^",1:"")_"Z"
"RTN","HMPDVSIT",252,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDVSIT",253,0)
 . I $L(X)>1 S Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","HMPDVSIT",254,0)
 D ADD("</visit>")
"RTN","HMPDVSIT",255,0)
 Q
"RTN","HMPDVSIT",256,0)
 ;
"RTN","HMPDVSIT",257,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDVSIT",258,0)
 N STR,P,TAG S STR=""
"RTN","HMPDVSIT",259,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDVSIT",260,0)
 Q STR
"RTN","HMPDVSIT",261,0)
 ;
"RTN","HMPDVSIT",262,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPDVSIT",263,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDVSIT",264,0)
 S @HMP@(HMPI)=X
"RTN","HMPDVSIT",265,0)
 Q
"RTN","HMPEASU")
0^73^B28117986
"RTN","HMPEASU",1,0)
HMPEASU ;SLC/GRR -- Serve VistA reference data as JSON via RPC ; 10/18/12 6:26pm
"RTN","HMPEASU",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPEASU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPEASU",4,0)
 ;
"RTN","HMPEASU",5,0)
CLASS ; -- USR Class file #8930
"RTN","HMPEASU",6,0)
 N PRV S PRV=+$G(HMPLAST)
"RTN","HMPEASU",7,0)
 S HMPCNT=$$TOTAL^HMPEF("^USR(8930)")
"RTN","HMPEASU",8,0)
 I PRV=0 S PRV=.9
"RTN","HMPEASU",9,0)
 I $L(HMPID) D CLS1(HMPID) Q
"RTN","HMPEASU",10,0)
 F  S PRV=$O(^USR(8930,PRV)) Q:PRV'>0  D CLS1(PRV) I HMPMAX,HMPI'<HMPMAX Q
"RTN","HMPEASU",11,0)
 I PRV'>0 S HMPFINI=1
"RTN","HMPEASU",12,0)
 Q
"RTN","HMPEASU",13,0)
 ;
"RTN","HMPEASU",14,0)
CLS1(IEN) ;
"RTN","HMPEASU",15,0)
 N $ES,$ET,ERRMSG
"RTN","HMPEASU",16,0)
 S ERRMSG=$$ERRMSG^HMPEF("User Class",IEN)
"RTN","HMPEASU",17,0)
 S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPEASU",18,0)
 N HMPV,FLDS,X,Y,INREC
"RTN","HMPEASU",19,0)
 K HMPV S FLDS=".01:.05;1*"
"RTN","HMPEASU",20,0)
 D GETS^DIQ(8930,IEN_",",FLDS,"IEN","HMPV")
"RTN","HMPEASU",21,0)
 S Y=$NA(HMPV(8930,IEN_","))
"RTN","HMPEASU",22,0)
 S INREC("name")=$G(@Y@(.01,"E"))
"RTN","HMPEASU",23,0)
 S INREC("localId")=IEN,INREC("uid")=$$SETUID^HMPUTILS("asu-class",,IEN)
"RTN","HMPEASU",24,0)
 S INREC("abbreviation")=$G(@Y@(.02,"E")),INREC("active")=$S($G(@Y@(.03,"I"))=1:"true",1:"false")
"RTN","HMPEASU",25,0)
 S INREC("displayName")=$G(@Y@(.04,"E"))
"RTN","HMPEASU",26,0)
 I $D(HMPV("8930.01")) D
"RTN","HMPEASU",27,0)
 . N IEN2,ID,CNT
"RTN","HMPEASU",28,0)
 . S IEN2="",CNT=0
"RTN","HMPEASU",29,0)
 . F  S IEN2=$O(HMPV(8930.01,IEN2)) Q:IEN2=""  D
"RTN","HMPEASU",30,0)
 . . S CNT=CNT+1,INREC("subClass",CNT,"name")=HMPV("8930.01",IEN2,".01","E")
"RTN","HMPEASU",31,0)
 . . S ID=HMPV(8930.01,IEN2,.01,"I"),INREC("subClass",CNT,"uid")=$$SETUID^HMPUTILS("asu-class",,ID)
"RTN","HMPEASU",32,0)
 D ADD^HMPEF("INREC") S HMPLAST=IEN
"RTN","HMPEASU",33,0)
 Q
"RTN","HMPEASU",34,0)
 ;
"RTN","HMPEASU",35,0)
RULE ; -- USR Authorization/Subscription file #8930.1
"RTN","HMPEASU",36,0)
 N PRV S PRV=+$G(HMPLAST)
"RTN","HMPEASU",37,0)
 S HMPCNT=$$TOTAL^HMPEF("^USR(8930.1)")
"RTN","HMPEASU",38,0)
 I PRV=0 S PRV=.9
"RTN","HMPEASU",39,0)
 I $L(HMPID) D RULE1(HMPID) Q
"RTN","HMPEASU",40,0)
 F  S PRV=$O(^USR(8930.1,PRV)) Q:PRV'>0  D RULE1(PRV) I HMPMAX,HMPI'<HMPMAX Q
"RTN","HMPEASU",41,0)
 I PRV'>0 S HMPFINI=1
"RTN","HMPEASU",42,0)
 Q
"RTN","HMPEASU",43,0)
 ;
"RTN","HMPEASU",44,0)
RULE1(IEN) ;
"RTN","HMPEASU",45,0)
 N $ES,$ET,ERRMSG
"RTN","HMPEASU",46,0)
 S ERRMSG=$$ERRMSG^HMPEF("ASU Rule",IEN)
"RTN","HMPEASU",47,0)
 S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPEASU",48,0)
 N HMPV,FLDS,X,Y,INREC,DESC
"RTN","HMPEASU",49,0)
 K HMPV S FLDS=".01:1"
"RTN","HMPEASU",50,0)
 D GETS^DIQ(8930.1,IEN_",",FLDS,"IEN","HMPV")
"RTN","HMPEASU",51,0)
 S Y=$NA(HMPV(8930.1,IEN_","))
"RTN","HMPEASU",52,0)
 S INREC("localId")=IEN,INREC("uid")=$$SETUID^HMPUTILS("asu-rule",,IEN)
"RTN","HMPEASU",53,0)
 S X=$G(@Y@(.01,"I")) S:X INREC("docDefUid")=$$SETUID^HMPUTILS("doc-def",,X),INREC("docDefName")=$G(@Y@(.01,"E"))
"RTN","HMPEASU",54,0)
 S X=$G(@Y@(.02,"I")) S:X INREC("statusUid")=$$SETUID^HMPUTILS("doc-status",,X),INREC("statusName")=$G(@Y@(.02,"E"))
"RTN","HMPEASU",55,0)
 S X=$G(@Y@(.03,"I")) S:X INREC("actionUid")=$$SETUID^HMPUTILS("doc-action",,X),INREC("actionName")=$G(@Y@(.03,"E"))
"RTN","HMPEASU",56,0)
 S X=$G(@Y@(.04,"I")) S:X INREC("userClassUid")=$$SETUID^HMPUTILS("asu-class",,X),INREC("userClassName")=$G(@Y@(.04,"E"))
"RTN","HMPEASU",57,0)
 S X=$G(@Y@(.05,"I")),INREC("isAnd")=$S(X="&":"true",1:"false") ;,INREC("isOr")=$S(X="!":"true",1:"false")
"RTN","HMPEASU",58,0)
 S X=$G(@Y@(.06,"I")) S:X INREC("userRoleUid")=$$SETUID^HMPUTILS("asu-role",,X),INREC("userRoleName")=$G(@Y@(.06,"E"))
"RTN","HMPEASU",59,0)
 I $D(@Y@(1)) D
"RTN","HMPEASU",60,0)
 . N I S I=0 F  S I=$O(@Y@(1,I)) Q:I<1  S DESC(I)=@Y@(1,I)
"RTN","HMPEASU",61,0)
 . S INREC("description")=$$STRING^HMPD(.DESC)
"RTN","HMPEASU",62,0)
 D ADD^HMPEF("INREC") S HMPLAST=IEN
"RTN","HMPEASU",63,0)
 Q
"RTN","HMPEASU",64,0)
 ;
"RTN","HMPEASU",65,0)
DEF ; -- TIU Document Definition file #8925.1
"RTN","HMPEASU",66,0)
 N PRV S PRV=+$G(HMPLAST)
"RTN","HMPEASU",67,0)
 S HMPCNT=$$TOTAL^HMPEF("^TIU(8925.1)")
"RTN","HMPEASU",68,0)
 I PRV=0 S PRV=.9
"RTN","HMPEASU",69,0)
 I $L(HMPID) D DEF1(HMPID) Q
"RTN","HMPEASU",70,0)
 F  S PRV=$O(^TIU(8925.1,PRV)) Q:PRV'>0  D DEF1(PRV) I HMPMAX,HMPI'<HMPMAX Q
"RTN","HMPEASU",71,0)
 I PRV'>0 S HMPFINI=1
"RTN","HMPEASU",72,0)
 Q
"RTN","HMPEASU",73,0)
 ;
"RTN","HMPEASU",74,0)
DEF1(IEN) ;
"RTN","HMPEASU",75,0)
 N $ES,$ET,ERRMSG
"RTN","HMPEASU",76,0)
 S ERRMSG=$$ERRMSG^HMPEF("TIU Doc Def",IEN)
"RTN","HMPEASU",77,0)
 S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPEASU",78,0)
 N HMPV,FLDS,X,Y,I,INREC
"RTN","HMPEASU",79,0)
 K HMPV S FLDS=".01:.14;1501"
"RTN","HMPEASU",80,0)
 D GETS^DIQ(8925.1,IEN_",",FLDS,"IEN","HMPV")
"RTN","HMPEASU",81,0)
 S Y=$NA(HMPV(8925.1,IEN_","))
"RTN","HMPEASU",82,0)
 S INREC("name")=$G(@Y@(.01,"E"))
"RTN","HMPEASU",83,0)
 S INREC("uid")=$$SETUID^HMPUTILS("doc-def",,IEN)
"RTN","HMPEASU",84,0)
 S INREC("abbreviation")=$G(@Y@(.02,"E"))
"RTN","HMPEASU",85,0)
 S INREC("displayName")=$G(@Y@(.03,"E"))
"RTN","HMPEASU",86,0)
 S INREC("typeName")=$G(@Y@(.04,"E"))
"RTN","HMPEASU",87,0)
 S INREC("typeUid")=$$SETUID^HMPUTILS("doc-type",,$G(@Y@(.04,"I")))
"RTN","HMPEASU",88,0)
 S X=$G(@Y@(.05,"I")) I X D
"RTN","HMPEASU",89,0)
 . S INREC("ownerUid")=$$SETUID^HMPUTILS("user",,X)
"RTN","HMPEASU",90,0)
 . S INREC("ownerName")=$G(@Y@(.05,"E"))
"RTN","HMPEASU",91,0)
 S X=$G(@Y@(.06,"I")) S:X INREC("classOwner")=$$SETUID^HMPUTILS("asu-class",,X)
"RTN","HMPEASU",92,0)
 S X=$G(@Y@(.07,"I")) I X D
"RTN","HMPEASU",93,0)
 . S INREC("statusUid")=$$SETUID^HMPUTILS("doc-status",,X)
"RTN","HMPEASU",94,0)
 . S INREC("statusName")=$G(@Y@(.07,"E"))
"RTN","HMPEASU",95,0)
 S X=$G(@Y@(.1,"I")) S:X INREC("shared")="true"
"RTN","HMPEASU",96,0)
 S X=$G(@Y@(.13,"I")) S:X INREC("nationalStandard")="true"
"RTN","HMPEASU",97,0)
 S X=$G(@Y@(.14,"I")) S:X INREC("postingCode")=$$SETUID^HMPUTILS("doc-posting",,X)
"RTN","HMPEASU",98,0)
 S I=0 F  S I=$O(^TIU(8925.1,IEN,10,I)) Q:I<1  S X=+$G(^(I,0)) D
"RTN","HMPEASU",99,0)
 . S INREC("item",I,"uid")=$$SETUID^HMPUTILS("doc-def",,X)
"RTN","HMPEASU",100,0)
 . S INREC("item",I,"name")=$$GET1^DIQ(8925.1,X_",",.01)
"RTN","HMPEASU",101,0)
 ; national title info
"RTN","HMPEASU",102,0)
 S X=$G(@Y@(1501,"I")) I X D  ;National Title + attributes
"RTN","HMPEASU",103,0)
 . N IENS,TIU,DA,FNUM,NAME
"RTN","HMPEASU",104,0)
 . S IENS=X_"," D GETS^DIQ(8926.1,IENS,"*","IE","TIU")
"RTN","HMPEASU",105,0)
 . S INREC("nationalTitle","vuid")="urn:va:vuid:"_$G(TIU(8926.1,IENS,99.99,"E"))
"RTN","HMPEASU",106,0)
 . S INREC("nationalTitle","name")=$G(TIU(8926.1,IENS,.01,"E"))
"RTN","HMPEASU",107,0)
 . F I=".04^Subject^2",".05^Role^3",".06^Setting^4",".07^Service^5",".08^Type^6" D
"RTN","HMPEASU",108,0)
 .. S DA=+$G(TIU(8926.1,IENS,+I,"I")) Q:DA'>0
"RTN","HMPEASU",109,0)
 .. S FNUM="8926."_+$P(I,U,3),NAME=$$LOW^XLFSTR($P(I,U,2))
"RTN","HMPEASU",110,0)
 .. S INREC("nationalTitle"_$P(I,U,2),"vuid")="urn:va:vuid:"_$$VUID^HMPD(DA,FNUM)
"RTN","HMPEASU",111,0)
 .. S INREC("nationalTitle"_$P(I,U,2),"name")=$G(TIU(8926.1,IENS,+I,"E"))
"RTN","HMPEASU",112,0)
 ;
"RTN","HMPEASU",113,0)
 D ADD^HMPEF("INREC") S HMPLAST=IEN
"RTN","HMPEASU",114,0)
 Q
"RTN","HMPEF")
0^74^B247555818
"RTN","HMPEF",1,0)
HMPEF ;SLC/MKB -- Serve VistA operational data as JSON via RPC ;Apr 16, 2015@17:37:39
"RTN","HMPEF",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPEF",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPEF",4,0)
 ;
"RTN","HMPEF",5,0)
GET(HMP,FILTER) ; -- Return search results as JSON in @HMP@(n)
"RTN","HMPEF",6,0)
 ; RPC = HMP GET OPERATIONAL DATA
"RTN","HMPEF",7,0)
 ; where FILTER("domain")  = name of desired data type (see $$TAG)
"RTN","HMPEF",8,0)
 ;       FILTER("limit")   = maximum number of items to return [opt]
"RTN","HMPEF",9,0)
 ;       FILTER("start")   = ien to start search from          [opt]
"RTN","HMPEF",10,0)
 ;       FILTER("id")      = single item id to return          [opt]
"RTN","HMPEF",11,0)
 ;
"RTN","HMPEF",12,0)
 ; HMPLAST - last record processed
"RTN","HMPEF",13,0)
 N HMPSYS,TYPE,HMPMAX,HMPI,HMPID,HMPERR,HMPTN,HMPLAST,HMPCNT,HMPFINI
"RTN","HMPEF",14,0)
 S HMP=$NA(^TMP("HMP",$J)),HMPI=0 K @HMP
"RTN","HMPEF",15,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPEF",16,0)
 ;
"RTN","HMPEF",17,0)
 ; parse & validate input parameters
"RTN","HMPEF",18,0)
 S TYPE=$P($G(FILTER("domain")),"#") ;,TYPE=$$LOW^XLFSTR(TYPE)
"RTN","HMPEF",19,0)
 S HMPMAX=+$G(FILTER("limit")),HMPCNT=0
"RTN","HMPEF",20,0)
 S HMPLAST=+$G(FILTER("start"))
"RTN","HMPEF",21,0)
 S HMPID=$G(FILTER("id"))
"RTN","HMPEF",22,0)
 ;
"RTN","HMPEF",23,0)
 ;set error trap
"RTN","HMPEF",24,0)
 K ^TMP($J,"HMP ERROR")
"RTN","HMPEF",25,0)
 ;
"RTN","HMPEF",26,0)
 ; extract data
"RTN","HMPEF",27,0)
 I TYPE="" S HMPERR="Missing or invalid reference type" G GTQ
"RTN","HMPEF",28,0)
 I $D(ZTQUEUED) S HMP=$NA(^XTMP(HMPBATCH,HMPFZTSK,FILTER("domain"))) K @HMP
"RTN","HMPEF",29,0)
 I TYPE="new",$L($T(EN^HMPEFX)) D EN^HMPEFX(HMPID,HMPMAX) Q
"RTN","HMPEF",30,0)
 S HMPTN=$$TAG(TYPE) Q:'$L(HMPTN)  ;D ERR(2) Q
"RTN","HMPEF",31,0)
 ;N $ES,$ET,ERRMSG
"RTN","HMPEF",32,0)
 ;S $ET="D ERRHDLR^HMPDERRH",ERRMSG="A MUMPS error occurred while extracting "_TYPE_" data"
"RTN","HMPEF",33,0)
 D @HMPTN
"RTN","HMPEF",34,0)
 ;
"RTN","HMPEF",35,0)
GTQ ; add item count and terminating characters
"RTN","HMPEF",36,0)
 N ERROR I $D(^TMP($J,"HMP ERROR"))>0 D BUILDERR(.ERROR) S ERROR(1)=ERROR(1)_"}"
"RTN","HMPEF",37,0)
 I +$G(FILTER("noHead"))=1 D  Q
"RTN","HMPEF",38,0)
 .S @HMP@("total")=+$G(HMPI)
"RTN","HMPEF",39,0)
 .S @HMP@("last")=HMPLAST
"RTN","HMPEF",40,0)
 .S @HMP@("finished")=+$G(HMPFINI)
"RTN","HMPEF",41,0)
 .I $L($G(ERROR(1)))>1 S @HMP@("error")=ERROR(1)
"RTN","HMPEF",42,0)
 I '$D(@HMP)!'$G(HMPI) D  Q
"RTN","HMPEF",43,0)
 .I '$D(^TMP($J,"HMP ERROR")) S @HMP@(1)="""data"":{""totalItems"":0,""items"":[]}}" Q
"RTN","HMPEF",44,0)
 .S @HMP@(1)="""data"":{""totalItems"":0,""items"":[]},"
"RTN","HMPEF",45,0)
 .M @HMP@(2)=ERROR
"RTN","HMPEF",46,0)
 ;
"RTN","HMPEF",47,0)
 I $D(@HMP),$G(HMPI) D
"RTN","HMPEF",48,0)
 . S @HMP@(.5)="{""apiVersion"":""1.01"",""data"":{""updated"":"""_$$HL7NOW_""",""currentItemCount"":"_HMPI
"RTN","HMPEF",49,0)
 . S:$G(HMPCNT) @HMP@(.5)=@HMP@(.5)_",""totalItems"":"_HMPCNT
"RTN","HMPEF",50,0)
 . S:$G(HMPLAST) @HMP@(.5)=@HMP@(.5)_",""last"":"_HMPLAST
"RTN","HMPEF",51,0)
 . S @HMP@(.5)=@HMP@(.5)_",""items"":["
"RTN","HMPEF",52,0)
 . S HMPI=HMPI+1,@HMP@(HMPI)=$S($D(^TMP($J,"HMP ERROR"))>0:"]}",1:"]}}")
"RTN","HMPEF",53,0)
 I $D(^TMP($J,"HMP ERROR"))>0 S HMPI=HMPI+1,@HMP@(HMPI,.3)="," M @HMP@(HMPI)=ERROR ;S HMPI=HMPI+1,@HMP@(HMPI)="}"
"RTN","HMPEF",54,0)
 K ^TMP($J,"HMP ERROR")
"RTN","HMPEF",55,0)
 Q
"RTN","HMPEF",56,0)
 ;
"RTN","HMPEF",57,0)
BUILDERR(RESULT) ; -- build error array
"RTN","HMPEF",58,0)
 N CNT,COUNT,DOM,DOMCNT,ERRMSG,ERROR,FIELD,MESSAGE,MSG,MSGCNT,T,TEMP
"RTN","HMPEF",59,0)
 S COUNT=$G(^TMP($J,"HMP ERROR","# of Errors"))
"RTN","HMPEF",60,0)
 S MESSAGE="A mumps error occurred when extracting data. A total of "_COUNT_" occurred.\n\r"
"RTN","HMPEF",61,0)
 S CNT=1,ERROR("error","message","\",CNT)="A mumps error occurred when extracting patient data. A total of "_COUNT_" occurred.\n\r"
"RTN","HMPEF",62,0)
 S MSGCNT=0 F  S MSGCNT=$O(^TMP($J,"HMP ERROR","ERROR MESSAGE",MSGCNT)) Q:MSGCNT'>0  D
"RTN","HMPEF",63,0)
 . S CNT=CNT+1,MESSAGE=MESSAGE_$G(^TMP($J,"HMP ERROR","ERROR MESSAGE",MSGCNT))_"\n\r"
"RTN","HMPEF",64,0)
 S RESULT(1)="""error"":{""message"":"_""""_MESSAGE_""""_"}"
"RTN","HMPEF",65,0)
 Q
"RTN","HMPEF",66,0)
 ;
"RTN","HMPEF",67,0)
TAG(X) ; -- Return linetag for reference domain X
"RTN","HMPEF",68,0)
 N Y S Y="HMP",X=$G(X)
"RTN","HMPEF",69,0)
 ; default = HMP Object (various types)
"RTN","HMPEF",70,0)
 I X="location"      S Y="LOC"
"RTN","HMPEF",71,0)
 I X="pt-select"     S Y="PAT"
"RTN","HMPEF",72,0)
 I X="person"        S Y="NP"
"RTN","HMPEF",73,0)
 I X="user"          S Y="NP"
"RTN","HMPEF",74,0)
 I X="roster"        S Y="ROS"
"RTN","HMPEF",75,0)
 I X="labgroup"      S Y="LABGRP"
"RTN","HMPEF",76,0)
 I X="labpanel"      S Y="LABPNL"
"RTN","HMPEF",77,0)
 I X["orderable"     S Y="OI"
"RTN","HMPEF",78,0)
 I X["schedule"      S Y="SCHEDULE"
"RTN","HMPEF",79,0)
 I X["route"         S Y="ROUTE"
"RTN","HMPEF",80,0)
 I X["quick"         S Y="QO"
"RTN","HMPEF",81,0)
 I X="displayGroup"  S Y="ODG"
"RTN","HMPEF",82,0)
 I X["asu-"          S Y="ASU"
"RTN","HMPEF",83,0)
 I X["doc-"          S Y="ASU"
"RTN","HMPEF",84,0)
 I X="immunization"    S Y="IMMTYPE"   ;immunizations
"RTN","HMPEF",85,0)
 I X="allergy-list"         S Y="ALLTYPE"   ;allergies
"RTN","HMPEF",86,0)
 ;I X="problem-list"        S Y="PROB"      ;problems
"RTN","HMPEF",87,0)
 I X="sign-symptom"   S Y="SIGNS"     ;signs and symptoms
"RTN","HMPEF",88,0)
 I X="vital-type"      S Y="VTYPE"     ;vital type
"RTN","HMPEF",89,0)
 I X="vital-qualifier"  S Y="VQUAL"     ;vital qualifiers
"RTN","HMPEF",90,0)
 I X="vital-category"   S Y="VCAT"      ;vital categories
"RTN","HMPEF",91,0)
 I X["clioterm"      S Y="MDTERMS" ;blj
"RTN","HMPEF",92,0)
 Q Y
"RTN","HMPEF",93,0)
 ;
"RTN","HMPEF",94,0)
ERR(X,VAL) ; -- return error message
"RTN","HMPEF",95,0)
 N MSG  S MSG="Error"
"RTN","HMPEF",96,0)
 I X=2  S MSG="Domain type '"_$G(VAL)_"' not recognized"
"RTN","HMPEF",97,0)
 I X=3  S MSG="UID '"_$G(VAL)_"' not found"
"RTN","HMPEF",98,0)
 I X=99 S MSG="Unknown request"
"RTN","HMPEF",99,0)
 Q MSG
"RTN","HMPEF",100,0)
 ;
"RTN","HMPEF",101,0)
ERRMSG(X,VAL) ; -- return error message, if needed
"RTN","HMPEF",102,0)
 N Y S Y="A MUMPS error occurred while extracting "_X_" data"
"RTN","HMPEF",103,0)
 S:$G(VAL) Y=Y_", ien "_VAL
"RTN","HMPEF",104,0)
 Q Y
"RTN","HMPEF",105,0)
 ;
"RTN","HMPEF",106,0)
ERRQ ; -- Quit for error handling
"RTN","HMPEF",107,0)
 Q
"RTN","HMPEF",108,0)
 ;
"RTN","HMPEF",109,0)
HL7NOW() ; -- Return current time in HL7 format
"RTN","HMPEF",110,0)
 Q $P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")
"RTN","HMPEF",111,0)
 ;
"RTN","HMPEF",112,0)
ALL() ;
"RTN","HMPEF",113,0)
 ;Q "location;patient;person;orderable;schedule;route;quick;displayGroup;asu-class;asu-rule;asu-role;doc-action ;BL;LINE TOO LONG WRAPPING
"RTN","HMPEF",114,0)
 ;doc-status;clioterm;immunization;allergy-list;problem-list;sign-symptom;vital-type;vital-qualifier;vital-category"
"RTN","HMPEF",115,0)
 Q "location;patient;person;orderable;schedule;route;quick;displayGroup;asu-class;asu-rule;asu-role;doc-action;doc-status;clioterm;immunization;allergy-list;sign-symptom;vital-type;vital-qualifier;vital-category"
"RTN","HMPEF",116,0)
 ;
"RTN","HMPEF",117,0)
ADD(ITEM) ; -- add ITEM to @HMP@(HMPI)
"RTN","HMPEF",118,0)
 N HMPY,HMPERR
"RTN","HMPEF",119,0)
 D ENCODE^HMPJSON(ITEM,"HMPY","HMPERR")
"RTN","HMPEF",120,0)
 I $D(HMPERR) D  ;return ERRor instead of ITEM
"RTN","HMPEF",121,0)
 . N HMPTMP,HMPTXT,HMPITM
"RTN","HMPEF",122,0)
 . M HMPITM=@ITEM K HMPY
"RTN","HMPEF",123,0)
 . S HMPTXT(1)="Problem encoding json output."
"RTN","HMPEF",124,0)
 . D SETERROR^HMPUTILS(.HMPTMP,.HMPERR,.HMPTXT,.HMPITM)
"RTN","HMPEF",125,0)
 . K HMPERR D ENCODE^HMPJSON("HMPTMP","HMPY","HMPERR")
"RTN","HMPEF",126,0)
 I $D(HMPY) D
"RTN","HMPEF",127,0)
 . I HMPI D COMMA(HMPI)
"RTN","HMPEF",128,0)
 . ;I HMPI,'$G(FILTER("noHead")) D COMMA(HMPI)
"RTN","HMPEF",129,0)
 . S HMPI=HMPI+1 M @HMP@(HMPI)=HMPY
"RTN","HMPEF",130,0)
 Q
"RTN","HMPEF",131,0)
 ;
"RTN","HMPEF",132,0)
COMMA(I) ; -- add comma between items
"RTN","HMPEF",133,0)
 I $D(ZTQUEUED) Q
"RTN","HMPEF",134,0)
 N J S J=+$O(@HMP@(I,"A"),-1) ;last sub-node for item I
"RTN","HMPEF",135,0)
 S J=J+1,@HMP@(I,J)=","
"RTN","HMPEF",136,0)
 Q
"RTN","HMPEF",137,0)
 ;
"RTN","HMPEF",138,0)
TOTAL(ROOT) ; -- Return total #items in @ROOT@(n)
"RTN","HMPEF",139,0)
 Q $P($G(@ROOT@(0)),U,4)
"RTN","HMPEF",140,0)
 ;
"RTN","HMPEF",141,0)
 N I,Y S (I,Y)=0
"RTN","HMPEF",142,0)
 F  S I=$O(@ROOT@(I)) Q:I<1  S Y=Y+1
"RTN","HMPEF",143,0)
 Q Y
"RTN","HMPEF",144,0)
 ;
"RTN","HMPEF",145,0)
TEST(TYPE,ID,IN) ; -- test GET, write results to screen
"RTN","HMPEF",146,0)
 N OUT,IDX
"RTN","HMPEF",147,0)
 S U="^"
"RTN","HMPEF",148,0)
 S IN("domain")=$G(TYPE)
"RTN","HMPEF",149,0)
 S:$D(ID) IN("id")=ID
"RTN","HMPEF",150,0)
 D GET(.OUT,.IN)
"RTN","HMPEF",151,0)
 ;
"RTN","HMPEF",152,0)
 S IDX=OUT
"RTN","HMPEF",153,0)
 F  S IDX=$Q(@IDX) Q:IDX'?1"^TMP(""HMP"","1.N.E  Q:+$P(IDX,",",2)'=$J  W !,@IDX
"RTN","HMPEF",154,0)
 Q
"RTN","HMPEF",155,0)
 ;
"RTN","HMPEF",156,0)
 ; ** Reference file searches, using FILTER("parameter")
"RTN","HMPEF",157,0)
 ;
"RTN","HMPEF",158,0)
PAT ; -- Return Patients
"RTN","HMPEF",159,0)
 N DFN,PAT,HMPPOPD
"RTN","HMPEF",160,0)
 S HMPPOPD=1
"RTN","HMPEF",161,0)
 S HMPCNT=$$TOTAL("^DPT")
"RTN","HMPEF",162,0)
 I $G(HMPID) S DFN=+HMPID D LKUP^HMPDJ00 Q
"RTN","HMPEF",163,0)
 N ERRMSG S ERRMSG="A mumps error occurred while extracting patients."
"RTN","HMPEF",164,0)
 ;Q:HMPI'<HMPMAX
"RTN","HMPEF",165,0)
 S DFN=+$G(HMPLAST) F  S DFN=$O(^DPT(DFN)) Q:DFN<1  D  I HMPMAX>0,HMPI'<HMPMAX Q
"RTN","HMPEF",166,0)
 . N $ES,$ET
"RTN","HMPEF",167,0)
 . S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPEF",168,0)
 . I $P($G(^DPT(DFN,0)),U)="" Q
"RTN","HMPEF",169,0)
 . S ERRMSG=$$ERRMSG("Patient",DFN)
"RTN","HMPEF",170,0)
 . K PAT D LKUP^HMPDJ00
"RTN","HMPEF",171,0)
 . S HMPLAST=DFN
"RTN","HMPEF",172,0)
 I DFN<1 S HMPFINI=1
"RTN","HMPEF",173,0)
 Q
"RTN","HMPEF",174,0)
LOC ; -- Return Hospital Locations
"RTN","HMPEF",175,0)
 S HMPCNT=$$TOTAL("^SC")
"RTN","HMPEF",176,0)
 I $G(HMPID) D LOC1(HMPID) Q
"RTN","HMPEF",177,0)
 N HL S HL=+$G(HMPLAST)
"RTN","HMPEF",178,0)
 F  S HL=$O(^SC(HL)) Q:HL<1  D LOC1(HL) I HMPMAX>0,HMPI'<HMPMAX Q
"RTN","HMPEF",179,0)
 I HL<1 S HMPFINI=1
"RTN","HMPEF",180,0)
 Q
"RTN","HMPEF",181,0)
 ;
"RTN","HMPEF",182,0)
LOC1(IEN) ; -- get one location
"RTN","HMPEF",183,0)
 N $ES,$ET,ERRMSG
"RTN","HMPEF",184,0)
 S ERRMSG=$$ERRMSG("Location",IEN)
"RTN","HMPEF",185,0)
 S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPEF",186,0)
 N LOC,X0,X,Y
"RTN","HMPEF",187,0)
 ; if location is a WARD and pointer to WARD LOCATION exists, handle it differently
"RTN","HMPEF",188,0)
 ; the ward info will be used for the ORWPT BYWARD remote procedure call 
"RTN","HMPEF",189,0)
 S X0=$G(^SC(IEN,0))  ;I $P(X0,U,3)="W" S X=+$P($G(^SC(IEN,42)),U) I X,$D(^DIC(42,X)) D LOC42(X,X0) Q
"RTN","HMPEF",190,0)
 S LOC("name")=$P(X0,U)
"RTN","HMPEF",191,0)
 S LOC("localId")=IEN,LOC("uid")=$$SETUID^HMPUTILS("location",,IEN)
"RTN","HMPEF",192,0)
 S X=$P(X0,U,2) S:$L(X) LOC("shortName")=X S LOC("type")=$P(X0,U,3)
"RTN","HMPEF",193,0)
 S LOC("refId")=IEN,LOC("oos")=$S(+$G(^SC(IEN,"OOS")):"true",1:"false")
"RTN","HMPEF",194,0)
 S X=+$P(X0,U,4) I X D
"RTN","HMPEF",195,0)
 . S Y=$$NS^XUAF4(X),X=$P(Y,U,2)_U_$P(Y,U)
"RTN","HMPEF",196,0)
 . D FACILITY^HMPUTILS(X,"LOC")
"RTN","HMPEF",197,0)
 I '$$ACTLOC(IEN) S LOC("inactive")="true"
"RTN","HMPEF",198,0)
 D ADD("LOC") S HMPLAST=IEN
"RTN","HMPEF",199,0)
 Q
"RTN","HMPEF",200,0)
 ;
"RTN","HMPEF",201,0)
LOC42(IEN,FL44ZRO) ; -- get WARD LOCATION (file #42), (defect 862 HRUB)
"RTN","HMPEF",202,0)
 ; IEN - file 42 IEN
"RTN","HMPEF",203,0)
 ; FL44ZRO - zero node from HOSPITAL LOCATION entry that points to file 42
"RTN","HMPEF",204,0)
 ;    note: back-pointer is also in ^DIC(42,D0,44)= (#44) HOSPITAL LOCATION FILE POINTER [1P:44]
"RTN","HMPEF",205,0)
 ;
"RTN","HMPEF",206,0)
 ; references to ^DIC(42) via IA #10039
"RTN","HMPEF",207,0)
 ;
"RTN","HMPEF",208,0)
 N $ES,$ET,ERRMSG
"RTN","HMPEF",209,0)
 S ERRMSG=$$ERRMSG("Ward Location",IEN)
"RTN","HMPEF",210,0)
 S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPEF",211,0)
 N LOC,X,X0,Y
"RTN","HMPEF",212,0)
 S X0=$G(^DIC(42,IEN,0)),LOC("name")=$P(X0,U)
"RTN","HMPEF",213,0)
 S LOC("localId")=IEN,LOC("uid")=$$SETUID^HMPUTILS("location",,"w"_IEN)  ; wards have a "w"
"RTN","HMPEF",214,0)
 S X=$P($G(FL44ZRO),U,2) S:$L(X) LOC("shortName")=X ; file 44, field 1 ABBREVIATION  
"RTN","HMPEF",215,0)
 S LOC("type")="W"  ; always 'W' for ward
"RTN","HMPEF",216,0)
 S LOC("refId")=IEN
"RTN","HMPEF",217,0)
 S X=+$P($G(FL44ZRO),U,4) I X D  ; INSTITUTION [4P:4] pointer from file #44
"RTN","HMPEF",218,0)
 . S Y=$$NS^XUAF4(X),X=$P(Y,U,2)_U_$P(Y,U)
"RTN","HMPEF",219,0)
 . D FACILITY^HMPUTILS(X,"LOC")
"RTN","HMPEF",220,0)
 ; out-of-service flag
"RTN","HMPEF",221,0)
 S LOC("oos")=$S($$ACTWRD(IEN):"false",1:"true")
"RTN","HMPEF",222,0)
 D ADD("LOC") S HMPLAST=IEN
"RTN","HMPEF",223,0)
 Q
"RTN","HMPEF",224,0)
 ;
"RTN","HMPEF",225,0)
ACTWRD(WLNTRY) ; Boolean Function TRUE if active WARD LOCATION
"RTN","HMPEF",226,0)
 ; WLNTRY - IEN in file 42 - ^DIC(42) refs. via IA 10039 (defect 862 HRUB)
"RTN","HMPEF",227,0)
 N W0,WRDIEN S WRDIEN=+$G(WLNTRY)  ; need an IEN
"RTN","HMPEF",228,0)
 S W0=$G(^DIC(42,WRDIEN,0))
"RTN","HMPEF",229,0)
 Q:'$L(W0) "^"  ; something's wrong
"RTN","HMPEF",230,0)
 ; OUT-OF-SERVICE DATE SUB-FIELD
"RTN","HMPEF",231,0)
 S W0=+$O(^DIC(42,WRDIEN,"OOS","AINV",9999998.9-DT))  ; check inverse cross-ref.
"RTN","HMPEF",232,0)
 S W0=$S($D(^DIC(42,WRDIEN,"OOS",+$O(^(+W0,0)),0)):^(0),1:"")  ; entry in sub-file or null
"RTN","HMPEF",233,0)
 I '$P(W0,"^",6) Q 1     ; IS ENTIRE WARD OUT OF SERVICE?
"RTN","HMPEF",234,0)
 I $P(W0,"^",6),'$P(W0,"^",4) Q 0    ; RETURN TO SERVICE DATE null
"RTN","HMPEF",235,0)
 I $P(W0,"^",6) Q ($P(W0,"^",4)<DT)  ; RETURN TO SERVICE DATE in the past?
"RTN","HMPEF",236,0)
 Q 1   ;  must be active
"RTN","HMPEF",237,0)
 ;
"RTN","HMPEF",238,0)
ACTLOC(LOC) ; Function: returns TRUE if active hospital location
"RTN","HMPEF",239,0)
 ; IA# 10040.
"RTN","HMPEF",240,0)
 N D0,X I +$G(^SC(LOC,"OOS")) Q 0                ; screen out OOS entry
"RTN","HMPEF",241,0)
 S D0=+$G(^SC(LOC,42)) I D0 D WIN^DGPMDDCF Q 'X  ; chk out of svc wards
"RTN","HMPEF",242,0)
 S X=$G(^SC(LOC,"I")) I +X=0 Q 1                 ; no inactivate date
"RTN","HMPEF",243,0)
 I DT>$P(X,U)&($P(X,U,2)=""!(DT<$P(X,U,2))) Q 0  ; chk reactivate date
"RTN","HMPEF",244,0)
 Q 1                                             ; must still be active
"RTN","HMPEF",245,0)
 ;
"RTN","HMPEF",246,0)
NP ; -- Return New Persons
"RTN","HMPEF",247,0)
 N PRV
"RTN","HMPEF",248,0)
 S HMPCNT=$$TOTAL("^VA(200)")
"RTN","HMPEF",249,0)
 I $G(HMPID) D NP1(HMPID) Q
"RTN","HMPEF",250,0)
 S PRV=+$G(HMPLAST) ;$S(HMPLAST:HMPLAST,1:.9)
"RTN","HMPEF",251,0)
 I PRV=0 S PRV=.9
"RTN","HMPEF",252,0)
 F  S PRV=$O(^VA(200,PRV)) Q:PRV<1  D NP1(PRV) I HMPMAX>0,HMPI'<HMPMAX Q
"RTN","HMPEF",253,0)
 I PRV<1 S HMPFINI=1
"RTN","HMPEF",254,0)
 Q
"RTN","HMPEF",255,0)
 ;
"RTN","HMPEF",256,0)
NP1(IEN) ; -- get one person
"RTN","HMPEF",257,0)
 N $ES,$ET,ERRMSG
"RTN","HMPEF",258,0)
 S ERRMSG=$$ERRMSG("person",IEN)
"RTN","HMPEF",259,0)
 S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPEF",260,0)
 N HMPV,FLDS,USER,X,Y
"RTN","HMPEF",261,0)
 I $$ISPROXY(IEN)=1 Q
"RTN","HMPEF",262,0)
 K HMPV S FLDS=".01;4:9.2;9.5*;19:53.8;654.3;.132:.138"
"RTN","HMPEF",263,0)
 D GETS^DIQ(200,IEN_",",FLDS,"IEN","HMPV")
"RTN","HMPEF",264,0)
 S Y=$NA(HMPV(200,IEN_","))
"RTN","HMPEF",265,0)
 S USER("name")=$G(@Y@(.01,"E"))
"RTN","HMPEF",266,0)
 S USER("localId")=IEN,USER("uid")=$$SETUID^HMPUTILS("user",,IEN)
"RTN","HMPEF",267,0)
 S:$D(@Y@(4)) USER("genderCode")="urn:va:gender:"_@Y@(4,"I"),USER("genderName")=@Y@(4,"E")
"RTN","HMPEF",268,0)
 S X=+$P($G(@Y@(5,"I")),".") S:X USER("dateOfBirth")=$$JSONDT^HMPUTILS(X)
"RTN","HMPEF",269,0)
 S X=$G(@Y@(7,"I")) S:$L(X) USER("disuser")=$S(X:"true",1:"false")
"RTN","HMPEF",270,0)
 S X=$G(@Y@(8,"E")) S:$L(X) USER("title")=X
"RTN","HMPEF",271,0)
 S X=$G(@Y@(9,"E")) S:$L(X) USER("ssn")=X
"RTN","HMPEF",272,0)
 S X=$G(@Y@(9.2,"I")) S:$L(X) USER("terminated")=$$JSONDT^HMPUTILS(X)
"RTN","HMPEF",273,0)
 S X=+$G(@Y@(19,"I")) S:X USER("delegateCode")=$$SETUID^HMPUTILS("user",,X),USER("delegateName")=$G(@Y@(19,"E"))
"RTN","HMPEF",274,0)
 S X=$G(@Y@(29,"E")) S:$L(X) USER("service")=X
"RTN","HMPEF",275,0)
 S X=$G(@Y@(53.5,"E")) S:$L(X) USER("providerClass")=X
"RTN","HMPEF",276,0)
 S X=$G(@Y@(53.6,"E")) S:$L(X) USER("providerType")=X
"RTN","HMPEF",277,0)
 S X=+$G(@Y@(654.3,"I")) S:X USER("surrogateCode")=$$SETUID^HMPUTILS("user",,X),USER("surrogateName")=$G(@Y@(654.3,"E"))
"RTN","HMPEF",278,0)
 S X=$G(@Y@(.132,"E")) S:$L(X) USER("officePhone")=X
"RTN","HMPEF",279,0)
 S X=$G(@Y@(.133,"E")) S:$L(X) USER("phone3")=X
"RTN","HMPEF",280,0)
 S X=$G(@Y@(.134,"E")) S:$L(X) USER("phone4")=X
"RTN","HMPEF",281,0)
 S X=$G(@Y@(.135,"E")) S:$L(X) USER("commercialPhone")=X
"RTN","HMPEF",282,0)
 S X=$G(@Y@(.136,"E")) S:$L(X) USER("fax")=X
"RTN","HMPEF",283,0)
 S X=$G(@Y@(.137,"E")) S:$L(X) USER("voicePager")=X
"RTN","HMPEF",284,0)
 S X=$G(@Y@(.138,"E")) S:$L(X) USER("digitalPager")=X
"RTN","HMPEF",285,0)
 D KEYS(IEN)
"RTN","HMPEF",286,0)
 D ADD("USER") S HMPLAST=IEN
"RTN","HMPEF",287,0)
 Q
"RTN","HMPEF",288,0)
 ;
"RTN","HMPEF",289,0)
KEYS(IEN) ; -- get user's keys
"RTN","HMPEF",290,0)
 N HMPKEY,IENS,X,CNT
"RTN","HMPEF",291,0)
 D GETS^DIQ(200,IEN_",","51*","IE","HMPKEY") S CNT=0
"RTN","HMPEF",292,0)
 S IENS="" F  S IENS=$O(HMPKEY(200.051,IENS)) Q:IENS=""  D
"RTN","HMPEF",293,0)
 . S X=$G(HMPKEY(200.051,IENS,.01,"E")),CNT=CNT+1
"RTN","HMPEF",294,0)
 . S USER("vistaKeys",CNT,"name")=X
"RTN","HMPEF",295,0)
 . S X=$G(HMPKEY(200.051,IENS,3,"I"))
"RTN","HMPEF",296,0)
 . S:X USER("vistaKeys",CNT,"reviewDate")=$$JSONDT^HMPUTILS(X)
"RTN","HMPEF",297,0)
 Q
"RTN","HMPEF",298,0)
 ;
"RTN","HMPEF",299,0)
ODG ;
"RTN","HMPEF",300,0)
 D ADDODG^HMPCORD4
"RTN","HMPEF",301,0)
 Q
"RTN","HMPEF",302,0)
 ;
"RTN","HMPEF",303,0)
OI ;
"RTN","HMPEF",304,0)
 ;I 1/0
"RTN","HMPEF",305,0)
 D OI^HMPCORD4("PS^RAP^LRT")
"RTN","HMPEF",306,0)
 Q
"RTN","HMPEF",307,0)
 ;
"RTN","HMPEF",308,0)
PROB ;get problem list operational data store
"RTN","HMPEF",309,0)
 N ORAPP,ORDT,ORELEM,IEN,ELEMENT,PLIST,HMPCNT,HMPLAST
"RTN","HMPEF",310,0)
 S (ORWLST,ORDT,ORELEM)=""
"RTN","HMPEF",311,0)
 S ORDT=DT
"RTN","HMPEF",312,0)
 S IEN=0,HMPCNT=0
"RTN","HMPEF",313,0)
 S LST=$NA(^TMP("ORLEX",$J))
"RTN","HMPEF",314,0)
 S APP="GMPX"
"RTN","HMPEF",315,0)
 D CONFIG^LEXSET(APP,"PLS",ORDT)
"RTN","HMPEF",316,0)
 S (HMPCNT,HMPLAST)=0
"RTN","HMPEF",317,0)
 F  S IEN=$O(^LEX(757.01,IEN)) Q:IEN=""!(IEN'?1N.N)  D
"RTN","HMPEF",318,0)
 . S ORELEM=$G(^LEX(757.01,IEN,0))
"RTN","HMPEF",319,0)
 . Q:'$D(^LEX(757.01,IEN,1))
"RTN","HMPEF",320,0)
 . D LOOK^LEXA(ORELEM,,1,,ORDT)
"RTN","HMPEF",321,0)
 . S ELEMENT=$G(LEX("LIST",1))
"RTN","HMPEF",322,0)
 . Q:ELEMENT=""
"RTN","HMPEF",323,0)
 . S ELEMENT=$$LEXXFRM^ORQQPL4(ELEMENT,ORDT,"GMPX")
"RTN","HMPEF",324,0)
 . S PLIST("uid")=$$SETUID^HMPUTILS("problem-list","",IEN)
"RTN","HMPEF",325,0)
 . S PLIST("lexIen")=$P(ELEMENT,"^",1)
"RTN","HMPEF",326,0)
 . S PLIST("lexName")=$P(ELEMENT,"^",2)
"RTN","HMPEF",327,0)
 . S PLIST("icd")=$P(ELEMENT,"^",3)
"RTN","HMPEF",328,0)
 . S PLIST("icdIen")=$P(ELEMENT,"^",4)
"RTN","HMPEF",329,0)
 . S PLIST("codeSys")=$P(ELEMENT,"^",5)
"RTN","HMPEF",330,0)
 . S PLIST("cCode")=$P(ELEMENT,"^",6)
"RTN","HMPEF",331,0)
 . S PLIST("dCode")=$P(ELEMENT,"^",7)
"RTN","HMPEF",332,0)
 . S PLIST("impDt")=$P(ELEMENT,"^",8)
"RTN","HMPEF",333,0)
 . S HMPCNT=HMPCNT+1 D ADD("PLIST") S HMPLAST=HMPCNT
"RTN","HMPEF",334,0)
 . Q
"RTN","HMPEF",335,0)
 S HMPFINI=1
"RTN","HMPEF",336,0)
 Q
"RTN","HMPEF",337,0)
 ;
"RTN","HMPEF",338,0)
QO ;
"RTN","HMPEF",339,0)
 D QO^HMPCORD4
"RTN","HMPEF",340,0)
 Q
"RTN","HMPEF",341,0)
 ;
"RTN","HMPEF",342,0)
SCHEDULE ;
"RTN","HMPEF",343,0)
 N RESULT
"RTN","HMPEF",344,0)
 D ADDSCH^HMPCORD4
"RTN","HMPEF",345,0)
 ;D ADD("RESULT")
"RTN","HMPEF",346,0)
 Q
"RTN","HMPEF",347,0)
 ;
"RTN","HMPEF",348,0)
ROUTE ;
"RTN","HMPEF",349,0)
 N RESULT
"RTN","HMPEF",350,0)
 D ADDROUTE^HMPCORD4
"RTN","HMPEF",351,0)
 ;D ADD("RESULT")
"RTN","HMPEF",352,0)
 Q
"RTN","HMPEF",353,0)
 ;
"RTN","HMPEF",354,0)
HMP ; -- Return HMP Objects
"RTN","HMPEF",355,0)
 N IEN
"RTN","HMPEF",356,0)
 S HMPCNT=$$TOTAL("^HMP(800000.11)")
"RTN","HMPEF",357,0)
 I $L(HMPID) D  Q
"RTN","HMPEF",358,0)
 . I HMPID=+HMPID S IEN=HMPID
"RTN","HMPEF",359,0)
 . E  S IEN=+$O(^HMP(800000.11,"B",HMPID,0))
"RTN","HMPEF",360,0)
 . S ERRMSG=$$ERRMSG("HMP Object",IEN)
"RTN","HMPEF",361,0)
 . D:IEN HMP1^HMPDJ02(800000.11,IEN)
"RTN","HMPEF",362,0)
 S IEN=+$G(HMPLAST) F  S IEN=$O(^HMP(800000.11,"C",TYPE,IEN)) Q:IEN<1  D  I HMPMAX>0,HMPI'<HMPMAX Q
"RTN","HMPEF",363,0)
 . S ERRMSG=$$ERRMSG("HMP Object",IEN)
"RTN","HMPEF",364,0)
 . D HMP1^HMPDJ02(800000.11,IEN) S HMPLAST=IEN
"RTN","HMPEF",365,0)
 I IEN<1 S HMPFINI=1
"RTN","HMPEF",366,0)
 Q
"RTN","HMPEF",367,0)
 ;
"RTN","HMPEF",368,0)
ROS ; -- Return rosters
"RTN","HMPEF",369,0)
 N PRV
"RTN","HMPEF",370,0)
 S HMPCNT=$$TOTAL("^HMPROSTR")
"RTN","HMPEF",371,0)
 I $L(HMPID) D:$D(^HMPROSTR(HMPID,0)) ROS1(HMPID) Q
"RTN","HMPEF",372,0)
 S PRV=+$G(HMPLAST)
"RTN","HMPEF",373,0)
 I PRV=0 S PRV=.9
"RTN","HMPEF",374,0)
 F  S PRV=$O(^HMPROSTR(PRV)) Q:PRV'>0  D ROS1(PRV) I HMPMAX,HMPI'<HMPMAX Q
"RTN","HMPEF",375,0)
 I PRV'>0 S HMPFINI=1
"RTN","HMPEF",376,0)
 Q
"RTN","HMPEF",377,0)
 ;
"RTN","HMPEF",378,0)
ROS1(IEN) ; -- get one roster
"RTN","HMPEF",379,0)
 N ERRMSG
"RTN","HMPEF",380,0)
 S ERRMSG="A mumps error occurred while extaracting roster."
"RTN","HMPEF",381,0)
 ;S ERRMSG=$$ERRMSG("roster",IEN)
"RTN","HMPEF",382,0)
 ;S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPEF",383,0)
 N HMPLIST,HMPLIST2 ; these get defined by HMPROS6
"RTN","HMPEF",384,0)
 D GET^HMPROS6(IEN)
"RTN","HMPEF",385,0)
 N ROSTER,GBL,FLDS,RESULT,HMPZ,X,Y,HMPSEQ,HMPACT,HMPSOURCE,HMPV,NODE,HMPPAT,ID
"RTN","HMPEF",386,0)
 K HMPV S FLDS=".01:.06;1*;2;3*;99",ID=IEN
"RTN","HMPEF",387,0)
 D GETS^DIQ(800001.2,IEN_",",FLDS,"IEN","HMPV")
"RTN","HMPEF",388,0)
 S Y=$NA(HMPV(800001.2,IEN_","))
"RTN","HMPEF",389,0)
 S ROSTER("name")=$G(@Y@(.01,"E"))
"RTN","HMPEF",390,0)
 S ROSTER("localId")=ID,ROSTER("uid")=$$SETUID^HMPUTILS("roster",,ID)
"RTN","HMPEF",391,0)
 S X=$G(@Y@(99,"I")) S:X ROSTER("dateUpdated")=$$JSONDT^HMPUTILS(X)
"RTN","HMPEF",392,0)
 S X=$G(@Y@(.04,"I")) S:X ROSTER("ownerLocalId")=X,ROSTER("ownerUid")=$$SETUID^HMPUTILS("user",,X)
"RTN","HMPEF",393,0)
 S X=$G(@Y@(.06,"E")) S:X ROSTER("patientListName")=X
"RTN","HMPEF",394,0)
 S X=$G(@Y@(.03,"I")) S ROSTER("disabled")=$S(X=1:"true",1:"false")
"RTN","HMPEF",395,0)
 S X=$G(@Y@(.05,"I")) S ROSTER("private")=$S(X="PR":"true",1:"false")
"RTN","HMPEF",396,0)
 S X=$G(@Y@(2,"E")) S:X ROSTER("specialHandling")=X
"RTN","HMPEF",397,0)
 I $D(HMPV(800001.21)) S NODE="",HMPZ=0 D
"RTN","HMPEF",398,0)
 . F  S NODE=$O(HMPV(800001.21,NODE)) Q:NODE=""  D
"RTN","HMPEF",399,0)
 . . S HMPSEQ=HMPV(800001.21,NODE,.01,"I") S ROSTER("sources",HMPSEQ,"sequence")=HMPSEQ
"RTN","HMPEF",400,0)
 . . S HMPACT=HMPV(800001.21,NODE,.03,"E") S ROSTER("sources",HMPSEQ,"action")=HMPACT
"RTN","HMPEF",401,0)
 . . S HMPSOURCE=HMPV(800001.21,NODE,.02,"I"),ROSTER("sources",HMPSEQ,"source")=$$SOURCE(HMPSOURCE)
"RTN","HMPEF",402,0)
 . . S ROSTER("sources",HMPSEQ,"localId")=+HMPSOURCE
"RTN","HMPEF",403,0)
 . . S GBL=U_$$CREF^DILF($P(HMPSOURCE,";",2)) S ROSTER("sources",HMPSEQ,"name")=$P($G(@GBL@(+HMPSOURCE,0)),U)
"RTN","HMPEF",404,0)
 I $D(HMPV(800001.23)) S NODE="",HMPZ=0 D
"RTN","HMPEF",405,0)
 . F  S NODE=$O(HMPV(800001.23,NODE)) Q:NODE=""  D
"RTN","HMPEF",406,0)
 . . S HMPZ=HMPZ+1,HMPPAT=HMPV(800001.23,NODE,.01,"E"),DFN=HMPV(800001.23,NODE,.01,"I"),ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPEF",407,0)
 . . S ROSTER("patients",HMPZ,"name")=HMPPAT,ROSTER("patients",HMPZ,"localId")=DFN
"RTN","HMPEF",408,0)
 . . S ROSTER("patients",HMPZ,"uid")=$$SETUID^HMPUTILS("patient",DFN,DFN)
"RTN","HMPEF",409,0)
 . . I $D(HMPV(800001.23,NODE,.02)) S ROSTER("patients",HMPZ,"sourceSequence")=HMPV(800001.23,NODE,.02,"I")
"RTN","HMPEF",410,0)
 . . I ICN>0 S ROSTER("patients",HMPZ,"icn")=ICN
"RTN","HMPEF",411,0)
 . . S ROSTER("patients",HMPZ,"pid")=$$PID^HMPDJFS(DFN)
"RTN","HMPEF",412,0)
 D ADD("ROSTER") S HMPLAST=ID
"RTN","HMPEF",413,0)
 Q
"RTN","HMPEF",414,0)
 ;
"RTN","HMPEF",415,0)
SOURCE(SRC) ;
"RTN","HMPEF",416,0)
 N X S X=""
"RTN","HMPEF",417,0)
 I SRC["SC("        S X="clinic"
"RTN","HMPEF",418,0)
 I SRC["DPT("       S X="patient"
"RTN","HMPEF",419,0)
 I SRC["DIC(42"     S X="ward"
"RTN","HMPEF",420,0)
 I SRC["SCTM"       S X="pcmm"
"RTN","HMPEF",421,0)
 I SRC["OR(100.21"  S X="cprs"
"RTN","HMPEF",422,0)
 I SRC["HMPROSTR"    S X="roster"
"RTN","HMPEF",423,0)
 I SRC["DIC(45.7"   S X="specialty"
"RTN","HMPEF",424,0)
 I SRC["VA(200"     S X="provider"
"RTN","HMPEF",425,0)
 I SRC["PXRM(810.4" S X="pxrm"
"RTN","HMPEF",426,0)
 Q X
"RTN","HMPEF",427,0)
 ;
"RTN","HMPEF",428,0)
TESTROS ; TEMPORARY FOR TESTING
"RTN","HMPEF",429,0)
 S FILT("domain")="roster"
"RTN","HMPEF",430,0)
 S FILT("id")=277
"RTN","HMPEF",431,0)
 D GET^HMPEF(.ZZ,.FILT)
"RTN","HMPEF",432,0)
 Q
"RTN","HMPEF",433,0)
 ;
"RTN","HMPEF",434,0)
ASU ; -- ASU files
"RTN","HMPEF",435,0)
 N X,RTN S X=$P($G(TYPE),"-",2)
"RTN","HMPEF",436,0)
 S RTN=$$UP^XLFSTR(X)_"^HMPEASU"
"RTN","HMPEF",437,0)
 I X'="",$L($T(@RTN)) D @RTN
"RTN","HMPEF",438,0)
 Q
"RTN","HMPEF",439,0)
 ;
"RTN","HMPEF",440,0)
MDTERMS ; -- CP Terminology
"RTN","HMPEF",441,0)
 D:$L($T(TERM^HMPMDUTL)) TERM^HMPMDUTL
"RTN","HMPEF",442,0)
 Q
"RTN","HMPEF",443,0)
LABGRP ;
"RTN","HMPEF",444,0)
 D SHWCUMR2^HMPELAB
"RTN","HMPEF",445,0)
 Q
"RTN","HMPEF",446,0)
LABPNL ;
"RTN","HMPEF",447,0)
 D SHWORPNL^HMPELAB
"RTN","HMPEF",448,0)
 Q
"RTN","HMPEF",449,0)
 ;
"RTN","HMPEF",450,0)
ISPROXY(IEN) ;
"RTN","HMPEF",451,0)
 N APP
"RTN","HMPEF",452,0)
 S APP=$O(^VA(201,"B","APPLICATION PROXY","")) I APP'>0 Q 0
"RTN","HMPEF",453,0)
 I $D(^VA(200,IEN,"USC3","B",APP)) Q 1
"RTN","HMPEF",454,0)
 Q 0
"RTN","HMPEF",455,0)
 ;
"RTN","HMPEF",456,0)
IMMTYPE ;get immunization types
"RTN","HMPEF",457,0)
 D IMMTYPE^HMPCORD5
"RTN","HMPEF",458,0)
 Q
"RTN","HMPEF",459,0)
 ;
"RTN","HMPEF",460,0)
SIGNS ;extract data from SIGNS/SYMPTONS file
"RTN","HMPEF",461,0)
 D SIGNS^HMPCORD5
"RTN","HMPEF",462,0)
 Q
"RTN","HMPEF",463,0)
 ;
"RTN","HMPEF",464,0)
ALLTYPE ;get allergy-list types
"RTN","HMPEF",465,0)
 ;BL;REMOVE ALLERGY FROM ODS
"RTN","HMPEF",466,0)
 ;D ALLTYPE^HMPCORD5
"RTN","HMPEF",467,0)
 Q
"RTN","HMPEF",468,0)
 ;
"RTN","HMPEF",469,0)
VTYPE ;get vital types
"RTN","HMPEF",470,0)
 D VTYPE^HMPCORD5
"RTN","HMPEF",471,0)
 Q
"RTN","HMPEF",472,0)
 ;
"RTN","HMPEF",473,0)
VQUAL ;get vital qualifiers
"RTN","HMPEF",474,0)
 D VQUAL^HMPCORD5
"RTN","HMPEF",475,0)
 Q
"RTN","HMPEF",476,0)
 ;
"RTN","HMPEF",477,0)
VCAT ;get vital categories
"RTN","HMPEF",478,0)
 D VCAT^HMPCORD5
"RTN","HMPEF",479,0)
 Q
"RTN","HMPEF",480,0)
 ;
"RTN","HMPEF",481,0)
FILENAME ;display text of filenames for search treeview
"RTN","HMPEF",482,0)
 ;;VA Allergies File
"RTN","HMPEF",483,0)
 ;;VA Allergies File (Synonyms)  SPACER ONLY - NOT DISPLAYED
"RTN","HMPEF",484,0)
 ;;National Drug File - Generic Drug Name
"RTN","HMPEF",485,0)
 ;;National Drug file - Trade Name
"RTN","HMPEF",486,0)
 ;;Local Drug File
"RTN","HMPEF",487,0)
 ;;Local Drug File (Synonyms)  SPACER ONLY - NOT DISPLAYED
"RTN","HMPEF",488,0)
 ;;Drug Ingredients File
"RTN","HMPEF",489,0)
 ;;VA Drug Class File
"RTN","HMPEF",490,0)
 ;;
"RTN","HMPEFSG")
0^75^B7146892
"RTN","HMPEFSG",1,0)
HMPEFSG ;SLC/KCM -- GET for Extract and Freshness Stream
"RTN","HMPEFSG",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPEFSG",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPEFSG",4,0)
 ;
"RTN","HMPEFSG",5,0)
 ;
"RTN","HMPEFSG",6,0)
DOMITMS ; loop thru extract items, OFFSET is last sent
"RTN","HMPEFSG",7,0)
 ; expects HMPFSTRM,HMPFIDX,HMPFHMP
"RTN","HMPEFSG",8,0)
 ; changes HMPFSEQ,HMPFCNT as each item added
"RTN","HMPEFSG",9,0)
 N X,OFFSET,DOMAIN,TASK,BATCH,TOTAL
"RTN","HMPEFSG",10,0)
 S X=^XTMP(HMPFSTRM,HMPFIDX)
"RTN","HMPEFSG",11,0)
 S X=$P(X,U,3),DOMAIN=$P(X,":"),TASK=$P(X,":",2),TOTAL=$P(X,":",4)
"RTN","HMPEFSG",12,0)
 S BATCH="HMPFX~"_HMPFHMP_"~OPD"       ; extract node in ^XTMP
"RTN","HMPEFSG",13,0)
 S OFFSET=TOTAL-(HMPFIDX-HMPFSEQ)
"RTN","HMPEFSG",14,0)
 F  S OFFSET=$O(^XTMP(BATCH,TASK,DOMAIN,OFFSET)) Q:'OFFSET  D  Q:HMPFCNT'<HMPFLIM
"RTN","HMPEFSG",15,0)
 . S HMPFCNT=HMPFCNT+1 ; increment the count of returned items
"RTN","HMPEFSG",16,0)
 . S HMPFSEQ=HMPFSEQ+1 ; increment the sequence number in the stream
"RTN","HMPEFSG",17,0)
 . M ^TMP("HMPF",$J,HMPFCNT)=^XTMP(BATCH,TASK,DOMAIN,OFFSET)
"RTN","HMPEFSG",18,0)
 . I DOMAIN="patient" I $$PATIENT(HMPFCNT,DOMAIN,$G(TOTAL),OFFSET)=1 Q
"RTN","HMPEFSG",19,0)
 . S ^TMP("HMPF",$J,HMPFCNT,.3)=$$WRAPPER(DOMAIN,$S('TOTAL:0,1:OFFSET),+TOTAL)
"RTN","HMPEFSG",20,0)
 Q
"RTN","HMPEFSG",21,0)
 ;
"RTN","HMPEFSG",22,0)
SYNCSTRT(SEQNODE) ; Build syncStart object with demograhics
"RTN","HMPEFSG",23,0)
 S HMPFCNT=HMPFCNT+1
"RTN","HMPEFSG",24,0)
 S ^TMP("HMPF",$J,HMPFCNT,.3)=$$WRAPPER("syncStart",1,0)
"RTN","HMPEFSG",25,0)
 Q
"RTN","HMPEFSG",26,0)
SYNCDONE(SEQNODE) ; Build syncStatus object and stick in ^TMP
"RTN","HMPEFSG",27,0)
 ;  expects: HMPFSYS,HMPFCNT
"RTN","HMPEFSG",28,0)
 N HMPBATCH,DFN,HMPBATCH,STS,STSJSON,X,ERR
"RTN","HMPEFSG",29,0)
 S HMPBATCH=$P(SEQNODE,U,3) ; HMPFX~hmpSrvId~dfn
"RTN","HMPEFSG",30,0)
 S STS("uid")="urn:va:syncStatus:"_HMPFSYS_":OPD"
"RTN","HMPEFSG",31,0)
 S STS("initialized")="true"
"RTN","HMPEFSG",32,0)
 S X="" F  S X=$O(^XTMP(HMPBATCH,0,"count",X)) Q:'$L(X)  D
"RTN","HMPEFSG",33,0)
 . S STS("domainTotals",X)=^XTMP(HMPBATCH,0,"count",X)
"RTN","HMPEFSG",34,0)
 D ENCODE^HMPJSON("STS","STSJSON","ERR")
"RTN","HMPEFSG",35,0)
 I $D(ERR) S $EC=",UJSON encode error," Q
"RTN","HMPEFSG",36,0)
 S HMPFCNT=HMPFCNT+1
"RTN","HMPEFSG",37,0)
 M ^TMP("HMPF",$J,HMPFCNT)=STSJSON
"RTN","HMPEFSG",38,0)
 S ^TMP("HMPF",$J,HMPFCNT,.3)=$$WRAPPER("syncStatus","",-1)
"RTN","HMPEFSG",39,0)
 Q
"RTN","HMPEFSG",40,0)
 ;
"RTN","HMPEFSG",41,0)
WRAPPER(DOMAIN,OFFSET,TOTAL) ; return JSON wrapper for each item
"RTN","HMPEFSG",42,0)
 ; add object tag if extract total not zero or if total passed as -1
"RTN","HMPEFSG",43,0)
 ; seq and total tags only added if non-zero
"RTN","HMPEFSG",44,0)
 N X
"RTN","HMPEFSG",45,0)
 S X="},{""collection"":"""_DOMAIN_""""
"RTN","HMPEFSG",46,0)
 I $G(OFFSET)>0 S X=X_",""seq"":"_OFFSET
"RTN","HMPEFSG",47,0)
 I $G(TOTAL)>0 S X=X_",""total"":"_TOTAL
"RTN","HMPEFSG",48,0)
 I $G(TOTAL) S X=X_",""object"":"
"RTN","HMPEFSG",49,0)
 Q X
"RTN","HMPEFSG",50,0)
 ;
"RTN","HMPEFSG",51,0)
PATIENT(HMPFCNT,DOMAIN,TOTAL,OFFSET) ;
"RTN","HMPEFSG",52,0)
 N DFN,PIDS,TEMP,ERROR,PTJSON
"RTN","HMPEFSG",53,0)
 M PTJSON=^TMP("HMPF",$J,HMPFCNT)
"RTN","HMPEFSG",54,0)
 K PTJSON(.3)
"RTN","HMPEFSG",55,0)
 D DECODE^HMPJSON("PTJSON","TEMP","ERROR")
"RTN","HMPEFSG",56,0)
 ;D DECODE^HMPJSON($NA(^TMP("HMPF",$J,HMPFCNT,1)),"TEMP","ERROR")
"RTN","HMPEFSG",57,0)
 I '$D(TEMP) Q 0
"RTN","HMPEFSG",58,0)
 S DFN=TEMP("localId") I DFN'>0 Q 0
"RTN","HMPEFSG",59,0)
 S PIDS=$$PIDS^HMPDJFS(DFN)
"RTN","HMPEFSG",60,0)
 S ^TMP("HMPF",$J,HMPFCNT,.3)=$$WRAPPER^HMPDJFSG(DOMAIN,PIDS,$S('TOTAL:0,1:OFFSET),+TOTAL)
"RTN","HMPEFSG",61,0)
 Q 1
"RTN","HMPEFSG",62,0)
 ;
"RTN","HMPEFSP")
0^76^B44616195
"RTN","HMPEFSP",1,0)
HMPEFSP ;SLC/KCM -- PUT/POST for Extract and Freshness Stream
"RTN","HMPEFSP",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPEFSP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPEFSP",4,0)
 ;
"RTN","HMPEFSP",5,0)
 ;
"RTN","HMPEFSP",6,0)
 ; --- create a new patient subscription
"RTN","HMPEFSP",7,0)
 ;
"RTN","HMPEFSP",8,0)
PUTSUB(ARGS,BODY) ; return location after creating a new subscription
"RTN","HMPEFSP",9,0)
 ; PUT to: /hmp/subscription
"RTN","HMPEFSP",10,0)
 ;   JSON: {server:hmpXYZ,localId:229,icn:102324324,domains:[lab,med,...]}
"RTN","HMPEFSP",11,0)
 ;HMPFRSP: location:/hmp/subscription/{hmpSrvId}/patient/{dfn}
"RTN","HMPEFSP",12,0)
 ;
"RTN","HMPEFSP",13,0)
 N CNT,DOMAIN,ICN,OBJ,ERR,HMPSRV,HMPFDFN,HMPFDOM,HMPBATCH,HMPFERR,NEWSUB
"RTN","HMPEFSP",14,0)
 D DECODE^HMPJSON("BODY","OBJ","ERR")
"RTN","HMPEFSP",15,0)
 I $D(ERR) D SETERR^HMPDJFS("Unable to decode JSON") Q ""
"RTN","HMPEFSP",16,0)
 S HMPSRV=$TR($G(OBJ("server")),"~","=")
"RTN","HMPEFSP",17,0)
 I '$L(HMPSRV) D SETERR^HMPDJFS("Missing HMP Server ID") Q ""
"RTN","HMPEFSP",18,0)
 M HMPFDOM=OBJ("domains") I $D(HMPFDOM)<10 D DOMAINS(.HMPFDOM)
"RTN","HMPEFSP",19,0)
 S HMPBATCH="HMPFX~"_HMPSRV_"~OPD"
"RTN","HMPEFSP",20,0)
 ;;AGP check for domains already in process, remove domains that already in process.
"RTN","HMPEFSP",21,0)
 I $D(^XTMP(HMPBATCH,0,"status")) D
"RTN","HMPEFSP",22,0)
 .S CNT=0 F  S CNT=$O(HMPFDOM(CNT)) Q:CNT'>0  D
"RTN","HMPEFSP",23,0)
 ..S DOMAIN=$G(HMPFDOM(CNT)) I DOMAIN="" Q
"RTN","HMPEFSP",24,0)
 ..I $G(^XTMP(HMPBATCH,0,"status",DOMAIN))=0 K HMPFDOM(CNT)
"RTN","HMPEFSP",25,0)
 ;
"RTN","HMPEFSP",26,0)
 I '$$TM^%ZTLOAD D SETERR^HMPDJFS("Taskman not running") Q ""
"RTN","HMPEFSP",27,0)
 I '$D(^XTMP("HMPFP",0)) D NEWXTMP^HMPDJFS("HMPFP",9999,"HMP Subscriptions")
"RTN","HMPEFSP",28,0)
 ;
"RTN","HMPEFSP",29,0)
 ; ^XTMP("HMPFP",HMPFDFN,HMPSRV)=0 -- unsubscribed
"RTN","HMPEFSP",30,0)
 ; ^XTMP("HMPFP",HMPFDFN,HMPSRV)=1 -- subscribed
"RTN","HMPEFSP",31,0)
 ; ^XTMP("HMPFP",HMPFDFN,HMPSRV)=2 -- initialized (extracts complete)
"RTN","HMPEFSP",32,0)
 ; locks ensure only one process queues the extracts
"RTN","HMPEFSP",33,0)
 S NEWSUB=0
"RTN","HMPEFSP",34,0)
 ;
"RTN","HMPEFSP",35,0)
 L +^XTMP("HMPFP","OPD",HMPSRV):5 E  D SETERR^HMPDJFS("Unable to lock operational data for "_DOMAIN) Q
"RTN","HMPEFSP",36,0)
 ;I $G(^XTMP("HMPFP",DOMAIN,HMPSRV))'=1 S ^XTMP("HMPFP","OPD",HMPSRV)=1,NEWSUB=1
"RTN","HMPEFSP",37,0)
 S ^XTMP("HMPFP","OPD",HMPSRV)=1,NEWSUB=1
"RTN","HMPEFSP",38,0)
 L -^XTMP("HMPFP","OPD",HMPSRV)
"RTN","HMPEFSP",39,0)
 I NEWSUB D QUINIT(HMPBATCH,.HMPFDOM) Q:$G(HMPFERR) ""
"RTN","HMPEFSP",40,0)
 Q "/hmp/subscription/"_HMPSRV_"/operationalData"
"RTN","HMPEFSP",41,0)
 ;
"RTN","HMPEFSP",42,0)
QUINIT(HMPBATCH,HMPFDOM) ; Queue the initial extracts for a patient
"RTN","HMPEFSP",43,0)
 ; HMPBATCH="HMPFP~hmpsrvid~OPD"  example: HMPFX~hmpXYZ~229
"RTN","HMPEFSP",44,0)
 ; HMPFDOM(n)="domainName"
"RTN","HMPEFSP",45,0)
 ; 
"RTN","HMPEFSP",46,0)
 ; ^XTMP("HMPFX~hmpsrvid~OPD",0)=expires^created^HMP Operational Data Extract
"RTN","HMPEFSP",47,0)
 ;                           ,0,"status",domain)=extract status
"RTN","HMPEFSP",48,0)
 ;                           ,0,"task",taskIen)=""
"RTN","HMPEFSP",49,0)
 ;                           ,taskIen,domain,... (extract data)
"RTN","HMPEFSP",50,0)
 ;
"RTN","HMPEFSP",51,0)
 D NEWXTMP^HMPDJFS(HMPBATCH,1,"HMP Operational Data Extract")
"RTN","HMPEFSP",52,0)
 S ^XTMP(HMPBATCH,0,"time")=$H
"RTN","HMPEFSP",53,0)
 N I S I=0 F  S I=$O(HMPFDOM(I)) Q:'I  D SETDOM("status",HMPFDOM(I),0)
"RTN","HMPEFSP",54,0)
 D SETMARK("Start",HMPBATCH) ; sends full demographics
"RTN","HMPEFSP",55,0)
 ;
"RTN","HMPEFSP",56,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTSAVE,ZTKIL,ZTSYNC,ZTSK
"RTN","HMPEFSP",57,0)
 S ZTRTN="DQINIT^HMPEFSP",ZTIO="",ZTDTH=$H
"RTN","HMPEFSP",58,0)
 S ZTSAVE("HMPBATCH")="",ZTSAVE("HMPFDOM(")=""
"RTN","HMPEFSP",59,0)
 S ZTDESC="Build HMP operational data domains"
"RTN","HMPEFSP",60,0)
 D ^%ZTLOAD
"RTN","HMPEFSP",61,0)
 ;D DQINIT
"RTN","HMPEFSP",62,0)
 ;
"RTN","HMPEFSP",63,0)
 I $G(ZTSK) D
"RTN","HMPEFSP",64,0)
 .W !,"task: "_ZTSK
"RTN","HMPEFSP",65,0)
 .S ^XTMP(HMPBATCH,0,"task",ZTSK)="" I 1
"RTN","HMPEFSP",66,0)
 E  D SETERR^HMPDJFS("Task not created")
"RTN","HMPEFSP",67,0)
 Q
"RTN","HMPEFSP",68,0)
SETDOM(ATTRIB,DOMAIN,VALUE) ; Set value for a domain
"RTN","HMPEFSP",69,0)
 ; expects: HMPBATCH
"RTN","HMPEFSP",70,0)
 ; ATTRIB: "status" or "count" attribute
"RTN","HMPEFSP",71,0)
 ; DOMAIN: name of domain
"RTN","HMPEFSP",72,0)
 ; if status, VALUE: 0=waiting, 1=ready
"RTN","HMPEFSP",73,0)
 ; if count,  VALUE: count of items
"RTN","HMPEFSP",74,0)
 S ^XTMP(HMPBATCH,0,ATTRIB,DOMAIN)=VALUE
"RTN","HMPEFSP",75,0)
 Q
"RTN","HMPEFSP",76,0)
DQINIT ; Dequeue initial extracts
"RTN","HMPEFSP",77,0)
 ; expects:  HMPBATCH, HMPFDFN, HMPFDOM, ZTSK
"RTN","HMPEFSP",78,0)
 I '$D(^XTMP(HMPBATCH,0,"task",ZTSK)) Q  ; extract was superceded
"RTN","HMPEFSP",79,0)
 N HMPFDOMI,HMPFSYS,HMPFZTSK
"RTN","HMPEFSP",80,0)
 S HMPFSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPEFSP",81,0)
 S HMPFZTSK=ZTSK ; just in case the unexpected happens to ZTSK
"RTN","HMPEFSP",82,0)
 S HMPFDOMI="" F  S HMPFDOMI=$O(HMPFDOM(HMPFDOMI)) Q:'HMPFDOMI  D
"RTN","HMPEFSP",83,0)
 . N FILTER,RSLT
"RTN","HMPEFSP",84,0)
 . S FILTER("domain")=HMPFDOM(HMPFDOMI)
"RTN","HMPEFSP",85,0)
 . D GET^HMPEF(.RSLT,.FILTER)
"RTN","HMPEFSP",86,0)
 . D MOD4STRM(HMPFDOM(HMPFDOMI))
"RTN","HMPEFSP",87,0)
 . ; if superceded, stop processing domains
"RTN","HMPEFSP",88,0)
 . I '$D(^XTMP(HMPBATCH,0,"task",HMPFZTSK)) S HMPFDOMI=999 Q
"RTN","HMPEFSP",89,0)
 . D SETDOM("status",HMPFDOM(HMPFDOMI),1) ; ready
"RTN","HMPEFSP",90,0)
 ; if superceded, remove extracts produced by this task
"RTN","HMPEFSP",91,0)
 I '$D(^XTMP(HMPBATCH,0,"task",HMPFZTSK)) K ^XTMP(HMPBATCH,HMPFZTSK) Q
"RTN","HMPEFSP",92,0)
 ; don't assume initialized, since we may split domains to other tasks
"RTN","HMPEFSP",93,0)
 I $$INITDONE(HMPBATCH) D             ; if all domains extracted
"RTN","HMPEFSP",94,0)
 . D SETMARK("Done",HMPBATCH) ; - add updated syncStatus
"RTN","HMPEFSP",95,0)
 . D MVFRUPD(HMPBATCH)        ; - move freshness updates over
"RTN","HMPEFSP",96,0)
 Q
"RTN","HMPEFSP",97,0)
SETMARK(TYPE,HMPBATCH) ; Post markers for begin and end of initial synch
"RTN","HMPEFSP",98,0)
 N HPMSRV,NODES,X
"RTN","HMPEFSP",99,0)
 S HMPSRV=$P(HMPBATCH,"~",2)
"RTN","HMPEFSP",100,0)
 D POST^HMPDJFS("OPD","sync"_TYPE,HMPBATCH,"",HMPSRV,.NODES)
"RTN","HMPEFSP",101,0)
 Q:TYPE="Start"
"RTN","HMPEFSP",102,0)
 S X="" F  S X=$O(NODES(X)) Q:X=""  D  ; iterate hmp servers
"RTN","HMPEFSP",103,0)
 . S ^XTMP("HMPFP","tidy",X,$P(NODES(X),U),$P(NODES(X),U,2))=HMPBATCH
"RTN","HMPEFSP",104,0)
 Q
"RTN","HMPEFSP",105,0)
MVFRUPD(HMPBATCH) ; Move freshness updates over active stream
"RTN","HMPEFSP",106,0)
 N I,X,FROM,HMPSRV,TYPE,ID,ACT
"RTN","HMPEFSP",107,0)
 S HMPSRV=$P(HMPBATCH,"~",2)
"RTN","HMPEFSP",108,0)
 S ^XTMP("HMPFP","OPD",HMPSRV)=2       ; now initialized
"RTN","HMPEFSP",109,0)
 S FROM="HMPFH~"_HMPSRV_"~OPD"
"RTN","HMPEFSP",110,0)
 S I=0 F  S I=$O(^XTMP(FROM,I)) Q:'I  D  ; move over held updates
"RTN","HMPEFSP",111,0)
 . S X=^XTMP(FROM,I)
"RTN","HMPEFSP",112,0)
 . S TYPE=$P(X,U,2),ID=$P(X,U,3),ACT=$P(X,U,4)
"RTN","HMPEFSP",113,0)
 . D POST^HMPDJFS("OPD",TYPE,ID,ACT,HMPSRV)
"RTN","HMPEFSP",114,0)
 K ^XTMP(FROM)
"RTN","HMPEFSP",115,0)
 Q
"RTN","HMPEFSP",116,0)
MOD4STRM(DOMAIN) ; modify extract to be ready for stream
"RTN","HMPEFSP",117,0)
 ; expects: HMPBATCH, HMPFSYS, HMPFZTSK
"RTN","HMPEFSP",118,0)
 ; results are in ^XTMP("HMPFX~hmpsrv~dfn",DFN,DOMAIN,...)
"RTN","HMPEFSP",119,0)
 ; syncError: {uid,collection,error}  uid=urn:va:syncError:sysId:dfn:extract
"RTN","HMPEFSP",120,0)
 N DFN,HMPSRV,COUNT,LNODE
"RTN","HMPEFSP",121,0)
 S HMPSRV=$P(HMPBATCH,"~",2)
"RTN","HMPEFSP",122,0)
 ; no items -- COUNT is in 1 node, otherwise COUNT is in the .5 node
"RTN","HMPEFSP",123,0)
 S COUNT=0
"RTN","HMPEFSP",124,0)
 I $D(^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,.5)) S COUNT=+$P(^(.5),"""totalItems"":",2)
"RTN","HMPEFSP",125,0)
 ; remove headers (.5,.6) and closing braces (at COUNT+1)
"RTN","HMPEFSP",126,0)
 K ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,.5)
"RTN","HMPEFSP",127,0)
 K ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,.6)
"RTN","HMPEFSP",128,0)
 K ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,COUNT+1)
"RTN","HMPEFSP",129,0)
 S LNODE=$O(^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,""),-1)
"RTN","HMPEFSP",130,0)
 I LNODE>0,$G(^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,LNODE))="]}}" K ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,LNODE)
"RTN","HMPEFSP",131,0)
 ; if no items -- return empty object to be wrapped
"RTN","HMPEFSP",132,0)
 I COUNT=0 S ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,1,1)=""
"RTN","HMPEFSP",133,0)
 ; if error, add syncError object (from COUNT+2)
"RTN","HMPEFSP",134,0)
 I $D(^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,COUNT+2)) D
"RTN","HMPEFSP",135,0)
 . N JSON
"RTN","HMPEFSP",136,0)
 . D BLDSERR(COUNT+2,DOMAIN,.JSON) Q:'$D(JSON)
"RTN","HMPEFSP",137,0)
 . S COUNT=COUNT+1
"RTN","HMPEFSP",138,0)
 . M ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,COUNT)=JSON
"RTN","HMPEFSP",139,0)
 ; set .7 node to total count (including error)
"RTN","HMPEFSP",140,0)
 ;S ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,.7)=COUNT
"RTN","HMPEFSP",141,0)
 D SETDOM("count",DOMAIN,COUNT)
"RTN","HMPEFSP",142,0)
 ; if count 0 -- still return wrapper object so we know the domain had nothing
"RTN","HMPEFSP",143,0)
 D POST^HMPDJFS("OPD","syncDomain",DOMAIN_":"_HMPFZTSK_":"_($S(COUNT=0:1,1:COUNT))_":"_COUNT,"",HMPSRV)
"RTN","HMPEFSP",144,0)
 Q
"RTN","HMPEFSP",145,0)
BLDSERR(NODE,DOMAIN,ERRJSON) ; Create syncError object in ERRJSON
"RTN","HMPEFSP",146,0)
 ; expects: HMPBATCH, HMPFSYS, HMPFZTSK
"RTN","HMPEFSP",147,0)
 N ERRJSON,ERROBJ,ERR,ERRMSG,SYNCERR
"RTN","HMPEFSP",148,0)
 S ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,NODE,.3)="{"  ; replace , with { for decoding JSON
"RTN","HMPEFSP",149,0)
 M ERRJSON=^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,NODE)
"RTN","HMPEFSP",150,0)
 D DECODE^HMPJSON("ERRJSON","ERROBJ","ERR") I $D(ERR) S $EC=",UJSON decode error,"
"RTN","HMPEFSP",151,0)
 K ^XTMP(HMPBATCH,HMPFZTSK,DOMAIN,NODE)
"RTN","HMPEFSP",152,0)
 S ERRMSG=ERROBJ("error","message")
"RTN","HMPEFSP",153,0)
 Q:'$L(ERRMSG)
"RTN","HMPEFSP",154,0)
 S SYNCERR("uid")="urn:va:syncError:"_HMPFSYS_":"_DOMAIN
"RTN","HMPEFSP",155,0)
 S SYNCERR("collection")=DOMAIN
"RTN","HMPEFSP",156,0)
 S SYNCERR("error")=ERRMSG
"RTN","HMPEFSP",157,0)
 D ENCODE^HMPJSON("SYNCERR","ERRJSON","ERR") I $D(ERR) S $EC=",UJSON encode error,"
"RTN","HMPEFSP",158,0)
 Q
"RTN","HMPEFSP",159,0)
INITDONE(HMPBATCH) ; Return 1 if all domains are done
"RTN","HMPEFSP",160,0)
 N X,DONE
"RTN","HMPEFSP",161,0)
 S X="",DONE=1
"RTN","HMPEFSP",162,0)
 F  S X=$O(^XTMP(HMPBATCH,0,"status",X)) Q:'$L(X)  I '^(X) S DONE=0
"RTN","HMPEFSP",163,0)
 Q DONE
"RTN","HMPEFSP",164,0)
 ;
"RTN","HMPEFSP",165,0)
DOMAINS(LIST) ; load default domains (put in parameter?)
"RTN","HMPEFSP",166,0)
 ;;asu-class
"RTN","HMPEFSP",167,0)
 ;;asu-rule
"RTN","HMPEFSP",168,0)
 ;;category
"RTN","HMPEFSP",169,0)
 ;;charttab
"RTN","HMPEFSP",170,0)
 ;;displaygroup
"RTN","HMPEFSP",171,0)
 ;;doc-def
"RTN","HMPEFSP",172,0)
 ;;labgroup
"RTN","HMPEFSP",173,0)
 ;;labpanel
"RTN","HMPEFSP",174,0)
 ;;location
"RTN","HMPEFSP",175,0)
 ;;orderable
"RTN","HMPEFSP",176,0)
 ;;page
"RTN","HMPEFSP",177,0)
 ;;patient
"RTN","HMPEFSP",178,0)
 ;;personphoto
"RTN","HMPEFSP",179,0)
 ;;pointofcare
"RTN","HMPEFSP",180,0)
 ;;quick
"RTN","HMPEFSP",181,0)
 ;;roster
"RTN","HMPEFSP",182,0)
 ;;route
"RTN","HMPEFSP",183,0)
 ;;schedule
"RTN","HMPEFSP",184,0)
 ;;team
"RTN","HMPEFSP",185,0)
 ;;teamposition
"RTN","HMPEFSP",186,0)
 ;;user
"RTN","HMPEFSP",187,0)
 ;;usertabprefs
"RTN","HMPEFSP",188,0)
 ;;viewdefdef
"RTN","HMPEFSP",189,0)
 ;;viewdefdefcoldefconfigtemplate
"RTN","HMPEFSP",190,0)
 ;;zzzzz
"RTN","HMPEFSP",191,0)
 ;;clioterminology
"RTN","HMPEFSP",192,0)
 ;;doc-action
"RTN","HMPEFSP",193,0)
 ;;doc-status
"RTN","HMPEFSP",194,0)
 N I,X
"RTN","HMPEFSP",195,0)
 F I=1:1 S X=$P($T(DOMAINS+I),";;",2,99) Q:X="zzzzz"  S LIST(I)=X
"RTN","HMPEFSP",196,0)
 Q
"RTN","HMPEFSP",197,0)
 ;
"RTN","HMPEFST")
0^77^B5355448
"RTN","HMPEFST",1,0)
HMPEFST ;SLC/KCM -- Tests for extract and freshness stream
"RTN","HMPEFST",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPEFST",3,0)
 ;
"RTN","HMPEFST",4,0)
TEST ; Test synchronization process
"RTN","HMPEFST",5,0)
 N LASTUPD,TOTPTS,DONE,START,GTOTAL
"RTN","HMPEFST",6,0)
 S LASTUPD=0,TOTPTS=0,DONE=0,GTOTAL=0
"RTN","HMPEFST",7,0)
 S START=$P($H,",",2)
"RTN","HMPEFST",8,0)
 ;D KILL^HMPDJFS
"RTN","HMPEFST",9,0)
 D STRTSYNC
"RTN","HMPEFST",10,0)
 F  H 2 D LOADUPD Q:DONE=1
"RTN","HMPEFST",11,0)
 ;D LOADUPD ; one last time to clear the last patient
"RTN","HMPEFST",12,0)
 W !,"Elapsed Seconds: ",$P($H,",",2)-START
"RTN","HMPEFST",13,0)
 Q
"RTN","HMPEFST",14,0)
STRTSYNC ; Add patients for synchronization
"RTN","HMPEFST",15,0)
 ; expects TOTPTS
"RTN","HMPEFST",16,0)
 N ARGS,RSP
"RTN","HMPEFST",17,0)
 S ARGS("command")="startOperationalDataExtract"
"RTN","HMPEFST",18,0)
 S ARGS("server")="hmpTest"
"RTN","HMPEFST",19,0)
 D API^HMPDJFS(.RSP,.ARGS)
"RTN","HMPEFST",20,0)
 ;ZW ^TMP("HMPF",$J)
"RTN","HMPEFST",21,0)
 Q
"RTN","HMPEFST",22,0)
LOADUPD ; Load updates
"RTN","HMPEFST",23,0)
 ; expects LASTUPD
"RTN","HMPEFST",24,0)
 N RSP,ARGS,ERR,CNT,LNODE
"RTN","HMPEFST",25,0)
 ;S ARGS("command")="getOperationalDataUpdates"
"RTN","HMPEFST",26,0)
 S ARGS("command")="getPtUpdates"
"RTN","HMPEFST",27,0)
 S ARGS("server")="hmpTest"
"RTN","HMPEFST",28,0)
 S ARGS("lastUpdate")=LASTUPD
"RTN","HMPEFST",29,0)
 S ARGS("max")=1000
"RTN","HMPEFST",30,0)
 D API^HMPDJFS(.RSP,.ARGS)
"RTN","HMPEFST",31,0)
 D SCANHDRS
"RTN","HMPEFST",32,0)
 S LASTUPD=$$GETLUPD
"RTN","HMPEFST",33,0)
 S CNT=$$CNTOBJS,GTOTAL=GTOTAL+CNT
"RTN","HMPEFST",34,0)
 W !,"lastUpdate: ",LASTUPD,"  items: ",CNT_"/"_GTOTAL,?50
"RTN","HMPEFST",35,0)
 Q
"RTN","HMPEFST",36,0)
SCANHDRS ; Scan headers for syncDone objects
"RTN","HMPEFST",37,0)
 ; expects DONEPTS
"RTN","HMPEFST",38,0)
 N I
"RTN","HMPEFST",39,0)
 W !
"RTN","HMPEFST",40,0)
 ;ZW ^TMP("HMPF",$J)
"RTN","HMPEFST",41,0)
 S I=0 F  S I=$O(^TMP("HMPF",$J,I)) Q:'I  D
"RTN","HMPEFST",42,0)
 . I $G(^TMP("HMPF",$J,I,.3))["syncStatus" S DONE=1
"RTN","HMPEFST",43,0)
 Q
"RTN","HMPEFST",44,0)
SHOWHDRS ; Show object header info
"RTN","HMPEFST",45,0)
 N I
"RTN","HMPEFST",46,0)
 S I=0 F  S I=$O(^TMP("HMPF",$J,I)) Q:'I  D
"RTN","HMPEFST",47,0)
 . W !,"Hdr: ",$G(^TMP("HMPF",$J,I,.3))
"RTN","HMPEFST",48,0)
 Q
"RTN","HMPEFST",49,0)
CNTOBJS() ; Return count of objects returned
"RTN","HMPEFST",50,0)
 N I,C
"RTN","HMPEFST",51,0)
 S C=0
"RTN","HMPEFST",52,0)
 S I=.9 ; skip .5 header node
"RTN","HMPEFST",53,0)
 W !
"RTN","HMPEFST",54,0)
 ;ZW ^TMP("HMPF",$J)
"RTN","HMPEFST",55,0)
 F  S I=$O(^TMP("HMPF",$J,I)) Q:'I  I $L($G(^TMP("HMPF",$J,I,1))) S C=C+1 W !,^TMP("HMPF",$J,I,1)
"RTN","HMPEFST",56,0)
 Q C
"RTN","HMPEFST",57,0)
 ;
"RTN","HMPEFST",58,0)
GETLUPD() ; Return last update value
"RTN","HMPEFST",59,0)
 N X
"RTN","HMPEFST",60,0)
 W !
"RTN","HMPEFST",61,0)
 ;ZW ^TMP("HMPF",$J)
"RTN","HMPEFST",62,0)
 S X=^TMP("HMPF",$J,.5),X=$P(X,"""lastUpdate"":""",2),X=$P(X,""",")
"RTN","HMPEFST",63,0)
 Q X
"RTN","HMPEFST",64,0)
 ;
"RTN","HMPEFST",65,0)
TOTALS ;
"RTN","HMPEFST",66,0)
 N P,T
"RTN","HMPEFST",67,0)
 S T=0
"RTN","HMPEFST",68,0)
 S P=0 F  S P=$O(^XTMP("HMPFP",P)) Q:'P  S T=T+^XTMP("HMPFP",P,"hmpTest","total")
"RTN","HMPEFST",69,0)
 W !,"TOTAL: ",T
"RTN","HMPEFST",70,0)
 Q
"RTN","HMPEFST",71,0)
GETFEW ;
"RTN","HMPEFST",72,0)
 S ARGS("command")="getPtUpdates"
"RTN","HMPEFST",73,0)
 S ARGS("server")="hmpTest"
"RTN","HMPEFST",74,0)
 S ARGS("lastUpdate")="3140115-251"
"RTN","HMPEFST",75,0)
 S ARGS("max")=10
"RTN","HMPEFST",76,0)
 D API^HMPDJFS(.RSP,.ARGS)
"RTN","HMPEFST",77,0)
 Q
"RTN","HMPEFX")
0^78^B8497176
"RTN","HMPEFX",1,0)
HMPEFX ;SLC/MKB -- Reference data update ; 7/19/12 2:26pm
"RTN","HMPEFX",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPEFX",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPEFX",4,0)
 ;
"RTN","HMPEFX",5,0)
 ; External References          DBIA#
"RTN","HMPEFX",6,0)
 ; -------------------          -----
"RTN","HMPEFX",7,0)
 ; ^DPT                         10035
"RTN","HMPEFX",8,0)
 ; MPIF001                       2701
"RTN","HMPEFX",9,0)
 ; XLFSTR                       10104
"RTN","HMPEFX",10,0)
 ;
"RTN","HMPEFX",11,0)
EN(LAST,MAX) ; -- get data from ^XTMP("HMPEF-<date>",n)
"RTN","HMPEFX",12,0)
 ;[MAX not used yet]
"RTN","HMPEFX",13,0)
 N X,Y,HMPTOTL,DOMCNT,TYPE,NAME,RTN,HMPID
"RTN","HMPEFX",14,0)
 S LAST=$G(LAST) D GETLIST(LAST)
"RTN","HMPEFX",15,0)
 G ENQ:$G(^TMP("HMPX",$J,0))<1 ;no data
"RTN","HMPEFX",16,0)
 ;
"RTN","HMPEFX",17,0)
 S (HMPTOTL,DOMCNT)=0
"RTN","HMPEFX",18,0)
 S TYPE="" F  S TYPE=$O(^TMP("HMPX",$J,TYPE)) Q:TYPE=""  D
"RTN","HMPEFX",19,0)
 . S NAME=$$LOW^XLFSTR(TYPE)
"RTN","HMPEFX",20,0)
 . S RTN=$$TAG^HMPEF(NAME)_"^HMPEF" Q:'$L($T(@RTN))
"RTN","HMPEFX",21,0)
 . S DOMCNT=DOMCNT+1
"RTN","HMPEFX",22,0)
 . ;
"RTN","HMPEFX",23,0)
 . N HMP,HMPI
"RTN","HMPEFX",24,0)
 . S HMP=$NA(^TMP("HMP",$J,DOMCNT)),HMPI=0,HMPID=""
"RTN","HMPEFX",25,0)
 . F  S HMPID=$O(^TMP("HMPX",$J,TYPE,HMPID)) Q:HMPID=""  D
"RTN","HMPEFX",26,0)
 .. D @RTN S HMPTOTL=HMPTOTL+1
"RTN","HMPEFX",27,0)
 . ;
"RTN","HMPEFX",28,0)
 . I 'HMPI S DOMCNT=DOMCNT-1 Q   ;no data, or error
"RTN","HMPEFX",29,0)
 . S:DOMCNT>1 @HMP@(.3)=","
"RTN","HMPEFX",30,0)
 . S @HMP@(.5)="{""domainName"":"""_NAME_""",""total"":"_HMPI_",""items"":["
"RTN","HMPEFX",31,0)
 . S HMPI=HMPI+1,@HMP@(HMPI)="]}"
"RTN","HMPEFX",32,0)
 ;
"RTN","HMPEFX",33,0)
ENQ ;
"RTN","HMPEFX",34,0)
 S Y=$G(^TMP("HMPX",$J,0)) K ^TMP("HMPX",$J)
"RTN","HMPEFX",35,0)
 I '$G(DOMCNT) S @HMP@(.5)="{""apiVersion"":""1.01"",""data"":{""lastUpdate"":"""_LAST_""",""totalItems"":0,""items"":[]}}" Q
"RTN","HMPEFX",36,0)
 ;
"RTN","HMPEFX",37,0)
 S @HMP@(.5)="{""apiVersion"":""1.01"",""data"":{""lastUpdate"":"""_Y_""",""totalItems"":"_DOMCNT_",""items"":["
"RTN","HMPEFX",38,0)
 S HMPI=DOMCNT I $D(^TMP($J,"HMP ERROR")) D
"RTN","HMPEFX",39,0)
 . N ERROR,CNT
"RTN","HMPEFX",40,0)
 . D BUILDERR^HMPEF(.ERROR)
"RTN","HMPEFX",41,0)
 . S HMPI=HMPI+1,@HMP@(HMPI)=",",CNT=0
"RTN","HMPEFX",42,0)
 . F  S CNT=$O(ERROR(CNT)) Q:CNT'>0  S HMPI=HMPI+1,@HMP@(HMPI)=ERROR(CNT)
"RTN","HMPEFX",43,0)
 . K ^TMP($J,"HMP ERROR")
"RTN","HMPEFX",44,0)
 S HMPI=HMPI+1,@HMP@(HMPI)="]}}"
"RTN","HMPEFX",45,0)
 Q
"RTN","HMPEFX",46,0)
 ;
"RTN","HMPEFX",47,0)
GETLIST(LAST) ; -- build list of updates for client
"RTN","HMPEFX",48,0)
 ; Returns ^TMP("HMPX",$J,0) = last DATE:SEQ included
"RTN","HMPEFX",49,0)
 ;         ^TMP("HMPX",$J,TYPE,ID)=ACT
"RTN","HMPEFX",50,0)
 N DATE,SEQ,BEG,END,IDX,X0,DFN,TYPE,ID,ACT
"RTN","HMPEFX",51,0)
 K ^TMP("HMPX",$J)
"RTN","HMPEFX",52,0)
 S DATE=+LAST,SEQ=+$P(LAST,":",2)
"RTN","HMPEFX",53,0)
 ; generate list ID, and end point
"RTN","HMPEFX",54,0)
 S BEG=$NA(^XTMP("HMPEF-"_DATE,SEQ))         ;init loop where left off
"RTN","HMPEFX",55,0)
 ; END=$Q(^XTMP("HMPEF-"_(DT+1),9999999),-1) ;last node
"RTN","HMPEFX",56,0)
 S END=+$O(^XTMP("HMPEF-"_DT,"A"),-1)        ;last node
"RTN","HMPEFX",57,0)
 S ^TMP("HMPX",$J,0)=DT_":"_END              ;date:seq
"RTN","HMPEFX",58,0)
 ;
"RTN","HMPEFX",59,0)
 S IDX=BEG F  S IDX=$Q(@IDX) Q:$$DONE  D
"RTN","HMPEFX",60,0)
 . S X0=@IDX,TYPE=$P(X0,U),ID=$P(X0,U,2),ACT=$P(X0,U,3)
"RTN","HMPEFX",61,0)
 . I TYPE=""!(ID="") Q  ;error
"RTN","HMPEFX",62,0)
 . S ^TMP("HMPX",$J,TYPE,ID)=ACT
"RTN","HMPEFX",63,0)
 Q
"RTN","HMPEFX",64,0)
 ;
"RTN","HMPEFX",65,0)
DONE() ; -- Return 1 or 0, if loop has finished
"RTN","HMPEFX",66,0)
 I IDX'?1"^XTMP(""HMPEF-"7N.E  Q 1  ;end of ^XTMP
"RTN","HMPEFX",67,0)
 N D,N S D=+$P(IDX,"-",2),N=+$P(IDX,",",2)
"RTN","HMPEFX",68,0)
 ; check HMP-DATE subscript
"RTN","HMPEFX",69,0)
 I D<DT Q 0                         ;prior day: keep going
"RTN","HMPEFX",70,0)
 I D>DT Q 1                         ;next day:  stop loop
"RTN","HMPEFX",71,0)
 ; D=DT: check sequence# subscript
"RTN","HMPEFX",72,0)
 I N>END Q 1
"RTN","HMPEFX",73,0)
 Q 0
"RTN","HMPEHL7")
0^79^B3357275
"RTN","HMPEHL7",1,0)
HMPEHL7 ;ALB/MJK - HMP HL7 ADT Message Processor ;03/25/2014 16:50:09
"RTN","HMPEHL7",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPEHL7",3,0)
 ;;
"RTN","HMPEHL7",4,0)
 ;
"RTN","HMPEHL7",5,0)
ADT ; -- main entry point for the following HMP ADT client/router protocols:
"RTN","HMPEHL7",6,0)
 ;          - HMP ADT-A04 CLIENT protocol
"RTN","HMPEHL7",7,0)
 ;             o  subscribes to VAFC ADT-A04 SERVER 
"RTN","HMPEHL7",8,0)
 ;          - HMP ADT-A08 CLIENT protocol
"RTN","HMPEHL7",9,0)
 ;             o  subscribes to VAFC ADT-A08 SERVER 
"RTN","HMPEHL7",10,0)
 ;
"RTN","HMPEHL7",11,0)
 ; Note: These variables are provided by the VistA HL7 system when a
"RTN","HMPEHL7",12,0)
 ;       subscriber protocol's ROUTING LOGIC is called:
"RTN","HMPEHL7",13,0)
 ;            - HLNEXT
"RTN","HMPEHL7",14,0)
 ;            - HLQUIT
"RTN","HMPEHL7",15,0)
 ;            - HLNODE
"RTN","HMPEHL7",16,0)
 ;            - HL("FS")
"RTN","HMPEHL7",17,0)
 ;            - HL("ECH")
"RTN","HMPEHL7",18,0)
 ;
"RTN","HMPEHL7",19,0)
 ; -- Filters ADT/A04(registration) & A08 (patient security level change) events
"RTN","HMPEHL7",20,0)
 ;    Scans for PID segment and uses embedded DFN
"RTN","HMPEHL7",21,0)
 ;    Sets ^XTMP("HMPFS~... freshness queue
"RTN","HMPEHL7",22,0)
 ;
"RTN","HMPEHL7",23,0)
 NEW DONE,HMPSEG,HMPEVT
"RTN","HMPEHL7",24,0)
 SET DONE=0
"RTN","HMPEHL7",25,0)
 FOR  XECUTE HLNEXT QUIT:HLQUIT'>0  DO  QUIT:DONE
"RTN","HMPEHL7",26,0)
 . SET HMPSEG=$EXTRACT(HLNODE,1,3)
"RTN","HMPEHL7",27,0)
 . ;
"RTN","HMPEHL7",28,0)
 . IF HMPSEG="EVN" DO  QUIT
"RTN","HMPEHL7",29,0)
 . . SET HMPEVT=$PIECE(HLNODE,HLFS,2)
"RTN","HMPEHL7",30,0)
 . . IF HMPEVT="A04" QUIT
"RTN","HMPEHL7",31,0)
 . . ; -- 97 reason = sensitive patient change occurred
"RTN","HMPEHL7",32,0)
 . . IF HMPEVT="A08",$PIECE(HLNODE,HLFS,5)=97 QUIT
"RTN","HMPEHL7",33,0)
 . . ; -- not an event HMP is interested in so done with message
"RTN","HMPEHL7",34,0)
 . . SET DONE=1
"RTN","HMPEHL7",35,0)
 . ; -- PID segment always comes after EVN segment
"RTN","HMPEHL7",36,0)
 . IF HMPSEG'="PID" QUIT
"RTN","HMPEHL7",37,0)
 . SET DONE=1
"RTN","HMPEHL7",38,0)
 . ; -- HMPEVT should always be defined at this point
"RTN","HMPEHL7",39,0)
 . IF $G(HMPEVT)="" QUIT
"RTN","HMPEHL7",40,0)
 . NEW DFN
"RTN","HMPEHL7",41,0)
 . SET DFN=+$PIECE($PIECE(HLNODE,HL("FS"),4),$EXTRACT(HL("ECH")))
"RTN","HMPEHL7",42,0)
 . IF 'DFN QUIT
"RTN","HMPEHL7",43,0)
 . DO POSTX^HMPEVNT("pt-select",DFN_"&"_HMPEVT)  ;Ref File event
"RTN","HMPEHL7",44,0)
 . IF $DATA(^HMP(800000,"AITEM",DFN)) DO POST^HMPEVNT(DFN,"patient",DFN)
"RTN","HMPEHL7",45,0)
 QUIT
"RTN","HMPEHL7",46,0)
 ;
"RTN","HMPELAB")
0^80^B5621776
"RTN","HMPELAB",1,0)
HMPELAB ; SLC/JMC - Lab extract utilities ; 2/20/14 4:23pm
"RTN","HMPELAB",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 1913;Build 53
"RTN","HMPELAB",3,0)
SHWORPNL ; Ordering panels (ends in "panel")
"RTN","HMPELAB",4,0)
 N X,COUNT,LABDAT
"RTN","HMPELAB",5,0)
 S X=$NA(^LAB(60))
"RTN","HMPELAB",6,0)
 F  S X=$Q(@X) Q:($QS(X,1)'=60)!($QS(X,2)'=+$QS(X,2))  D
"RTN","HMPELAB",7,0)
 . I $QS(X,3)=0  D
"RTN","HMPELAB",8,0)
 . . I $D(LABDAT),COUNT>0 S HMPCNT=HMPCNT+1 D ADD^HMPEF("LABDAT") K LABDAT
"RTN","HMPELAB",9,0)
 . . S COUNT=0,LABDAT("name")=$P(@X,"^",1),LABDAT("uid")=$$SETUID^HMPUTILS("labpanel","",$QS(X,2))
"RTN","HMPELAB",10,0)
 . I $QS(X,3)=2,$QS(X,4)>0  D
"RTN","HMPELAB",11,0)
 . . S LABDAT("labs",$QS(X,4),"id")=@X,LABDAT("labs",$QS(X,4),"name")=$P(^LAB(60,+@X,0),"^",1),COUNT=COUNT+1
"RTN","HMPELAB",12,0)
 I $D(LABDAT),COUNT>0 S HMPCNT=HMPCNT+1 D ADD^HMPEF("LABDAT") K LABDAT
"RTN","HMPELAB",13,0)
 S HMPFINI=1
"RTN","HMPELAB",14,0)
 Q
"RTN","HMPELAB",15,0)
SHWCUMR2 ; All Cumulative Reports and the labs they point to (for UI pick on labs view)
"RTN","HMPELAB",16,0)
 N X,LASTSUB,LASTLAB,LABDAT
"RTN","HMPELAB",17,0)
 S LASTSUB=0,LASTLAB=0,X=$NA(^LAB(64.5,1,1))
"RTN","HMPELAB",18,0)
 F  S X=$Q(@X) Q:($QS(X,4)="B")!($QS(X,3)'=1)!($QS(X,2)'=1)!($QS(X,1)'=64.5)  D
"RTN","HMPELAB",19,0)
 . I $QS(X,5)=0  D
"RTN","HMPELAB",20,0)
 . . I $D(LABDAT) S HMPCNT=HMPCNT+1 D ADD^HMPEF("LABDAT") K LABDAT
"RTN","HMPELAB",21,0)
 . . S LASTSUB=0,LASTLAB=0,LABDAT("name")=$P(@X,"^",1)
"RTN","HMPELAB",22,0)
 . I $QS(X,7)=0 S LASTSUB=LASTSUB+1,LASTLAB=0,LABDAT("uid")=$$SETUID^HMPUTILS("labgroup",,$QS(X,4)),LABDAT("groups",LASTSUB,"name")=$P(@X,"^",1)
"RTN","HMPELAB",23,0)
 . I $QS(X,9)=0  D
"RTN","HMPELAB",24,0)
 . . S LASTLAB=LASTLAB+1
"RTN","HMPELAB",25,0)
 . . S LABDAT("groups",LASTSUB,"labs",LASTLAB,"name")=$P(^LAB(60,$P(@X,"^",1),0),"^",1)
"RTN","HMPELAB",26,0)
 . . S LABDAT("groups",LASTSUB,"labs",LASTLAB,"id")=$P(@X,"^",1)
"RTN","HMPELAB",27,0)
 I $D(LABDAT) S HMPCNT=HMPCNT+1 D ADD^HMPEF("LABDAT") K LABDAT
"RTN","HMPELAB",28,0)
 S HMPFINI=1
"RTN","HMPELAB",29,0)
 Q
"RTN","HMPELAB",30,0)
LABPNL ; Lab ordering panels
"RTN","HMPELAB",31,0)
 ; {name:panelName,uid:panelUid,labs:[{id:labIEN,name:labName},...]}
"RTN","HMPELAB",32,0)
 N IEN
"RTN","HMPELAB",33,0)
 F  S IEN=$O(^LAB(60,IEN)) Q:'IEN  D
"RTN","HMPELAB",34,0)
 . N X0,LAB
"RTN","HMPELAB",35,0)
 . S X0=$G(^LAB(60,IEN,0))
"RTN","HMPELAB",36,0)
 . Q:"IB"'[$P(X0,U,3)       ; not for ordering
"RTN","HMPELAB",37,0)
 . Q:'$O(^LAB(60,IEN,2,0))  ; not panel
"RTN","HMPELAB",38,0)
 . S LAB("name")=$P(X0,U)
"RTN","HMPELAB",39,0)
 . S LAB("uid")=$$SETUID^HMPUTILS("labpanel","",IEN)
"RTN","HMPELAB",40,0)
 . ; recursively expand to individual tests
"RTN","HMPELAB",41,0)
 . D ADD^HMPEF("LAB")
"RTN","HMPELAB",42,0)
 I 'IEN S HMPFINI=1
"RTN","HMPELAB",43,0)
 Q
"RTN","HMPELAB",44,0)
LABGRP ; Lab groups on cumulative report
"RTN","HMPELAB",45,0)
 ; {name:groupName,uid:groupUid,labs:[{name:labName,id:labIEN},...]}
"RTN","HMPELAB",46,0)
 F  S IEN=$O(^LAB(60,IEN)) Q:'IEN  D
"RTN","HMPELAB",47,0)
 . Q
"RTN","HMPELAB",48,0)
 Q
"RTN","HMPENSZ")
0^81^B68569424
"RTN","HMPENSZ",1,0)
HMPENSZ ;SLC/KCM - Measure data sizes
"RTN","HMPENSZ",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPENSZ",3,0)
 ;
"RTN","HMPENSZ",4,0)
EN ; Find Max, Mean, Median for each TAG
"RTN","HMPENSZ",5,0)
 K ^XTMP("HMPENSZ-DOMAINS")
"RTN","HMPENSZ",6,0)
 D ALG,PRB,DOC,ENC,ACC,LAB,MIC,RAD,VIT,RXI,RXO,NVA,ORD,OBS
"RTN","HMPENSZ",7,0)
 Q
"RTN","HMPENSZ",8,0)
ALG ;@type ALLERGY @name Allergies
"RTN","HMPENSZ",9,0)
 D REPORT(120.8,"ALG")
"RTN","HMPENSZ",10,0)
 Q
"RTN","HMPENSZ",11,0)
PRB ;@type PROBLEM @name Problems
"RTN","HMPENSZ",12,0)
 D REPORT(9000011,"PRB")
"RTN","HMPENSZ",13,0)
 Q
"RTN","HMPENSZ",14,0)
DOC ;@type DOCUMENT @name Documents
"RTN","HMPENSZ",15,0)
 D REPORT(8925,"DOC")
"RTN","HMPENSZ",16,0)
 Q
"RTN","HMPENSZ",17,0)
ENC ;@type VISIT @name Encounters
"RTN","HMPENSZ",18,0)
 D REPORT(9000010,"ENC")
"RTN","HMPENSZ",19,0)
 Q
"RTN","HMPENSZ",20,0)
ACC ;@type ACCESSION @name Accessions
"RTN","HMPENSZ",21,0)
 D REPORT("63ACC","ACC")
"RTN","HMPENSZ",22,0)
 Q
"RTN","HMPENSZ",23,0)
LAB ;@type LAB @name Lab Results
"RTN","HMPENSZ",24,0)
 D REPORT(63,"LAB")
"RTN","HMPENSZ",25,0)
 Q
"RTN","HMPENSZ",26,0)
MIC ;@name Micro/AP Collections
"RTN","HMPENSZ",27,0)
 D REPORT("63MI","MIC")
"RTN","HMPENSZ",28,0)
 Q
"RTN","HMPENSZ",29,0)
RAD ;@type RADIOLOGY @name Radiology Procedures
"RTN","HMPENSZ",30,0)
 D REPORT(70,"RAD")
"RTN","HMPENSZ",31,0)
 Q
"RTN","HMPENSZ",32,0)
VIT ;@type VITAL @name Vital Measurements
"RTN","HMPENSZ",33,0)
 D REPORT(120.5,"VIT")
"RTN","HMPENSZ",34,0)
 Q
"RTN","HMPENSZ",35,0)
RXI ;@type MED @name Inpatient Medications
"RTN","HMPENSZ",36,0)
 D REPORT(55,"RXI")
"RTN","HMPENSZ",37,0)
 Q
"RTN","HMPENSZ",38,0)
RXO ;@type RX @name Outpatient Medications
"RTN","HMPENSZ",39,0)
 D REPORT(52,"RXO")
"RTN","HMPENSZ",40,0)
 Q
"RTN","HMPENSZ",41,0)
NVA ;@type MED @name Non-VA Medications
"RTN","HMPENSZ",42,0)
 D REPORT("55NVA","NVA")
"RTN","HMPENSZ",43,0)
 Q
"RTN","HMPENSZ",44,0)
ORD ;@name Orders
"RTN","HMPENSZ",45,0)
 D REPORT(100,"ORD")
"RTN","HMPENSZ",46,0)
 Q
"RTN","HMPENSZ",47,0)
OBS ;@name Observations
"RTN","HMPENSZ",48,0)
 D REPORT(704.117,"OBS")
"RTN","HMPENSZ",49,0)
 Q
"RTN","HMPENSZ",50,0)
REPORT(FILE,TAG) ; loop thru reminder index, calulate stats & show report
"RTN","HMPENSZ",51,0)
 D ILOOP(FILE,TAG),CALC(TAG),SAVE(TAG),SHOW(TAG)
"RTN","HMPENSZ",52,0)
 K ^TMP($J)
"RTN","HMPENSZ",53,0)
 Q
"RTN","HMPENSZ",54,0)
ILOOP(FN,TAG) ;
"RTN","HMPENSZ",55,0)
 K ^TMP($J)
"RTN","HMPENSZ",56,0)
 N PT,PTDFN,CNT,TOTPT,HIGHCNT,TOTREC
"RTN","HMPENSZ",57,0)
 S TOTPT=0,TOTREC=0,HIGHCNT=0
"RTN","HMPENSZ",58,0)
 S PT=0 F  S PT=$$NEXTPT(FN,PT) Q:'PT  D
"RTN","HMPENSZ",59,0)
 . S TOTPT=TOTPT+1 W:TOTPT#100=0 "."
"RTN","HMPENSZ",60,0)
 . I "^55^55NVA^52^100^"[("^"_FN_"^") S CNT=$$LP1(PT,FN)
"RTN","HMPENSZ",61,0)
 . I "^63^70^120.5^"[("^"_FN_"^") S CNT=$$LP2(PT,FN)
"RTN","HMPENSZ",62,0)
 . I "63MI"=FN S CNT=$$LPMI(PT)
"RTN","HMPENSZ",63,0)
 . I "63ACC"=FN S CNT=$$LPACC(PT)
"RTN","HMPENSZ",64,0)
 . I 8925=FN S CNT=$$LPDOC(PT)
"RTN","HMPENSZ",65,0)
 . I 120.8=FN S CNT=$$LPALG(PT)
"RTN","HMPENSZ",66,0)
 . I 9000011=FN S CNT=$$LPROB(PT)
"RTN","HMPENSZ",67,0)
 . I 9000010=FN S CNT=$$LPVST(PT)
"RTN","HMPENSZ",68,0)
 . I FN=704.117 S CNT=$$MDC^HMPENSZ(PT)
"RTN","HMPENSZ",69,0)
 . Q:'CNT
"RTN","HMPENSZ",70,0)
 . I (FN="63ACC"),($P(^LR(PT,0),"^",2)'=2) Q  ;non-patient collection
"RTN","HMPENSZ",71,0)
 . S PTDFN=$S(FN="63ACC":$P(^LR(PT,0),"^",3),1:PT)
"RTN","HMPENSZ",72,0)
 . I CNT>HIGHCNT S HIGHCNT=CNT
"RTN","HMPENSZ",73,0)
 . S ^TMP($J,TAG,"FREQ",CNT)=+$G(^TMP($J,TAG,"FREQ",CNT))+1
"RTN","HMPENSZ",74,0)
 . S ^TMP($J,TAG,"COUNT",CNT,PTDFN)="",TOTREC=TOTREC+CNT
"RTN","HMPENSZ",75,0)
 S ^TMP($J,TAG,"STATS","HighestCount")=HIGHCNT
"RTN","HMPENSZ",76,0)
 S ^TMP($J,TAG,"STATS","TotalRecords")=TOTREC
"RTN","HMPENSZ",77,0)
 S ^TMP($J,TAG,"STATS","TotalPatients")=TOTPT
"RTN","HMPENSZ",78,0)
 Q
"RTN","HMPENSZ",79,0)
NEXTPT(FN,PT) ; Returns the next patient based on PT passed in
"RTN","HMPENSZ",80,0)
 I FN="63MI" Q $O(^PXRMINDX(63,"PDI",PT))
"RTN","HMPENSZ",81,0)
 I FN="63ACC" Q $O(^LR(PT))
"RTN","HMPENSZ",82,0)
 I FN=8925 Q $O(^TIU(8925,"C",PT))
"RTN","HMPENSZ",83,0)
 I FN=120.8 Q $O(^GMR(120.8,"B",PT))
"RTN","HMPENSZ",84,0)
 I FN=9000011 Q $O(^AUPNPROB("AC",PT))
"RTN","HMPENSZ",85,0)
 I FN=9000010 Q $O(^AUPNVSIT("C",PT))
"RTN","HMPENSZ",86,0)
 I FN=704.117 Q $O(^MDC(704.117,"PT",PT))
"RTN","HMPENSZ",87,0)
 Q $O(^PXRMINDX(FN,"PI",PT))
"RTN","HMPENSZ",88,0)
 ;
"RTN","HMPENSZ",89,0)
LP1(PT,FN) ; return count for indexes with start/stop dates
"RTN","HMPENSZ",90,0)
 N CNT S CNT=0
"RTN","HMPENSZ",91,0)
 N ITM,STRT,STOP,DAS
"RTN","HMPENSZ",92,0)
 S ITM="" F  S ITM=$O(^PXRMINDX(FN,"PI",PT,ITM)) Q:ITM=""  D
"RTN","HMPENSZ",93,0)
 . S STRT="" F  S STRT=$O(^PXRMINDX(FN,"PI",PT,ITM,STRT)) Q:STRT=""  D
"RTN","HMPENSZ",94,0)
 . . S STOP="" F  S STOP=$O(^PXRMINDX(FN,"PI",PT,ITM,STRT,STOP)) Q:STOP=""  D
"RTN","HMPENSZ",95,0)
 . . . S DAS="" F  S DAS=$O(^PXRMINDX(FN,"PI",PT,ITM,STRT,STOP,DAS)) Q:DAS=""  S CNT=CNT+1
"RTN","HMPENSZ",96,0)
 Q CNT
"RTN","HMPENSZ",97,0)
 ;
"RTN","HMPENSZ",98,0)
LP2(PT,FN) ; return count for indexes with date only
"RTN","HMPENSZ",99,0)
 N CNT S CNT=0
"RTN","HMPENSZ",100,0)
 N ITM,DATE,DAS
"RTN","HMPENSZ",101,0)
 S ITM="" F  S ITM=$O(^PXRMINDX(FN,"PI",PT,ITM)) Q:ITM=""  D
"RTN","HMPENSZ",102,0)
 . S DATE="" F  S DATE=$O(^PXRMINDX(FN,"PI",PT,ITM,DATE)) Q:DATE=""  D
"RTN","HMPENSZ",103,0)
 . . S DAS="" F  S DAS=$O(^PXRMINDX(FN,"PI",PT,ITM,DATE,DAS)) Q:DAS=""  S CNT=CNT+1
"RTN","HMPENSZ",104,0)
 Q CNT
"RTN","HMPENSZ",105,0)
 ;
"RTN","HMPENSZ",106,0)
LPMI(PT) ; return count for micro/anatomic path collections
"RTN","HMPENSZ",107,0)
 N CNT S CNT=0
"RTN","HMPENSZ",108,0)
 N DATE
"RTN","HMPENSZ",109,0)
 S DATE="" F  S DATE=$O(^PXRMINDX(63,"PDI",PT,DATE)) Q:DATE=""  S CNT=CNT+1
"RTN","HMPENSZ",110,0)
 Q CNT
"RTN","HMPENSZ",111,0)
 ;
"RTN","HMPENSZ",112,0)
LPDOC(PT) ; return count for TIU documents
"RTN","HMPENSZ",113,0)
 N CNT S CNT=0
"RTN","HMPENSZ",114,0)
 N DA
"RTN","HMPENSZ",115,0)
 S DA=0 F  S DA=$O(^TIU(8925,"C",PT,DA)) Q:'DA  S CNT=CNT+1
"RTN","HMPENSZ",116,0)
 Q CNT
"RTN","HMPENSZ",117,0)
 ;
"RTN","HMPENSZ",118,0)
 ;N CNT S CNT=0
"RTN","HMPENSZ",119,0)
 ;N CLS,TM,DA
"RTN","HMPENSZ",120,0)
 ;S CLS=0 F  S CLS=$O(^TIU(8925,"ACLPT",CLS)) Q:'CLS  D
"RTN","HMPENSZ",121,0)
 ;. S TM=0 F  S TM=$O(^TIU(8925,"ACLPT",CLS,PT,TM)) Q:'TM  D
"RTN","HMPENSZ",122,0)
 ;. . S DA=0 F  S DA=$O(^TIU(8925,"ACLPT",CLS,PT,TM,DA)) Q:'DA  S CNT=CNT+1
"RTN","HMPENSZ",123,0)
 ;Q CNT
"RTN","HMPENSZ",124,0)
 ;
"RTN","HMPENSZ",125,0)
 ;N CNT S CNT=0
"RTN","HMPENSZ",126,0)
 ;N DOC,TM
"RTN","HMPENSZ",127,0)
 ;S DOC=0 F  S DOC=$O(^TIU(8925,"AA",PT,DOC)) Q:'DOC  D
"RTN","HMPENSZ",128,0)
 ;. S TM=0 F  S TM=$O(^TIU(8925,"AA",PT,DOC,TM)) Q:'TM  D
"RTN","HMPENSZ",129,0)
 ;. . S DA=0 F  S DA=$O(^TIU(8925,"AA",PT,DOC,TM,DA)) Q:'DA  S CNT=CNT+1
"RTN","HMPENSZ",130,0)
 ;Q CNT
"RTN","HMPENSZ",131,0)
 ;
"RTN","HMPENSZ",132,0)
LPALG(PT) ; return count for allergies
"RTN","HMPENSZ",133,0)
 N CNT S CNT=0
"RTN","HMPENSZ",134,0)
 N DA S DA=0
"RTN","HMPENSZ",135,0)
 F  S DA=$O(^GMR(120.8,"B",PT,DA)) Q:'DA  S CNT=CNT+1
"RTN","HMPENSZ",136,0)
 Q CNT
"RTN","HMPENSZ",137,0)
 ;
"RTN","HMPENSZ",138,0)
LPROB(PT) ; return count for problems
"RTN","HMPENSZ",139,0)
 N CNT S CNT=0
"RTN","HMPENSZ",140,0)
 N DA S DA=0
"RTN","HMPENSZ",141,0)
 F  S DA=$O(^AUPNPROB("AC",PT,DA)) Q:'DA  S CNT=CNT+1
"RTN","HMPENSZ",142,0)
 Q CNT
"RTN","HMPENSZ",143,0)
 ;
"RTN","HMPENSZ",144,0)
LPVST(PT) ; return count for visits
"RTN","HMPENSZ",145,0)
 N CNT S CNT=0
"RTN","HMPENSZ",146,0)
 N DA S DA=0
"RTN","HMPENSZ",147,0)
 F  S DA=$O(^AUPNVSIT("C",PT,DA)) Q:'DA  D
"RTN","HMPENSZ",148,0)
 . I "AHSR"[$P(^AUPNVSIT(DA,0),"^",7) S CNT=CNT+1
"RTN","HMPENSZ",149,0)
 . ; (only include ambulatory, hospitalization, surgery, and nursing home)
"RTN","HMPENSZ",150,0)
 Q CNT
"RTN","HMPENSZ",151,0)
 ;
"RTN","HMPENSZ",152,0)
LPACC(PT) ; return count of accessions
"RTN","HMPENSZ",153,0)
 N CNT S CNT=0
"RTN","HMPENSZ",154,0)
 N ACC S ACC=0
"RTN","HMPENSZ",155,0)
 F  S ACC=$O(^LR(PT,"CH",ACC)) Q:'ACC  S CNT=CNT+1
"RTN","HMPENSZ",156,0)
 Q CNT
"RTN","HMPENSZ",157,0)
 ; 
"RTN","HMPENSZ",158,0)
CALC(TAG) ; calculate statistics for a TAG
"RTN","HMPENSZ",159,0)
 ; find the highest item coun
"RTN","HMPENSZ",160,0)
 N MAX S MAX=^TMP($J,TAG,"STATS","HighestCount")
"RTN","HMPENSZ",161,0)
 D MAXPTS(TAG,MAX)
"RTN","HMPENSZ",162,0)
 ;
"RTN","HMPENSZ",163,0)
 ; find the average item count
"RTN","HMPENSZ",164,0)
 N PTS,MEAN
"RTN","HMPENSZ",165,0)
 S PTS=^TMP($J,TAG,"STATS","TotalPatients"),MEAN=0
"RTN","HMPENSZ",166,0)
 I PTS S MEAN=^TMP($J,TAG,"STATS","TotalRecords")\PTS
"RTN","HMPENSZ",167,0)
 D ADDPTS(TAG,"MEAN",MEAN)
"RTN","HMPENSZ",168,0)
 ;
"RTN","HMPENSZ",169,0)
 ; find the median item count
"RTN","HMPENSZ",170,0)
 N POS,CNT,PT,I
"RTN","HMPENSZ",171,0)
 S:PTS#2 PTS=PTS+1 S POS=PTS\2
"RTN","HMPENSZ",172,0)
 S I=0
"RTN","HMPENSZ",173,0)
 S CNT=0 F  S CNT=$O(^TMP($J,TAG,"COUNT",CNT)) Q:'CNT  D  Q:I'<POS
"RTN","HMPENSZ",174,0)
 . S PT=0 F  S PT=$O(^TMP($J,TAG,"COUNT",CNT,PT)) Q:'PT  S I=I+1 Q:I'<POS
"RTN","HMPENSZ",175,0)
 D ADDPTS(TAG,"MEDIAN",CNT)
"RTN","HMPENSZ",176,0)
 ;
"RTN","HMPENSZ",177,0)
 N HIGH,MODE S HIGH=0,MODE=0,CNT=0
"RTN","HMPENSZ",178,0)
 F  S CNT=+$O(^TMP($J,TAG,"COUNT",CNT)) Q:'CNT  D
"RTN","HMPENSZ",179,0)
 . I ^TMP($J,TAG,"FREQ",CNT)>HIGH S HIGH=^(CNT),MODE=CNT
"RTN","HMPENSZ",180,0)
 D ADDPTS(TAG,"MODE",MODE)
"RTN","HMPENSZ",181,0)
 ;
"RTN","HMPENSZ",182,0)
 D MINPTS(TAG)
"RTN","HMPENSZ",183,0)
 ;
"RTN","HMPENSZ",184,0)
 K ^TMP($J,TAG,"COUNT") ; release space
"RTN","HMPENSZ",185,0)
 ;S CNT=0 F  S CNT=$O(^TMP($J,TAG,"FREQ",CNT)) Q:'CNT  W !,CNT_"="_^(CNT)
"RTN","HMPENSZ",186,0)
 ;
"RTN","HMPENSZ",187,0)
 Q
"RTN","HMPENSZ",188,0)
ADDPTS(TAG,STAT,CNT) ; add patients that represent this measurement
"RTN","HMPENSZ",189,0)
 S ^TMP($J,TAG,"STATS",STAT)=CNT
"RTN","HMPENSZ",190,0)
 Q:CNT=""
"RTN","HMPENSZ",191,0)
 N PT,TOTPT,MAXPT
"RTN","HMPENSZ",192,0)
 S TOTPT=0,MAXPT=5
"RTN","HMPENSZ",193,0)
 S PT="" ; since we are reverse ordering...
"RTN","HMPENSZ",194,0)
 F  S PT=$O(^TMP($J,TAG,"COUNT",CNT,PT),-1) Q:'PT  D  Q:TOTPT'<MAXPT
"RTN","HMPENSZ",195,0)
 . S TOTPT=TOTPT+1
"RTN","HMPENSZ",196,0)
 . S ^TMP($J,TAG,"STATS",STAT,TOTPT)=$P(^DPT(PT,0),"^")_"^"_PT
"RTN","HMPENSZ",197,0)
 Q
"RTN","HMPENSZ",198,0)
MINPTS(TAG) ; store the top 10 patients with the highest counts
"RTN","HMPENSZ",199,0)
 N PT,TOTPT,MAXPT
"RTN","HMPENSZ",200,0)
 S CNT=0,TOTPT=0,MAXPT=10
"RTN","HMPENSZ",201,0)
 F  S CNT=$O(^TMP($J,TAG,"COUNT",CNT)) Q:'CNT  D  Q:TOTPT'<MAXPT
"RTN","HMPENSZ",202,0)
 .I $G(^TMP($J,TAG,"STATS","MIN"))="" S ^TMP($J,TAG,"STATS","MIN")=CNT
"RTN","HMPENSZ",203,0)
 . S PT=0 F  S PT=$O(^TMP($J,TAG,"COUNT",CNT,PT)) Q:'PT  D  Q:TOTPT'<MAXPT
"RTN","HMPENSZ",204,0)
 . . S TOTPT=TOTPT+1
"RTN","HMPENSZ",205,0)
 . . S ^TMP($J,TAG,"STATS","MIN",TOTPT)=$P(^DPT(PT,0),"^")_"^"_PT_"^"_CNT
"RTN","HMPENSZ",206,0)
 I $G(^TMP($J,TAG,"STATS","MIN"))="" S ^TMP($J,TAG,"STATS","MIN")=0
"RTN","HMPENSZ",207,0)
 Q
"RTN","HMPENSZ",208,0)
MAXPTS(TAG,CNT) ; store the top 10 patients with the highest counts
"RTN","HMPENSZ",209,0)
 S ^TMP($J,TAG,"STATS","MAX")=CNT
"RTN","HMPENSZ",210,0)
 N PT,TOTPT,MAXPT
"RTN","HMPENSZ",211,0)
 S CNT=CNT+1,TOTPT=0,MAXPT=10
"RTN","HMPENSZ",212,0)
 F  S CNT=$O(^TMP($J,TAG,"COUNT",CNT),-1) Q:'CNT  D  Q:TOTPT'<MAXPT
"RTN","HMPENSZ",213,0)
 . S PT=0 F  S PT=$O(^TMP($J,TAG,"COUNT",CNT,PT)) Q:'PT  D  Q:TOTPT'<MAXPT
"RTN","HMPENSZ",214,0)
 . . S TOTPT=TOTPT+1
"RTN","HMPENSZ",215,0)
 . . S ^TMP($J,TAG,"STATS","MAX",TOTPT)=$P(^DPT(PT,0),"^")_"^"_PT_"^"_CNT
"RTN","HMPENSZ",216,0)
 Q
"RTN","HMPENSZ",217,0)
SAVE(TAG) ; save the TAG measurements in ^XTMP
"RTN","HMPENSZ",218,0)
 S ^XTMP("HMPENSZ-DOMAINS",0)=$$FMADD^XLFDT(DT,30)_U_DT
"RTN","HMPENSZ",219,0)
 K ^XTMP("HMPENSZ-DOMAINS",TAG)
"RTN","HMPENSZ",220,0)
 M ^XTMP("HMPENSZ-DOMAINS",TAG,"FREQ")=^TMP($J,TAG,"FREQ")
"RTN","HMPENSZ",221,0)
 M ^XTMP("HMPENSZ-DOMAINS",TAG,"STATS")=^TMP($J,TAG,"STATS")
"RTN","HMPENSZ",222,0)
 Q
"RTN","HMPENSZ",223,0)
SHOW(TAG) ; show information about sizes
"RTN","HMPENSZ",224,0)
 N STATS M STATS=^TMP($J,TAG,"STATS")
"RTN","HMPENSZ",225,0)
 N DOMAIN S DOMAIN=$$DOMNAME(TAG)
"RTN","HMPENSZ",226,0)
 W !!,DOMAIN,", Patients Searched: ",STATS("TotalPatients")
"RTN","HMPENSZ",227,0)
 W "    Total Records: ",STATS("TotalRecords"),"  "
"RTN","HMPENSZ",228,0)
 N I F I=$X:1:76 W "-"
"RTN","HMPENSZ",229,0)
 W !!,DOMAIN," Maximum (top ten):  ",STATS("MAX") D LSTPT(TAG,"MAX")
"RTN","HMPENSZ",230,0)
 W !!,DOMAIN," Mean (average):  ",STATS("MEAN") D LSTPT(TAG,"MEAN")
"RTN","HMPENSZ",231,0)
 W !!,DOMAIN," Median (middle):  ",STATS("MEDIAN") D LSTPT(TAG,"MEDIAN")
"RTN","HMPENSZ",232,0)
 W !!,DOMAIN," Mode (most common):  ",STATS("MODE") D LSTPT(TAG,"MODE")
"RTN","HMPENSZ",233,0)
 W !!,DOMAIN," Smallest (top ten):  ",STATS("MIN") D LSTPT(TAG,"MIN")
"RTN","HMPENSZ",234,0)
 Q
"RTN","HMPENSZ",235,0)
LSTPT(TAG,STAT) ; list sample patients matching criteria
"RTN","HMPENSZ",236,0)
 N I,X,CNT S CNT=0
"RTN","HMPENSZ",237,0)
 S I=0 F  S I=$O(^TMP($J,TAG,"STATS",STAT,I)) Q:'I  D
"RTN","HMPENSZ",238,0)
 . S X=^TMP($J,TAG,"STATS",STAT,I),CNT=CNT+1
"RTN","HMPENSZ",239,0)
 . W !,?2,$P(X,"^"),?44,$P(X,"^",2)
"RTN","HMPENSZ",240,0)
 . I $P(X,"^",3) W ?62,$P(X,"^",3)," records"
"RTN","HMPENSZ",241,0)
 Q
"RTN","HMPENSZ",242,0)
DOMNAME(TAG) ; return full TAG name given tag
"RTN","HMPENSZ",243,0)
 N X,NAME
"RTN","HMPENSZ",244,0)
 S X=$T(@(TAG_"^HMPENSZ")),NAME=$E(X,$F(X,"@name "),$L(X))
"RTN","HMPENSZ",245,0)
 Q NAME
"RTN","HMPENSZ",246,0)
 ;
"RTN","HMPENSZ",247,0)
VTYPES ; dump visit types
"RTN","HMPENSZ",248,0)
 S DFN=0 F  S DFN=$O(^AUPNVSIT("C",DFN)) Q:'DFN  D
"RTN","HMPENSZ",249,0)
 . S DA=0 F  S DA=$O(^AUPNVSIT("C",DFN,DA)) Q:'DA  D
"RTN","HMPENSZ",250,0)
 .. W !,DFN,?10,$P(^AUPNVSIT(DA,0),"^",7)
"RTN","HMPENSZ",251,0)
 Q
"RTN","HMPENSZ",252,0)
TCOMP ; test compilation
"RTN","HMPENSZ",253,0)
 W !,"This compiles on VDEV"
"RTN","HMPENSZ",254,0)
 Q
"RTN","HMPENSZ",255,0)
MDC(PT) ; Observations in clio for a pt.
"RTN","HMPENSZ",256,0)
 ; Run the PT XREF on the OBS file (704.117)
"RTN","HMPENSZ",257,0)
 N CNT,OBSDT,OBSIFN S OBSDT="",OBSIFN="",CNT=0
"RTN","HMPENSZ",258,0)
 F  S OBSDT=$O(^MDC(704.117,"PT",PT,OBSDT)) Q:OBSDT=""  D
"RTN","HMPENSZ",259,0)
 .F  S OBSIFN=$O(^MDC(704.117,"PT",PT,OBSDT,OBSIFN)) Q:OBSIFN=""  D
"RTN","HMPENSZ",260,0)
 ..S CNT=CNT+1
"RTN","HMPENSZ",261,0)
 Q CNT
"RTN","HMPENSZ1")
0^82^B10674596
"RTN","HMPENSZ1",1,0)
HMPENSZ1 ;SLC/KCM - Measure data sizes
"RTN","HMPENSZ1",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPENSZ1",3,0)
 ;
"RTN","HMPENSZ1",4,0)
DOMAINS(LST) ; RPC - list of domains for which sizing information is available
"RTN","HMPENSZ1",5,0)
 N I,X,TAG,NAME
"RTN","HMPENSZ1",6,0)
 S LST=1,LST(LST)="<domains>"
"RTN","HMPENSZ1",7,0)
 F I=2:1 S X=$T(@("+"_I_"^HMPENSZ")) Q:'$L(X)  I (X?1.7U1" ;".E),(X["@name ") D
"RTN","HMPENSZ1",8,0)
 . S TAG=$P(X," ") S NAME=$E(X,$F(X,"@name "),$L(X))
"RTN","HMPENSZ1",9,0)
 . S LST=LST+1,LST(LST)="<domain tag='"_TAG_"'>"_NAME_"</domain>"
"RTN","HMPENSZ1",10,0)
 S LST=LST+1,LST(LST)="</domains>"
"RTN","HMPENSZ1",11,0)
 Q
"RTN","HMPENSZ1",12,0)
STATS(LST,TAG) ; RPC - list stats, patients, & raw data for a domain
"RTN","HMPENSZ1",13,0)
 N X,STATS,FREQ,DOMAIN
"RTN","HMPENSZ1",14,0)
 S X=$T(@(TAG_"^HMPENSZ"))
"RTN","HMPENSZ1",15,0)
 S DOMAIN=$E(X,$F(X,"@name "),$L(X))
"RTN","HMPENSZ1",16,0)
 S TYPE=$P(X,"@type ",2),TYPE=$P(TYPE," ")
"RTN","HMPENSZ1",17,0)
 S LST=0
"RTN","HMPENSZ1",18,0)
 I '$D(^XTMP("HMPENSZ-DOMAINS",TAG)) D ERRMSG(DOMAIN_"("_TAG_") size measurements unavailable.") Q
"RTN","HMPENSZ1",19,0)
 ;
"RTN","HMPENSZ1",20,0)
 M STATS=^XTMP("HMPENSZ-DOMAINS",TAG,"STATS")
"RTN","HMPENSZ1",21,0)
 ; M FREQ=^XTMP("HMPENSZ-DOMAINS",TAG,"FREQ") - DON'T NEED THIS... 
"RTN","HMPENSZ1",22,0)
 ;
"RTN","HMPENSZ1",23,0)
 S X="<stats domain='"_DOMAIN_"' tag='"_TAG_"' type='"_TYPE_"' "
"RTN","HMPENSZ1",24,0)
 S X=X_"patients='"_STATS("TotalPatients")_"' "
"RTN","HMPENSZ1",25,0)
 S X=X_"records='"_STATS("TotalRecords")_"' >"
"RTN","HMPENSZ1",26,0)
 S LST=LST+1,LST(LST)=X
"RTN","HMPENSZ1",27,0)
 ;
"RTN","HMPENSZ1",28,0)
 S LST=LST+1,LST(LST)="<mean value='"_STATS("MEAN")_"' >"
"RTN","HMPENSZ1",29,0)
 D PTS2XML("MEAN")
"RTN","HMPENSZ1",30,0)
 S LST=LST+1,LST(LST)="</mean>"
"RTN","HMPENSZ1",31,0)
 ;
"RTN","HMPENSZ1",32,0)
 S LST=LST+1,LST(LST)="<median value='"_STATS("MEDIAN")_"' >"
"RTN","HMPENSZ1",33,0)
 D PTS2XML("MEDIAN")
"RTN","HMPENSZ1",34,0)
 S LST=LST+1,LST(LST)="</median>"
"RTN","HMPENSZ1",35,0)
 ;
"RTN","HMPENSZ1",36,0)
 S LST=LST+1,LST(LST)="<mode value='"_STATS("MODE")_"' >"
"RTN","HMPENSZ1",37,0)
 D PTS2XML("MODE")
"RTN","HMPENSZ1",38,0)
 S LST=LST+1,LST(LST)="</mode>"
"RTN","HMPENSZ1",39,0)
 ;
"RTN","HMPENSZ1",40,0)
 S LST=LST+1,LST(LST)="<max value='"_STATS("MAX")_"' >"
"RTN","HMPENSZ1",41,0)
 D PTS2XML("MAX")
"RTN","HMPENSZ1",42,0)
 S LST=LST+1,LST(LST)="</max>"
"RTN","HMPENSZ1",43,0)
 ;
"RTN","HMPENSZ1",44,0)
 D FREQ
"RTN","HMPENSZ1",45,0)
 S LST=LST+1,LST(LST)="</stats>"
"RTN","HMPENSZ1",46,0)
 Q
"RTN","HMPENSZ1",47,0)
PTS2XML(STAT) ; add patients to the return XML
"RTN","HMPENSZ1",48,0)
 ; expects: LST, STATS
"RTN","HMPENSZ1",49,0)
 ; <patient dfn=4323423 count=342234 icn=3424324243>doe,john</patient>
"RTN","HMPENSZ1",50,0)
 N I,X,NM,DFN,CNT,ICN
"RTN","HMPENSZ1",51,0)
 S I=0 F  S I=$O(STATS(STAT,I)) Q:'I  D
"RTN","HMPENSZ1",52,0)
 . S X=STATS(STAT,I)
"RTN","HMPENSZ1",53,0)
 . S NM=$P(X,U),DFN=$P(X,U,2),CNT=$P(X,U,3)
"RTN","HMPENSZ1",54,0)
 . S ICN=$$GETICN^MPIF001(DFN) S:+ICN<0 ICN=""
"RTN","HMPENSZ1",55,0)
 . S LST=LST+1
"RTN","HMPENSZ1",56,0)
 . S LST(LST)="<patient dfn='"_DFN_"' count='"_CNT_"' icn='"_ICN_"' >"_NM_"</patient>"
"RTN","HMPENSZ1",57,0)
 Q
"RTN","HMPENSZ1",58,0)
FREQ ; add RecordCount=PatientCount strings
"RTN","HMPENSZ1",59,0)
 N X,I
"RTN","HMPENSZ1",60,0)
 S LST=LST+1,LST(LST)="<recordCount>"
"RTN","HMPENSZ1",61,0)
 S X="",I=0 F  S I=$O(^XTMP("HMPENSZ-DOMAINS",TAG,"FREQ",I)) Q:'I  D
"RTN","HMPENSZ1",62,0)
 . S X=X_I_"," I $L(X)>72 S LST=LST+1,LST(LST)=X,X=""
"RTN","HMPENSZ1",63,0)
 I $L(X) S LST=LST+1,LST(LST)=X
"RTN","HMPENSZ1",64,0)
 D NOCOMMA
"RTN","HMPENSZ1",65,0)
 S LST=LST+1,LST(LST)="</recordCount>"
"RTN","HMPENSZ1",66,0)
 ; 
"RTN","HMPENSZ1",67,0)
 S LST=LST+1,LST(LST)="<patientCount>"
"RTN","HMPENSZ1",68,0)
 S X="",I=0 F  S I=$O(^XTMP("HMPENSZ-DOMAINS",TAG,"FREQ",I)) Q:'I  D
"RTN","HMPENSZ1",69,0)
 . S X=X_^XTMP("HMPENSZ-DOMAINS",TAG,"FREQ",I)_","
"RTN","HMPENSZ1",70,0)
 . I $L(X)>72 S LST=LST+1,LST(LST)=X,X=""
"RTN","HMPENSZ1",71,0)
 I $L(X) S LST=LST+1,LST(LST)=X
"RTN","HMPENSZ1",72,0)
 D NOCOMMA
"RTN","HMPENSZ1",73,0)
 S LST=LST+1,LST(LST)="</patientCount>"
"RTN","HMPENSZ1",74,0)
 Q
"RTN","HMPENSZ1",75,0)
NOCOMMA ;
"RTN","HMPENSZ1",76,0)
 I $E(LST(LST),$L(LST(LST)))="," S LST(LST)=$E(LST(LST),1,$L(LST(LST))-1)
"RTN","HMPENSZ1",77,0)
 Q
"RTN","HMPENSZ1",78,0)
ERRMSG(X) ; build error message
"RTN","HMPENSZ1",79,0)
 S LST=LST+1,LST(LST)="<error msg='"_X_"' />"
"RTN","HMPENSZ1",80,0)
 Q
"RTN","HMPENSZ1",81,0)
CF ; Count frequencies
"RTN","HMPENSZ1",82,0)
 S DOM="" F  S DOM=$O(^XTMP("HMPENSZ-DOMAINS",DOM)) Q:DOM=""  D
"RTN","HMPENSZ1",83,0)
 . S (I,T)=0 F  S I=$O(^XTMP("HMPENSZ-DOMAINS",DOM,"FREQ",I)) Q:'I  S T=T+1
"RTN","HMPENSZ1",84,0)
 . W !,DOM,"=",T
"RTN","HMPENSZ1",85,0)
 Q
"RTN","HMPEQ")
0^83^B26873326
"RTN","HMPEQ",1,0)
HMPEQ ;SLC/MJK -- HMP Freshness Utilities ; 02-JUL-2014
"RTN","HMPEQ",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPEQ",3,0)
 ;
"RTN","HMPEQ",4,0)
 Q
"RTN","HMPEQ",5,0)
 ;
"RTN","HMPEQ",6,0)
EN ; -- go to event queue viewer (convenience tag)
"RTN","HMPEQ",7,0)
 D EN^HMPEQLM
"RTN","HMPEQ",8,0)
 Q
"RTN","HMPEQ",9,0)
 ;
"RTN","HMPEQ",10,0)
EVTS(DATA,PARAMS) ; -- return events for server's last stream in inverse sequence # order
"RTN","HMPEQ",11,0)
 ; input: PARAMS("server") := ien of 800000
"RTN","HMPEQ",12,0)
 ;               "filter") := event state filter [ P:processed | W:waiting ]
"RTN","HMPEQ",13,0)
 ;               "domain") := domain of interest or "ALL'
"RTN","HMPEQ",14,0)
 ;                  "dfn") := dfn of desired patient
"RTN","HMPEQ",15,0)
 ;                  "max") := max number events to return
"RTN","HMPEQ",16,0)
 ;
"RTN","HMPEQ",17,0)
 ; output: @DATA@("stream") := name of stream for server
"RTN","HMPEQ",18,0)
 ;                 "count") := number of events returned
"RTN","HMPEQ",19,0)
 ; "events",<n>,"sequence") := sequence # / node in stream for event
"RTN","HMPEQ",20,0)
 ;     "events",<n>,"node") := event node for sequence
"RTN","HMPEQ",21,0)
 ;
"RTN","HMPEQ",22,0)
 N STREAM,DOMAIN,FILTER,PAT,SEQ,MAX,CNT,X
"RTN","HMPEQ",23,0)
 S STREAM=$$LSTREAM^HMPDJFSM(+$G(PARAMS("server")))
"RTN","HMPEQ",24,0)
 S DOMAIN=$G(PARAMS("domain"))
"RTN","HMPEQ",25,0)
 S FILTER=$G(PARAMS("filter"))
"RTN","HMPEQ",26,0)
 S PAT=+$G(PARAMS("dfn"))
"RTN","HMPEQ",27,0)
 S MAX=$G(PARAMS("max"),10)
"RTN","HMPEQ",28,0)
 S CNT=0
"RTN","HMPEQ",29,0)
 S SEQ=" "
"RTN","HMPEQ",30,0)
 F  S SEQ=$O(^XTMP(STREAM,SEQ),-1) Q:'SEQ  S X=^(SEQ) D  Q:CNT=MAX
"RTN","HMPEQ",31,0)
 . I DOMAIN'="ALL",DOMAIN'=$P(X,"^",2) Q
"RTN","HMPEQ",32,0)
 . ; quit if waiting and want processed
"RTN","HMPEQ",33,0)
 . I FILTER["P",'$P(X,"^",6) Q
"RTN","HMPEQ",34,0)
 . ; quit if processed and want waiting
"RTN","HMPEQ",35,0)
 . I FILTER["W",'$P(X,"^",6) Q
"RTN","HMPEQ",36,0)
 . ; quit if not patient desired
"RTN","HMPEQ",37,0)
 . I PAT,PAT'=+X Q
"RTN","HMPEQ",38,0)
 . S CNT=CNT+1
"RTN","HMPEQ",39,0)
 . S @DATA@("events",CNT,"sequence")=SEQ
"RTN","HMPEQ",40,0)
 . S @DATA@("events",CNT,"node")=X
"RTN","HMPEQ",41,0)
 ;
"RTN","HMPEQ",42,0)
 S @DATA@("stream")=STREAM
"RTN","HMPEQ",43,0)
 S @DATA@("count")=CNT
"RTN","HMPEQ",44,0)
 Q
"RTN","HMPEQ",45,0)
 ;
"RTN","HMPEQ",46,0)
GETEVTS(RET,PARAMS) ; -- get events for server's last stream in inverse sequence # order
"RTN","HMPEQ",47,0)
 ; RPC: HMPM EVT QUE GET EVTS (future)
"RTN","HMPEQ",48,0)
 N HMPDATA,HMPERR
"RTN","HMPEQ",49,0)
 S HMPDATA=$NA(^TMP("HMPM EVT QUE GET EVTS",$J))
"RTN","HMPEQ",50,0)
 K @HMPDATA
"RTN","HMPEQ",51,0)
 D EVTS(HMPDATA,.PARAMS)
"RTN","HMPEQ",52,0)
 D ENCODE^HMPJSON(HMPDATA,RET,"HMPERR")
"RTN","HMPEQ",53,0)
 K @HMPDATA
"RTN","HMPEQ",54,0)
 Q
"RTN","HMPEQ",55,0)
 ;
"RTN","HMPEQ",56,0)
SRVS(DATA) ; -- loop thru & sort by server names and return summary freshness queue info for each
"RTN","HMPEQ",57,0)
 ; output:        @DATA@("servers",<n>,"name")      := server name
"RTN","HMPEQ",58,0)
 ;                       "server",<n>,"lastUpdate") := date server last updated
"RTN","HMPEQ",59,0)
 ;                       "server",<n>,"repeated")   := how many times updated
"RTN","HMPEQ",60,0)
 ;                       "server",<n>,"stream")     := stream name
"RTN","HMPEQ",61,0)
 ;                       "server",<n>,"queueEnd")   := current end of queue
"RTN","HMPEQ",62,0)
 ;         "server",<n>,"extracts",<n>,"domain")    := domain name
"RTN","HMPEQ",63,0)
 ;         "server",<n>,"extracts",<n>,"tasks")     := tasks waiting to be processed
"RTN","HMPEQ",64,0)
 ;         "server",<n>,"extracts",<n>,"waiting")   := how many seconds waiting
"RTN","HMPEQ",65,0)
 ;         "server",<n>,"extracts",<n>,"lastCount") := last count retrieved or <finished>
"RTN","HMPEQ",66,0)
 ;
"RTN","HMPEQ",67,0)
 N HMPSRVNM,HMPCNT,IEN
"RTN","HMPEQ",68,0)
 S HMPSRVNM=""
"RTN","HMPEQ",69,0)
 S HMPCNT=0
"RTN","HMPEQ",70,0)
 F  S HMPSRVNM=$O(^HMP(800000,"B",HMPSRVNM)) Q:HMPSRVNM=""  S IEN=$O(^(HMPSRVNM,"")) D
"RTN","HMPEQ",71,0)
 . S HMPCNT=HMPCNT+1
"RTN","HMPEQ",72,0)
 . D SRV($NA(@DATA@("servers",HMPCNT)),IEN)
"RTN","HMPEQ",73,0)
 Q
"RTN","HMPEQ",74,0)
 ;
"RTN","HMPEQ",75,0)
SRV(DATA,SRV) ; -- process one server
"RTN","HMPEQ",76,0)
 N X0,ROOT,BATCH,STREAM,SRVNM,TASK,TASKS,ENDQ,EXTRACT,CNT
"RTN","HMPEQ",77,0)
 S X0=$G(^HMP(800000,SRV,0))
"RTN","HMPEQ",78,0)
 Q:X0=""
"RTN","HMPEQ",79,0)
 S SRVNM=$P(X0,"^")
"RTN","HMPEQ",80,0)
 S @DATA@("name")=$P(X0,"^")
"RTN","HMPEQ",81,0)
 S @DATA@("lastUpdate")=$P(X0,"^",2)
"RTN","HMPEQ",82,0)
 S @DATA@("repeated")=$P(X0,"^",4)
"RTN","HMPEQ",83,0)
 S STREAM=$$LSTREAM^HMPDJFSM(SRV)
"RTN","HMPEQ",84,0)
 S @DATA@("stream")=STREAM
"RTN","HMPEQ",85,0)
 S @DATA@("queueEnd")=$S($D(^XTMP(STREAM)):$P(STREAM,"~",3)_"-"_$G(^XTMP(STREAM,"last")),1:"")
"RTN","HMPEQ",86,0)
 ;
"RTN","HMPEQ",87,0)
 ; -- loop thru extracts for this server
"RTN","HMPEQ",88,0)
 S ROOT="HMPFX~"_SRVNM_"~"
"RTN","HMPEQ",89,0)
 S BATCH=ROOT
"RTN","HMPEQ",90,0)
 S CNT=0
"RTN","HMPEQ",91,0)
 F  S BATCH=$O(^XTMP(BATCH)) Q:$E(BATCH,1,$L(ROOT))'=ROOT  D
"RTN","HMPEQ",92,0)
 . S CNT=CNT+1
"RTN","HMPEQ",93,0)
 . S @DATA@("extracts",CNT,"domain")=$P(BATCH,"~",3)
"RTN","HMPEQ",94,0)
 . S TASK=0,TASKS=""
"RTN","HMPEQ",95,0)
 . F  S TASK=$O(^XTMP(BATCH,0,"task",TASK)) Q:'TASK  S TASKS=TASKS_$S($L(TASKS):",",1:"")_TASK
"RTN","HMPEQ",96,0)
 . S @DATA@("extracts",CNT,"tasks")=TASKS
"RTN","HMPEQ",97,0)
 . I '$D(^XTMP(BATCH,0,"wait")) S @DATA@("extracts",CNT,"waiting")=$$WAIT^HMPDJFSM(BATCH) Q
"RTN","HMPEQ",98,0)
 . S @DATA@("extracts",CNT,"lastCount")=$$LOBJ^HMPDJFSM(BATCH,TASK)
"RTN","HMPEQ",99,0)
 Q
"RTN","HMPEQ",100,0)
 ;
"RTN","HMPEQ",101,0)
GETSRVS(RET) ; -- get summary freshness event queue info for all servers
"RTN","HMPEQ",102,0)
 ; RPC: HMPM EVT QUE GET SVRS (future)
"RTN","HMPEQ",103,0)
 N HMPDATA,HMPERR
"RTN","HMPEQ",104,0)
 S HMPDATA=$NA(^TMP("HMPM EVT QUE GET SVRS",$J))
"RTN","HMPEQ",105,0)
 K @HMPDATA
"RTN","HMPEQ",106,0)
 D SRVS(HMPDATA)
"RTN","HMPEQ",107,0)
 D ENCODE^HMPJSON(HMPDATA,RET,"HMPERR")
"RTN","HMPEQ",108,0)
 K @HMPDATA
"RTN","HMPEQ",109,0)
 Q
"RTN","HMPEQ",110,0)
 ;
"RTN","HMPEQ",111,0)
GLBS(DATA) ; -- return summary info on HMP related temp globals
"RTN","HMPEQ",112,0)
 ; output: @HMPDATA@(    "xtmpNodes",<n>,"server")     := server name
"RTN","HMPEQ",113,0)
 ;                       "xtmpNodes",<n>,"rootNode")   := ^XTMP root node for server/stream
"RTN","HMPEQ",114,0)
 ;                       "xtmpNodes",<n>,"lastNode")   := last sequence in root structure
"RTN","HMPEQ",115,0)
 ;
"RTN","HMPEQ",116,0)
 ;                       "tmpJobNodes",<n>,"rootNode") := root ^TMP("HMP*",$J) node
"RTN","HMPEQ",117,0)
 ;                       "tmpJobNodes",<n>,"lastNode") := last sequence in root structure
"RTN","HMPEQ",118,0)
 ;
"RTN","HMPEQ",119,0)
 ;                       "jobTmpNodes",<n>,"rootNode") := root ^TMP($J,"HMP*") node
"RTN","HMPEQ",120,0)
 ;                       "jobTmpNodes",<n>,"lastNode") := last sequence in root structure
"RTN","HMPEQ",121,0)
 ;
"RTN","HMPEQ",122,0)
 N HMPX,CNT,J,Y,RNODE
"RTN","HMPEQ",123,0)
 S HMPX="VPQ~"
"RTN","HMPEQ",124,0)
 S CNT=0
"RTN","HMPEQ",125,0)
 F  S HMPX=$O(^XTMP(HMPX)) Q:$E(HMPX,1,3)'="HMP"  D
"RTN","HMPEQ",126,0)
 . S CNT=CNT+1
"RTN","HMPEQ",127,0)
 . S @DATA@("xtmpNodes",CNT,"server")=$P(HMPX,"~",2)
"RTN","HMPEQ",128,0)
 . S @DATA@("xtmpNodes",CNT,"rootNode")="^XTMP("""_HMPX_""")"
"RTN","HMPEQ",129,0)
 . S Y=$O(^XTMP(HMPX," "),-1)
"RTN","HMPEQ",130,0)
 . S:'$L(Y) Y=$O(^XTMP(HMPX,""),-1)
"RTN","HMPEQ",131,0)
 . S @DATA@("xtmpNodes",CNT,"lastNode")=Y
"RTN","HMPEQ",132,0)
 ;
"RTN","HMPEQ",133,0)
 S HMPX="VPQ~"
"RTN","HMPEQ",134,0)
 S CNT=0
"RTN","HMPEQ",135,0)
 F  S HMPX=$O(^TMP(HMPX)) Q:$E(HMPX,1,3)'="HMP"  D
"RTN","HMPEQ",136,0)
 . S J=0
"RTN","HMPEQ",137,0)
 . F  S J=$O(^TMP(HMPX,J)) Q:'J  D
"RTN","HMPEQ",138,0)
 . . ; -- don't include this report's ^TMP
"RTN","HMPEQ",139,0)
 . . S RNODE="^TMP("""_HMPX_""","_J_")"
"RTN","HMPEQ",140,0)
 . . I RNODE=DATA,J=$J Q
"RTN","HMPEQ",141,0)
 . . S CNT=CNT+1
"RTN","HMPEQ",142,0)
 . . S @DATA@("tmpJobNodes",CNT,"rootNode")=RNODE
"RTN","HMPEQ",143,0)
 . . S Y=$O(^TMP(HMPX,J," "),-1)
"RTN","HMPEQ",144,0)
 . . S:'$L(Y) Y=$O(^TMP(HMPX,J,""),-1)
"RTN","HMPEQ",145,0)
 . . S @DATA@("tmpJobNodes",CNT,"lastNode")=Y
"RTN","HMPEQ",146,0)
 ;
"RTN","HMPEQ",147,0)
 S (J,CNT)=0
"RTN","HMPEQ",148,0)
 F  S J=$O(^TMP(J)) Q:'J  D
"RTN","HMPEQ",149,0)
 . S HMPX="VPQ~"
"RTN","HMPEQ",150,0)
 . F  S HMPX=$O(^TMP(J,HMPX)) Q:$E(HMPX,1,3)'="HMP"  D
"RTN","HMPEQ",151,0)
 . . S CNT=CNT+1
"RTN","HMPEQ",152,0)
 . . S @DATA@("jobTmpNodes",CNT,"rootNode")="^TMP("_J_","""_HMPX_""")"
"RTN","HMPEQ",153,0)
 . . S Y=$O(^TMP(J,HMPX," "),-1)
"RTN","HMPEQ",154,0)
 . . S:'$L(Y) Y=$O(^TMP(J,HMPX,""),-1)
"RTN","HMPEQ",155,0)
 . . S @DATA@("jobTmpNodes",CNT,"lastNode")=Y
"RTN","HMPEQ",156,0)
 ;
"RTN","HMPEQ",157,0)
 Q
"RTN","HMPEQ",158,0)
 ;
"RTN","HMPEQ",159,0)
GETGLBS(RET) ; -- get summary info on HMP related temp globals
"RTN","HMPEQ",160,0)
 ; RPC: HMPM EVT QUE GET GLBS (future)
"RTN","HMPEQ",161,0)
 N HMPDATA,HMPERR
"RTN","HMPEQ",162,0)
 S HMPDATA=$NA(^TMP("HMPM EVT QUE GET GLBS",$J))
"RTN","HMPEQ",163,0)
 K @HMPDATA
"RTN","HMPEQ",164,0)
 D GLBS(HMPDATA)
"RTN","HMPEQ",165,0)
 D ENCODE^HMPJSON(HMPDATA,RET,"HMPERR")
"RTN","HMPEQ",166,0)
 K @HMPDATA
"RTN","HMPEQ",167,0)
 Q
"RTN","HMPEQ",168,0)
 ;
"RTN","HMPEQ",169,0)
NOROWS(MSG) ; -- add standard text lines to indicate no rows to display
"RTN","HMPEQ",170,0)
 S VALMCNT=1
"RTN","HMPEQ",171,0)
 S @VALMAR@(VALMCNT,0)=""
"RTN","HMPEQ",172,0)
 S VALMCNT=2
"RTN","HMPEQ",173,0)
 S @VALMAR@(VALMCNT,0)="     o  "_MSG
"RTN","HMPEQ",174,0)
 D CNTRL^VALM10(VALMCNT,2,78,IOINHI,IOINORM)
"RTN","HMPEQ",175,0)
 Q
"RTN","HMPEQ",176,0)
 ;
"RTN","HMPEQLM")
0^84^B111474303
"RTN","HMPEQLM",1,0)
HMPEQLM ;SLC/MJK -- Event Queue Manager ; 30-JUN-2014
"RTN","HMPEQLM",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPEQLM",3,0)
 ;
"RTN","HMPEQLM",4,0)
 Q
"RTN","HMPEQLM",5,0)
 ;
"RTN","HMPEQLM",6,0)
EN ; -- main entry point for HMPM EVT QUE MGR
"RTN","HMPEQLM",7,0)
 N HMPSRV,HMPCSTRM,HMPDOM,HMPFIL,HMPWAIT,HMPDFN,HMPLIM
"RTN","HMPEQLM",8,0)
 ;
"RTN","HMPEQLM",9,0)
 D DFLTS
"RTN","HMPEQLM",10,0)
 ;
"RTN","HMPEQLM",11,0)
 S HMPSRV=$$GETSRV($G(HMPSRV))
"RTN","HMPEQLM",12,0)
 Q:$G(HMPSRV)<1
"RTN","HMPEQLM",13,0)
 ;
"RTN","HMPEQLM",14,0)
 S:$G(HMPDOM)="" HMPDOM="ALL"
"RTN","HMPEQLM",15,0)
 S:$G(HMPFIL)="" HMPFIL="A"
"RTN","HMPEQLM",16,0)
 D EN^VALM("HMPM EVT QUE MGR")
"RTN","HMPEQLM",17,0)
 Q
"RTN","HMPEQLM",18,0)
 ;
"RTN","HMPEQLM",19,0)
HDR ; -- header code
"RTN","HMPEQLM",20,0)
 N X,SRV0,SRVNM,LASTUP,REPEAT,FILLER
"RTN","HMPEQLM",21,0)
 S $P(FILLER," ",80)=" "
"RTN","HMPEQLM",22,0)
 S SRV0=$G(^HMP(800000,+$G(HMPSRV),0))
"RTN","HMPEQLM",23,0)
 S SRVNM=$P(SRV0,"^"),LASTUP=$P(SRV0,"^",2),REPEAT=$P(SRV0,"^",4)
"RTN","HMPEQLM",24,0)
 S X="       Server: "_SRVNM_$E(FILLER,1,30-$L(SRVNM))_"Last Update: "_LASTUP
"RTN","HMPEQLM",25,0)
 S:REPEAT X=X_" x"_REPEAT
"RTN","HMPEQLM",26,0)
 S VALMHDR(1)=X
"RTN","HMPEQLM",27,0)
 S X=$E(FILLER,1,44)_"End of Queue: "
"RTN","HMPEQLM",28,0)
 S X=X_$S(HMPCSTRM]"":$P(HMPCSTRM,"~",3)_"-"_$G(^XTMP(HMPCSTRM,"last")),1:"n/a")
"RTN","HMPEQLM",29,0)
 S VALMHDR(2)=X
"RTN","HMPEQLM",30,0)
 S VALMHDR(3)="  Last Stream: "_HMPCSTRM
"RTN","HMPEQLM",31,0)
 S X="Event Filters: "
"RTN","HMPEQLM",32,0)
 S X=X_"State="_$S(HMPFIL="A":"All",HMPFIL="W":"Waiting",1:"Processed")
"RTN","HMPEQLM",33,0)
 S X=X_"   Domain="_HMPDOM_$S(HMPDOM="ALL"!(HMPDOM["sync"):"",1:$S($G(^XTMP("HMP-off",HMPDOM)):" (stopped)",1:" (active)"))
"RTN","HMPEQLM",34,0)
 S X=X_"   Max="_HMPLIM
"RTN","HMPEQLM",35,0)
 S X=X_$S($G(HMPDFN):"   Patient="_HMPDFN,1:"")
"RTN","HMPEQLM",36,0)
 S VALMHDR(4)=X
"RTN","HMPEQLM",37,0)
 Q
"RTN","HMPEQLM",38,0)
 ;
"RTN","HMPEQLM",39,0)
INIT ; -- init variables and list array
"RTN","HMPEQLM",40,0)
 S:'$G(HMPLIM) HMPLIM=$$LIMIT
"RTN","HMPEQLM",41,0)
 D BUILD
"RTN","HMPEQLM",42,0)
 D HDR
"RTN","HMPEQLM",43,0)
 D MSG
"RTN","HMPEQLM",44,0)
 Q
"RTN","HMPEQLM",45,0)
 ;
"RTN","HMPEQLM",46,0)
BUILD ; -- build list
"RTN","HMPEQLM",47,0)
 N SEQ,SEQNODE,X,PARAMS,HMPEVTS,HMPCNT
"RTN","HMPEQLM",48,0)
 S HMPEVTS=$NA(^TMP("HMPM EVT QUE MGR",$J))
"RTN","HMPEQLM",49,0)
 K @HMPEVTS
"RTN","HMPEQLM",50,0)
 ;
"RTN","HMPEQLM",51,0)
 S PARAMS("server")=HMPSRV
"RTN","HMPEQLM",52,0)
 S PARAMS("domain")=HMPDOM
"RTN","HMPEQLM",53,0)
 S PARAMS("filter")=HMPFIL
"RTN","HMPEQLM",54,0)
 S PARAMS("dfn")=$G(HMPDFN)
"RTN","HMPEQLM",55,0)
 S PARAMS("max")=HMPLIM
"RTN","HMPEQLM",56,0)
 ;
"RTN","HMPEQLM",57,0)
 D EVTS^HMPEQ(HMPEVTS,.PARAMS)
"RTN","HMPEQLM",58,0)
 S HMPCSTRM=$G(@HMPEVTS@("stream"),"**** No Stream Found ****")
"RTN","HMPEQLM",59,0)
 ;
"RTN","HMPEQLM",60,0)
 S HMPWAIT=0
"RTN","HMPEQLM",61,0)
 D KILL
"RTN","HMPEQLM",62,0)
 S (VALMCNT,HMPCNT)=0
"RTN","HMPEQLM",63,0)
 S HMPI=0 F  S HMPI=$O(@HMPEVTS@("events",HMPI)) Q:'HMPI  D
"RTN","HMPEQLM",64,0)
 . S SEQNODE=$G(@HMPEVTS@("events",HMPI,"node"))
"RTN","HMPEQLM",65,0)
 . S SEQ=$G(@HMPEVTS@("events",HMPI,"sequence"))
"RTN","HMPEQLM",66,0)
 . S HMPCNT=HMPCNT+1
"RTN","HMPEQLM",67,0)
 . S X=""
"RTN","HMPEQLM",68,0)
 . S X=$$SETFLD^VALM1($J(HMPCNT,3),X,"ID")
"RTN","HMPEQLM",69,0)
 . I '$P(SEQNODE,"^",6) S HMPWAIT=1,X=$$SETFLD^VALM1("*",X,"STATE")
"RTN","HMPEQLM",70,0)
 . S X=$$SETFLD^VALM1($J(SEQ,5),X,"SEQ")
"RTN","HMPEQLM",71,0)
 . S X=$$SETFLD^VALM1(SEQNODE,X,"NODE")
"RTN","HMPEQLM",72,0)
 . D SET(X,SEQNODE)
"RTN","HMPEQLM",73,0)
 ;
"RTN","HMPEQLM",74,0)
 I VALMCNT=0 D NOROWS^HMPEQ("No events to display for specified criteria")
"RTN","HMPEQLM",75,0)
 S VALMBG=1
"RTN","HMPEQLM",76,0)
 K @HMPEVTS
"RTN","HMPEQLM",77,0)
 Q
"RTN","HMPEQLM",78,0)
 ;
"RTN","HMPEQLM",79,0)
SET(X,IDX) ; -- set the ListMan array and indexes
"RTN","HMPEQLM",80,0)
 S VALMCNT=VALMCNT+1
"RTN","HMPEQLM",81,0)
 S @VALMAR@(VALMCNT,0)=X
"RTN","HMPEQLM",82,0)
 S @VALMAR@("IDX",VALMCNT,HMPCNT)=IDX
"RTN","HMPEQLM",83,0)
 S @VALMAR@("ENTRY",HMPCNT)=IDX
"RTN","HMPEQLM",84,0)
 Q
"RTN","HMPEQLM",85,0)
 ;
"RTN","HMPEQLM",86,0)
KILL ; -- kill off build data
"RTN","HMPEQLM",87,0)
 K @VALMAR
"RTN","HMPEQLM",88,0)
 ; clean up video control data
"RTN","HMPEQLM",89,0)
 D KILL^VALM10()
"RTN","HMPEQLM",90,0)
 Q
"RTN","HMPEQLM",91,0)
 ;
"RTN","HMPEQLM",92,0)
MSG ; -- set default message
"RTN","HMPEQLM",93,0)
 S VALMSG=$S(HMPWAIT:"   * waiting to be processed",1:"")
"RTN","HMPEQLM",94,0)
 Q
"RTN","HMPEQLM",95,0)
 ;
"RTN","HMPEQLM",96,0)
HELP ; -- help code
"RTN","HMPEQLM",97,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","HMPEQLM",98,0)
 Q
"RTN","HMPEQLM",99,0)
 ;
"RTN","HMPEQLM",100,0)
EXIT ; -- exit code
"RTN","HMPEQLM",101,0)
 ; -- save user criteria fro 7 days
"RTN","HMPEQLM",102,0)
 Q:'$G(DUZ)
"RTN","HMPEQLM",103,0)
 N NODE,X
"RTN","HMPEQLM",104,0)
 S NODE="HMPM EVT QUE MGR"
"RTN","HMPEQLM",105,0)
 K ^DISV(DUZ,NODE)
"RTN","HMPEQLM",106,0)
 F X="HMPSRV","HMPDOM","HMPFIL","HMPDFN","HMPLIM" I $G(@X)]"" S ^DISV(DUZ,NODE,X)=@X
"RTN","HMPEQLM",107,0)
 Q
"RTN","HMPEQLM",108,0)
 ;
"RTN","HMPEQLM",109,0)
DFLTS ; -- get user defaults
"RTN","HMPEQLM",110,0)
 Q:'$G(DUZ)
"RTN","HMPEQLM",111,0)
 N NODE,X
"RTN","HMPEQLM",112,0)
 S NODE="HMPM EVT QUE MGR"
"RTN","HMPEQLM",113,0)
 Q:'$D(^DISV(DUZ,NODE))
"RTN","HMPEQLM",114,0)
 S X=0 F  S X=$O(^DISV(DUZ,NODE,X)) Q:X=""  S @X=^(X)
"RTN","HMPEQLM",115,0)
 Q
"RTN","HMPEQLM",116,0)
 ;
"RTN","HMPEQLM",117,0)
EXPND ; -- expand code
"RTN","HMPEQLM",118,0)
 Q
"RTN","HMPEQLM",119,0)
 ;
"RTN","HMPEQLM",120,0)
REFRESH ; -- refresh display
"RTN","HMPEQLM",121,0)
 ; protocol: HMPM EVT QUE REFRESH
"RTN","HMPEQLM",122,0)
 D WAIT^DICD
"RTN","HMPEQLM",123,0)
 D BUILD
"RTN","HMPEQLM",124,0)
 D HDR
"RTN","HMPEQLM",125,0)
 D MSG
"RTN","HMPEQLM",126,0)
 S VALMBCK="R"
"RTN","HMPEQLM",127,0)
 Q
"RTN","HMPEQLM",128,0)
 ;
"RTN","HMPEQLM",129,0)
CS ; -- change server
"RTN","HMPEQLM",130,0)
 ; protocol: HMPM EVT QUE CHANGE SERVER
"RTN","HMPEQLM",131,0)
 D FULL^VALM1
"RTN","HMPEQLM",132,0)
 N SRV
"RTN","HMPEQLM",133,0)
 S SRV=$$GETSRV^HMPDJFSM()
"RTN","HMPEQLM",134,0)
 I +SRV>0 S HMPSRV=+SRV
"RTN","HMPEQLM",135,0)
 D REFRESH
"RTN","HMPEQLM",136,0)
 Q
"RTN","HMPEQLM",137,0)
 ;
"RTN","HMPEQLM",138,0)
CD ; -- change domain
"RTN","HMPEQLM",139,0)
 ; protocol: HMPM EVT QUE CHANGE DOMAIN
"RTN","HMPEQLM",140,0)
 N DIR,Y,X,DOMAINS,I,LIST,Y
"RTN","HMPEQLM",141,0)
 D FULL^VALM1
"RTN","HMPEQLM",142,0)
 D EVNTYPS^HMPDJFSM(.LIST)
"RTN","HMPEQLM",143,0)
 S I=0 F  S I=$O(LIST(I)) Q:'I  S Y(LIST(I))=""
"RTN","HMPEQLM",144,0)
 F X="syncNoop","syncDomain","syncError","syncStart","syncDone" S Y(X)=""
"RTN","HMPEQLM",145,0)
 S X="",I=0
"RTN","HMPEQLM",146,0)
 F  S X=$O(Y(X)) Q:X=""  S I=I+1 S DOMAINS(I)=X
"RTN","HMPEQLM",147,0)
 S DOMAINS(999)="ALL"
"RTN","HMPEQLM",148,0)
 S X="S^"
"RTN","HMPEQLM",149,0)
 S I=0 F  S I=$O(DOMAINS(I)) Q:I=""  S X=X_I_":"_$G(DOMAINS(I))_";"
"RTN","HMPEQLM",150,0)
 S DIR(0)=X
"RTN","HMPEQLM",151,0)
 S DIR("A")="Select Domain"
"RTN","HMPEQLM",152,0)
 S DIR("B")="ALL"
"RTN","HMPEQLM",153,0)
 D ^DIR
"RTN","HMPEQLM",154,0)
 I +Y>0 S HMPDOM=$G(DOMAINS(+Y))
"RTN","HMPEQLM",155,0)
 D REFRESH
"RTN","HMPEQLM",156,0)
 Q
"RTN","HMPEQLM",157,0)
 ;
"RTN","HMPEQLM",158,0)
LIMIT() ; -- get freshness events display limit
"RTN","HMPEQLM",159,0)
 ; -- set high testing in order to see many event types 
"RTN","HMPEQLM",160,0)
 Q $S($$PROD^XUPROD():10,1:200)
"RTN","HMPEQLM",161,0)
 ;
"RTN","HMPEQLM",162,0)
FILTER ; -- allows user to filter list
"RTN","HMPEQLM",163,0)
 ; protocol: HMPM EVT QUE FILTER
"RTN","HMPEQLM",164,0)
 N DIR,Y,X
"RTN","HMPEQLM",165,0)
 D FULL^VALM1
"RTN","HMPEQLM",166,0)
 S X="S^"
"RTN","HMPEQLM",167,0)
 S X=X_"A:All events;"
"RTN","HMPEQLM",168,0)
 S X=X_"P:Processed events;"
"RTN","HMPEQLM",169,0)
 S X=X_"W:Waiting to be processed events"
"RTN","HMPEQLM",170,0)
 S DIR(0)=X
"RTN","HMPEQLM",171,0)
 S DIR("A")="Select Event State"
"RTN","HMPEQLM",172,0)
 S DIR("B")="All events"
"RTN","HMPEQLM",173,0)
 D ^DIR
"RTN","HMPEQLM",174,0)
 I Y="P" S HMPFIL=Y
"RTN","HMPEQLM",175,0)
 I Y="W" S HMPFIL=Y
"RTN","HMPEQLM",176,0)
 I Y="A" S HMPFIL=Y
"RTN","HMPEQLM",177,0)
 D REFRESH
"RTN","HMPEQLM",178,0)
 Q
"RTN","HMPEQLM",179,0)
 ;
"RTN","HMPEQLM",180,0)
SELPT ; select patient
"RTN","HMPEQLM",181,0)
 ; protocol" HMPM EVT QUE SELECT PATIENT
"RTN","HMPEQLM",182,0)
 D FULL^VALM1
"RTN","HMPEQLM",183,0)
 N Y,DIC
"RTN","HMPEQLM",184,0)
 S DIC="^DPT("
"RTN","HMPEQLM",185,0)
 S DIC(0)="AEMQ"
"RTN","HMPEQLM",186,0)
 D ^DIC
"RTN","HMPEQLM",187,0)
 S HMPDFN=$S(+Y>0:+Y,1:"")
"RTN","HMPEQLM",188,0)
 D REFRESH
"RTN","HMPEQLM",189,0)
 Q
"RTN","HMPEQLM",190,0)
 ;
"RTN","HMPEQLM",191,0)
CM ; change max
"RTN","HMPEQLM",192,0)
 ; protocol: HMPM EVT QUE CHANGE MAX LISTED
"RTN","HMPEQLM",193,0)
 D FULL^VALM1
"RTN","HMPEQLM",194,0)
 N DIR
"RTN","HMPEQLM",195,0)
 S DIR(0)="N^10:1000:0"
"RTN","HMPEQLM",196,0)
 S DIR("B")=$$LIMIT
"RTN","HMPEQLM",197,0)
 S DIR("A")="Set Limit: "
"RTN","HMPEQLM",198,0)
 D ^DIR
"RTN","HMPEQLM",199,0)
 I +Y>0 S HMPLIM=+Y
"RTN","HMPEQLM",200,0)
 D REFRESH
"RTN","HMPEQLM",201,0)
 Q
"RTN","HMPEQLM",202,0)
 ;
"RTN","HMPEQLM",203,0)
DETAIL ; -- detailed display
"RTN","HMPEQLM",204,0)
 ; protocol: HMPM EVT QUE DISPLAY DETAILS
"RTN","HMPEQLM",205,0)
 N HMPI,VALMY,HMPDASH,POST,DOMAIN,HMPREF,HMPDATA
"RTN","HMPEQLM",206,0)
 S $P(HMPDASH,"=",80)=""
"RTN","HMPEQLM",207,0)
 D FULL^VALM1
"RTN","HMPEQLM",208,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","HMPEQLM",209,0)
 S HMPI=+$O(VALMY(""))
"RTN","HMPEQLM",210,0)
 I HMPI>0 D
"RTN","HMPEQLM",211,0)
 . S HMPREF="HMPDATA"
"RTN","HMPEQLM",212,0)
 . S POST=$G(@VALMAR@("ENTRY",HMPI))
"RTN","HMPEQLM",213,0)
 . W !!,HMPDASH
"RTN","HMPEQLM",214,0)
 . W !!,"Posted Event Data: ",POST
"RTN","HMPEQLM",215,0)
 . I $P(POST,"^",5) D
"RTN","HMPEQLM",216,0)
 . . K HMPDATA
"RTN","HMPEQLM",217,0)
 . . S HMPDATA(1,"label")="Added To Stream"
"RTN","HMPEQLM",218,0)
 . . S HMPDATA(1,"value")=$$GETIME($P(HMPCSTRM,"~",3),$P(POST,"^",5))
"RTN","HMPEQLM",219,0)
 . . D RENDER
"RTN","HMPEQLM",220,0)
 . ;
"RTN","HMPEQLM",221,0)
 . I $P(POST,"^",6) D
"RTN","HMPEQLM",222,0)
 . . K HMPDATA
"RTN","HMPEQLM",223,0)
 . . S HMPDATA(1,"label")="Processed Time"
"RTN","HMPEQLM",224,0)
 . . S HMPDATA(1,"value")=$$GETIME($P(HMPCSTRM,"~",3),$P(POST,"^",6))
"RTN","HMPEQLM",225,0)
 . . I $P(POST,"^",6)<$P(POST,"^",5) D
"RTN","HMPEQLM",226,0)
 . . . S HMPDATA(2,"label")=""
"RTN","HMPEQLM",227,0)
 . . . S HMPDATA(2,"value")="       - time before 'add' time means processed on a different date"
"RTN","HMPEQLM",228,0)
 . . D RENDER
"RTN","HMPEQLM",229,0)
 . ;
"RTN","HMPEQLM",230,0)
 . ; -- domain info parsing and display
"RTN","HMPEQLM",231,0)
 . S DOMAIN=$P(POST,"^",2)
"RTN","HMPEQLM",232,0)
 . ;
"RTN","HMPEQLM",233,0)
 . I +POST D PAT(HMPREF,+POST),RENDER
"RTN","HMPEQLM",234,0)
 . I 'POST,DOMAIN="patient"!(DOMAIN="pt-select") D PAT(HMPREF,+$P(POST,"^",3)),RENDER
"RTN","HMPEQLM",235,0)
 . ;
"RTN","HMPEQLM",236,0)
 . I DOMAIN="med"!(DOMAIN="order") D MED(HMPREF,+$P(POST,"^",3)),RENDER
"RTN","HMPEQLM",237,0)
 . I DOMAIN="consult" D CONSULT(HMPREF,+$P(POST,"^",3)),RENDER
"RTN","HMPEQLM",238,0)
 . ; -- TODO: Need to understand HL7-type messages parsed in XQOR^HMPEVNT
"RTN","HMPEQLM",239,0)
 . ;I DOMAIN="document" D TIU(+$P(POST,"^",3))
"RTN","HMPEQLM",240,0)
 . ;I DOMAIN="lab" D LAB()
"RTN","HMPEQLM",241,0)
 . ;I DOMAIN="image" D IMAGE()
"RTN","HMPEQLM",242,0)
 . ;
"RTN","HMPEQLM",243,0)
 . I DOMAIN="visit" D
"RTN","HMPEQLM",244,0)
 . . N IEN
"RTN","HMPEQLM",245,0)
 . . S IEN=$P(POST,"^",3)
"RTN","HMPEQLM",246,0)
 . . I $E(IEN)="H" D ADM(HMPREF,+$E(IEN,2,999)),RENDER Q
"RTN","HMPEQLM",247,0)
 . . D VISIT(HMPREF,+IEN),RENDER
"RTN","HMPEQLM",248,0)
 . ;
"RTN","HMPEQLM",249,0)
 . I DOMAIN="appointment" D APPT(HMPREF,$P(POST,"^",3)),RENDER
"RTN","HMPEQLM",250,0)
 . ;
"RTN","HMPEQLM",251,0)
 . I DOMAIN="user" D USER(HMPREF,+$P(POST,"^",3)),RENDER
"RTN","HMPEQLM",252,0)
 . ;
"RTN","HMPEQLM",253,0)
 . I DOMAIN="roster" D ROSTER(HMPREF,+$P(POST,"^",3)),RENDER
"RTN","HMPEQLM",254,0)
 . ;
"RTN","HMPEQLM",255,0)
 . ; -- HMP PATIENT OBJECT (#800000.1) domains
"RTN","HMPEQLM",256,0)
 . I DOMAIN="auxiliary" D AUX(HMPREF,+$P(POST,"^",3)),RENDER
"RTN","HMPEQLM",257,0)
 . I DOMAIN="diagnosis" D DIAG(HMPREF,+$P(POST,"^",3)),RENDER
"RTN","HMPEQLM",258,0)
 . I DOMAIN="roadtrip" D ROAD(HMPREF,+$P(POST,"^",3)),RENDER
"RTN","HMPEQLM",259,0)
 . I DOMAIN="task" D TASK(HMPREF,+$P(POST,"^",3)),RENDER
"RTN","HMPEQLM",260,0)
 . ;
"RTN","HMPEQLM",261,0)
 . W !!,HMPDASH
"RTN","HMPEQLM",262,0)
 . D PAUSE^VALM1
"RTN","HMPEQLM",263,0)
 ;
"RTN","HMPEQLM",264,0)
 S VALMBCK="R"
"RTN","HMPEQLM",265,0)
 Q
"RTN","HMPEQLM",266,0)
 ;
"RTN","HMPEQLM",267,0)
GETIME(DATE,SECS) ; -- get time
"RTN","HMPEQLM",268,0)
 N X
"RTN","HMPEQLM",269,0)
 S X=$$FMTH^XLFDT(DATE),$P(X,",",2)=SECS
"RTN","HMPEQLM",270,0)
 Q $P($$HTE^XLFDT(X,"S"),"@",2)
"RTN","HMPEQLM",271,0)
 ;
"RTN","HMPEQLM",272,0)
PAT(HMPZ,DFN) ; -- get patient info
"RTN","HMPEQLM",273,0)
 N VA,HMPY,VAROOT
"RTN","HMPEQLM",274,0)
 S VAROOT="HMPY"
"RTN","HMPEQLM",275,0)
 D DEM^VADPT
"RTN","HMPEQLM",276,0)
 K @HMPZ
"RTN","HMPEQLM",277,0)
 S @HMPZ@(1,"label")="Patient Short ID"
"RTN","HMPEQLM",278,0)
 S @HMPZ@(1,"value")=$G(VA("BID"))
"RTN","HMPEQLM",279,0)
 Q
"RTN","HMPEQLM",280,0)
 ;
"RTN","HMPEQLM",281,0)
MED(HMPZ,ORDER) ; -- display order info
"RTN","HMPEQLM",282,0)
 N IEN,ORDABLE,CNT
"RTN","HMPEQLM",283,0)
 K @HMPZ
"RTN","HMPEQLM",284,0)
 S (CNT,IEN)=0
"RTN","HMPEQLM",285,0)
 F  S IEN=$O(^OR(100,+$G(ORDER),.1,IEN)) Q:'IEN  S ORDABLE=+$G(^(IEN,0)) D
"RTN","HMPEQLM",286,0)
 . S CNT=CNT+1
"RTN","HMPEQLM",287,0)
 . S @HMPZ@(CNT,"label")="Orderable"
"RTN","HMPEQLM",288,0)
 . S @HMPZ@(CNT,"value")=$P($G(^ORD(101.43,ORDABLE,0)),"^")
"RTN","HMPEQLM",289,0)
 Q
"RTN","HMPEQLM",290,0)
 ;
"RTN","HMPEQLM",291,0)
TIU(HMPZ,IEN) ; -- get TIU document type
"RTN","HMPEQLM",292,0)
 K @HMPZ
"RTN","HMPEQLM",293,0)
 S @HMPZ@(1,"label")="Document Type"
"RTN","HMPEQLM",294,0)
 S @HMPZ@(1,"value")=$$GET1^DIQ(8925.1,+$$GET1^DIQ(8925,IEN_",",.01)_",",.01)
"RTN","HMPEQLM",295,0)
 Q
"RTN","HMPEQLM",296,0)
 ;
"RTN","HMPEQLM",297,0)
USER(HMPZ,IEN) ; -- get user name
"RTN","HMPEQLM",298,0)
 K @HMPZ
"RTN","HMPEQLM",299,0)
 S @HMPZ@(1,"label")="User"
"RTN","HMPEQLM",300,0)
 S @HMPZ@(1,"value")=$$GET1^DIQ(200,IEN_",",.01)
"RTN","HMPEQLM",301,0)
 Q
"RTN","HMPEQLM",302,0)
 ;
"RTN","HMPEQLM",303,0)
ROSTER(HMPZ,IEN) ; -- get roster name
"RTN","HMPEQLM",304,0)
 K @HMPZ
"RTN","HMPEQLM",305,0)
 S @HMPZ@(1,"label")="Roster"
"RTN","HMPEQLM",306,0)
 S @HMPZ@(1,"value")=$$GET1^DIQ(800001.2,IEN_",",.01)
"RTN","HMPEQLM",307,0)
 Q
"RTN","HMPEQLM",308,0)
 ;
"RTN","HMPEQLM",309,0)
 ; -- TODO: is this real or just a dev anomaly
"RTN","HMPEQLM",310,0)
AUX(HMPZ,IEN) ; -- get auxiliary uid
"RTN","HMPEQLM",311,0)
 K @HMPZ
"RTN","HMPEQLM",312,0)
 S @HMPZ@(1,"label")="Auxiliary UID"
"RTN","HMPEQLM",313,0)
 S @HMPZ@(1,"value")=$$GET1^DIQ(800000.1,IEN_",",.01)
"RTN","HMPEQLM",314,0)
 Q
"RTN","HMPEQLM",315,0)
 ;
"RTN","HMPEQLM",316,0)
 ; -- TODO: is this real or just a dev anomaly
"RTN","HMPEQLM",317,0)
DIAG(HMPZ,IEN) ; -- get diagnosis uid
"RTN","HMPEQLM",318,0)
 K @HMPZ
"RTN","HMPEQLM",319,0)
 S @HMPZ@(1,"label")="Diagnosis UID"
"RTN","HMPEQLM",320,0)
 S @HMPZ@(1,"value")=$$GET1^DIQ(800000.1,IEN_",",.01)
"RTN","HMPEQLM",321,0)
 Q
"RTN","HMPEQLM",322,0)
 ;
"RTN","HMPEQLM",323,0)
 ; -- TODO: is this real or just a dev anomaly
"RTN","HMPEQLM",324,0)
ROAD(HMPZ,IEN) ; -- get roadtrip uid
"RTN","HMPEQLM",325,0)
 K @HMPZ
"RTN","HMPEQLM",326,0)
 S @HMPZ@(1,"label")="Road Trip UID"
"RTN","HMPEQLM",327,0)
 S @HMPZ@(1,"value")=$$GET1^DIQ(800000.1,IEN_",",.01)
"RTN","HMPEQLM",328,0)
 Q
"RTN","HMPEQLM",329,0)
 ;
"RTN","HMPEQLM",330,0)
TASK(HMPZ,IEN) ; -- get task uid
"RTN","HMPEQLM",331,0)
 K @HMPZ
"RTN","HMPEQLM",332,0)
 S @HMPZ@(1,"label")="Task UID"
"RTN","HMPEQLM",333,0)
 S @HMPZ@(1,"value")=$$GET1^DIQ(800000.1,IEN_",",.01)
"RTN","HMPEQLM",334,0)
 Q
"RTN","HMPEQLM",335,0)
 ;
"RTN","HMPEQLM",336,0)
CONSULT(HMPZ,IEN) ; -- get consult date
"RTN","HMPEQLM",337,0)
 K @HMPZ
"RTN","HMPEQLM",338,0)
 S @HMPZ@(1,"label")="Consult Date/Time"
"RTN","HMPEQLM",339,0)
 S @HMPZ@(1,"value")=$$GET1^DIQ(123,IEN_",",.01)
"RTN","HMPEQLM",340,0)
 Q
"RTN","HMPEQLM",341,0)
 ;
"RTN","HMPEQLM",342,0)
VISIT(HMPZ,IEN) ; -- get visit date/time
"RTN","HMPEQLM",343,0)
 K @HMPZ
"RTN","HMPEQLM",344,0)
 S @HMPZ@(1,"label")="Visit date/time"
"RTN","HMPEQLM",345,0)
 S @HMPZ@(1,"value")=$$GET1^DIQ(9000010,IEN_",",.01)
"RTN","HMPEQLM",346,0)
 Q
"RTN","HMPEQLM",347,0)
 ;
"RTN","HMPEQLM",348,0)
ADM(HMPZ,IEN) ; -- get admission date/time
"RTN","HMPEQLM",349,0)
 K @HMPZ
"RTN","HMPEQLM",350,0)
 S @HMPZ@(1,"label")="Admission date/time"
"RTN","HMPEQLM",351,0)
 S @HMPZ@(1,"value")=$$GET1^DIQ(405,IEN_",",.01)
"RTN","HMPEQLM",352,0)
 Q
"RTN","HMPEQLM",353,0)
 ;
"RTN","HMPEQLM",354,0)
APPT(HMPZ,MAP) ; -- get appointment data/time and clinic
"RTN","HMPEQLM",355,0)
 N IENS
"RTN","HMPEQLM",356,0)
 S IENS=+$P(MAP,";",3)_","_+$P(MAP,";",2)_","
"RTN","HMPEQLM",357,0)
 K @HMPZ
"RTN","HMPEQLM",358,0)
 S @HMPZ@(1,"label")="Appointment date/time"
"RTN","HMPEQLM",359,0)
 S @HMPZ@(1,"value")=$$GET1^DIQ(2.98,IENS,.001)
"RTN","HMPEQLM",360,0)
 S @HMPZ@(2,"label")="Clinic"
"RTN","HMPEQLM",361,0)
 S @HMPZ@(2,"value")=$$GET1^DIQ(2.98,IENS,.01)
"RTN","HMPEQLM",362,0)
 Q
"RTN","HMPEQLM",363,0)
 ;
"RTN","HMPEQLM",364,0)
RENDER ; -- write info
"RTN","HMPEQLM",365,0)
 N I
"RTN","HMPEQLM",366,0)
 S I=0 F  S I=$O(HMPDATA(I)) Q:'I  W !,"  o  ",$G(HMPDATA(I,"label")),": ",$G(HMPDATA(I,"value"))
"RTN","HMPEQLM",367,0)
 Q
"RTN","HMPEQLM",368,0)
 ;
"RTN","HMPEQLM",369,0)
SHOWHMPN ; -- show HMP global nodes
"RTN","HMPEQLM",370,0)
 ; protocol: HMPM EVT QUE SHOW TEMP GLOBALS
"RTN","HMPEQLM",371,0)
 D FULL^VALM1
"RTN","HMPEQLM",372,0)
 D EN^HMPEQLM2($G(HMPSRV))
"RTN","HMPEQLM",373,0)
 D REFRESH
"RTN","HMPEQLM",374,0)
 Q
"RTN","HMPEQLM",375,0)
 ;
"RTN","HMPEQLM",376,0)
FSHRPT ; -- show overall freshnes report
"RTN","HMPEQLM",377,0)
 ; protocol: HMPM EVT QUE FRESHNESS REPORT
"RTN","HMPEQLM",378,0)
 D FULL^VALM1
"RTN","HMPEQLM",379,0)
 D EN^HMPEQLM1($G(HMPSRV))
"RTN","HMPEQLM",380,0)
 D REFRESH
"RTN","HMPEQLM",381,0)
 Q
"RTN","HMPEQLM",382,0)
 ;
"RTN","HMPEQLM",383,0)
EMERSTOP ; -- stop freshness
"RTN","HMPEQLM",384,0)
 ; protocol: HMPM EVT QUE EMERGENCY STOP (not distributed)
"RTN","HMPEQLM",385,0)
 D FULL^VALM1
"RTN","HMPEQLM",386,0)
 ;D EMERSTOP^HMPDJFSM
"RTN","HMPEQLM",387,0)
 D REFRESH
"RTN","HMPEQLM",388,0)
 Q
"RTN","HMPEQLM",389,0)
 ;
"RTN","HMPEQLM",390,0)
RSTRTFR ; -- re-start freshness
"RTN","HMPEQLM",391,0)
 ; protocol: HMPM EVT QUE RESTART FRESHNESS (not distributed)
"RTN","HMPEQLM",392,0)
 D FULL^VALM1
"RTN","HMPEQLM",393,0)
 ;D RSTRTFR^HMPDJFSM
"RTN","HMPEQLM",394,0)
 D REFRESH
"RTN","HMPEQLM",395,0)
 Q
"RTN","HMPEQLM",396,0)
 ;
"RTN","HMPEQLM",397,0)
GETSRV(DFLT) ; Return the IEN for the server to monitor
"RTN","HMPEQLM",398,0)
 N DIC,Y
"RTN","HMPEQLM",399,0)
 S DIC="^HMP(800000,",DIC(0)="AEMQ",DIC("A")="Select HMP server instance: "
"RTN","HMPEQLM",400,0)
 I $G(DFLT) S DIC("B")=$P($G(^HMP(800000,$G(DFLT),0)),"^")
"RTN","HMPEQLM",401,0)
 D ^DIC
"RTN","HMPEQLM",402,0)
 Q +Y
"RTN","HMPEQLM",403,0)
 ;
"RTN","HMPEQLM1")
0^85^B6971880
"RTN","HMPEQLM1",1,0)
HMPEQLM1 ;SLC/MJK -- HMP Freshness Report ; 02-JUL-2014
"RTN","HMPEQLM1",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPEQLM1",3,0)
 ;
"RTN","HMPEQLM1",4,0)
 Q
"RTN","HMPEQLM1",5,0)
 ;
"RTN","HMPEQLM1",6,0)
EN(HMPSRV) ; -- main entry point for HMPM EVT QUE FRESHNESS REPORT
"RTN","HMPEQLM1",7,0)
 D EN^VALM("HMPM EVT QUE FRESHNESS REPORT")
"RTN","HMPEQLM1",8,0)
 Q
"RTN","HMPEQLM1",9,0)
 ;
"RTN","HMPEQLM1",10,0)
HDR ; -- header code
"RTN","HMPEQLM1",11,0)
 Q
"RTN","HMPEQLM1",12,0)
 ;
"RTN","HMPEQLM1",13,0)
INIT ; -- init variables and list array
"RTN","HMPEQLM1",14,0)
 N IEN,SRVNM,HMPDATA,SEQ,X
"RTN","HMPEQLM1",15,0)
 ;
"RTN","HMPEQLM1",16,0)
 D KILL
"RTN","HMPEQLM1",17,0)
 S VALMCNT=0
"RTN","HMPEQLM1",18,0)
 ;
"RTN","HMPEQLM1",19,0)
 ; -- show current server and then the rest
"RTN","HMPEQLM1",20,0)
 I +$G(HMPSRV) D SRV^HMPEQ("HMPDATA",+HMPSRV),SRV(.HMPDATA)
"RTN","HMPEQLM1",21,0)
 D SET("   ")
"RTN","HMPEQLM1",22,0)
 ;
"RTN","HMPEQLM1",23,0)
 ; -- loop & sort thru defined HMP servers
"RTN","HMPEQLM1",24,0)
 K HMPDATA
"RTN","HMPEQLM1",25,0)
 S HMPDATA=$NA(^TMP("HMP FRESHNESS RPT",$J))
"RTN","HMPEQLM1",26,0)
 K @HMPDATA
"RTN","HMPEQLM1",27,0)
 D SRVS^HMPEQ(HMPDATA)
"RTN","HMPEQLM1",28,0)
 S SEQ=0
"RTN","HMPEQLM1",29,0)
 F  S SEQ=$O(@HMPDATA@("servers",SEQ)) Q:'SEQ  d
"RTN","HMPEQLM1",30,0)
 . M X=@HMPDATA@("servers",SEQ) D SRV(.X)
"RTN","HMPEQLM1",31,0)
 ;
"RTN","HMPEQLM1",32,0)
 I VALMCNT=0 D NOROWS^HMPEQ("No HMP server information to display")
"RTN","HMPEQLM1",33,0)
 S VALMBG=1
"RTN","HMPEQLM1",34,0)
 S VALMSG="* updates waiting"
"RTN","HMPEQLM1",35,0)
 K @HMPDATA
"RTN","HMPEQLM1",36,0)
 Q
"RTN","HMPEQLM1",37,0)
 ;
"RTN","HMPEQLM1",38,0)
SRV(SRV) ; -- process one server
"RTN","HMPEQLM1",39,0)
 N X,SEQ
"RTN","HMPEQLM1",40,0)
 S X=""
"RTN","HMPEQLM1",41,0)
 S X=$$SETFLD^VALM1($G(SRV("name")),X,"SERVER")
"RTN","HMPEQLM1",42,0)
 S X=$$SETFLD^VALM1($G(SRV("lastUpdate")),X,"LAST")
"RTN","HMPEQLM1",43,0)
 S X=$$SETFLD^VALM1($S($G(SRV("repeated")):" x"_$G(SRV("repeated")),1:""),X,"REPEATED")
"RTN","HMPEQLM1",44,0)
 S X=$$SETFLD^VALM1($G(SRV("queueEnd")),X,"END")
"RTN","HMPEQLM1",45,0)
 I $G(SRV("lastUpdate")),$G(SRV("lastUpdate"))'=$G(SRV("queueEnd")) S X=$$SETFLD^VALM1("*",X,"BEHIND")
"RTN","HMPEQLM1",46,0)
 D SET(X)
"RTN","HMPEQLM1",47,0)
 D FLDCTRL^VALM10(VALMCNT,"SERVER",IOINHI,IOINORM)
"RTN","HMPEQLM1",48,0)
 ;
"RTN","HMPEQLM1",49,0)
 I '$D(SRV("extracts")) Q
"RTN","HMPEQLM1",50,0)
 ; -- loop thru extracts for this server
"RTN","HMPEQLM1",51,0)
 D SET($J("Extract Information:",25))
"RTN","HMPEQLM1",52,0)
 S SEQ=0
"RTN","HMPEQLM1",53,0)
 F  S SEQ=$O(SRV("extracts",SEQ)) Q:'SEQ  D
"RTN","HMPEQLM1",54,0)
 . S X=$J($G(SRV("extracts",SEQ,"domain")),15)
"RTN","HMPEQLM1",55,0)
 . S X=X_"     Task(s): "_$G(SRV("extracts",SEQ,"tasks"))
"RTN","HMPEQLM1",56,0)
 . D SET(X)
"RTN","HMPEQLM1",57,0)
 . I $G(SRV("extracts",SEQ,"waiting")) D SET($J("Waiting: ",29)_$G(SRV("extracts",SEQ,"waiting"))_" seconds") Q
"RTN","HMPEQLM1",58,0)
 . D SET($J("Extracting: "_$G(SRV("extracts",SEQ,"lastCount")),40))
"RTN","HMPEQLM1",59,0)
 Q
"RTN","HMPEQLM1",60,0)
 ;
"RTN","HMPEQLM1",61,0)
SET(X,BOLD) ; -- add line
"RTN","HMPEQLM1",62,0)
 S VALMCNT=VALMCNT+1
"RTN","HMPEQLM1",63,0)
 S @VALMAR@(VALMCNT,0)=X
"RTN","HMPEQLM1",64,0)
 Q
"RTN","HMPEQLM1",65,0)
 ;
"RTN","HMPEQLM1",66,0)
KILL ; -- kill off build data
"RTN","HMPEQLM1",67,0)
 K @VALMAR
"RTN","HMPEQLM1",68,0)
 ; clean up video control data
"RTN","HMPEQLM1",69,0)
 D KILL^VALM10()
"RTN","HMPEQLM1",70,0)
 Q
"RTN","HMPEQLM1",71,0)
 ;
"RTN","HMPEQLM1",72,0)
HELP ; -- help code
"RTN","HMPEQLM1",73,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","HMPEQLM1",74,0)
 Q
"RTN","HMPEQLM1",75,0)
 ;
"RTN","HMPEQLM1",76,0)
EXIT ; -- exit code
"RTN","HMPEQLM1",77,0)
 Q
"RTN","HMPEQLM1",78,0)
 ;
"RTN","HMPEQLM1",79,0)
EXPND ; -- expand code
"RTN","HMPEQLM1",80,0)
 Q
"RTN","HMPEQLM1",81,0)
 ;
"RTN","HMPEQLM2")
0^86^B3216732
"RTN","HMPEQLM2",1,0)
HMPEQLM2 ;SLC/MJK -- HMP Temporary Global Lister ; 01-JUL-2014
"RTN","HMPEQLM2",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPEQLM2",3,0)
 ;
"RTN","HMPEQLM2",4,0)
 Q
"RTN","HMPEQLM2",5,0)
 ;
"RTN","HMPEQLM2",6,0)
EN(HMPSRV) ; -- main entry point for HMPM EVT QUE GLOBALS
"RTN","HMPEQLM2",7,0)
 D EN^VALM("HMPM EVT QUE GLOBALS")
"RTN","HMPEQLM2",8,0)
 Q
"RTN","HMPEQLM2",9,0)
 ;
"RTN","HMPEQLM2",10,0)
HDR ; -- header code
"RTN","HMPEQLM2",11,0)
 Q
"RTN","HMPEQLM2",12,0)
 ;
"RTN","HMPEQLM2",13,0)
INIT ; -- init variables and list array
"RTN","HMPEQLM2",14,0)
 N SRVNM,HMPDATA,X,SEQ,TYPE
"RTN","HMPEQLM2",15,0)
 K HMPDATA
"RTN","HMPEQLM2",16,0)
 S HMPDATA=$NA(^TMP("HMP TEMP GLOBALS RPT",$J))
"RTN","HMPEQLM2",17,0)
 K @HMPDATA
"RTN","HMPEQLM2",18,0)
 D GLBS^HMPEQ(HMPDATA)
"RTN","HMPEQLM2",19,0)
 ;
"RTN","HMPEQLM2",20,0)
 D KILL
"RTN","HMPEQLM2",21,0)
 S VALMCNT=0
"RTN","HMPEQLM2",22,0)
 ;
"RTN","HMPEQLM2",23,0)
 ; -- just get selected server info if defined
"RTN","HMPEQLM2",24,0)
 S SRVNM=$S('$G(HMPSRV):"",1:$P($G(^HMP(800000,+$G(HMPSRV),0)),"^"))
"RTN","HMPEQLM2",25,0)
 S SEQ=0 F  S SEQ=$O(@HMPDATA@("xtmpNodes",SEQ)) Q:'SEQ  D
"RTN","HMPEQLM2",26,0)
 . M X=@HMPDATA@("xtmpNodes",SEQ) D:$G(X("server"))=SRVNM GLB(.X)
"RTN","HMPEQLM2",27,0)
 ;
"RTN","HMPEQLM2",28,0)
 S TYPE="" F  S TYPE=$O(@HMPDATA@(TYPE)) Q:TYPE=""  D
"RTN","HMPEQLM2",29,0)
 . D SET("  ")
"RTN","HMPEQLM2",30,0)
 . S SEQ=0 F  S SEQ=$O(@HMPDATA@(TYPE,SEQ)) Q:'SEQ  D
"RTN","HMPEQLM2",31,0)
 . . M X=@HMPDATA@(TYPE,SEQ) D GLB(.X)
"RTN","HMPEQLM2",32,0)
 ;
"RTN","HMPEQLM2",33,0)
 I VALMCNT=0 D NOROWS^HMPEQ("No globals to display")
"RTN","HMPEQLM2",34,0)
 S VALMBG=1
"RTN","HMPEQLM2",35,0)
 K @HMPDATA
"RTN","HMPEQLM2",36,0)
 Q
"RTN","HMPEQLM2",37,0)
 ;
"RTN","HMPEQLM2",38,0)
GLB(GLB) ; --
"RTN","HMPEQLM2",39,0)
 S X=""
"RTN","HMPEQLM2",40,0)
 S X=$$SETFLD^VALM1($$DOTS($G(GLB("rootNode"))),X,"SUBSCRIPT")
"RTN","HMPEQLM2",41,0)
 S X=$$SETFLD^VALM1($G(GLB("lastNode")),X,"LAST")
"RTN","HMPEQLM2",42,0)
 D SET(X)
"RTN","HMPEQLM2",43,0)
 Q
"RTN","HMPEQLM2",44,0)
 ;
"RTN","HMPEQLM2",45,0)
SET(X) ; -- add line
"RTN","HMPEQLM2",46,0)
 S VALMCNT=VALMCNT+1
"RTN","HMPEQLM2",47,0)
 S @VALMAR@(VALMCNT,0)=X
"RTN","HMPEQLM2",48,0)
 Q
"RTN","HMPEQLM2",49,0)
 ;
"RTN","HMPEQLM2",50,0)
DOTS(Z) ; -- use dots
"RTN","HMPEQLM2",51,0)
 N DOTS
"RTN","HMPEQLM2",52,0)
 S $P(DOTS,".   ",20)=""
"RTN","HMPEQLM2",53,0)
 Q Z_$E(DOTS,$L(Z),65)
"RTN","HMPEQLM2",54,0)
 ;
"RTN","HMPEQLM2",55,0)
KILL ; -- kill off build data
"RTN","HMPEQLM2",56,0)
 K @VALMAR
"RTN","HMPEQLM2",57,0)
 ; clean up video control data
"RTN","HMPEQLM2",58,0)
 D KILL^VALM10()
"RTN","HMPEQLM2",59,0)
 Q
"RTN","HMPEQLM2",60,0)
 ;
"RTN","HMPEQLM2",61,0)
HELP ; -- help code
"RTN","HMPEQLM2",62,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","HMPEQLM2",63,0)
 Q
"RTN","HMPEQLM2",64,0)
 ;
"RTN","HMPEQLM2",65,0)
EXIT ; -- exit code
"RTN","HMPEQLM2",66,0)
 Q
"RTN","HMPEQLM2",67,0)
 ;
"RTN","HMPEQLM2",68,0)
EXPND ; -- expand code
"RTN","HMPEQLM2",69,0)
 Q
"RTN","HMPEQLM2",70,0)
 ;
"RTN","HMPEVNT")
0^87^B117308146
"RTN","HMPEVNT",1,0)
HMPEVNT ;SLC/MKB -- VistA event listeners
"RTN","HMPEVNT",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPEVNT",3,0)
 ;
"RTN","HMPEVNT",4,0)
 ; External References          DBIA#
"RTN","HMPEVNT",5,0)
 ; -------------------          -----
"RTN","HMPEVNT",6,0)
 ; DG FIELD MONITOR              3344
"RTN","HMPEVNT",7,0)
 ; DGPM MOVEMENT EVENTS          1181
"RTN","HMPEVNT",8,0)
 ; GMRA ENTERED IN ERROR         1467
"RTN","HMPEVNT",9,0)
 ; GMRA SIGN-OFF ON DATA         1469
"RTN","HMPEVNT",10,0)
 ; GMRC EVSEND OR                3140
"RTN","HMPEVNT",11,0)
 ; LR70 CH EVSEND OR             6087
"RTN","HMPEVNT",12,0)
 ; MDC OBSERVATION UPDATE        6084
"RTN","HMPEVNT",13,0)
 ; PS EVSEND OR                  2415
"RTN","HMPEVNT",14,0)
 ; PSB EVSEND HMP                6085
"RTN","HMPEVNT",15,0)
 ; PXK VISIT DATA EVENT          1298
"RTN","HMPEVNT",16,0)
 ; RA EVSEND OR                  6086
"RTN","HMPEVNT",17,0)
 ; SDAM APPOINTMENT EVENTS       1320
"RTN","HMPEVNT",18,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPEVNT",19,0)
 ; ^DPT                         10035
"RTN","HMPEVNT",20,0)
 ; ^OR(100                       5771
"RTN","HMPEVNT",21,0)
 ; DIQ                           2056
"RTN","HMPEVNT",22,0)
 ; GMVUTL                        5046
"RTN","HMPEVNT",23,0)
 ; TIUSRVLO                      2834
"RTN","HMPEVNT",24,0)
 ; VADPT                        10061
"RTN","HMPEVNT",25,0)
 ; VASITE                       10112
"RTN","HMPEVNT",26,0)
 ; XLFDT                        10103
"RTN","HMPEVNT",27,0)
 ; XTHC10                        5515
"RTN","HMPEVNT",28,0)
 ;
"RTN","HMPEVNT",29,0)
DG ; -- DG FIELD MONITOR protocol listener
"RTN","HMPEVNT",30,0)
 Q:$G(DGFILE)'=2         ;Patient file only
"RTN","HMPEVNT",31,0)
 N DFN S DFN=+$G(DGDA)
"RTN","HMPEVNT",32,0)
 ; operational pt-select - *s68 BEGIN
"RTN","HMPEVNT",33,0)
 I "^.01^.02^.03^.09^.101^.351^.361^"[(U_+$G(DGFIELD)_U) D
"RTN","HMPEVNT",34,0)
 . ; -- if patient entry has been deleted, delete pt-select object
"RTN","HMPEVNT",35,0)
 . I $G(DGFIELD)=".01",'$D(^DPT(DFN)) D POSTX("pt-select",DFN,"@") Q  ; *s68 - END
"RTN","HMPEVNT",36,0)
 . D POSTX("pt-select",DFN_"&"_$G(DGFIELD))
"RTN","HMPEVNT",37,0)
 ; subscribed patient
"RTN","HMPEVNT",38,0)
 I $D(^HMP(800000,"AITEM",DFN)),$$FLD(+$G(DGFIELD)) D POST(DFN,"patient",DFN)
"RTN","HMPEVNT",39,0)
 Q
"RTN","HMPEVNT",40,0)
 ;
"RTN","HMPEVNT",41,0)
FLD(X) ; --Return 1 or 0, if X is a field tracked by HMP
"RTN","HMPEVNT",42,0)
 S X=U_+$G(X)_U
"RTN","HMPEVNT",43,0)
 I "^.01^.02^.03^.05^.08^.09^.351^.361^.364^"[X Q 1         ;demographic
"RTN","HMPEVNT",44,0)
 I "^.111^.1112^.112^.113^.114^.115^.131^.132^.134^"[X Q 1  ;addr/phone
"RTN","HMPEVNT",45,0)
 I "^.211^.212^.213^.214^.216^.217^.218^.219^"[X Q 1        ;NOK
"RTN","HMPEVNT",46,0)
 I "^.301^.302^1901^.32102^.32103^.32201^.5295^"[X Q 1      ;serv conn
"RTN","HMPEVNT",47,0)
 Q 0
"RTN","HMPEVNT",48,0)
 ;
"RTN","HMPEVNT",49,0)
DGPM ; -- DGPM MOVEMENT EVENTS protocol listener
"RTN","HMPEVNT",50,0)
 ;    [expects DFN,DGPM* variables]
"RTN","HMPEVNT",51,0)
 N ADM,ACT S ADM=DGPMDA
"RTN","HMPEVNT",52,0)
 I DGPMT'=1 S ADM=$S(DGPMA:$P(DGPMA,U,14),1:$P(DGPMP,U,14)) Q:ADM<1
"RTN","HMPEVNT",53,0)
 S ACT=$S(DGPMA:"",1:"@")
"RTN","HMPEVNT",54,0)
 I $D(^HMP(800000,"AITEM",DFN)) D POST(DFN,"visit","H"_ADM,ACT)
"RTN","HMPEVNT",55,0)
 ; update roster(s) if current movement
"RTN","HMPEVNT",56,0)
 N ADMX,MVTX,PREV,NEW,OLD,WARD
"RTN","HMPEVNT",57,0)
 S ADMX=$Q(^DGPM("ATID1",DFN)) Q:$QS(ADMX,4)'=ADM
"RTN","HMPEVNT",58,0)
 S MVTX=$Q(^DGPM("APMV",DFN,ADM)) Q:$QS(MVTX,5)'=DGPMDA
"RTN","HMPEVNT",59,0)
 S PREV=$G(DGPMP) I 'PREV,DGPMT'=1 D  ;previous or edited mvt
"RTN","HMPEVNT",60,0)
 . S MVTX=$Q(@MVTX) Q:DFN'=$QS(MVTX,2)  Q:ADM'=$QS(MVTX,3)
"RTN","HMPEVNT",61,0)
 . S PREV=$G(^DGPM(+$QS(MVTX,5),0))
"RTN","HMPEVNT",62,0)
 S NEW=$P(DGPMA,U,6),OLD=$P(PREV,U,6)
"RTN","HMPEVNT",63,0)
 I NEW'=OLD F WARD=NEW,OLD I WARD D
"RTN","HMPEVNT",64,0)
 . S I=0 F  S I=$O(^HMPROSTR("AD",WARD_";DIC(42,",I)) Q:I<1  D POSTX("roster",I)
"RTN","HMPEVNT",65,0)
 Q
"RTN","HMPEVNT",66,0)
 ;-find visit# for corresponding admission [not used]
"RTN","HMPEVNT",67,0)
 N ADM,PTF,IDT,ID,ACT
"RTN","HMPEVNT",68,0)
 I DGPMA S ADM=+DGPMA,PTF=+$P(DGPMA,U,16)
"RTN","HMPEVNT",69,0)
 E  S ADM=+DGPMP,PTF=+$P(DGPMP,U,16)
"RTN","HMPEVNT",70,0)
 I DGPMT'=1 D  Q:ADM<1
"RTN","HMPEVNT",71,0)
 . N VAIP S VAIP("E")=DGPMDA
"RTN","HMPEVNT",72,0)
 . D IN5^VADPT S ADM=+VAIP(13,1),PTF=+VAIP(12)
"RTN","HMPEVNT",73,0)
 S IDT=9999999-$P(ADM,".") S:ADM["." IDT=IDT_"."_$P(ADM,".",2)
"RTN","HMPEVNT",74,0)
 S ID=+$O(^AUPNVSIT("AAH",DFN,IDT,0)) Q:'ID
"RTN","HMPEVNT",75,0)
 S ACT=$S(DGPMA:"",1:"@")
"RTN","HMPEVNT",76,0)
 D POST(DFN,"visit",ID,ACT)
"RTN","HMPEVNT",77,0)
 ; POST(DFN,"ptf",PTF,ACT):DGPMT=3
"RTN","HMPEVNT",78,0)
 Q
"RTN","HMPEVNT",79,0)
 ;
"RTN","HMPEVNT",80,0)
NEWINPT() ; -- is DFN newly admitted?
"RTN","HMPEVNT",81,0)
 N Y S Y=0
"RTN","HMPEVNT",82,0)
 I DGPMT=1,DGPMA,'DGPMP,+$G(^DPT(DFN,.105))=DGPMDA S Y=1 ;new admission
"RTN","HMPEVNT",83,0)
 Q Y
"RTN","HMPEVNT",84,0)
 ;
"RTN","HMPEVNT",85,0)
PCMMT ; -- SCMC PATIENT TEAM CHANGES protocol listener
"RTN","HMPEVNT",86,0)
 I '$P($G(SCPTTMB4),U,8),'$P($G(SCPTTMAF),U,8) Q  ;not pc change
"RTN","HMPEVNT",87,0)
 N DFN S DFN=$S($G(SCPTTMAF):+SCPTTMAF,1:+$G(SCPTTMB4)) Q:'DFN
"RTN","HMPEVNT",88,0)
 D POST(DFN,"patient",DFN)
"RTN","HMPEVNT",89,0)
 Q
"RTN","HMPEVNT",90,0)
 ;
"RTN","HMPEVNT",91,0)
PCMMTP ; -- SCMC PATIENT TEAM POSITION CHANGES protocol listener
"RTN","HMPEVNT",92,0)
 I '$P($G(SCPTTPB4),U,5),'$P($G(SCPTTPAF),U,5) Q  ;not pc change
"RTN","HMPEVNT",93,0)
 N TM,DFN
"RTN","HMPEVNT",94,0)
 S TM=$S($G(SCPTTPAF):+SCPTTPAF,1:+$G(SCPTTPB4)) Q:'TM
"RTN","HMPEVNT",95,0)
 S DFN=+$G(^SCPT(404.42,+TM,0)) ;$$GET1^DIQ(404.42,TM_",",.01,"I")
"RTN","HMPEVNT",96,0)
 D POST(DFN,"patient",DFN)
"RTN","HMPEVNT",97,0)
 Q
"RTN","HMPEVNT",98,0)
 ;
"RTN","HMPEVNT",99,0)
SDAM ; -- SDAM APPOINTMENT EVENTS protocol listener
"RTN","HMPEVNT",100,0)
 I $G(SDATA) D  Q  ;appointments
"RTN","HMPEVNT",101,0)
 . N DFN,DATE,HLOC,STS,REASON,PROV
"RTN","HMPEVNT",102,0)
 . S DFN=+$P(SDATA,U,2) Q:DFN<1
"RTN","HMPEVNT",103,0)
 . Q:'$D(^HMP(800000,"AITEM",DFN))
"RTN","HMPEVNT",104,0)
 . S DATE=+$P(SDATA,U,3),HLOC=+$P(SDATA,U,4),(PROV,REASON)=""
"RTN","HMPEVNT",105,0)
 . ;I SDAMEVT=1 K DIR S DIR(0)="F^3:20",DIR("A")="Enter Reason for Appointment: ",DIR("?")="Answer must be 2-20 characters" D ^DIR S REASON=Y
"RTN","HMPEVNT",106,0)
 . ;I SDAMEVT=1 K DIC S DIC="^VA(200,",DIC("A")="Select Patient's Provider: ",DIC(0)="AEQ",D="AK.PROVIDER" D IX^DIC S PROV=$P(Y,"^",1,2)
"RTN","HMPEVNT",107,0)
 . D POST(DFN,"appointment","A;"_DATE_";"_HLOC_";"_REASON_";"_$TR($P(PROV,U,1,2),"^",";"))
"RTN","HMPEVNT",108,0)
 Q
"RTN","HMPEVNT",109,0)
 ;
"RTN","HMPEVNT",110,0)
PCE ; -- PXK VISIT DATA EVENT protocol listener
"RTN","HMPEVNT",111,0)
 N IEN,PX0A,PX0B,DFN,DA,ACT
"RTN","HMPEVNT",112,0)
 S IEN=+$O(^TMP("PXKCO",$J,0)) Q:IEN<1
"RTN","HMPEVNT",113,0)
 S PX0A=$G(^TMP("PXKCO",$J,IEN,"VST",IEN,0,"AFTER")),PX0B=$G(^("BEFORE"))
"RTN","HMPEVNT",114,0)
 S DFN=$S($L(PX0A):+$P(PX0A,U,5),1:+$P(PX0B,U,5))
"RTN","HMPEVNT",115,0)
 Q:DFN<1  Q:'$D(^HMP(800000,"AITEM",DFN))
"RTN","HMPEVNT",116,0)
 ; Visit file
"RTN","HMPEVNT",117,0)
 S ACT=$S(PX0A="":"@",1:"")
"RTN","HMPEVNT",118,0)
 D POST(DFN,"visit",IEN,ACT)
"RTN","HMPEVNT",119,0)
 ; check V-files
"RTN","HMPEVNT",120,0)
 F SUB="HF","IMM","XAM","CPT","PED","POV","SK" D
"RTN","HMPEVNT",121,0)
 . S DA=0 F  S DA=$O(^TMP("PXKCO",$J,IEN,SUB,DA)) Q:DA<1  D
"RTN","HMPEVNT",122,0)
 .. S ACT=$S($G(^TMP("PXKCO",$J,IEN,SUB,DA,0,"AFTER"))="":"@",1:"")
"RTN","HMPEVNT",123,0)
 .. D POST(DFN,$$NAME(SUB),DA,ACT)
"RTN","HMPEVNT",124,0)
 Q
"RTN","HMPEVNT",125,0)
 ;
"RTN","HMPEVNT",126,0)
NAME(X) ; -- return object name for V-files
"RTN","HMPEVNT",127,0)
 N Y S Y=""
"RTN","HMPEVNT",128,0)
 I X="HF"  S Y="factor"
"RTN","HMPEVNT",129,0)
 I X="IMM" S Y="immunization"
"RTN","HMPEVNT",130,0)
 I X="XAM" S Y="exam"
"RTN","HMPEVNT",131,0)
 I X="CPT" S Y="cpt"
"RTN","HMPEVNT",132,0)
 I X="PED" S Y="education"
"RTN","HMPEVNT",133,0)
 I X="POV" S Y="pov"
"RTN","HMPEVNT",134,0)
 I X="SK"  S Y="skin"
"RTN","HMPEVNT",135,0)
 Q Y
"RTN","HMPEVNT",136,0)
 ;
"RTN","HMPEVNT",137,0)
ZPCE ; -- old PXK VISIT DATA EVENT protocol listener [not in use]
"RTN","HMPEVNT",138,0)
 N IEN,PX0,PX150,DFN,DA
"RTN","HMPEVNT",139,0)
 S IEN=+$O(^TMP("PXKCO",$J,0)) Q:IEN<1
"RTN","HMPEVNT",140,0)
 S PX0=$G(^TMP("PXKCO",$J,IEN,"VST",IEN,0,"AFTER")) Q:$P(PX0,U,7)="E"
"RTN","HMPEVNT",141,0)
 I PX0="" D POST(DFN,"visit",IEN,"@") Q  ;deleted
"RTN","HMPEVNT",142,0)
 S PX150=$G(^TMP("PXKCO",$J,IEN,"VST",IEN,150,"AFTER")) Q:$P(PX150,U,3)'="P"
"RTN","HMPEVNT",143,0)
 S DFN=+$P(PX0,U,5) Q:DFN<1  Q:'$D(^HMP(800000,"AITEM",DFN))
"RTN","HMPEVNT",144,0)
 D POST(DFN,"visit",IEN)
"RTN","HMPEVNT",145,0)
 S DA=0 F  S DA=$O(^TMP("PXKCO",$J,IEN,"IMM",DA)) Q:DA<1  D POST(DFN,"immunization",DA)
"RTN","HMPEVNT",146,0)
 S DA=0 F  S DA=$O(^TMP("PXKCO",$J,IEN,"HF",DA)) Q:DA<1  D POST(DFN,"factor",DA)
"RTN","HMPEVNT",147,0)
 Q
"RTN","HMPEVNT",148,0)
 ;
"RTN","HMPEVNT",149,0)
XQOR(MSG) ; -- messaging listener (update meds, labs, xrays, consults)
"RTN","HMPEVNT",150,0)
 N HMPMSG,HMPPKG,MSH,ORC,DFN
"RTN","HMPEVNT",151,0)
 S HMPMSG=$S($L($G(MSG)):MSG,1:"MSG") Q:'$O(@HMPMSG@(0))
"RTN","HMPEVNT",152,0)
 S MSH=0 F  S MSH=$O(@HMPMSG@(MSH)) Q:MSH'>0  Q:$E(@HMPMSG@(MSH),1,3)="MSH"
"RTN","HMPEVNT",153,0)
 Q:'MSH  Q:'$L($G(@HMPMSG@(MSH)))
"RTN","HMPEVNT",154,0)
 S HMPPKG=$$TYPE($P(@HMPMSG@(MSH),"|",3))  Q:'$L(HMPPKG)
"RTN","HMPEVNT",155,0)
 S DFN=$$PID Q:DFN<1  Q:'$D(^HMP(800000,"AITEM",DFN))
"RTN","HMPEVNT",156,0)
 S ORC=MSH F  S ORC=$O(@HMPMSG@(+ORC)) Q:ORC'>0  I $E(@HMPMSG@(ORC),1,3)="ORC" D
"RTN","HMPEVNT",157,0)
 . N ORDCNTRL,PKGIFN,ORIFN
"RTN","HMPEVNT",158,0)
 . S ORC=ORC_U_@HMPMSG@(ORC),ORDCNTRL=$TR($P(ORC,"|",2),"@","P")
"RTN","HMPEVNT",159,0)
 . ; QUIT if action failed, conversion, purge, or backdoor verify/new
"RTN","HMPEVNT",160,0)
 . I ORDCNTRL["U"!("DE^ZC^ZP^ZR^ZV^SN"[ORDCNTRL) Q
"RTN","HMPEVNT",161,0)
 . S ORIFN=+$P($P(ORC,"|",3),U),PKGIFN=$P($P(ORC,"|",4),U)
"RTN","HMPEVNT",162,0)
 . ; if order has a parent, use parent# and update entire order
"RTN","HMPEVNT",163,0)
 . S ORIFN=$S($P($G(^OR(100,ORIFN,3)),U,9):$P(^(3),U,9),1:ORIFN)
"RTN","HMPEVNT",164,0)
 . I $$RESULT D  ;update ancillary domains
"RTN","HMPEVNT",165,0)
 .. D POST(DFN,HMPPKG,PKGIFN)
"RTN","HMPEVNT",166,0)
 .. D:HMPPKG="image" POST(DFN,"document",PKGIFN)
"RTN","HMPEVNT",167,0)
 .. I HMPPKG="lab",PKGIFN'["CH",'$$LRTIU(DFN,PKGIFN) D POST(DFN,"document",$P(PKGIFN,";",4,5))
"RTN","HMPEVNT",168,0)
 . I ORIFN,ORDCNTRL'="ZD" D  ;update order(s)
"RTN","HMPEVNT",169,0)
 .. D POST(DFN,"order",ORIFN)
"RTN","HMPEVNT",170,0)
 .. N ORIG S ORIG=+$P($G(^OR(100,ORIFN,3)),U,5)
"RTN","HMPEVNT",171,0)
 .. I ORIG D POST(DFN,"order",ORIG) ;need fwd ptrs, sig flds
"RTN","HMPEVNT",172,0)
 Q
"RTN","HMPEVNT",173,0)
 ;
"RTN","HMPEVNT",174,0)
RESULT() ; -- Return 1 or 0, if message broadcasts a result
"RTN","HMPEVNT",175,0)
 ;           [may modify PKGIFN for use in POST]
"RTN","HMPEVNT",176,0)
 N Y S Y=0
"RTN","HMPEVNT",177,0)
 I HMPPKG="consult" S Y=1,PKGIFN=+PKGIFN G RQ
"RTN","HMPEVNT",178,0)
 I HMPPKG="med"     S Y=1,PKGIFN=ORIFN G RQ
"RTN","HMPEVNT",179,0)
 I HMPPKG="lab"     S:ORDCNTRL="RE"&($L(PKGIFN,";")>3) Y=1 G RQ
"RTN","HMPEVNT",180,0)
 I HMPPKG="image"   S:PKGIFN["~" Y=1,PKGIFN=$TR($P(PKGIFN,"~",2,3),"~","-") G RQ
"RTN","HMPEVNT",181,0)
RQ Q Y
"RTN","HMPEVNT",182,0)
 ;
"RTN","HMPEVNT",183,0)
LRTIU(DFN,ORPK) ; -- Return 1 or 0, if LR report is in TIU
"RTN","HMPEVNT",184,0)
 I $G(DFN)<1!'$L($G(ORPK)) Q 0
"RTN","HMPEVNT",185,0)
 I ORPK["CH"!(ORPK["MI") Q 0
"RTN","HMPEVNT",186,0)
 N SUB,IDT,LRDFN
"RTN","HMPEVNT",187,0)
 S SUB=$P(ORPK,";",4),IDT=+$P(ORPK,";",5),LRDFN=+$G(^DPT(+DFN,"LR"))
"RTN","HMPEVNT",188,0)
 I $O(^LR(LRDFN,SUB,IDT,.05,0)) Q 1
"RTN","HMPEVNT",189,0)
 Q 0
"RTN","HMPEVNT",190,0)
 ;
"RTN","HMPEVNT",191,0)
NA(MSG) ; -- messaging listener (new backdoor orders)
"RTN","HMPEVNT",192,0)
 N HMPMSG,HMPPKG,MSH,ORC,DFN
"RTN","HMPEVNT",193,0)
 S HMPMSG=$S($L($G(MSG)):MSG,1:"MSG") Q:'$O(@HMPMSG@(0))
"RTN","HMPEVNT",194,0)
 S MSH=0 F  S MSH=$O(@HMPMSG@(MSH)) Q:MSH'>0  Q:$E(@HMPMSG@(MSH),1,3)="MSH"
"RTN","HMPEVNT",195,0)
 Q:'MSH  Q:'$L($G(@HMPMSG@(MSH)))
"RTN","HMPEVNT",196,0)
 S HMPPKG=$$TYPE($P(@HMPMSG@(MSH),"|",5))  Q:'$L(HMPPKG)
"RTN","HMPEVNT",197,0)
 S DFN=$$PID Q:DFN<1  Q:'$D(^HMP(800000,"AITEM",DFN))
"RTN","HMPEVNT",198,0)
 S ORC=MSH F  S ORC=$O(@HMPMSG@(+ORC)) Q:ORC'>0  I $E(@HMPMSG@(ORC),1,3)="ORC" D
"RTN","HMPEVNT",199,0)
 . N ORDCNTRL,ORIFN
"RTN","HMPEVNT",200,0)
 . S ORC=ORC_U_@HMPMSG@(ORC),ORDCNTRL=$TR($P(ORC,"|",2),"@","P")
"RTN","HMPEVNT",201,0)
 . Q:ORDCNTRL'="NA"
"RTN","HMPEVNT",202,0)
 . S ORIFN=+$P($P(ORC,"|",3),U) D POST(DFN,"order",ORIFN)
"RTN","HMPEVNT",203,0)
 . I HMPPKG="med" D POST(DFN,HMPPKG,ORIFN)
"RTN","HMPEVNT",204,0)
 Q
"RTN","HMPEVNT",205,0)
 ;
"RTN","HMPEVNT",206,0)
TYPE(NAME) ; -- Returns type name for XML
"RTN","HMPEVNT",207,0)
 I NAME="LABORATORY"  Q "lab"
"RTN","HMPEVNT",208,0)
 I NAME="PHARMACY"    Q "med"
"RTN","HMPEVNT",209,0)
 I NAME="CONSULTS"    Q "consult"
"RTN","HMPEVNT",210,0)
 I NAME="PROCEDURES"  Q "consult"
"RTN","HMPEVNT",211,0)
 I NAME="RADIOLOGY"   Q "image"
"RTN","HMPEVNT",212,0)
 I NAME="IMAGING"     Q "image"
"RTN","HMPEVNT",213,0)
 I NAME="ORDER ENTRY" Q "order"
"RTN","HMPEVNT",214,0)
 I NAME="DIETETICS"   Q "diet"
"RTN","HMPEVNT",215,0)
 Q ""
"RTN","HMPEVNT",216,0)
 ;
"RTN","HMPEVNT",217,0)
PID() ; -- Returns patient from PID segment in current msg
"RTN","HMPEVNT",218,0)
 N I,SEG,Y S I=MSH
"RTN","HMPEVNT",219,0)
 F  S I=$O(@HMPMSG@(I)) Q:I'>0  S SEG=$E(@HMPMSG@(I),1,3) Q:SEG="ORC"  I SEG="PID" D  Q
"RTN","HMPEVNT",220,0)
 . S Y=+$P(@HMPMSG@(I),"|",4)
"RTN","HMPEVNT",221,0)
 .;I '$D(^DPT(Y,0)) S:$L($P(@HMPMSG@(I),"|",5)) Y=+$P(@HMPMSG@(I),"|",5) ;alt ID for Lab
"RTN","HMPEVNT",222,0)
 Q Y
"RTN","HMPEVNT",223,0)
 ;
"RTN","HMPEVNT",224,0)
PV1() ; -- Returns patient class from PV1 segment in current msg
"RTN","HMPEVNT",225,0)
 N I,SEG,Y S I=MSH,Y=""
"RTN","HMPEVNT",226,0)
 F  S I=$O(@HMPMSG@(I)) Q:I'>0  S SEG=$E(@HMPMSG@(I),1,3) Q:SEG="ORC"  I SEG="PV1" D  Q
"RTN","HMPEVNT",227,0)
 . S Y=$P(@HMPMSG@(I),"|",3)
"RTN","HMPEVNT",228,0)
 I Y="",$G(ORIFN) S Y=$$GET1^DIQ(100,+ORIFN_",",10,"I")
"RTN","HMPEVNT",229,0)
 Q Y
"RTN","HMPEVNT",230,0)
 ;
"RTN","HMPEVNT",231,0)
GMRA(ACT) ; -- GMRA SIGN-OFF ON DATA protocol listener
"RTN","HMPEVNT",232,0)
 ;   also GMRA ENTERED IN ERROR [ACT=@]
"RTN","HMPEVNT",233,0)
 N DFN,IEN
"RTN","HMPEVNT",234,0)
 S DFN=+$G(GMRAPA(0)),IEN=+$G(GMRAPA)
"RTN","HMPEVNT",235,0)
 D POST(DFN,"allergy",IEN,$G(ACT))
"RTN","HMPEVNT",236,0)
 Q
"RTN","HMPEVNT",237,0)
 ;
"RTN","HMPEVNT",238,0)
GMPL(DFN,IEN) ; -- GMPL EVENT protocol listener
"RTN","HMPEVNT",239,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","HMPEVNT",240,0)
 ;N ACT S ACT=$S($P($G(^AUPNPROB(IEN,1)),U,2)="H":"@",1:"")
"RTN","HMPEVNT",241,0)
 D POST(DFN,"problem",IEN) ;,ACT)
"RTN","HMPEVNT",242,0)
 Q
"RTN","HMPEVNT",243,0)
 ;
"RTN","HMPEVNT",244,0)
GMRV(DFN,IEN,ERR) ; -- Vital Measurement file #120.5 AHMP index
"RTN","HMPEVNT",245,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","HMPEVNT",246,0)
 N ACT S ACT=$S($G(ERR):"@",1:"")
"RTN","HMPEVNT",247,0)
 D POST(DFN,"vital",IEN,ACT)
"RTN","HMPEVNT",248,0)
 Q
"RTN","HMPEVNT",249,0)
 ;
"RTN","HMPEVNT",250,0)
MDC(OBS) ; -- MDC OBSERVATION UPDATE protocol listener
"RTN","HMPEVNT",251,0)
 N DFN,ID,ACT
"RTN","HMPEVNT",252,0)
 S DFN=+$G(OBS("PATIENT_ID","I")) Q:DFN<1
"RTN","HMPEVNT",253,0)
 S ID=$G(OBS("OBS_ID","I")) Q:'$L(ID)
"RTN","HMPEVNT",254,0)
 S ACT=$S('$G(OBS("STATUS","I")):"@",1:"")
"RTN","HMPEVNT",255,0)
 D POST(DFN,"obs",ID,ACT)
"RTN","HMPEVNT",256,0)
 I $G(OBS("DOMAIN","VITALS")) D POST(DFN,"vital",ID,ACT)
"RTN","HMPEVNT",257,0)
 Q
"RTN","HMPEVNT",258,0)
 ;
"RTN","HMPEVNT",259,0)
CP(DFN,ID,ACT) ; -- CP Transaction file #702 AHMP index
"RTN","HMPEVNT",260,0)
 S DFN=+$G(DFN),ID=$G(ID)
"RTN","HMPEVNT",261,0)
 D POST(DFN,"procedure",ID,$G(ACT))
"RTN","HMPEVNT",262,0)
 Q
"RTN","HMPEVNT",263,0)
 ;
"RTN","HMPEVNT",264,0)
SR(DFN,IEN,ACT) ; -- Surgery [SROERR] update
"RTN","HMPEVNT",265,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","HMPEVNT",266,0)
 D POST(DFN,"surgery",IEN,$G(ACT))
"RTN","HMPEVNT",267,0)
 Q
"RTN","HMPEVNT",268,0)
 ;*s68 - BEGINS
"RTN","HMPEVNT",269,0)
TIU(DFN,IEN) ; -- TIU Document file #8925 AHMP index
"RTN","HMPEVNT",270,0)
 N ACT,STS,DAD
"RTN","HMPEVNT",271,0)
 S DFN=+$G(DFN),IEN=+$G(IEN),ACT=""
"RTN","HMPEVNT",272,0)
 S STS=$G(X(2)),DAD=$G(X(3)) ;X = FM data array for index
"RTN","HMPEVNT",273,0)
 S:DAD IEN=DAD I 'DAD D      ;if addendum, repull entire note
"RTN","HMPEVNT",274,0)
 . I STS=15 S ACT="@"        ;retracted
"RTN","HMPEVNT",275,0)
 . I $G(X2(1))="" S ACT="@"  ;deleted (new title = null)
"RTN","HMPEVNT",276,0)
 D POST(DFN,"document",IEN,ACT)
"RTN","HMPEVNT",277,0)
 Q
"RTN","HMPEVNT",278,0)
 ; Deprecated calls
"RTN","HMPEVNT",279,0)
DOCDEF ;
"RTN","HMPEVNT",280,0)
DOCITEM ;
"RTN","HMPEVNT",281,0)
USR ;
"RTN","HMPEVNT",282,0)
 Q
"RTN","HMPEVNT",283,0)
 ; *s68 - END
"RTN","HMPEVNT",284,0)
PSB ; -- HMP PSB EVENTS protocol listener (BCMA)
"RTN","HMPEVNT",285,0)
 N IEN,DFN,ORPK,TYPE,ORIFN
"RTN","HMPEVNT",286,0)
 S IEN=$S($P($G(PSBIEN),",",2)'="":+$P(PSBIEN,",",2),$G(PSBIEN)="+1":+$G(PSBIEN(1)),1:+$G(PSBIEN))
"RTN","HMPEVNT",287,0)
 S DFN=+$G(^PSB(53.79,IEN,0)),ORPK=$P($G(^(.1)),U)
"RTN","HMPEVNT",288,0)
 Q:DFN<1  Q:ORPK<1  S TYPE=$S(ORPK["V":"IV",ORPK["U":5,1:"") Q:TYPE=""
"RTN","HMPEVNT",289,0)
 S ORIFN=+$P($G(^PS(55,DFN,TYPE,+ORPK,0)),U,21)
"RTN","HMPEVNT",290,0)
 D:ORIFN POST(DFN,"med",ORIFN)
"RTN","HMPEVNT",291,0)
 Q
"RTN","HMPEVNT",292,0)
 ;
"RTN","HMPEVNT",293,0)
XU(IEN,ACT) ; -- XU USER ADD/CHANGE/TERMINATE option listener
"RTN","HMPEVNT",294,0)
 S IEN=+$G(IEN) Q:IEN<1
"RTN","HMPEVNT",295,0)
 D POSTX("user",IEN,$G(ACT))
"RTN","HMPEVNT",296,0)
 Q
"RTN","HMPEVNT",297,0)
 ;
"RTN","HMPEVNT",298,0)
POST(DFN,TYPE,ID,ACT) ; -- track updated patient data
"RTN","HMPEVNT",299,0)
 S DFN=+$G(DFN),TYPE=$G(TYPE),ID=$G(ID)
"RTN","HMPEVNT",300,0)
 Q:DFN<1  Q:TYPE=""  Q:ID=""   ;incomplete request
"RTN","HMPEVNT",301,0)
 Q:$G(^XTMP("HMP-off",TYPE))   ;domain turned 'off'
"RTN","HMPEVNT",302,0)
 Q:'$D(^HMP(800000,"AITEM",DFN))  ;patient not subscribed to
"RTN","HMPEVNT",303,0)
 N HMPDT S HMPDT="HMP-"_DT
"RTN","HMPEVNT",304,0)
 ;S ^XTMP(HMPDT,$$NEXT)=DFN_U_TYPE_U_ID_U_$G(ACT)
"RTN","HMPEVNT",305,0)
 N NODES
"RTN","HMPEVNT",306,0)
 D POST^HMPDJFS(DFN,TYPE,ID,$G(ACT),"",.NODES)
"RTN","HMPEVNT",307,0)
 Q
"RTN","HMPEVNT",308,0)
 ;
"RTN","HMPEVNT",309,0)
POSTX(TYPE,ID,ACT) ; -- track updated reference items
"RTN","HMPEVNT",310,0)
 S TYPE=$G(TYPE),ID=$G(ID)
"RTN","HMPEVNT",311,0)
 Q:TYPE=""  Q:ID=""            ;incomplete request
"RTN","HMPEVNT",312,0)
 Q:$G(^XTMP("HMP-off",TYPE))   ;domain turned 'off'
"RTN","HMPEVNT",313,0)
 N HMPDT S HMPDT="HMP-"_DT ;"HMPEF-"_DT
"RTN","HMPEVNT",314,0)
 ;S ^XTMP(HMPDT,$$NEXT)=U_TYPE_U_ID_U_$G(ACT)
"RTN","HMPEVNT",315,0)
 N NODES
"RTN","HMPEVNT",316,0)
 D POST^HMPDJFS("OPD",TYPE,ID,$G(ACT),"",.NODES)
"RTN","HMPEVNT",317,0)
 Q
"RTN","HMPEVNT",318,0)
 ;
"RTN","HMPEVNT",319,0)
NEXT() ; -- Return next sequential number in ^XTMP(HMPDT,n)
"RTN","HMPEVNT",320,0)
 L +^XTMP(HMPDT):5 ;I'$T ??
"RTN","HMPEVNT",321,0)
 N Y S Y=+$O(^XTMP(HMPDT,"A"),-1)+1
"RTN","HMPEVNT",322,0)
 I '$D(^XTMP(HMPDT,0)) S ^(0)=$$FMADD^XLFDT(DT,3)_U_DT_"^HMP Updates"
"RTN","HMPEVNT",323,0)
 L -^XTMP(HMPDT)
"RTN","HMPEVNT",324,0)
 Q Y
"RTN","HMPEVNT",325,0)
 ;
"RTN","HMPEVNT",326,0)
HTTP(URL,DFN,TYPE,ID) ; -- send message that TYPE/ID has been updated [not in use]
"RTN","HMPEVNT",327,0)
 N DIV,X,HMPX
"RTN","HMPEVNT",328,0)
 S DFN=+$G(DFN) Q:DFN<1  ;patient req'd
"RTN","HMPEVNT",329,0)
 S DIV=$P($$SITE^VASITE,U,3) ;station number
"RTN","HMPEVNT",330,0)
 S URL=$G(URL)_"?division="_DIV_"&dfn="_+$G(DFN)
"RTN","HMPEVNT",331,0)
 I $L($G(TYPE)) S URL=URL_"&type="_TYPE
"RTN","HMPEVNT",332,0)
 I $L($G(ID))   S URL=URL_"&id="_ID
"RTN","HMPEVNT",333,0)
 S ^XTMP("HMP",DFN,"HTTP")=$H
"RTN","HMPEVNT",334,0)
 S X=$$GETURL^XTHC10(URL,,"HMPX")
"RTN","HMPEVNT",335,0)
 ; I X>200 = ERROR
"RTN","HMPEVNT",336,0)
 Q
"RTN","HMPFPTC")
0^88^B14517957
"RTN","HMPFPTC",1,0)
HMPFPTC ;SLC/MKB,AGP - Patient look-up Utilities at Facility ; 6/06/12
"RTN","HMPFPTC",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPFPTC",3,0)
 ;
"RTN","HMPFPTC",4,0)
CHKS(HMPZ,DFN) ; perform patient select checks
"RTN","HMPFPTC",5,0)
 ;
"RTN","HMPFPTC",6,0)
 N ACCESS,CHKS,CNT,ERR,I,IEN,STR,X,HMPY
"RTN","HMPFPTC",7,0)
 ; check for sensitive record
"RTN","HMPFPTC",8,0)
 S STR="patientChecks"
"RTN","HMPFPTC",9,0)
 S ACCESS=0
"RTN","HMPFPTC",10,0)
 D PTSEC^DGSEC4(.HMPY,DFN)  ;IA #3027
"RTN","HMPFPTC",11,0)
 S ACCESS=1
"RTN","HMPFPTC",12,0)
 I HMPY(1)>0 D
"RTN","HMPFPTC",13,0)
 .S CHKS("sensitive","dfn")=DFN
"RTN","HMPFPTC",14,0)
 .S ACCESS=(HMPY(1)<3)
"RTN","HMPFPTC",15,0)
 .S CHKS("sensitive","mayAccess")=$S(ACCESS=1:"true",1:"false")
"RTN","HMPFPTC",16,0)
 .S CHKS("sensitive","logAccess")=$S(HMPY(1)>1:"true",1:"false")
"RTN","HMPFPTC",17,0)
 .S CNT=2,X=""
"RTN","HMPFPTC",18,0)
 .F  S CNT=$O(HMPY(CNT)) Q:CNT'>0  S X=X_$C(13)_$C(10)_$G(HMPY(CNT))
"RTN","HMPFPTC",19,0)
 .S CHKS("sensitive","text")=X
"RTN","HMPFPTC",20,0)
 ;
"RTN","HMPFPTC",21,0)
 ; check for deceased patient
"RTN","HMPFPTC",22,0)
 I +$G(^DPT(DFN,.35)) D
"RTN","HMPFPTC",23,0)
 . S CHKS("deceased","text")="This patient died on "_$$FMTE^XLFDT(^DPT(DFN,.35),"D")_"."_$C(13)_$C(10)_" Do you wish to continue?"
"RTN","HMPFPTC",24,0)
 ;
"RTN","HMPFPTC",25,0)
 ; check for similar patients
"RTN","HMPFPTC",26,0)
 K HMPY
"RTN","HMPFPTC",27,0)
 N MSG,SIM,SIMPAT,TEXT S MSG=0,SIM=0
"RTN","HMPFPTC",28,0)
 D GUIBS5A^DPTLK6(.HMPY,DFN)  ;IA #3593
"RTN","HMPFPTC",29,0)
 I HMPY(1)>0 D
"RTN","HMPFPTC",30,0)
 .S TEXT=""
"RTN","HMPFPTC",31,0)
 .S I=1 F  S I=$O(HMPY(I)) Q:'I  S X=HMPY(I) D
"RTN","HMPFPTC",32,0)
 .. S SIM=SIM+1
"RTN","HMPFPTC",33,0)
 .. I $E(X)=0 S TEXT=$S($L(TEXT):TEXT_$C(13)_$C(10)_$P(X,U,2),1:$P(X,U,2))
"RTN","HMPFPTC",34,0)
 .. I $E(X)=1 D
"RTN","HMPFPTC",35,0)
 ... ;S CHKS("similar",SIM,"dfn")=$P(X,U,2)
"RTN","HMPFPTC",36,0)
 ... ;S CHKS("similar",SIM,"name")=$P(X,U,3)
"RTN","HMPFPTC",37,0)
 ... ;S CHKS("similar",SIM,"dob")=$$FMTE^XLFDT($P(X,U,4),"D")
"RTN","HMPFPTC",38,0)
 ... ;S CHKS("similar",SIM,"ssn")=$P(X,U,5)
"RTN","HMPFPTC",39,0)
 ... S SIMPAT="Patient Name: "_$P(X,U,3)_" Date of Birth: "_$$FMTE^XLFDT($P(X,U,4),"D")_" SSN: "_$P(X,U,5)
"RTN","HMPFPTC",40,0)
 ... S TEXT=TEXT_$C(13)_$C(10)_SIMPAT
"RTN","HMPFPTC",41,0)
 .S CHKS("similar","text")=TEXT
"RTN","HMPFPTC",42,0)
 ;
"RTN","HMPFPTC",43,0)
 ; possibly check means test: GUIMTD^DPTLK6
"RTN","HMPFPTC",44,0)
 ; possibly check legacy data: I $L($T(HXDATA^A7RDPAGU)...
"RTN","HMPFPTC",45,0)
 ;
"RTN","HMPFPTC",46,0)
 I ACCESS D PRF(DFN,.CHKS)
"RTN","HMPFPTC",47,0)
 S ERR(0)=""
"RTN","HMPFPTC",48,0)
 ;S HMP=$$ENCODE^HMPJSON("CHKS","ERR")
"RTN","HMPFPTC",49,0)
 D ENCODE^HMPJSON("CHKS","HMPZ","ERR")
"RTN","HMPFPTC",50,0)
 Q
"RTN","HMPFPTC",51,0)
 ;
"RTN","HMPFPTC",52,0)
PRF(DFN,CHKS) ; get Patient Record Flags
"RTN","HMPFPTC",53,0)
 N HMPY,EDI,PRF,N,X
"RTN","HMPFPTC",54,0)
 Q:$$GETACT^DGPFAPI(DFN,"HMPY")'>0
"RTN","HMPFPTC",55,0)
 S EDI=0 F  S EDI=$O(HMPY(EDI)) Q:EDI<1  K PRF D
"RTN","HMPFPTC",56,0)
 . S CHKS("patientRecordFlags",EDI,"assignmentStatus")="Active"
"RTN","HMPFPTC",57,0)
 . S CHKS("patientRecordFlags",EDI,"assignTS")=$$JSONDT^HMPUTILS($P($G(HMPY(EDI,"ASSIGNDT")),U))
"RTN","HMPFPTC",58,0)
 . S CHKS("patientRecordFlags",EDI,"approved")=$P($G(HMPY(EDI,"APPRVBY")),U,2)
"RTN","HMPFPTC",59,0)
 . S CHKS("patientRecordFlags",EDI,"nextReviewDT")=$$JSONDT^HMPUTILS($P($G(HMPY(EDI,"REVIEWDT")),U))
"RTN","HMPFPTC",60,0)
 . S CHKS("patientRecordFlags",EDI,"name")=$P($G(HMPY(EDI,"FLAG")),U,2)
"RTN","HMPFPTC",61,0)
 . S CHKS("patientRecordFlags",EDI,"type")=$P($G(HMPY(EDI,"FLAGTYPE")),U,2)
"RTN","HMPFPTC",62,0)
 . S CHKS("patientRecordFlags",EDI,"category")=$P($G(HMPY(EDI,"CATEGORY")),U,2)
"RTN","HMPFPTC",63,0)
 . S CHKS("patientRecordFlags",EDI,"ownerSite")=$P($G(HMPY(EDI,"OWNER")),U,2)
"RTN","HMPFPTC",64,0)
 . S CHKS("patientRecordFlags",EDI,"originatingSite")=$P($G(HMPY(EDI,"ORIGSITE")),U,2)
"RTN","HMPFPTC",65,0)
 . S N=1,X=$G(HMPY(EDI,"NARR",1,0))
"RTN","HMPFPTC",66,0)
 . F  S N=$O(HMPY(EDI,"NARR",N)) Q:N<1  S X=X_$C(13)_$C(10)_$G(HMPY(EDI,"NARR",N,0))
"RTN","HMPFPTC",67,0)
 . S CHKS("patientRecordFlags",EDI,"text")=X
"RTN","HMPFPTC",68,0)
 Q
"RTN","HMPFPTC",69,0)
 ;
"RTN","HMPFPTC",70,0)
LOG(HMPZ,DFN) ; Make entry in security log for sensitive patient access
"RTN","HMPFPTC",71,0)
 N ERR,RESULTS,HMPY,X
"RTN","HMPFPTC",72,0)
 D NOTICE^DGSEC4(.HMPY,DFN) ;IA #3027
"RTN","HMPFPTC",73,0)
 S X=$S(HMPY:"ok",1:"fail")
"RTN","HMPFPTC",74,0)
 S RESULTS("result")=X
"RTN","HMPFPTC",75,0)
 ;S HMP=$$ENCODE^HMPJSON("RESULTS","ERR")
"RTN","HMPFPTC",76,0)
 D ENCODE^HMPJSON("RESULTS","HMPZ","ERR")
"RTN","HMPFPTC",77,0)
 Q
"RTN","HMPFPTC",78,0)
 ;
"RTN","HMPFPTC",79,0)
ENROS(HMPZ,DFNARRAY) ;PROCESS PATIENTS FROM A ROSTER
"RTN","HMPFPTC",80,0)
 N DFN S DFN=0
"RTN","HMPFPTC",81,0)
 F  S DFN=$O(DFNARRAY(DFN)) Q:DFN'>0  D CHKS(.HMPZ,DFN)
"RTN","HMPFPTC",82,0)
 Q
"RTN","HMPFPTC",83,0)
 ;
"RTN","HMPFPTC",84,0)
TEST ; 
"RTN","HMPFPTC",85,0)
 S EDPSITE=$$IEN^XUAF4(442),NAME="doe,john"
"RTN","HMPFPTC",86,0)
 D CHKS(1,"",NAME)
"RTN","HMPFPTC",87,0)
 ;N PID S EDPSITE=$$IEN^XUAF4(442)
"RTN","HMPFPTC",88,0)
 ;R "DFN:",PID Q:PID=""  W !
"RTN","HMPFPTC",89,0)
 ;D CHK(1,PID,$P(^DPT(PID,0),U))
"RTN","HMPFPTC",90,0)
 N I S I=0 F  S I=$O(EDPXML(I)) Q:'I  W !,EDPXML(I)
"RTN","HMPFPTC",91,0)
 K EDPXML
"RTN","HMPFPTC",92,0)
 Q
"RTN","HMPFPTC",93,0)
TEST1 ;
"RTN","HMPFPTC",94,0)
 S EDPSITE=$$IEN^XUAF4(442),NAME="doe,john"
"RTN","HMPFPTC",95,0)
 D CHKS(1,"",NAME)
"RTN","HMPFPTC",96,0)
 ;
"RTN","HMPFPTC",97,0)
 ;DO LATER?  -- linked progress notes
"RTN","HMPFPTC",98,0)
 ;D GETTITLE^TIUPRF2(.EDPT,DFN,EDI),GETNOTES^TIUPRF2(.EDPN,DFN,EDPT,1)
"RTN","HMPFPTC",99,0)
 ;I $O(EDPN(0)) D
"RTN","HMPFPTC",100,0)
 ;. D XML^EDPX("<notes>")
"RTN","HMPFPTC",101,0)
 ;. S N=0 F  S N=$O(EDPN(N)) Q:N<1  K PN S X=EDPN(N) D
"RTN","HMPFPTC",102,0)
 ;.. S PN("id")=+X,PN("action")=$P(X,U,2),PN("author")=$P(X,U,4)
"RTN","HMPFPTC",103,0)
 ;.. S PN("noteTS")=9999999-N
"RTN","HMPFPTC",104,0)
 ;.. D TGET^TIUSRVR1(.EDPX,+X)
"RTN","HMPFPTC",105,0)
 ;.. S X=$$XMLA^EDPX("note",.PN),X=$TR(X,"/") D XML^EDPX(X)
"RTN","HMPFPTC",106,0)
 ;.. S I=1,X=$G(@EDPX@(1))
"RTN","HMPFPTC",107,0)
 ;.. F  S I=$O(@EDPX@(I)) Q:I<1  S X=X_$C(13,10)_$G(@EDPX@(I))
"RTN","HMPFPTC",108,0)
 ;.. S X="<text>"_$$ESC^EDPX(X)_"</text>" D XML^EDPX(X)
"RTN","HMPFPTC",109,0)
 ;.. D XML^EDPX("</note>")
"RTN","HMPFPTC",110,0)
 ;. D XML^EDPX("</notes>")
"RTN","HMPHTTP")
0^89^B14238772
"RTN","HMPHTTP",1,0)
HMPHTTP ;SLC/MKB -- HTTP interface
"RTN","HMPHTTP",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPHTTP",3,0)
 ;
"RTN","HMPHTTP",4,0)
 ; External References          DBIA#
"RTN","HMPHTTP",5,0)
 ; -------------------          -----
"RTN","HMPHTTP",6,0)
 ; %ZTLOAD                      10063
"RTN","HMPHTTP",7,0)
 ; DIR                          10026
"RTN","HMPHTTP",8,0)
 ; VASITE                       10112
"RTN","HMPHTTP",9,0)
 ; XLFCRC                        3156
"RTN","HMPHTTP",10,0)
 ; XLFUTL                        2622
"RTN","HMPHTTP",11,0)
 ; XPAR                          2263
"RTN","HMPHTTP",12,0)
 ; XTHC10                        5515
"RTN","HMPHTTP",13,0)
 ; XUPARAM                       2541
"RTN","HMPHTTP",14,0)
 ;
"RTN","HMPHTTP",15,0)
EN ; -- manage the background job
"RTN","HMPHTTP",16,0)
 N ZTSK,STS
"RTN","HMPHTTP",17,0)
 S ZTSK=+$G(^XTMP("HMP","ZTSK")),STS=$$STS
"RTN","HMPHTTP",18,0)
 W !,?24,"--- HMP Patient Data Monitor ---"
"RTN","HMPHTTP",19,0)
 W !!,"Task"_$S(ZTSK:" #"_ZTSK,1:"")_" is "_$P(STS,U,2)_".",!
"RTN","HMPHTTP",20,0)
 ;
"RTN","HMPHTTP",21,0)
 I ZTSK,+STS=1!(+STS=2) D:$$STOP  Q
"RTN","HMPHTTP",22,0)
 . N X S X=$$ASKSTOP^%ZTLOAD(ZTSK)
"RTN","HMPHTTP",23,0)
 . W !,$P(X,U,2),!
"RTN","HMPHTTP",24,0)
 ;
"RTN","HMPHTTP",25,0)
 I $$START D
"RTN","HMPHTTP",26,0)
 . W !!,"Starting HMP Patient Data Monitor ... " D QUE
"RTN","HMPHTTP",27,0)
 . I $G(ZTSK) W "task #"_ZTSK_" started.",!
"RTN","HMPHTTP",28,0)
 . E  W !,"ERROR: task NOT created.  Try again later.",!
"RTN","HMPHTTP",29,0)
 . S ^XTMP("HMP","ZTSK")=$G(ZTSK)
"RTN","HMPHTTP",30,0)
 Q
"RTN","HMPHTTP",31,0)
 ;
"RTN","HMPHTTP",32,0)
STS() ; -- get the status of ZTSK
"RTN","HMPHTTP",33,0)
 D STAT^%ZTLOAD
"RTN","HMPHTTP",34,0)
 N Y S Y=+$G(ZTSK(1))_U_$G(ZTSK(2))
"RTN","HMPHTTP",35,0)
 Q Y
"RTN","HMPHTTP",36,0)
 ;
"RTN","HMPHTTP",37,0)
STOP() ; -- stop the task?
"RTN","HMPHTTP",38,0)
 N X,Y,DIR
"RTN","HMPHTTP",39,0)
 S DIR("A")="Do you want to stop the data monitor? ",DIR(0)="YA",DIR("B")="NO"
"RTN","HMPHTTP",40,0)
 S DIR("?",1)="Enter YES to stop or cancel the data monitor; please restart ASAP!"
"RTN","HMPHTTP",41,0)
 S DIR("?",3)="This job must be running in the background for AViVA to be notified"
"RTN","HMPHTTP",42,0)
 S DIR("?")="when new patient data is available.",DIR("?",2)="  "
"RTN","HMPHTTP",43,0)
 D ^DIR S:Y<1 Y=0
"RTN","HMPHTTP",44,0)
 Q Y
"RTN","HMPHTTP",45,0)
 ;
"RTN","HMPHTTP",46,0)
START() ; -- [re]start the task?
"RTN","HMPHTTP",47,0)
 N X,Y,DIR
"RTN","HMPHTTP",48,0)
 S DIR(0)="YA",DIR("B")="YES"
"RTN","HMPHTTP",49,0)
 S DIR("A")="Do you want to "_$S(STS:"re",1:"")_"start the data monitor? "
"RTN","HMPHTTP",50,0)
 S DIR("?",1)="Enter YES to "_$S(STS:"re",1:"")_"start the HMP Patient Data Monitor."
"RTN","HMPHTTP",51,0)
 S DIR("?",3)="This job must be running in the background for AViVA to be notified"
"RTN","HMPHTTP",52,0)
 S DIR("?")="when new patient data is available.",DIR("?",2)="  "
"RTN","HMPHTTP",53,0)
 D ^DIR S:Y<1 Y=0
"RTN","HMPHTTP",54,0)
 Q Y
"RTN","HMPHTTP",55,0)
 ;
"RTN","HMPHTTP",56,0)
QUE ; -- create the background task: returns ZTSK
"RTN","HMPHTTP",57,0)
 N IO,IOP,ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC,ZTSAVE,%ZIS
"RTN","HMPHTTP",58,0)
 S %ZIS="0H",IOP="NULL" D ^%ZIS I POP W !,"Null Device Not Found" Q
"RTN","HMPHTTP",59,0)
 S ZTDESC="HMP new data monitor for AViVA",ZTDTH=$H,ZTIO=""
"RTN","HMPHTTP",60,0)
 S ZTRTN="POKE^HMPHTTP" K ZTSK
"RTN","HMPHTTP",61,0)
 D ^%ZTLOAD
"RTN","HMPHTTP",62,0)
 Q
"RTN","HMPHTTP",63,0)
 ;
"RTN","HMPHTTP",64,0)
POKE ; -- background job to poke the client when new data is available
"RTN","HMPHTTP",65,0)
 ; ^XTMP("HMP",DFN,TYPE,ID) = new data since last update
"RTN","HMPHTTP",66,0)
 N DIV,ID,DFN,DATA,IOP,X,DA,TOKEN,NEW K ZTSTOP
"RTN","HMPHTTP",67,0)
 S IOP="NULL" D ^%ZIS
"RTN","HMPHTTP",68,0)
 S ID=(+$H)+$P($H,",",2)
"RTN","HMPHTTP",69,0)
 S DFN=0 F  S DFN=$O(^XTMP("HMP",DFN)) Q:DFN<1  I $D(^(DFN))>9 D
"RTN","HMPHTTP",70,0)
 . L +^XTMP("HMP",DFN):5 Q:'$T  ;try again next cycle
"RTN","HMPHTTP",71,0)
 . K DATA M DATA=^XTMP("HMP",DFN)
"RTN","HMPHTTP",72,0)
 . S X=$G(^XTMP("HMP",DFN)) K ^(DFN) S ^(DFN)=X ;clear list, keep subscription
"RTN","HMPHTTP",73,0)
 . L -^XTMP("HMP",DFN)
"RTN","HMPHTTP",74,0)
 . ; add to list for URL
"RTN","HMPHTTP",75,0)
 . S DA=0 F  S DA=$O(^HMP(800000,"ADFN",DFN,DA)) Q:DA<1  D
"RTN","HMPHTTP",76,0)
 .. S TOKEN=DA_"~"_ID,NEW(TOKEN)=""
"RTN","HMPHTTP",77,0)
 .. M ^XTMP("HMPX",TOKEN,DFN)=DATA
"RTN","HMPHTTP",78,0)
 D SEND(.NEW)
"RTN","HMPHTTP",79,0)
 I $$S^%ZTLOAD S ZTSTOP=1,ZTREQ="@" Q
"RTN","HMPHTTP",80,0)
 D HANG S ZTREQ="" ;re-queue
"RTN","HMPHTTP",81,0)
 Q
"RTN","HMPHTTP",82,0)
 ;
"RTN","HMPHTTP",83,0)
SEND(LIST) ; send each list ID to its URL
"RTN","HMPHTTP",84,0)
 N SYS,ID,DA,URL,X
"RTN","HMPHTTP",85,0)
 S SYS=$$SYS
"RTN","HMPHTTP",86,0)
 ; DIV=$P($$SITE^VASITE,U,3) ;station#
"RTN","HMPHTTP",87,0)
 S ID="" F  S ID=$O(LIST(ID)) Q:ID=""  D
"RTN","HMPHTTP",88,0)
 . S DA=+ID,URL=$G(^HMP(800000,DA,.1)) Q:URL=""
"RTN","HMPHTTP",89,0)
 . S URL=URL_"?vistaId="_SYS_"&id="_ID
"RTN","HMPHTTP",90,0)
 . S X=$$GETURL^XTHC10(URL,,"HMPX") ;I X>200 = ERROR
"RTN","HMPHTTP",91,0)
 Q
"RTN","HMPHTTP",92,0)
 ;
"RTN","HMPHTTP",93,0)
SYS() ; -- return hashed system name
"RTN","HMPHTTP",94,0)
 Q $$BASE^XLFUTL($$CRC16^XLFCRC($$KSP^XUPARAM("WHERE")),10,16)
"RTN","HMPHTTP",95,0)
 ;
"RTN","HMPHTTP",96,0)
HANG ; -- wait #seconds
"RTN","HMPHTTP",97,0)
 N X S X=$$GET^XPAR("ALL","HMP TASK WAIT TIME") S:'X X=99
"RTN","HMPHTTP",98,0)
 H X
"RTN","HMPHTTP",99,0)
 Q
"RTN","HMPHTTP",100,0)
 ;
"RTN","HMPHTTP",101,0)
KILL ; -- kill/reset ^HMP(800000) for testing
"RTN","HMPHTTP",102,0)
 K ^HMP(800000)
"RTN","HMPHTTP",103,0)
 S ^HMP(800000,0)="HMP SUBSCRIPTION^800000^^"
"RTN","HMPHTTP",104,0)
 Q
"RTN","HMPIDX")
0^90^B14171209
"RTN","HMPIDX",1,0)
HMPIDX ;SLC/MKB -- Create HMP triggers
"RTN","HMPIDX",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPIDX",3,0)
 Q
"RTN","HMPIDX",4,0)
 ;
"RTN","HMPIDX",5,0)
EN ; -- create index triggers
"RTN","HMPIDX",6,0)
 ; GMPL              ;Problems -- GMPL*2*36 provides protocol event
"RTN","HMPIDX",7,0)
 D GMRV              ;Vitals
"RTN","HMPIDX",8,0)
 ; MDC               ;CLiO     -- MD*2*38 provides protocol event
"RTN","HMPIDX",9,0)
 ; TIU               ;TIU      -- TIU*2*106 provides index event
"RTN","HMPIDX",10,0)
 ;
"RTN","HMPIDX",11,0)
 D EN^XPAR("PKG.VIRTUAL PATIENT RECORD","HMP TASK WAIT TIME",1,99)
"RTN","HMPIDX",12,0)
 ;S ^XTMP("HMP",0)="3991231^3110101^HMP Patient Data Monitor"
"RTN","HMPIDX",13,0)
 Q
"RTN","HMPIDX",14,0)
 ;
"RTN","HMPIDX",15,0)
GMPL ; -- create AHMP index on Problem file #9000011
"RTN","HMPIDX",16,0)
 Q:$O(^DD("IX","BB",9000011,"AHMP",0))  ;exists
"RTN","HMPIDX",17,0)
 N HMPX,HMPY
"RTN","HMPIDX",18,0)
 S HMPX("FILE")=9000011,HMPX("NAME")="AHMP"
"RTN","HMPIDX",19,0)
 S HMPX("TYPE")="MU",HMPX("USE")="A"
"RTN","HMPIDX",20,0)
 S HMPX("EXECUTION")="R",HMPX("ACTIVITY")=""
"RTN","HMPIDX",21,0)
 S HMPX("SHORT DESCR")="Event for HMP"
"RTN","HMPIDX",22,0)
 S HMPX("DESCR",1)="This index invokes a HMP event point when problems are modified."
"RTN","HMPIDX",23,0)
 S HMPX("DESCR",2)="No actual cross-reference nodes are set or killed."
"RTN","HMPIDX",24,0)
 S HMPX("SET")="Q:$D(DIU(0))!($G(XDRDVALF)=1)  D GMPL^HMPEVNT(X,DA)"
"RTN","HMPIDX",25,0)
 S HMPX("KILL")="Q",HMPX("WHOLE KILL")="Q"
"RTN","HMPIDX",26,0)
 S HMPX("VAL",1)=.02            ;Patient
"RTN","HMPIDX",27,0)
 S HMPX("VAL",2)=.03            ;Date Last Modified
"RTN","HMPIDX",28,0)
 D CREIXN^DDMOD(.HMPX,"",.HMPY) ;HMPY=ien^name of index
"RTN","HMPIDX",29,0)
 Q
"RTN","HMPIDX",30,0)
 ;
"RTN","HMPIDX",31,0)
GMRV ; -- create AHMP index on GMRV Measurement file #120.5
"RTN","HMPIDX",32,0)
 Q:$O(^DD("IX","BB",120.5,"AHMP",0))  ;update
"RTN","HMPIDX",33,0)
 N HMPX,HMPY
"RTN","HMPIDX",34,0)
 S HMPX("FILE")=120.5,HMPX("NAME")="AHMP"
"RTN","HMPIDX",35,0)
 S HMPX("TYPE")="MU",HMPX("USE")="A"
"RTN","HMPIDX",36,0)
 S HMPX("EXECUTION")="R",HMPX("ACTIVITY")=""
"RTN","HMPIDX",37,0)
 S HMPX("SHORT DESCR")="Event for HMP"
"RTN","HMPIDX",38,0)
 S HMPX("DESCR",1)="This index invokes a HMP event point when vitals are modified."
"RTN","HMPIDX",39,0)
 S HMPX("DESCR",2)="No actual cross-reference nodes are set or killed."
"RTN","HMPIDX",40,0)
 S HMPX("SET")="Q:$D(DIU(0))!($G(XDRDVALF)=1)  D GMRV^HMPEVNT(X,DA,$G(X(3)))"
"RTN","HMPIDX",41,0)
 S HMPX("KILL")="Q",HMPX("WHOLE KILL")="Q"
"RTN","HMPIDX",42,0)
 S HMPX("VAL",1)=.02            ;Patient
"RTN","HMPIDX",43,0)
 S HMPX("VAL",2)=1.2            ;Rate
"RTN","HMPIDX",44,0)
 S HMPX("VAL",3)=2              ;Entered in Error
"RTN","HMPIDX",45,0)
 D CREIXN^DDMOD(.HMPX,"",.HMPY) ;HMPY=ien^name of index
"RTN","HMPIDX",46,0)
 Q
"RTN","HMPIDX",47,0)
 ;
"RTN","HMPIDX",48,0)
MDC ; -- create ASTATUS index on OBS file #704.117
"RTN","HMPIDX",49,0)
 Q:$O(^DD("IX","BB",704.117,"ASTATUS",0))  ;exists
"RTN","HMPIDX",50,0)
 N HMPX,HMPY
"RTN","HMPIDX",51,0)
 S HMPX("FILE")=704.117,HMPX("NAME")="ASTATUS"
"RTN","HMPIDX",52,0)
 S HMPX("TYPE")="MU",HMPX("USE")="A"
"RTN","HMPIDX",53,0)
 S HMPX("EXECUTION")="F",HMPX("ACTIVITY")=""
"RTN","HMPIDX",54,0)
 S HMPX("SHORT DESCR")="Used to trigger MD OBSERVATION UPDATE protocol"
"RTN","HMPIDX",55,0)
 S HMPX("DESCR",1)="This index invokes the MD OBSERVATION UPDATE protocol when the"
"RTN","HMPIDX",56,0)
 S HMPX("DESCR",2)="status of OBS data is changed to or from verified."
"RTN","HMPIDX",57,0)
 S HMPX("DESCR",3)="No actual cross-reference nodes are set or killed."
"RTN","HMPIDX",58,0)
 S HMPX("SET")="D:((X1=""1"")!(X2=""1"")) PROT^MDCPROTD Q"
"RTN","HMPIDX",59,0)
 S HMPX("KILL")="Q",HMPX("WHOLE KILL")="Q"
"RTN","HMPIDX",60,0)
 S HMPX("VAL",1)=.09            ;Status
"RTN","HMPIDX",61,0)
 D CREIXN^DDMOD(.HMPX,"",.HMPY) ;HMPY=ien^name of index
"RTN","HMPIDX",62,0)
 Q
"RTN","HMPIDX",63,0)
 ;
"RTN","HMPIDX",64,0)
TIU ; -- create AHMP index on TIU Document file #8925
"RTN","HMPIDX",65,0)
 Q:$O(^DD("IX","BB",8925,"AHMP",0))  ;exists
"RTN","HMPIDX",66,0)
 N HMPX,HMPY
"RTN","HMPIDX",67,0)
 S HMPX("FILE")=8925,HMPX("NAME")="AHMP"
"RTN","HMPIDX",68,0)
 S HMPX("TYPE")="MU",HMPX("USE")="A"
"RTN","HMPIDX",69,0)
 S HMPX("EXECUTION")="R",HMPX("ACTIVITY")=""
"RTN","HMPIDX",70,0)
 S HMPX("SHORT DESCR")="Event for HMP"
"RTN","HMPIDX",71,0)
 S HMPX("DESCR",1)="This index invokes a HMP event point when documents are modified."
"RTN","HMPIDX",72,0)
 S HMPX("DESCR",2)="No actual cross-reference nodes are set or killed."
"RTN","HMPIDX",73,0)
 S HMPX("SET")="Q:$D(DIU(0))!($G(XDRDVALF)=1)  D:X(2)>5 TIU^HMPEVNT(X,DA)"
"RTN","HMPIDX",74,0)
 S HMPX("KILL")="Q",HMPX("WHOLE KILL")="Q"
"RTN","HMPIDX",75,0)
 S HMPX("VAL",1)=.02            ;Patient
"RTN","HMPIDX",76,0)
 S HMPX("VAL",2)=.05            ;Status
"RTN","HMPIDX",77,0)
 D CREIXN^DDMOD(.HMPX,"",.HMPY) ;HMPY=ien^name of index
"RTN","HMPIDX",78,0)
 Q
"RTN","HMPJSON")
0^91^B11232902
"RTN","HMPJSON",1,0)
HMPJSON ;SLC/KCM -- Decode/Encode JSON
"RTN","HMPJSON",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPJSON",3,0)
 ;
"RTN","HMPJSON",4,0)
 ; Note:  Since the routines use closed array references, VVROOT and VVERR
"RTN","HMPJSON",5,0)
 ;        are used to reduce risk of naming conflicts on the closed array.
"RTN","HMPJSON",6,0)
 ;
"RTN","HMPJSON",7,0)
DECODE(VVJSON,VVROOT,VVERR)  ; Set JSON object into closed array ref VVROOT
"RTN","HMPJSON",8,0)
 ; Examples: D DECODE^HMPJSON("MYJSON","LOCALVAR","LOCALERR")
"RTN","HMPJSON",9,0)
 ;           D DECODE^HMPJSON("^MYJSON(1)","^GLO(99)","^TMP($J)")
"RTN","HMPJSON",10,0)
 ;
"RTN","HMPJSON",11,0)
 ; VVJSON: string/array containing serialized JSON object
"RTN","HMPJSON",12,0)
 ; VVROOT: closed array reference for M representation of object
"RTN","HMPJSON",13,0)
 ;  VVERR: contains error messages, defaults to ^TMP("HMPJERR",$J)
"RTN","HMPJSON",14,0)
 ;
"RTN","HMPJSON",15,0)
 ;   VVIDX: points to next character in JSON string to process
"RTN","HMPJSON",16,0)
 ; VVSTACK: manages stack of subscripts
"RTN","HMPJSON",17,0)
 ;  VHMPOP: true if next string is property name, otherwise treat as value
"RTN","HMPJSON",18,0)
 ;
"RTN","HMPJSON",19,0)
 G DIRECT^HMPJSOND
"RTN","HMPJSON",20,0)
 ;
"RTN","HMPJSON",21,0)
ENCODE(VVROOT,VVJSON,VVERR) ; VVROOT (M structure) --> VVJSON (array of strings)
"RTN","HMPJSON",22,0)
 ; Examples:  D ENCODE^HMPJSON("^GLO(99,2)","^TMP($J)")
"RTN","HMPJSON",23,0)
 ;            D ENCODE^HMPJSON("LOCALVAR","MYJSON","LOCALERR")
"RTN","HMPJSON",24,0)
 ;
"RTN","HMPJSON",25,0)
 ; VVROOT: closed array reference for M representation of object
"RTN","HMPJSON",26,0)
 ; VVJSON: destination variable for the string array formatted as JSON
"RTN","HMPJSON",27,0)
 ;  VVERR: contains error messages, defaults to ^TMP("HMPJERR",$J)
"RTN","HMPJSON",28,0)
 ;
"RTN","HMPJSON",29,0)
 G DIRECT^HMPJSONE
"RTN","HMPJSON",30,0)
 ;
"RTN","HMPJSON",31,0)
 ;
"RTN","HMPJSON",32,0)
ESC(X) ; Escape string for JSON
"RTN","HMPJSON",33,0)
 Q $$ESC^HMPJSONE(X)
"RTN","HMPJSON",34,0)
 ;
"RTN","HMPJSON",35,0)
UES(X) ; Unescape JSON string
"RTN","HMPJSON",36,0)
 Q $$UES^HMPJSOND(X)
"RTN","HMPJSON",37,0)
 ;
"RTN","HMPJSON",38,0)
ERRX(ID,VAL) ; Set the appropriate error message
"RTN","HMPJSON",39,0)
 ; switch (ID) -- XERRX ends statement
"RTN","HMPJSON",40,0)
 N ERRMSG
"RTN","HMPJSON",41,0)
 ;
"RTN","HMPJSON",42,0)
 ; Decode Error Messages
"RTN","HMPJSON",43,0)
 ;
"RTN","HMPJSON",44,0)
 I ID="STL{" S ERRMSG="Stack too large for new object." G XERRX
"RTN","HMPJSON",45,0)
 I ID="SUF}" S ERRMSG="Stack Underflow - extra } found" G XERRX
"RTN","HMPJSON",46,0)
 I ID="STL[" S ERRMSG="Stack too large for new array." G XERRX
"RTN","HMPJSON",47,0)
 I ID="SUF]" S ERRMSG="Stack Underflow - extra ] found." G XERRX
"RTN","HMPJSON",48,0)
 I ID="OBM" S ERRMSG="Array mismatch - expected ] got }." G XERRX
"RTN","HMPJSON",49,0)
 I ID="ARM" S ERRMSG="Object mismatch - expected } got ]." G XERRX
"RTN","HMPJSON",50,0)
 I ID="MPN" S ERRMSG="Missing property name." G XERRX
"RTN","HMPJSON",51,0)
 I ID="EXT" S ERRMSG="Expected true, got "_VAL G XERRX
"RTN","HMPJSON",52,0)
 I ID="EXF" S ERRMSG="Expected false, got "_VAL G XERRX
"RTN","HMPJSON",53,0)
 I ID="EXN" S ERRMSG="Expected null, got "_VAL G XERRX
"RTN","HMPJSON",54,0)
 I ID="TKN" S ERRMSG="Unable to identify type of token, value was "_VAL G XERRX
"RTN","HMPJSON",55,0)
 I ID="SCT" S ERRMSG="Stack mismatch - exit stack level was  "_VAL G XERRX
"RTN","HMPJSON",56,0)
 I ID="EIQ" S ERRMSG="Close quote not found before end of input." G XERRX
"RTN","HMPJSON",57,0)
 I ID="EIU" S ERRMSG="Unexpected end of input while unescaping." G XERRX
"RTN","HMPJSON",58,0)
 I ID="RSB" S ERRMSG="Reverse search for \ past beginning of input." G XERRX
"RTN","HMPJSON",59,0)
 I ID="ORN" S ERRMSG="Overrun while scanning name." G XERRX
"RTN","HMPJSON",60,0)
 I ID="OR#" S ERRMSG="Overrun while scanning number." G XERRX
"RTN","HMPJSON",61,0)
 I ID="ORB" S ERRMSG="Overrun while scanning boolean." G XERRX
"RTN","HMPJSON",62,0)
 I ID="ESC" S ERRMSG="Escaped character not recognized"_VAL G XERRX
"RTN","HMPJSON",63,0)
 ;
"RTN","HMPJSON",64,0)
 ; Encode Error Messages
"RTN","HMPJSON",65,0)
 ;
"RTN","HMPJSON",66,0)
 I ID="SOB" S ERRMSG="Unable to serialize node as object, value was "_VAL G XERRX
"RTN","HMPJSON",67,0)
 I ID="SAR" S ERRMSG="Unable to serialize node as array, value was "_VAL G XERRX
"RTN","HMPJSON",68,0)
 S ERRMSG="Unspecified error "_ID_" "_$G(VAL)
"RTN","HMPJSON",69,0)
XERRX ; end switch
"RTN","HMPJSON",70,0)
 S @VVERR@(0)=$G(@VVERR@(0))+1
"RTN","HMPJSON",71,0)
 S @VVERR@(@VVERR@(0))=ERRMSG
"RTN","HMPJSON",72,0)
 S VVERRORS=VVERRORS+1
"RTN","HMPJSON",73,0)
 Q
"RTN","HMPJSOND")
0^92^B70219619
"RTN","HMPJSOND",1,0)
HMPJSOND ;SLC/KCM -- Decode JSON
"RTN","HMPJSOND",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPJSOND",3,0)
 ;
"RTN","HMPJSOND",4,0)
DECODE(VVJSON,VVROOT,VVERR) ; Set JSON object into closed array ref VVROOT
"RTN","HMPJSOND",5,0)
 ;
"RTN","HMPJSOND",6,0)
DIRECT ; TAG for use by DECODE^HMPJSON
"RTN","HMPJSOND",7,0)
 ;
"RTN","HMPJSOND",8,0)
 ; Examples: D DECODE^HMPJSON("MYJSON","LOCALVAR","LOCALERR")
"RTN","HMPJSOND",9,0)
 ;           D DECODE^HMPJSON("^MYJSON(1)","^GLO(99)","^TMP($J)")
"RTN","HMPJSOND",10,0)
 ;
"RTN","HMPJSOND",11,0)
 ; VVJSON: string/array containing serialized JSON object
"RTN","HMPJSOND",12,0)
 ; VVROOT: closed array reference for M representation of object
"RTN","HMPJSOND",13,0)
 ;  VVERR: contains error messages, defaults to ^TMP("HMPJERR",$J)
"RTN","HMPJSOND",14,0)
 ;
"RTN","HMPJSOND",15,0)
 ;   VVIDX: points to next character in JSON string to process
"RTN","HMPJSOND",16,0)
 ; VVSTACK: manages stack of subscripts
"RTN","HMPJSOND",17,0)
 ;  VHMPOP: true if next string is property name, otherwise treat as value
"RTN","HMPJSOND",18,0)
 ;
"RTN","HMPJSOND",19,0)
 N VVMAX S VVMAX=4000 ; limit document lines to 4000 characters
"RTN","HMPJSOND",20,0)
 S VVERR=$G(VVERR,"^TMP(""HMPJERR"",$J)")
"RTN","HMPJSOND",21,0)
 ; If a simple string is passed in, move it to an temp array (VVINPUT)
"RTN","HMPJSOND",22,0)
 ; so that the processing is consistently on an array.
"RTN","HMPJSOND",23,0)
 I $D(@VVJSON)=1 N VVINPUT S VVINPUT(1)=@VVJSON,VVJSON="VVINPUT"
"RTN","HMPJSOND",24,0)
 S VVROOT=$NA(@VVROOT@("Z")),VVROOT=$E(VVROOT,1,$L(VVROOT)-4) ; make open array ref
"RTN","HMPJSOND",25,0)
 N VVLINE,VVIDX,VVSTACK,VHMPOP,VVTYPE,VVERRORS
"RTN","HMPJSOND",26,0)
 S VVLINE=$O(@VVJSON@("")),VVIDX=1,VVSTACK=0,VHMPOP=0,VVERRORS=0
"RTN","HMPJSOND",27,0)
 F  S VVTYPE=$$NXTKN() Q:VVTYPE=""  D  I VVERRORS Q
"RTN","HMPJSOND",28,0)
 . I VVTYPE="{" S VVSTACK=VVSTACK+1,VVSTACK(VVSTACK)="",VHMPOP=1 D:VVSTACK>64 ERRX("STL{") Q
"RTN","HMPJSOND",29,0)
 . I VVTYPE="}" D  QUIT
"RTN","HMPJSOND",30,0)
 . . I +VVSTACK(VVSTACK)=VVSTACK(VVSTACK),VVSTACK(VVSTACK) D ERRX("OBM") ; Numeric and true only
"RTN","HMPJSOND",31,0)
 . . S VVSTACK=VVSTACK-1 D:VVSTACK<0 ERRX("SUF}")
"RTN","HMPJSOND",32,0)
 . I VVTYPE="[" S VVSTACK=VVSTACK+1,VVSTACK(VVSTACK)=1 D:VVSTACK>64 ERRX("STL[") Q
"RTN","HMPJSOND",33,0)
 . I VVTYPE="]" D:'VVSTACK(VVSTACK) ERRX("ARM") S VVSTACK=VVSTACK-1 D:VVSTACK<0 ERRX("SUF]") Q
"RTN","HMPJSOND",34,0)
 . I VVTYPE="," D  Q
"RTN","HMPJSOND",35,0)
 . . I +VVSTACK(VVSTACK)=VVSTACK(VVSTACK),VVSTACK(VVSTACK) S VVSTACK(VVSTACK)=VVSTACK(VVSTACK)+1  ; VEN/SMH - next in array 
"RTN","HMPJSOND",36,0)
 . . E  S VHMPOP=1                                   ; or next property name
"RTN","HMPJSOND",37,0)
 . I VVTYPE=":" S VHMPOP=0 D:'$L($G(VVSTACK(VVSTACK))) ERRX("MPN") Q
"RTN","HMPJSOND",38,0)
 . I VVTYPE="""" D  Q
"RTN","HMPJSOND",39,0)
 . . I VHMPOP S VVSTACK(VVSTACK)=$$NAMPARS() I 1
"RTN","HMPJSOND",40,0)
 . . E  D ADDSTR
"RTN","HMPJSOND",41,0)
 . S VVTYPE=$TR(VVTYPE,"TFN","tfn")
"RTN","HMPJSOND",42,0)
 . I VVTYPE="t" D SETBOOL("t") Q
"RTN","HMPJSOND",43,0)
 . I VVTYPE="f" D SETBOOL("f") Q
"RTN","HMPJSOND",44,0)
 . I VVTYPE="n" D SETBOOL("n") Q
"RTN","HMPJSOND",45,0)
 . I "0123456789+-.eE"[VVTYPE D SETNUM(VVTYPE) Q  ;S @$$CURNODE()=$$NUMPARS(VVTYPE) Q
"RTN","HMPJSOND",46,0)
 . D ERRX("TKN",VVTYPE)
"RTN","HMPJSOND",47,0)
 I VVSTACK'=0 D ERRX("SCT",VVSTACK)
"RTN","HMPJSOND",48,0)
 Q
"RTN","HMPJSOND",49,0)
NXTKN() ; Move the pointers to the beginning of the next token
"RTN","HMPJSOND",50,0)
 N VVDONE,VVEOF,VVTOKEN
"RTN","HMPJSOND",51,0)
 S VVDONE=0,VVEOF=0 F  D  Q:VVDONE!VVEOF  ; eat spaces & new lines until next visible char
"RTN","HMPJSOND",52,0)
 . I VVIDX>$L(@VVJSON@(VVLINE)) S VVLINE=$O(@VVJSON@(VVLINE)),VVIDX=1 I 'VVLINE S VVEOF=1 Q
"RTN","HMPJSOND",53,0)
 . I $A(@VVJSON@(VVLINE),VVIDX)>32 S VVDONE=1 Q
"RTN","HMPJSOND",54,0)
 . S VVIDX=VVIDX+1
"RTN","HMPJSOND",55,0)
 Q:VVEOF ""  ; we're at the end of input
"RTN","HMPJSOND",56,0)
 S VVTOKEN=$E(@VVJSON@(VVLINE),VVIDX),VVIDX=VVIDX+1
"RTN","HMPJSOND",57,0)
 Q VVTOKEN
"RTN","HMPJSOND",58,0)
 ;
"RTN","HMPJSOND",59,0)
ADDSTR ; Add string value to current node, escaping text along the way
"RTN","HMPJSOND",60,0)
 ; Expects VVLINE,VVIDX to reference that starting point of the index
"RTN","HMPJSOND",61,0)
 ; TODO: add a mechanism to specify names that should not be escaped
"RTN","HMPJSOND",62,0)
 ;       just store as ":")= and ":",n)=
"RTN","HMPJSOND",63,0)
 ;
"RTN","HMPJSOND",64,0)
 ; Happy path -- we find the end quote in the same line
"RTN","HMPJSOND",65,0)
 N VVEND,VVX
"RTN","HMPJSOND",66,0)
 S VVEND=$F(@VVJSON@(VVLINE),"""",VVIDX)
"RTN","HMPJSOND",67,0)
 I VVEND,($E(@VVJSON@(VVLINE),VVEND-2)'="\") D SETSTR  QUIT  ;normal
"RTN","HMPJSOND",68,0)
 I VVEND,$$ISCLOSEQ(VVLINE) D SETSTR QUIT  ;close quote preceded by escaped \
"RTN","HMPJSOND",69,0)
 ;
"RTN","HMPJSOND",70,0)
 ; Less happy path -- first quote wasn't close quote
"RTN","HMPJSOND",71,0)
 N VVDONE,VVTLINE
"RTN","HMPJSOND",72,0)
 S VVDONE=0,VVTLINE=VVLINE ; VVTLINE for temporary increment of VVLINE
"RTN","HMPJSOND",73,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","HMPJSOND",74,0)
 . ;if no quote on current line advance line, scan again
"RTN","HMPJSOND",75,0)
 . I 'VVEND S VVTLINE=VVTLINE+1,VVEND=1 I '$D(@VVJSON@(VVTLINE)) D ERRX("EIQ") Q
"RTN","HMPJSOND",76,0)
 . S VVEND=$F(@VVJSON@(VVTLINE),"""",VVEND)
"RTN","HMPJSOND",77,0)
 . Q:'VVEND  ; continue on to next line if no quote found on this one
"RTN","HMPJSOND",78,0)
 . I (VVEND>2),($E(@VVJSON@(VVTLINE),VVEND-2)'="\") S VVDONE=1 Q  ; found quote position
"RTN","HMPJSOND",79,0)
 . S VVDONE=$$ISCLOSEQ(VVTLINE) ; see if this is an escaped quote or closing quote
"RTN","HMPJSOND",80,0)
 Q:VVERRORS
"RTN","HMPJSOND",81,0)
 ; unescape from VVIDX to VVEND, using \-extension nodes as necessary
"RTN","HMPJSOND",82,0)
 D UESEXT
"RTN","HMPJSOND",83,0)
 ; now we need to move VVLINE and VVIDX to next parsing point
"RTN","HMPJSOND",84,0)
 S VVLINE=VVTLINE,VVIDX=VVEND
"RTN","HMPJSOND",85,0)
 Q
"RTN","HMPJSOND",86,0)
SETSTR ; Set simple string value from within same line
"RTN","HMPJSOND",87,0)
 ; expects VVJSON, VVLINE, VVINX, VVEND
"RTN","HMPJSOND",88,0)
 N VVX
"RTN","HMPJSOND",89,0)
 S VVX=$E(@VVJSON@(VVLINE),VVIDX,VVEND-2),VVIDX=VVEND
"RTN","HMPJSOND",90,0)
 S @$$CURNODE()=$$UES(VVX)
"RTN","HMPJSOND",91,0)
 ; "\s" node indicates value is really a string in case value 
"RTN","HMPJSOND",92,0)
 ;      collates as numeric or equals boolean keywords
"RTN","HMPJSOND",93,0)
 I VVX']]$C(1) S @$$CURNODE()@("\s")=""
"RTN","HMPJSOND",94,0)
 I VVX="true"!(VVX="false")!(VVX="null") S @$$CURNODE()@("\s")=""
"RTN","HMPJSOND",95,0)
 I VVIDX>$L(@VVJSON@(VVLINE)) S VVLINE=VVLINE+1,VVIDX=1
"RTN","HMPJSOND",96,0)
 Q
"RTN","HMPJSOND",97,0)
UESEXT ; unescape from VVLINE,VVIDX to VVTLINE,VVEND & extend (\) if necessary
"RTN","HMPJSOND",98,0)
 ; expects VVLINE,VVIDX,VVTLINE,VVEND
"RTN","HMPJSOND",99,0)
 N VVI,VVY,VVSTART,VVSTOP,VVDONE,VVBUF,VVNODE,VVMORE,VVTO
"RTN","HMPJSOND",100,0)
 S VVNODE=$$CURNODE(),VVBUF="",VVMORE=0,VVSTOP=VVEND-2
"RTN","HMPJSOND",101,0)
 S VVI=VVIDX,VVY=VVLINE,VVDONE=0
"RTN","HMPJSOND",102,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","HMPJSOND",103,0)
 . S VVSTART=VVI,VVI=$F(@VVJSON@(VVY),"\",VVI)
"RTN","HMPJSOND",104,0)
 . ; if we are on the last line, don't extract past VVSTOP
"RTN","HMPJSOND",105,0)
 . I (VVY=VVTLINE) S VVTO=$S('VVI:VVSTOP,VVI>VVSTOP:VVSTOP,1:VVI-2) I 1
"RTN","HMPJSOND",106,0)
 . E  S VVTO=$S('VVI:99999,1:VVI-2)
"RTN","HMPJSOND",107,0)
 . D ADDBUF($E(@VVJSON@(VVY),VVSTART,VVTO))
"RTN","HMPJSOND",108,0)
 . I (VVY'<VVTLINE),(('VVI)!(VVI>VVSTOP)) S VVDONE=1 QUIT  ; now past close quote
"RTN","HMPJSOND",109,0)
 . I 'VVI S VVY=VVY+1,VVI=1 QUIT  ; nothing escaped, go to next line
"RTN","HMPJSOND",110,0)
 . I VVI>$L(@VVJSON@(VVY)) S VVY=VVY+1,VVI=1 I '$D(@VVJSON@(VVY)) D ERRX("EIU")
"RTN","HMPJSOND",111,0)
 . N VVTGT S VVTGT=$E(@VVJSON@(VVY),VVI)
"RTN","HMPJSOND",112,0)
 . I VVTGT="u" D  I 1
"RTN","HMPJSOND",113,0)
 . . N VVTGTC S VVTGTC=$E(@VVJSON@(VVY),VVI+1,VVI+4),VVI=VVI+4
"RTN","HMPJSOND",114,0)
 . . I $L(VVTGTC)<4 S VVY=VVY+1,VVI=4-$L(VVTGTC),VVTGTC=VVTGTC_$E(@VVJSON@(VVY),1,VVI)
"RTN","HMPJSOND",115,0)
 . . D ADDBUF($C($$DEC^XLFUTL(VVTGTC,16)))
"RTN","HMPJSOND",116,0)
 . E  D ADDBUF($$REALCHAR(VVTGT))
"RTN","HMPJSOND",117,0)
 . S VVI=VVI+1
"RTN","HMPJSOND",118,0)
 . I (VVY'<VVTLINE),(VVI>VVSTOP) S VVDONE=1 ; VVI incremented past stop
"RTN","HMPJSOND",119,0)
 Q:VVERRORS
"RTN","HMPJSOND",120,0)
 D SAVEBUF
"RTN","HMPJSOND",121,0)
 Q
"RTN","HMPJSOND",122,0)
ADDBUF(VVX) ; add buffer of characters to destination
"RTN","HMPJSOND",123,0)
 ; expects VVBUF,VVMAX,VVNODE,VVMORE to be defined
"RTN","HMPJSOND",124,0)
 ; used directly by ADDSTR
"RTN","HMPJSOND",125,0)
 I $L(VVX)+$L(VVBUF)>VVMAX D SAVEBUF
"RTN","HMPJSOND",126,0)
 S VVBUF=VVBUF_VVX
"RTN","HMPJSOND",127,0)
 Q
"RTN","HMPJSOND",128,0)
SAVEBUF ; write out buffer to destination
"RTN","HMPJSOND",129,0)
 ; expects VVBUF,VVMAX,VVNODE,VVMORE to be defined
"RTN","HMPJSOND",130,0)
 ; used directly by ADDSTR,ADDBUF
"RTN","HMPJSOND",131,0)
 I VVMORE S @VVNODE@("\",VVMORE)=VVBUF
"RTN","HMPJSOND",132,0)
 I 'VVMORE S @VVNODE=VVBUF I $L(VVBUF)<19,+$E(VVBUF,1,18) S @VVNODE@("\s")=""
"RTN","HMPJSOND",133,0)
 S VVMORE=VVMORE+1,VVBUF=""
"RTN","HMPJSOND",134,0)
 Q
"RTN","HMPJSOND",135,0)
ISCLOSEQ(VVBLINE) ; return true if this is a closing, rather than escaped, quote
"RTN","HMPJSOND",136,0)
 ; expects
"RTN","HMPJSOND",137,0)
 ;   VVJSON: lines of the JSON encoded string
"RTN","HMPJSOND",138,0)
 ;    VVIDX: points to 1st character of the segment
"RTN","HMPJSOND",139,0)
 ;   VVLINE: points to the line in which the segment starts
"RTN","HMPJSOND",140,0)
 ;    VVEND: points to 1st character after the " (may be past the end of the line)
"RTN","HMPJSOND",141,0)
 ; used directly by ADDSTR
"RTN","HMPJSOND",142,0)
 N VVBS,VVBIDX,VVBDONE
"RTN","HMPJSOND",143,0)
 S VVBS=0,VVBIDX=VVEND-2,VVBDONE=0 ; VVBIDX starts at 1st character before quote
"RTN","HMPJSOND",144,0)
 ; count the backslashes preceding the quote (odd number means the quote was escaped)
"RTN","HMPJSOND",145,0)
 F  D  Q:VVBDONE!VVERRORS
"RTN","HMPJSOND",146,0)
 . I VVBIDX<1 D  Q  ; when VVBIDX<1 go back a line
"RTN","HMPJSOND",147,0)
 . . S VVBLINE=VVBLINE-1 I VVBLINE<VVLINE D ERRX("RSB") Q
"RTN","HMPJSOND",148,0)
 . . S VVBIDX=$L(@VVJSON@(VVBLINE))
"RTN","HMPJSOND",149,0)
 . I $E(@VVJSON@(VVBLINE),VVBIDX)'="\" S VVBDONE=1 Q
"RTN","HMPJSOND",150,0)
 . S VVBS=VVBS+1,VVBIDX=VVBIDX-1
"RTN","HMPJSOND",151,0)
 Q VVBS#2=0  ; VVBS is even if this is a close quote
"RTN","HMPJSOND",152,0)
 ;
"RTN","HMPJSOND",153,0)
NAMPARS() ; Return parsed name, advancing index past the close quote
"RTN","HMPJSOND",154,0)
 ; -- This assumes no embedded quotes are in the name itself --
"RTN","HMPJSOND",155,0)
 N VVEND,VVDONE,VVNAME
"RTN","HMPJSOND",156,0)
 S VVDONE=0,VVNAME=""
"RTN","HMPJSOND",157,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","HMPJSOND",158,0)
 . S VVEND=$F(@VVJSON@(VVLINE),"""",VVIDX)
"RTN","HMPJSOND",159,0)
 . I VVEND S VVNAME=VVNAME_$E(@VVJSON@(VVLINE),VVIDX,VVEND-2),VVIDX=VVEND,VVDONE=1
"RTN","HMPJSOND",160,0)
 . I 'VVEND S VVNAME=VVNAME_$E(@VVJSON@(VVLINE),VVIDX,$L(@VVJSON@(VVLINE)))
"RTN","HMPJSOND",161,0)
 . I 'VVEND!(VVEND>$L(@VVJSON@(VVLINE))) S VVLINE=VVLINE+1,VVIDX=1 I '$D(@VVJSON@(VVLINE)) D ERRX("ORN")
"RTN","HMPJSOND",162,0)
 ; prepend quote if label collates as numeric -- assumes no quotes in label
"RTN","HMPJSOND",163,0)
 I VVNAME']]$C(1) S VVNAME=""""""_VVNAME
"RTN","HMPJSOND",164,0)
 Q VVNAME
"RTN","HMPJSOND",165,0)
 ;
"RTN","HMPJSOND",166,0)
SETNUM(VVDIGIT) ; Set numeric along with any necessary modifier
"RTN","HMPJSOND",167,0)
 N VVX
"RTN","HMPJSOND",168,0)
 S VVX=$$NUMPARS(VVDIGIT)
"RTN","HMPJSOND",169,0)
 S @$$CURNODE()=+VVX
"RTN","HMPJSOND",170,0)
 ; if numeric is exponent, "0.nnn" or "-0.nnn" store original string
"RTN","HMPJSOND",171,0)
 I +VVX'=VVX S @$$CURNODE()@("\n")=VVX
"RTN","HMPJSOND",172,0)
 Q
"RTN","HMPJSOND",173,0)
NUMPARS(VVDIGIT) ; Return parsed number, advancing index past end of number
"RTN","HMPJSOND",174,0)
 ; VVIDX intially references the second digit
"RTN","HMPJSOND",175,0)
 N VVDONE,VVNUM
"RTN","HMPJSOND",176,0)
 S VVDONE=0,VVNUM=VVDIGIT
"RTN","HMPJSOND",177,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","HMPJSOND",178,0)
 . I '("0123456789+-.eE"[$E(@VVJSON@(VVLINE),VVIDX)) S VVDONE=1 Q
"RTN","HMPJSOND",179,0)
 . S VVNUM=VVNUM_$E(@VVJSON@(VVLINE),VVIDX)
"RTN","HMPJSOND",180,0)
 . S VVIDX=VVIDX+1 I VVIDX>$L(@VVJSON@(VVLINE)) S VVLINE=VVLINE+1,VVIDX=1 I '$D(@VVJSON@(VVLINE)) D ERRX("OR#")
"RTN","HMPJSOND",181,0)
 Q VVNUM
"RTN","HMPJSOND",182,0)
 ;
"RTN","HMPJSOND",183,0)
SETBOOL(VVLTR) ; Parse and set boolean value, advancing index past end of value
"RTN","HMPJSOND",184,0)
 N VVDONE,VVBOOL,VVX
"RTN","HMPJSOND",185,0)
 S VVDONE=0,VVBOOL=VVLTR
"RTN","HMPJSOND",186,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","HMPJSOND",187,0)
 . S VVX=$TR($E(@VVJSON@(VVLINE),VVIDX),"TRUEFALSN","truefalsn")
"RTN","HMPJSOND",188,0)
 . I '("truefalsn"[VVX) S VVDONE=1 Q
"RTN","HMPJSOND",189,0)
 . S VVBOOL=VVBOOL_VVX
"RTN","HMPJSOND",190,0)
 . S VVIDX=VVIDX+1 I VVIDX>$L(@VVJSON@(VVLINE)) S VVLINE=VVLINE+1,VVIDX=1 I '$D(@VVJSON@(VVLINE)) D ERRX("ORB")
"RTN","HMPJSOND",191,0)
 I VVLTR="t",(VVBOOL'="true") D ERRX("EXT",VVTYPE)
"RTN","HMPJSOND",192,0)
 I VVLTR="f",(VVBOOL'="false") D ERRX("EXF",VVTYPE)
"RTN","HMPJSOND",193,0)
 I VVLTR="n",(VVBOOL'="null") D ERRX("EXN",VVTYPE)
"RTN","HMPJSOND",194,0)
 S @$$CURNODE()=VVBOOL
"RTN","HMPJSOND",195,0)
 Q
"RTN","HMPJSOND",196,0)
 ;
"RTN","HMPJSOND",197,0)
OSETBOOL(VVX) ; set a value and increment VVIDX
"RTN","HMPJSOND",198,0)
 S @$$CURNODE()=VVX
"RTN","HMPJSOND",199,0)
 S VVIDX=VVIDX+$L(VVX)-1
"RTN","HMPJSOND",200,0)
 N VVDIFF S VVDIFF=VVIDX-$L(@VVJSON@(VVLINE))  ; in case VVIDX moves to next line
"RTN","HMPJSOND",201,0)
 I VVDIFF>0 S VVLINE=VVLINE+1,VVIDX=VVDIFF I '$D(@VVJSON@(VVLINE)) D ERRX("ORB")
"RTN","HMPJSOND",202,0)
 Q
"RTN","HMPJSOND",203,0)
CURNODE() ; Return a global/local variable name based on VVSTACK
"RTN","HMPJSOND",204,0)
 ; Expects VVSTACK to be defined already
"RTN","HMPJSOND",205,0)
 N VVI,VVSUBS
"RTN","HMPJSOND",206,0)
 S VVSUBS=""
"RTN","HMPJSOND",207,0)
 F VVI=1:1:VVSTACK S:VVI>1 VVSUBS=VVSUBS_"," D
"RTN","HMPJSOND",208,0)
 . I VVSTACK(VVI)=+VVSTACK(VVI) S VVSUBS=VVSUBS_VVSTACK(VVI) ; VEN/SMH Fix psudo array bug.
"RTN","HMPJSOND",209,0)
 . E  S VVSUBS=VVSUBS_""""_VVSTACK(VVI)_""""
"RTN","HMPJSOND",210,0)
 Q VVROOT_VVSUBS_")"
"RTN","HMPJSOND",211,0)
 ;
"RTN","HMPJSOND",212,0)
UES(X) ; Unescape JSON string
"RTN","HMPJSOND",213,0)
 ; copy segments from START to POS-2 (right before \)
"RTN","HMPJSOND",214,0)
 ; translate target character (which is at $F position)
"RTN","HMPJSOND",215,0)
 N POS,Y,START
"RTN","HMPJSOND",216,0)
 S POS=0,Y=""
"RTN","HMPJSOND",217,0)
 F  S START=POS+1 D  Q:START>$L(X)
"RTN","HMPJSOND",218,0)
 . S POS=$F(X,"\",START) ; find next position
"RTN","HMPJSOND",219,0)
 . I 'POS S Y=Y_$E(X,START,$L(X)),POS=$L(X) Q
"RTN","HMPJSOND",220,0)
 . ; otherwise handle escaped char
"RTN","HMPJSOND",221,0)
 . N TGT
"RTN","HMPJSOND",222,0)
 . S TGT=$E(X,POS),Y=Y_$E(X,START,POS-2)
"RTN","HMPJSOND",223,0)
 . I TGT="u" S Y=Y_$C($$DEC^XLFUTL($E(X,POS+1,POS+4),16)),POS=POS+4 Q
"RTN","HMPJSOND",224,0)
 . S Y=Y_$$REALCHAR(TGT)
"RTN","HMPJSOND",225,0)
 Q Y
"RTN","HMPJSOND",226,0)
 ;
"RTN","HMPJSOND",227,0)
REALCHAR(C) ; Return actual character from escaped
"RTN","HMPJSOND",228,0)
 I C="""" Q """"
"RTN","HMPJSOND",229,0)
 I C="/" Q "/"
"RTN","HMPJSOND",230,0)
 I C="\" Q "\"
"RTN","HMPJSOND",231,0)
 I C="b" Q $C(8)
"RTN","HMPJSOND",232,0)
 I C="f" Q $C(12)
"RTN","HMPJSOND",233,0)
 I C="n" Q $C(10)
"RTN","HMPJSOND",234,0)
 I C="r" Q $C(13)
"RTN","HMPJSOND",235,0)
 I C="t" Q $C(9)
"RTN","HMPJSOND",236,0)
 I C="u" ;case covered above in $$DEC^XLFUTL calls
"RTN","HMPJSOND",237,0)
 ;otherwise
"RTN","HMPJSOND",238,0)
 I $L($G(VVERR)) D ERRX("ESC",C)
"RTN","HMPJSOND",239,0)
 Q C
"RTN","HMPJSOND",240,0)
 ;
"RTN","HMPJSOND",241,0)
ERRX(ID,VAL) ; Set the appropriate error message
"RTN","HMPJSOND",242,0)
 D ERRX^HMPJSON(ID,$G(VAL))
"RTN","HMPJSOND",243,0)
 Q
"RTN","HMPJSONE")
0^93^B24346328
"RTN","HMPJSONE",1,0)
HMPJSONE ;SLC/KCM -- Encode JSON
"RTN","HMPJSONE",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPJSONE",3,0)
 ;
"RTN","HMPJSONE",4,0)
ENCODE(VVROOT,VVJSON,VVERR) ; VVROOT (M structure) --> VVJSON (array of strings)
"RTN","HMPJSONE",5,0)
 ;
"RTN","HMPJSONE",6,0)
DIRECT ; TAG for use by ENCODE^HMPJSON
"RTN","HMPJSONE",7,0)
 ;
"RTN","HMPJSONE",8,0)
 ; Examples:  D ENCODE^HMPJSON("^GLO(99,2)","^TMP($J)")
"RTN","HMPJSONE",9,0)
 ;            D ENCODE^HMPJSON("LOCALVAR","MYJSON","LOCALERR")
"RTN","HMPJSONE",10,0)
 ;
"RTN","HMPJSONE",11,0)
 ; VVROOT: closed array reference for M representation of object
"RTN","HMPJSONE",12,0)
 ; VVJSON: destination variable for the string array formatted as JSON
"RTN","HMPJSONE",13,0)
 ;  VVERR: contains error messages, defaults to ^TMP("HMPJERR",$J)
"RTN","HMPJSONE",14,0)
 ;
"RTN","HMPJSONE",15,0)
 S VVERR=$G(VVERR,"^TMP(""HMPJERR"",$J)")
"RTN","HMPJSONE",16,0)
 I '$L($G(VVROOT)) ; set error info
"RTN","HMPJSONE",17,0)
 I '$L($G(VVJSON)) ; set error info
"RTN","HMPJSONE",18,0)
 N VVLINE,VVMAX,VVERRORS
"RTN","HMPJSONE",19,0)
 S VVLINE=1,VVMAX=4000,VVERRORS=0  ; 96 more bytes of wiggle room
"RTN","HMPJSONE",20,0)
 S @VVJSON@(VVLINE)=""
"RTN","HMPJSONE",21,0)
 D SEROBJ(VVROOT)
"RTN","HMPJSONE",22,0)
 Q
"RTN","HMPJSONE",23,0)
 ;
"RTN","HMPJSONE",24,0)
SEROBJ(VVROOT) ; Serialize into a JSON object
"RTN","HMPJSONE",25,0)
 N VVFIRST,VVSUB,VVNXT
"RTN","HMPJSONE",26,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"{"
"RTN","HMPJSONE",27,0)
 S VVFIRST=1
"RTN","HMPJSONE",28,0)
 S VVSUB="" F  S VVSUB=$O(@VVROOT@(VVSUB)) Q:VVSUB=""  D
"RTN","HMPJSONE",29,0)
 . S:'VVFIRST @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"," S VVFIRST=0
"RTN","HMPJSONE",30,0)
 . ; get the name part
"RTN","HMPJSONE",31,0)
 . D SERNAME(VVSUB)
"RTN","HMPJSONE",32,0)
 . ; if this is a value, serialize it
"RTN","HMPJSONE",33,0)
 . I $$ISVALUE(VVROOT,VVSUB) D SERVAL(VVROOT,VVSUB) Q
"RTN","HMPJSONE",34,0)
 . ; otherwise navigate to the next child object or array
"RTN","HMPJSONE",35,0)
 . I $D(@VVROOT@(VVSUB))=10 S VVNXT=$O(@VVROOT@(VVSUB,"")) D  Q
"RTN","HMPJSONE",36,0)
 . . I +VVNXT D SERARY($NA(@VVROOT@(VVSUB))) I 1
"RTN","HMPJSONE",37,0)
 . . E  D SEROBJ($NA(@VVROOT@(VVSUB)))
"RTN","HMPJSONE",38,0)
 . D ERRX("SOB",VVSUB)  ; should quit loop before here
"RTN","HMPJSONE",39,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"}"
"RTN","HMPJSONE",40,0)
 Q
"RTN","HMPJSONE",41,0)
SERARY(VVROOT) ; Serialize into a JSON array
"RTN","HMPJSONE",42,0)
 N VVFIRST,VVI,VVNXT
"RTN","HMPJSONE",43,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"["
"RTN","HMPJSONE",44,0)
 S VVFIRST=1
"RTN","HMPJSONE",45,0)
 S VVI=0 F  S VVI=$O(@VVROOT@(VVI)) Q:'VVI  D
"RTN","HMPJSONE",46,0)
 . S:'VVFIRST @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"," S VVFIRST=0
"RTN","HMPJSONE",47,0)
 . I $$ISVALUE(VVROOT,VVI) D SERVAL(VVROOT,VVI) Q  ; write value
"RTN","HMPJSONE",48,0)
 . I $D(@VVROOT@(VVI))=10 S VVNXT=$O(@VVROOT@(VVI,"")) D  Q
"RTN","HMPJSONE",49,0)
 . . I +VVNXT D SERARY($NA(@VVROOT@(VVI))) I 1
"RTN","HMPJSONE",50,0)
 . . E  D SEROBJ($NA(@VVROOT@(VVI)))
"RTN","HMPJSONE",51,0)
 . D ERRX("SAR",VVI)  ; should quit loop before here
"RTN","HMPJSONE",52,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"]"
"RTN","HMPJSONE",53,0)
 Q
"RTN","HMPJSONE",54,0)
SERNAME(VVSUB) ; Serialize the object name into JSON string
"RTN","HMPJSONE",55,0)
 I $E(VVSUB)="""" S VVSUB=$E(VVSUB,2,$L(VVSUB)) ; quote indicates numeric label
"RTN","HMPJSONE",56,0)
 I ($L(VVSUB)+$L(@VVJSON@(VVLINE)))>VVMAX S VVLINE=VVLINE+1,@VVJSON@(VVLINE)=""
"RTN","HMPJSONE",57,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_""""_VVSUB_""""_":"
"RTN","HMPJSONE",58,0)
 Q
"RTN","HMPJSONE",59,0)
SERVAL(VVROOT,VVSUB) ; Serialize X into appropriate JSON representation
"RTN","HMPJSONE",60,0)
 N VVX,VVI,VVDONE
"RTN","HMPJSONE",61,0)
 ; if the node is already in JSON format, just add it
"RTN","HMPJSONE",62,0)
 I $D(@VVROOT@(VVSUB,":")) D  QUIT  ; <-- jump out here if preformatted
"RTN","HMPJSONE",63,0)
 . S VVX=$G(@VVROOT@(VVSUB,":")) D:$L(VVX) CONCAT
"RTN","HMPJSONE",64,0)
 . S VVI=0 F  S VVI=$O(@VVROOT@(VVSUB,":",VVI)) Q:'VVI  S VVX=@VVROOT@(VVSUB,":",VVI) D CONCAT
"RTN","HMPJSONE",65,0)
 ;
"RTN","HMPJSONE",66,0)
 S VVX=$G(@VVROOT@(VVSUB)),VVDONE=0
"RTN","HMPJSONE",67,0)
 ; handle the numeric, boolean, and null types
"RTN","HMPJSONE",68,0)
 I $D(@VVROOT@(VVSUB,"\n")) S:$L(@VVROOT@(VVSUB,"\n")) VVX=@VVROOT@(VVSUB,"\n") D CONCAT QUIT  ; when +X'=X
"RTN","HMPJSONE",69,0)
 I '$D(@VVROOT@(VVSUB,"\s")),$L(VVX) D  QUIT:VVDONE
"RTN","HMPJSONE",70,0)
 . I VVX']]$C(1) S VVX=$$JNUM(VVX) D CONCAT S VVDONE=1 QUIT
"RTN","HMPJSONE",71,0)
 . I VVX="true"!(VVX="false")!(VVX="null") D CONCAT S VVDONE=1 QUIT
"RTN","HMPJSONE",72,0)
 ; otherwise treat it as a string type
"RTN","HMPJSONE",73,0)
 S VVX=""""_$$ESC(VVX) ; open quote
"RTN","HMPJSONE",74,0)
 D CONCAT
"RTN","HMPJSONE",75,0)
 I $D(@VVROOT@(VVSUB,"\")) D  ; handle continuation nodes
"RTN","HMPJSONE",76,0)
 . S VVI=0 F  S VVI=$O(@VVROOT@(VVSUB,"\",VVI)) Q:'VVI   D
"RTN","HMPJSONE",77,0)
 . . S VVX=$$ESC(@VVROOT@(VVSUB,"\",VVI))
"RTN","HMPJSONE",78,0)
 . . D CONCAT
"RTN","HMPJSONE",79,0)
 S VVX="""" D CONCAT    ; close quote
"RTN","HMPJSONE",80,0)
 Q
"RTN","HMPJSONE",81,0)
CONCAT ; come here to concatenate to JSON string
"RTN","HMPJSONE",82,0)
 I ($L(VVX)+$L(@VVJSON@(VVLINE)))>VVMAX S VVLINE=VVLINE+1,@VVJSON@(VVLINE)=""
"RTN","HMPJSONE",83,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_VVX
"RTN","HMPJSONE",84,0)
 Q
"RTN","HMPJSONE",85,0)
ISVALUE(VVROOT,VVSUB) ; Return true if this is a value node
"RTN","HMPJSONE",86,0)
 I $D(@VVROOT@(VVSUB))#2 Q 1
"RTN","HMPJSONE",87,0)
 N VVX S VVX=$O(@VVROOT@(VVSUB,""))
"RTN","HMPJSONE",88,0)
 Q:VVX="\" 1  ; word processing continuation node
"RTN","HMPJSONE",89,0)
 Q:VVX=":" 1  ; pre-formatted JSON node
"RTN","HMPJSONE",90,0)
 Q 0
"RTN","HMPJSONE",91,0)
 ;
"RTN","HMPJSONE",92,0)
NUMERIC(X) ; Return true if the numeric
"RTN","HMPJSONE",93,0)
 I $L(X)>18 Q 0        ; string (too long for numeric)
"RTN","HMPJSONE",94,0)
 I X=0 Q 1             ; numeric (value is zero)
"RTN","HMPJSONE",95,0)
 I +X=0 Q 0            ; string
"RTN","HMPJSONE",96,0)
 I $E(X,1)="." Q 0     ; not a JSON number (although numeric in M)
"RTN","HMPJSONE",97,0)
 I $E(X,1,2)="-." Q 0  ; not a JSON number
"RTN","HMPJSONE",98,0)
 I +X=X Q 1            ; numeric
"RTN","HMPJSONE",99,0)
 I X?1"0."1.n Q 1      ; positive fraction
"RTN","HMPJSONE",100,0)
 I X?1"-0."1.N Q 1     ; negative fraction
"RTN","HMPJSONE",101,0)
 S X=$TR(X,"e","E")
"RTN","HMPJSONE",102,0)
 I X?.1"-"1.N.1".".N1"E".1"+"1.N Q 1  ; {-}99{.99}E{+}99
"RTN","HMPJSONE",103,0)
 I X?.1"-"1.N.1".".N1"E-"1.N Q 1      ; {-}99{.99}E-99
"RTN","HMPJSONE",104,0)
 Q 0
"RTN","HMPJSONE",105,0)
 ;
"RTN","HMPJSONE",106,0)
ESC(X) ; Escape string for JSON
"RTN","HMPJSONE",107,0)
 N Y,I,PAIR,FROM,TO
"RTN","HMPJSONE",108,0)
 S Y=X
"RTN","HMPJSONE",109,0)
 F PAIR="\\","""""","//",$C(8,98),$C(12,102),$C(10,110),$C(13,114),$C(9,116) D
"RTN","HMPJSONE",110,0)
 . S FROM=$E(PAIR),TO=$E(PAIR,2)
"RTN","HMPJSONE",111,0)
 . S X=Y,Y=$P(X,FROM) F I=2:1:$L(X,FROM) S Y=Y_"\"_TO_$P(X,FROM,I)
"RTN","HMPJSONE",112,0)
 I Y?.E1.C.E S X=Y,Y="" F I=1:1:$L(X) S FROM=$A(X,I) D
"RTN","HMPJSONE",113,0)
 . ; skip NUL character, otherwise encode ctrl-char
"RTN","HMPJSONE",114,0)
 . I FROM<32 Q:FROM=0  S Y=Y_$$UCODE(FROM) Q
"RTN","HMPJSONE",115,0)
 . I FROM>126,(FROM<160) S Y=Y_$$UCODE(FROM) Q
"RTN","HMPJSONE",116,0)
 . S Y=Y_$E(X,I)
"RTN","HMPJSONE",117,0)
 Q Y
"RTN","HMPJSONE",118,0)
 ;
"RTN","HMPJSONE",119,0)
JNUM(N) ; Return JSON representation of a number
"RTN","HMPJSONE",120,0)
 I N'<1 Q N
"RTN","HMPJSONE",121,0)
 I N'>-1 Q N
"RTN","HMPJSONE",122,0)
 I N>0 Q "0"_N
"RTN","HMPJSONE",123,0)
 I N<0 Q "-0"_$P(N,"-",2,9)
"RTN","HMPJSONE",124,0)
 Q N
"RTN","HMPJSONE",125,0)
 ;
"RTN","HMPJSONE",126,0)
UCODE(C) ; Return \u00nn representation of decimal character value
"RTN","HMPJSONE",127,0)
 N H S H="0000"_$$CNV^XLFUTL(C,16)
"RTN","HMPJSONE",128,0)
 Q "\u"_$E(H,$L(H)-3,$L(H))
"RTN","HMPJSONE",129,0)
 ;
"RTN","HMPJSONE",130,0)
ERRX(ID,VAL) ; Set the appropriate error message
"RTN","HMPJSONE",131,0)
 D ERRX^HMPJSON(ID,$G(VAL))
"RTN","HMPJSONE",132,0)
 Q
"RTN","HMPLIST")
0^94^B60978957
"RTN","HMPLIST",1,0)
HMPLIST ;HINES OIFO/DP - List Manager;02 Nov 2012
"RTN","HMPLIST",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPLIST",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPLIST",4,0)
 ;
"RTN","HMPLIST",5,0)
EN(TARGET,NAME,FORMAT,PARAMS) ; OlD sKOoL entry point
"RTN","HMPLIST",6,0)
 Kill @TARGET
"RTN","HMPLIST",7,0)
 New HMPLIST,HMPROOT,HMPXECUTE
"RTN","HMPLIST",8,0)
 If NAME="*" Do
"RTN","HMPLIST",9,0)
 . Do ALL(TARGET)
"RTN","HMPLIST",10,0)
 Else  Do
"RTN","HMPLIST",11,0)
 . Set HMPLIST=$$LIST(NAME) If 'HMPLIST Set Y=$$ADD("-1^No Such List '"_NAME_"'") Quit
"RTN","HMPLIST",12,0)
 . If $Piece(HMPLIST,U,3)=0 Do  ; Static list
"RTN","HMPLIST",13,0)
 . . Set X=$$GET1^DIQ(800000.2,+HMPLIST_",",.9,"",TARGET)
"RTN","HMPLIST",14,0)
 . Else  Set HMPXECUTE=$$GET1^DIQ(800000.2,HMPLIST_",",.11,"I") Xecute:HMPXECUTE]"" HMPXECUTE
"RTN","HMPLIST",15,0)
 . Set @TARGET@(0)=NAME_U_$Order(@TARGET@(""),-1)_U_$$COLS(+HMPLIST)
"RTN","HMPLIST",16,0)
 ; Process alternate format before leaving
"RTN","HMPLIST",17,0)
 Set FORMAT=$Get(FORMAT,"DEFAULT")
"RTN","HMPLIST",18,0)
 Do @$Select(FORMAT="XML":"XML",FORMAT="JSON":"JSON",FORMAT="DEFAULT":"DEFAULT",1:"UNKNOWN")
"RTN","HMPLIST",19,0)
 Quit
"RTN","HMPLIST",20,0)
 ;
"RTN","HMPLIST",21,0)
RPC(RESULT,NAME,FORMAT,PARAMS) ; Accessed via HMP LIST Remote Procedure
"RTN","HMPLIST",22,0)
 Set RESULT=$Name(^TMP($J)) Kill @RESULT
"RTN","HMPLIST",23,0)
 If $Data(PARAMS) Do EN(RESULT,NAME,$Get(FORMAT,"DEFAULT"),.PARAMS)
"RTN","HMPLIST",24,0)
 Else  Do EN(RESULT,NAME,$Get(FORMAT,"DEFAULT"))
"RTN","HMPLIST",25,0)
 Quit
"RTN","HMPLIST",26,0)
 ;
"RTN","HMPLIST",27,0)
VALUE(NAME,ID) ; Return the item from a list by ID
"RTN","HMPLIST",28,0)
 New HMPLIST
"RTN","HMPLIST",29,0)
 Set HMPLIST=$$LIST(NAME) If 'HMPLIST Quit "^No Such List"
"RTN","HMPLIST",30,0)
 For X=0:0 Set X=$Order(^HMPD(800000.2,+HMPLIST,9,X)) Quit:'X  Quit:$Piece(^(X,0),U)=ID
"RTN","HMPLIST",31,0)
 Quit $Select(X:^HMPD(800000.2,+HMPLIST,9,X,0),1:"^No Such ID")
"RTN","HMPLIST",32,0)
 ;
"RTN","HMPLIST",33,0)
EDIT ; Edit a list definition
"RTN","HMPLIST",34,0)
 New DDSFILE,DA,DR
"RTN","HMPLIST",35,0)
 Do HOME^%ZIS Write @IOF
"RTN","HMPLIST",36,0)
 Set DDSFILE=800000.2,DR="[HMP LIST]"
"RTN","HMPLIST",37,0)
 Do ^DDS
"RTN","HMPLIST",38,0)
 Quit
"RTN","HMPLIST",39,0)
 ;
"RTN","HMPLIST",40,0)
DISPLAY ; Display a list definition
"RTN","HMPLIST",41,0)
 New DIC,HMP,BY,FR,TO,FLDS
"RTN","HMPLIST",42,0)
 Set DIC=800000.2,DIC(0)="AEQM",DIC("A")="Select List Definition to Display: " Do ^DIC Quit:+Y<1
"RTN","HMPLIST",43,0)
 Set BY="@NUMBER",FR=+Y,TO=+Y,FLDS="[HMP LIST DISPLAY]" Do EN1^DIP
"RTN","HMPLIST",44,0)
 Quit
"RTN","HMPLIST",45,0)
 ;
"RTN","HMPLIST",46,0)
DEFAULT ; Just return as is, a simple array
"RTN","HMPLIST",47,0)
 Quit
"RTN","HMPLIST",48,0)
 ;
"RTN","HMPLIST",49,0)
UNKNOWN ; You've got no idea, and neither do I
"RTN","HMPLIST",50,0)
 Quit
"RTN","HMPLIST",51,0)
 ;
"RTN","HMPLIST",52,0)
JSON ; Convert @TARGET@(1..n) to JSON
"RTN","HMPLIST",53,0)
 New HMPCOLS,HMPX,HMPY
"RTN","HMPLIST",54,0)
 Set HMPCOLS=$Piece(@TARGET@(0),U,3),HMPX=@TARGET@(0)
"RTN","HMPLIST",55,0)
 Set @TARGET@(0)="{ name : """_$Piece(HMPX,U,1)_""", count : """_$Piece(HMPX,U,2)_""""_$Select($Order(@TARGET@(0)):", [",1:"}")
"RTN","HMPLIST",56,0)
 For X=0:0 Set X=$Order(@TARGET@(X)) Quit:'X  Do
"RTN","HMPLIST",57,0)
 . Set HMPX=@TARGET@(X),HMPY="{ "
"RTN","HMPLIST",58,0)
 . For Y=1:1:$Length(HMPCOLS,";") Set HMPY=HMPY_""""_$Piece(HMPCOLS,";",Y)_""":"""_$Piece(HMPX,U,Y)_""""_$Select(Y<$Length(HMPCOLS,";"):", ",1:" ")
"RTN","HMPLIST",59,0)
 . Set HMPY=HMPY_"}"
"RTN","HMPLIST",60,0)
 . If $Order(@TARGET@(X)) Set @TARGET@(X)=HMPY_"," Quit
"RTN","HMPLIST",61,0)
 . Set @TARGET@(X)=HMPY
"RTN","HMPLIST",62,0)
 Set @TARGET@($Order(@TARGET@(""),-1)+1)="]}"
"RTN","HMPLIST",63,0)
 Quit
"RTN","HMPLIST",64,0)
 ;
"RTN","HMPLIST",65,0)
XML ; Convert @TARGET@(1..n) to XML
"RTN","HMPLIST",66,0)
 New HMPCOLD,HMPX,HMPY
"RTN","HMPLIST",67,0)
 Set HMPCOLS=$Piece(@TARGET@(0),U,3)
"RTN","HMPLIST",68,0)
 For X=0:0 Set X=$Order(@TARGET@(X)) Quit:'X  Do
"RTN","HMPLIST",69,0)
 . Set HMPX=@TARGET@(X),HMPY="<item "
"RTN","HMPLIST",70,0)
 . For Y=1:1:$Length(HMPCOLS,";") Set HMPY=HMPY_$Piece(HMPCOLS,";",Y)_"="""_$Piece(HMPX,U,Y)_""" "
"RTN","HMPLIST",71,0)
 . Set HMPY=HMPY_"/>"
"RTN","HMPLIST",72,0)
 . Set @TARGET@(X)=HMPY
"RTN","HMPLIST",73,0)
 Set HMPX=@TARGET@(0)
"RTN","HMPLIST",74,0)
 Set @TARGET@(0)="<list name="""_$Piece(HMPX,U,1)_""" count="""_$Piece(HMPX,U,2)_""">"
"RTN","HMPLIST",75,0)
 Set @TARGET@($Order(@TARGET@(""),-1)+1)="</list>"
"RTN","HMPLIST",76,0)
 Quit
"RTN","HMPLIST",77,0)
 ;
"RTN","HMPLIST",78,0)
XMLSAFE(X) ; Transform X into XML safe data
"RTN","HMPLIST",79,0)
 ; Strip off the spaces and make life easier
"RTN","HMPLIST",80,0)
 For  Quit:$Extract(X)'=" "  Set X=$Extract(X,2,$Length(X))
"RTN","HMPLIST",81,0)
 For  Quit:$Extract(X,$Length(X))'=" "  Set X=$Extract(X,1,$Length(X)-1)
"RTN","HMPLIST",82,0)
 Set X=$$TRNSLT(X,"&","&amp;")
"RTN","HMPLIST",83,0)
 Set X=$$TRNSLT(X,"<","&lt;")
"RTN","HMPLIST",84,0)
 Set X=$$TRNSLT(X,">","&gt;")
"RTN","HMPLIST",85,0)
 Set X=$$TRNSLT(X,"'","&apos;")
"RTN","HMPLIST",86,0)
 Set X=$$TRNSLT(X,"""","&quot;")
"RTN","HMPLIST",87,0)
 Set X=$$TRNSLT(X,":","&#58;")
"RTN","HMPLIST",88,0)
 Quit X
"RTN","HMPLIST",89,0)
 ;
"RTN","HMPLIST",90,0)
JSONSAFE(X) ; Transform X into JSON safe data
"RTN","HMPLIST",91,0)
 ; Strip the spaces
"RTN","HMPLIST",92,0)
 For  Quit:$Extract(X)'=" "  Set X=$Extract(X,2,$Length(X))
"RTN","HMPLIST",93,0)
 For  Quit:$Extract(X,$Length(X))'=" "  Set X=$Extract(X,1,$Length(X)-1)
"RTN","HMPLIST",94,0)
 Set X=$$TRNSLT(X,"""","\""")
"RTN","HMPLIST",95,0)
 Quit X
"RTN","HMPLIST",96,0)
 ;
"RTN","HMPLIST",97,0)
TRNSLT(X,X1,X2) ; Translate every Y to Z in X
"RTN","HMPLIST",98,0)
 New Y
"RTN","HMPLIST",99,0)
 Quit:X'[X1 X  ; Nothing to translate
"RTN","HMPLIST",100,0)
 Set Y="" For  Quit:X=""  Do
"RTN","HMPLIST",101,0)
 . If X[X1 Set Y=Y_$Piece(X,X1)_X2,X=$Piece(X,X1,2,250) Quit
"RTN","HMPLIST",102,0)
 . Set Y=Y_X,X=""
"RTN","HMPLIST",103,0)
 Quit Y
"RTN","HMPLIST",104,0)
 ;
"RTN","HMPLIST",105,0)
LIST(NAME) ; Return List by name
"RTN","HMPLIST",106,0)
 Set X=$$FIND1^DIC(800000.2,,"KX",NAME) Quit:X<1 X
"RTN","HMPLIST",107,0)
 Quit X_U_^HMPD(800000.2,X,0)
"RTN","HMPLIST",108,0)
 ;
"RTN","HMPLIST",109,0)
ALL(RETURN) ; Return All lists in RETURN()
"RTN","HMPLIST",110,0)
 Kill @RETURN
"RTN","HMPLIST",111,0)
 Do LIST^DIC(800000.2,,"@;.01;.02","P")
"RTN","HMPLIST",112,0)
 For X=0:0 Set X=$Order(^TMP("DILIST",$J,X)) Quit:'X  Set @RETURN@(X)=^TMP("DILIST",$J,X,0)
"RTN","HMPLIST",113,0)
 Set @RETURN@(0)="ALL LISTS^"_+$Order(@RETURN@(""),-1)_"^ID;name;type"
"RTN","HMPLIST",114,0)
 Kill ^TMP("DILIST",$J)
"RTN","HMPLIST",115,0)
 Quit
"RTN","HMPLIST",116,0)
 ;
"RTN","HMPLIST",117,0)
COLS(LIST) ; Return the col names (ID^Name) + any custom col specs
"RTN","HMPLIST",118,0)
 New RESULT,X,Y
"RTN","HMPLIST",119,0)
 Set RESULT="ID;name"
"RTN","HMPLIST",120,0)
 For X=0:0 Set X=$Order(^HMPD(800000.2,+LIST,2,X)) Quit:'X  Set Y=^(X,0) Do
"RTN","HMPLIST",121,0)
 . Set $Piece(RESULT,";",$Piece(Y,U,2))=$Piece(Y,U,1)
"RTN","HMPLIST",122,0)
 Quit RESULT
"RTN","HMPLIST",123,0)
 ;
"RTN","HMPLIST",124,0)
CODE(LIST) ; Return Generation Code for a list
"RTN","HMPLIST",125,0)
 Quit $Get(^HMPD(800000.2,+LIST,.11))
"RTN","HMPLIST",126,0)
 ;
"RTN","HMPLIST",127,0)
SET(DD,FLD) ; Build a list from a Set Of Codes DD and Field number combination
"RTN","HMPLIST",128,0)
 Kill @TARGET
"RTN","HMPLIST",129,0)
 Quit:$$GET1^DID(DD,FLD,,"TYPE")'="SET"
"RTN","HMPLIST",130,0)
 Set X=$$GET1^DID(DD,FLD,,"POINTER")
"RTN","HMPLIST",131,0)
 For Y=1:1:$Length(X,";")-1 Set @TARGET@(Y)=$Translate($Piece(X,";",Y),":","^")
"RTN","HMPLIST",132,0)
 Quit
"RTN","HMPLIST",133,0)
 ;
"RTN","HMPLIST",134,0)
REBUILD(NAME) ;
"RTN","HMPLIST",135,0)
 New LIST,ALL,CODE,FDA,HMPFDA,HMPX
"RTN","HMPLIST",136,0)
 ;
"RTN","HMPLIST",137,0)
 If NAME="?" Do  Quit
"RTN","HMPLIST",138,0)
 . Set DIC=800000.2,DIC(0)="AEQMZ",DIC("A")="Rebuild List: ",DIC("S")="I '$P(^(0),U,2)"
"RTN","HMPLIST",139,0)
 . Do ^DIC Do:+Y REBUILD(Y(0,0))
"RTN","HMPLIST",140,0)
 ;
"RTN","HMPLIST",141,0)
 If +NAME=NAME Do  Quit  ; Rebuild all for a DD number
"RTN","HMPLIST",142,0)
 . For HMPX=0:0 Set HMPX=$Order(^HMPD(800000.2,"ADD",NAME,HMPX)) Quit:'HMPX  Do REBUILD($Piece(^HMPD(800000.2,HMPX,0),U))
"RTN","HMPLIST",143,0)
 ;
"RTN","HMPLIST",144,0)
 If NAME="*" Do  Quit  ; Rebuild all
"RTN","HMPLIST",145,0)
 . For HMPX=0:0 Set HMPX=$Order(^HMPD(800000.2,HMPX)) Quit:'HMPX  Do REBUILD($Piece(^HMPD(800000.2,HMPX,0),U))
"RTN","HMPLIST",146,0)
 ;
"RTN","HMPLIST",147,0)
 Set LIST=$$LIST(NAME) Quit:+LIST<1  ; No Such List
"RTN","HMPLIST",148,0)
 ;
"RTN","HMPLIST",149,0)
 If $Piece(LIST,U,2) Quit  ; Dynamic list - fired everytime
"RTN","HMPLIST",150,0)
 Set CODE=$$CODE(LIST) Quit:CODE=""  ; No rebuild code, must be manual
"RTN","HMPLIST",151,0)
 ;
"RTN","HMPLIST",152,0)
 Set TARGET=$Name(^TMP($J))
"RTN","HMPLIST",153,0)
 Set FDA=$Name(HMPFDA(800000.2,(+LIST)_","))
"RTN","HMPLIST",154,0)
 Kill @TARGET
"RTN","HMPLIST",155,0)
 Xecute CODE
"RTN","HMPLIST",156,0)
 Set @FDA@(.09)="NOW"
"RTN","HMPLIST",157,0)
 Set @FDA@(.9)=TARGET
"RTN","HMPLIST",158,0)
 Do FILE^DIE("E","HMPFDA")
"RTN","HMPLIST",159,0)
 Quit
"RTN","HMPLIST",160,0)
 ;
"RTN","HMPLIST",161,0)
DQ ; Called via Taskman to build any list that has expired
"RTN","HMPLIST",162,0)
 New HMPNOW,HMPLIST,HMPMIN
"RTN","HMPLIST",163,0)
 ; Nothing set to refresh automatically
"RTN","HMPLIST",164,0)
 Quit:'$Order(^HMPD(800000.2,"AREFRESH",0))
"RTN","HMPLIST",165,0)
 Do NOW^%DTC Set HMPNOW=%
"RTN","HMPLIST",166,0)
 For HMPLIST=0:0 Set HMPLIST=$Order(^HMPD(800000.2,HMPLIST)) Quit:'HMPLIST  Do:'$Piece(^HMPD(800000.2,HMPLIST,0),U,2)  ; Not Dynamic
"RTN","HMPLIST",167,0)
 . Quit:'$Piece(^HMPD(800000.2,HMPLIST,0),U,8)  ; Doesn't have a refresh limit
"RTN","HMPLIST",168,0)
 . New $ESTACK,$ETRAP Set $ETRAP="D ERR^HMPLIST" ; Will prevent a list error from cratering the entire build
"RTN","HMPLIST",169,0)
 . Set HMPMIN=$Piece(^HMPD(800000.2,HMPLIST,0),U,8)
"RTN","HMPLIST",170,0)
 . Set HMPLAST=$$GET1^DIQ(800000.2,HMPLIST_",",.09,"I")
"RTN","HMPLIST",171,0)
 . Set HMPNEXT=$$FMADD^XLFDT(HMPLAST,0,0,HMPMIN,0)
"RTN","HMPLIST",172,0)
 . Quit:HMPNEXT>HMPNOW
"RTN","HMPLIST",173,0)
 . Quit:($$FMADD^XLFDT(HMPNOW,0,0,HMPMIN*-1,0)<$Piece(^HMPD(800000.2,HMPLIST,0),U,9))  ; Not yet stale :)
"RTN","HMPLIST",174,0)
 . Do REBUILD($Piece(^HMPD(800000.2,HMPLIST,0),U))
"RTN","HMPLIST",175,0)
 ; Get the shortest refresh threshold and reschedule for that
"RTN","HMPLIST",176,0)
 Set HMPNEXT=$$FMADD^XLFDT(+$Extract(HMPNOW,1,12),0,0,$Order(^HMPD(800000.2,"AREFRESH",0)),0)
"RTN","HMPLIST",177,0)
 Set ZTREQ=$$FMTH^XLFDT(HMPNEXT)
"RTN","HMPLIST",178,0)
 Quit
"RTN","HMPLIST",179,0)
 ;
"RTN","HMPLIST",180,0)
ADD(X) ; Adds an item to the list automagically
"RTN","HMPLIST",181,0)
 Set @TARGET@($Order(@TARGET@(""),-1)+1)=X
"RTN","HMPLIST",182,0)
 Quit $Order(@TARGET@(""),-1)
"RTN","HMPLIST",183,0)
 ;
"RTN","HMPLIST",184,0)
WARDS ; Get list of wards, clinics and non-stops
"RTN","HMPLIST",185,0)
 Do LOC("W")
"RTN","HMPLIST",186,0)
 Quit
"RTN","HMPLIST",187,0)
 ;
"RTN","HMPLIST",188,0)
CLINICS ; Get Active Clinics
"RTN","HMPLIST",189,0)
 Do LOC("NC")
"RTN","HMPLIST",190,0)
 Quit
"RTN","HMPLIST",191,0)
 ;
"RTN","HMPLIST",192,0)
LOC(TYPES) ; Build list of locations by type
"RTN","HMPLIST",193,0)
 New HMPDT,HMPNOW
"RTN","HMPLIST",194,0)
 Do NOW^%DTC Set HMPNOW=%
"RTN","HMPLIST",195,0)
 For X=0:0 Set X=$Order(^SC(X)) Quit:'X  Do:TYPES[$Piece(^(X,0),U,3)
"RTN","HMPLIST",196,0)
 . Set HMPDT=$Get(^SC(X,"I"),U) ; Deactivation and Reactivation dates
"RTN","HMPLIST",197,0)
 . If +HMPDT Quit:(+HMPDT<HMPNOW&('$Piece(HMPDT,U,2)))!(+HMPDT<HMPNOW&($Piece(HMPDT,U,2)>HMPNOW))
"RTN","HMPLIST",198,0)
 . Set Y=$$ADD^HMPLIST(X_U_$Piece(^SC(X,0),U,1,3)) ; Full tag^rtn used for demonstration purposes
"RTN","HMPLIST",199,0)
 Quit
"RTN","HMPLIST",200,0)
 ;
"RTN","HMPLIST",201,0)
INPT ; Rebuild the inpatient list
"RTN","HMPLIST",202,0)
 Do LIST^DIC(2,,"@;.01;.02;.03;.09;.1;.101","P",,,,"CN")
"RTN","HMPLIST",203,0)
 For X=0:0 Set X=$Order(^TMP("DILIST",$J,X)) Quit:'X  Set Y=$$ADD(^(X,0))
"RTN","HMPLIST",204,0)
 Do CLEAN^DILF
"RTN","HMPLIST",205,0)
 Quit
"RTN","HMPLIST",206,0)
 ;
"RTN","HMPLIST",207,0)
ERR ; This is the application specific error trap for the DQ loop
"RTN","HMPLIST",208,0)
 Do ^%ZTER ; record the error
"RTN","HMPLIST",209,0)
 Do UNWIND^%ZTER ; unwind the stack, return to caller.
"RTN","HMPLIST",210,0)
 Quit
"RTN","HMPLIST",211,0)
 ;
"RTN","HMPMDUTL")
0^95^B50918469
"RTN","HMPMDUTL",1,0)
HMPMDUTL ;HINES OIFO/BLJ - FileMan JSON utilities for HMP;02 April 2013
"RTN","HMPMDUTL",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPMDUTL",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPMDUTL",4,0)
 ;
"RTN","HMPMDUTL",5,0)
EN Q  ; Only call via linetag.
"RTN","HMPMDUTL",6,0)
TERM ; Retrieves list of terms
"RTN","HMPMDUTL",7,0)
  ; NOTE: we're not gonna support paged retrieves with this unless we have to.  Do not count on
"RTN","HMPMDUTL",8,0)
  ; them being there.
"RTN","HMPMDUTL",9,0)
  ;
"RTN","HMPMDUTL",10,0)
  ; Gets terminology.
"RTN","HMPMDUTL",11,0)
  N TERMIENS,TERMCNT,X
"RTN","HMPMDUTL",12,0)
  D LIST^DIC("704.101",,,,,,,,"I $P(^(0),U,5)=1")
"RTN","HMPMDUTL",13,0)
  M TERMIENS=^TMP("DILIST",$J,2)
"RTN","HMPMDUTL",14,0)
  S TERMCNT=$P($G(^TMP("DILIST",$J,0)),U,1)
"RTN","HMPMDUTL",15,0)
  K ^TMP("DILIST",$J)
"RTN","HMPMDUTL",16,0)
  ;
"RTN","HMPMDUTL",17,0)
  F X=0:0 S X=$O(TERMIENS(X)) Q:'X  D
"RTN","HMPMDUTL",18,0)
  . N RESULT
"RTN","HMPMDUTL",19,0)
  . ; term
"RTN","HMPMDUTL",20,0)
  . D ONETERM($G(TERMIENS(X)),"RESULT")
"RTN","HMPMDUTL",21,0)
  . ;
"RTN","HMPMDUTL",22,0)
  . D ADD^HMPEF("RESULT")
"RTN","HMPMDUTL",23,0)
  . S HMPCNT=X,HMPLAST=X
"RTN","HMPMDUTL",24,0)
  I 'X S HMPFINI=1
"RTN","HMPMDUTL",25,0)
  Q
"RTN","HMPMDUTL",26,0)
ONETERM(ID,TARGET) ; loads one term
"RTN","HMPMDUTL",27,0)
  Q:+ID<1  ; Gotta be a valid integer/id
"RTN","HMPMDUTL",28,0)
  N $ES,$ET,ERRMSG
"RTN","HMPMDUTL",29,0)
  S ERRMSG=$$ERRMSG^HMPEF("CLiO Term",ID)
"RTN","HMPMDUTL",30,0)
  S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPMDUTL",31,0)
  N TERM,TRM,TERMTYPE
"RTN","HMPMDUTL",32,0)
  ;
"RTN","HMPMDUTL",33,0)
  D GETS^DIQ("704.101",ID_",","*","IE","TERM")
"RTN","HMPMDUTL",34,0)
  N TRM S TRM=$NA(TERM(704.101,""_ID_","))
"RTN","HMPMDUTL",35,0)
  S @TARGET@("id")=$G(@TRM@(.01,"E"))
"RTN","HMPMDUTL",36,0)
  S @TARGET@("uid")="urn:va:clioterminology:"_$G(@TARGET@("id"))
"RTN","HMPMDUTL",37,0)
  S @TARGET@("term")=$$SANITIZE($G(@TRM@(.02,"E")))
"RTN","HMPMDUTL",38,0)
  S @TARGET@("abbreviation")=$$SANITIZE($G(@TRM@(.03,"E")))
"RTN","HMPMDUTL",39,0)
  S @TARGET@("displayName")=$$SANITIZE($G(@TRM@(.04,"E")))
"RTN","HMPMDUTL",40,0)
  ; Get Term Type
"RTN","HMPMDUTL",41,0)
  S TERMTYPE=$$SANITIZE($G(@TRM@(.05,"I")))
"RTN","HMPMDUTL",42,0)
  D TERMTYPE(TERMTYPE,.TARGET)
"RTN","HMPMDUTL",43,0)
  ;
"RTN","HMPMDUTL",44,0)
  S @TARGET@("dataType")=$$SANITIZE($G(@TRM@(.06,"I")))
"RTN","HMPMDUTL",45,0)
  S @TARGET@("valueType")=$$SANITIZE($G(@TRM@(.07,"I")))
"RTN","HMPMDUTL",46,0)
  S @TARGET@("active")=$$SANITIZE($G(@TRM@(.09,"E")))
"RTN","HMPMDUTL",47,0)
  S @TARGET@("description")=$$SANITIZE($G(@TRM@(.1,"E")))
"RTN","HMPMDUTL",48,0)
  S @TARGET@("helpText")=$$SANITIZE($G(@TRM@(.2,"E")))
"RTN","HMPMDUTL",49,0)
  S @TARGET@("booleanValueTrue")=$$SANITIZE($G(@TRM@(.31,"E")))
"RTN","HMPMDUTL",50,0)
  S @TARGET@("booleanValueFalse")=$$SANITIZE($G(@TRM@(.32,"E")))
"RTN","HMPMDUTL",51,0)
  S @TARGET@("multiSelectPicklist")=$$SANITIZE($G(@TRM@(.33,"E")))
"RTN","HMPMDUTL",52,0)
  S @TARGET@("VUID")="urn:va:vuid:"_$$SANITIZE($G(@TRM@(99.99,"E")))
"RTN","HMPMDUTL",53,0)
  ; term -> child terms
"RTN","HMPMDUTL",54,0)
  ;
"RTN","HMPMDUTL",55,0)
  ; Note, for right now this is a little odd: the initial load is done off of DFN.  This load
"RTN","HMPMDUTL",56,0)
  ; is done off of UID.  We'll probably change that to UID or IFN for both at some point.
"RTN","HMPMDUTL",57,0)
  ;
"RTN","HMPMDUTL",58,0)
  D TERMCHLD($G(@TRM@(.01,"E")),.TARGET)
"RTN","HMPMDUTL",59,0)
  ;
"RTN","HMPMDUTL",60,0)
  ; term -> unit pair
"RTN","HMPMDUTL",61,0)
  D TERMUNIT($G(@TRM@(.01,"E")),.TARGET)
"RTN","HMPMDUTL",62,0)
  ;
"RTN","HMPMDUTL",63,0)
  ; term -> qualifier pair
"RTN","HMPMDUTL",64,0)
  ;
"RTN","HMPMDUTL",65,0)
  D TERMQUAL($G(@TRM@(.01,"E")),.TARGET,ID)
"RTN","HMPMDUTL",66,0)
  ;
"RTN","HMPMDUTL",67,0)
  ; term -> unit conversion - for right now, we're not going to pull term -> unit conversions.  We will need to do so at some point
"RTN","HMPMDUTL",68,0)
  ; though.
"RTN","HMPMDUTL",69,0)
  K TERMTYPE,TRM
"RTN","HMPMDUTL",70,0)
  Q
"RTN","HMPMDUTL",71,0)
  ;
"RTN","HMPMDUTL",72,0)
TERMTYPE(ID,TARGET) ;Loads term types.
"RTN","HMPMDUTL",73,0)
  ;
"RTN","HMPMDUTL",74,0)
  ; TARGET passed by reference.  
"RTN","HMPMDUTL",75,0)
  ;
"RTN","HMPMDUTL",76,0)
  ; Sanity checks first
"RTN","HMPMDUTL",77,0)
  ; 
"RTN","HMPMDUTL",78,0)
  Q:+ID<1  ; Gotta be a number, we're doing a direct IFN lookup.
"RTN","HMPMDUTL",79,0)
  N TERMTYPE
"RTN","HMPMDUTL",80,0)
  D GETS^DIQ("704.102",ID_",","*","E","TERMTYPE")
"RTN","HMPMDUTL",81,0)
  N HMPNAME S HMPNAME=$T(TTFLDS+1)
"RTN","HMPMDUTL",82,0)
  ;
"RTN","HMPMDUTL",83,0)
  N HMPEPLAC S HMPEPLAC("""")="\"""
"RTN","HMPMDUTL",84,0)
  S @TARGET@("termType",$P(HMPNAME,";",3))=ID
"RTN","HMPMDUTL",85,0)
  S @TARGET@("termType",$P(HMPNAME,";",4))=$$SANITIZE($$REPLACE^XLFSTR(TERMTYPE("704.102",ID_",",.01,"E"),.HMPEPLAC))
"RTN","HMPMDUTL",86,0)
  S @TARGET@("termType",$P(HMPNAME,";",5))=$$SANITIZE($$REPLACE^XLFSTR(TERMTYPE("704.102",ID_",",.02,"E"),.HMPEPLAC))
"RTN","HMPMDUTL",87,0)
  S @TARGET@("termType",$P(HMPNAME,";",6))=$$SANITIZE($$REPLACE^XLFSTR(TERMTYPE("704.102",ID_",",.03,"E"),.HMPEPLAC))
"RTN","HMPMDUTL",88,0)
  K TERMTYPE
"RTN","HMPMDUTL",89,0)
  Q
"RTN","HMPMDUTL",90,0)
TERMCHLD(ID,TARGET) ;Loads child terms for a term
"RTN","HMPMDUTL",91,0)
  ;
"RTN","HMPMDUTL",92,0)
  ;
"RTN","HMPMDUTL",93,0)
  N MSGROOT S MSGROOT="TERMCHLD("""_ID_""")"
"RTN","HMPMDUTL",94,0)
  D FIND^DIC("704.106",,".02E;.03I;.04I;.05E;.06E;.07E;.08E;.09E","M",ID,,,,,MSGROOT)
"RTN","HMPMDUTL",95,0)
  ; Check to see if we actually have any children.
"RTN","HMPMDUTL",96,0)
  I +$P(TERMCHLD(ID,"DILIST",0),U,1)<1 K @MSGROOT Q
"RTN","HMPMDUTL",97,0)
  N X F X=0:0 S X=($O(TERMCHLD(ID,"DILIST","ID",X))) Q:'X  D
"RTN","HMPMDUTL",98,0)
  . ; .01 is the Term ID
"RTN","HMPMDUTL",99,0)
  . S @TARGET@("termChild",X,"childOrder")=$$SANITIZE($G(TERMCHLD(ID,"DILIST","ID",X,.02)))
"RTN","HMPMDUTL",100,0)
  . ; .03 is the Child ID
"RTN","HMPMDUTL",101,0)
  . N CHILD S CHILD=$NA(@TARGET@("termChild",X,"childTerm"))
"RTN","HMPMDUTL",102,0)
  . D ONETERM($G(TERMCHLD(ID,"DILIST","ID",X,.03)),.CHILD)
"RTN","HMPMDUTL",103,0)
  . S @TARGET@("termChild",X,"valueType")=$$SANITIZE($G(TERMCHLD(ID,"DILIST","ID",X,.05)))
"RTN","HMPMDUTL",104,0)
  . S @TARGET@("termChild",X,"valueDelimiter")=$$SANITIZE($G(TERMCHLD(ID,"DILIST","ID",X,.06)))
"RTN","HMPMDUTL",105,0)
  . S @TARGET@("termChild",X,"valueStart")=$$SANITIZE($G(TERMCHLD(ID,"DILIST","ID",X,.07)))
"RTN","HMPMDUTL",106,0)
  . S @TARGET@("termChild",X,"valueStop")=$$SANITIZE($G(TERMCHLD(ID,"DILIST","ID",X,.08)))
"RTN","HMPMDUTL",107,0)
  . S @TARGET@("termChild",X,"description")=$$SANITIZE($G(TERMCHLD(ID,"DILIST","ID",X,.09)))
"RTN","HMPMDUTL",108,0)
  K @MSGROOT
"RTN","HMPMDUTL",109,0)
  Q
"RTN","HMPMDUTL",110,0)
TERMUNIT(ID,TARGET) ;Loads Units for a term.
"RTN","HMPMDUTL",111,0)
 ;
"RTN","HMPMDUTL",112,0)
 N MSGROOT S MSGROOT="TERMUNIT("""_ID_""")"
"RTN","HMPMDUTL",113,0)
 D FIND^DIC("704.105",,".02I;.03E;.04E;.05E;.06E;.07E","M",ID,,,,,MSGROOT)
"RTN","HMPMDUTL",114,0)
 ; Check to see if we actually have any children.
"RTN","HMPMDUTL",115,0)
 I +$P(TERMUNIT(ID,"DILIST",0),U,1)<1 K @MSGROOT Q
"RTN","HMPMDUTL",116,0)
 N X F X=0:0 S X=($O(TERMUNIT(ID,"DILIST","ID",X))) Q:'X  D
"RTN","HMPMDUTL",117,0)
 . ; .01 is the Term ID
"RTN","HMPMDUTL",118,0)
 . ; .02 is the Unit ID
"RTN","HMPMDUTL",119,0)
 . N UNIT S UNIT=$NA(@TARGET@("units",X,"unitTerm"))
"RTN","HMPMDUTL",120,0)
 . D ONETERM($G(TERMUNIT(ID,"DILIST","ID",X,.02)),.UNIT)
"RTN","HMPMDUTL",121,0)
 . S @TARGET@("units",X,"minValue")=$$SANITIZE($G(TERMUNIT(ID,"DILIST","ID",X,.03)))
"RTN","HMPMDUTL",122,0)
 . S @TARGET@("units",X,"maxValue")=$$SANITIZE($G(TERMUNIT(ID,"DILIST","ID",X,.04)))
"RTN","HMPMDUTL",123,0)
 . S @TARGET@("units",X,"decPrecision")=$$SANITIZE($G(TERMUNIT(ID,"DILIST","ID",X,.05)))
"RTN","HMPMDUTL",124,0)
 . S @TARGET@("units",X,"refLow")=$$SANITIZE($G(TERMUNIT(ID,"DILIST","ID",X,.06)))
"RTN","HMPMDUTL",125,0)
 . S @TARGET@("units",X,"refHigh")=$$SANITIZE($G(TERMUNIT(ID,"DILIST","ID",X,.07)))
"RTN","HMPMDUTL",126,0)
 K @MSGROOT
"RTN","HMPMDUTL",127,0)
 Q
"RTN","HMPMDUTL",128,0)
TERMQUAL(ID,TARGET,IFN) ;Loads Qualifiers for a term
"RTN","HMPMDUTL",129,0)
 ;
"RTN","HMPMDUTL",130,0)
 N MSGROOT S MSGROOT="TERMQUAL("""_ID_""")"
"RTN","HMPMDUTL",131,0)
 D FIND^DIC("704.103",,".02E;.03I;.04E","M",ID,,,,,MSGROOT)
"RTN","HMPMDUTL",132,0)
 ; Check to see if we actually have any qualifiers.
"RTN","HMPMDUTL",133,0)
 I +$P(TERMQUAL(ID,"DILIST",0),U,1)<1 K @MSGROOT Q
"RTN","HMPMDUTL",134,0)
 N X F X=0:0 S X=($O(TERMQUAL(ID,"DILIST","ID",X))) Q:'X  D
"RTN","HMPMDUTL",135,0)
 . ; .01 is the Term ID
"RTN","HMPMDUTL",136,0)
 . ; .03 is the Qualifier ID
"RTN","HMPMDUTL",137,0)
 . N QUAL S QUAL=$NA(@TARGET@("qualifiers",X,"qualTerm"))
"RTN","HMPMDUTL",138,0)
 . ; blj 28 Feb 2014: bandaid to prevent recursive calls if someone has messed up the structure of the TERM_QUALIFIER file.
"RTN","HMPMDUTL",139,0)
 . I IFN'=$G(TERMQUAL(ID,"DILIST","ID",X,.03)) D ONETERM($G(TERMQUAL(ID,"DILIST","ID",X,.03)),.QUAL)
"RTN","HMPMDUTL",140,0)
 . S @TARGET@("qualifiers",X,"qualOrder")=$$SANITIZE($G(TERMQUAL(ID,"DILIST","ID",X,.02)))
"RTN","HMPMDUTL",141,0)
 . S @TARGET@("qualifiers",X,"ranking")=$$SANITIZE($G(TERMQUAL(ID,"DILIST","ID",X,.04)))
"RTN","HMPMDUTL",142,0)
 K @MSGROOT
"RTN","HMPMDUTL",143,0)
 Q
"RTN","HMPMDUTL",144,0)
SANITIZE(VALUE) ; Makes sure values are formatted correctly.
"RTN","HMPMDUTL",145,0)
 I +VALUE'=VALUE Q VALUE
"RTN","HMPMDUTL",146,0)
 I VALUE?1".".N S VALUE="0"_VALUE
"RTN","HMPMDUTL",147,0)
 I VALUE?1"-.".N S VALUE="-0"_$E(VALUE,2,$LENGTH(VALUE))
"RTN","HMPMDUTL",148,0)
 Q VALUE
"RTN","HMPMDUTL",149,0)
 ;
"RTN","HMPMDUTL",150,0)
GENGUID() ;
"RTN","HMPMDUTL",151,0)
 N X,AB
"RTN","HMPMDUTL",152,0)
 S X="",AB=$R(4),AB=$S(AB=0:"8",AB=1:"9",AB=2:"A",1:"B")
"RTN","HMPMDUTL",153,0)
 F  S X=X_$$BASE^XLFUTL($R(16),10,16) Q:$L(X)>31
"RTN","HMPMDUTL",154,0)
 S X="{"_$E(X,1,8)_"-"_$E(X,9,12)_"-"_"4"_$E(X,14,16)_"-"_AB_$E(X,18,20)_"-"_$E(X,21,32)_"}"
"RTN","HMPMDUTL",155,0)
 Q X
"RTN","HMPMDUTL",156,0)
TRMFLDS ;Fields for terminology
"RTN","HMPMDUTL",157,0)
  ;;.01;id
"RTN","HMPMDUTL",158,0)
  ;;.02;term
"RTN","HMPMDUTL",159,0)
  ;;.03;abbreviation
"RTN","HMPMDUTL",160,0)
  ;;.04;displayName
"RTN","HMPMDUTL",161,0)
  ;;.05;termType
"RTN","HMPMDUTL",162,0)
  ;;.06;dataType
"RTN","HMPMDUTL",163,0)
  ;;.07;valueType
"RTN","HMPMDUTL",164,0)
  ;;.09;active
"RTN","HMPMDUTL",165,0)
  ;;.1;description
"RTN","HMPMDUTL",166,0)
  ;;.2;helpText;
"RTN","HMPMDUTL",167,0)
  ;;.31;booleanValueTrue
"RTN","HMPMDUTL",168,0)
  ;;.32;booleanValueFalse;
"RTN","HMPMDUTL",169,0)
  ;;.33;multiSelectPicklist
"RTN","HMPMDUTL",170,0)
  ;;99.99;VUID
"RTN","HMPMDUTL",171,0)
  ;;***
"RTN","HMPMDUTL",172,0)
TTFLDS ;Fields for Term Typea
"RTN","HMPMDUTL",173,0)
  ;;id;type;xmlTag;VUID
"RTN","HMPP2I")
0^96^B233946
"RTN","HMPP2I",1,0)
HMPP2I ;SLC/MKB -- HMP patch 2 post install ;8/14/13  11:22
"RTN","HMPP2I",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPP2I",3,0)
 ;
"RTN","HMPP2I",4,0)
 ; External References          DBIA#
"RTN","HMPP2I",5,0)
 ; -------------------          -----
"RTN","HMPP2I",6,0)
 ; XPAR                          2263
"RTN","HMPP2I",7,0)
 ;
"RTN","HMPP2I",8,0)
PRE ; -- pre init
"RTN","HMPP2I",9,0)
 Q
"RTN","HMPP2I",10,0)
 ;
"RTN","HMPP2I",11,0)
POST ; -- post init
"RTN","HMPP2I",12,0)
 D PUT^XPAR("PKG","HMP VERSION",1,"1.02")
"RTN","HMPP2I",13,0)
 D PUT^XPAR("SYS","HMP SYSTEM NAME",1,$$SYS^HMPUTILS)
"RTN","HMPP2I",14,0)
 Q
"RTN","HMPP3I")
0^97^B74432110
"RTN","HMPP3I",1,0)
HMPP3I ;SLC/AGP -- HMP patch 3 post install ; 2/18/15 5:43pm
"RTN","HMPP3I",2,0)
 ;;2.0;HEALTH MANAGEMENT PLATFORM;**1**;Oct 10, 2014;Build 53
"RTN","HMPP3I",3,0)
 ;
"RTN","HMPP3I",4,0)
ENV ; -- environment check to prevent production installation
"RTN","HMPP3I",5,0)
 I $$PROD^XUPROD D
"RTN","HMPP3I",6,0)
 .W !,"You are attempting to install this software into your production account.",!,"At this time, this software is not ready for a production install."
"RTN","HMPP3I",7,0)
 .W !!,"Please verify the account you're attempting to install into and",!,"if you believe you're correct, contact Ron Massey or Tana Defa.",!!,"INSTALLATION ABORTED!"
"RTN","HMPP3I",8,0)
 .S XPDABORT=1
"RTN","HMPP3I",9,0)
 Q
"RTN","HMPP3I",10,0)
 ;
"RTN","HMPP3I",11,0)
PRE ; -- clean out HMP SUBSCRIPTION and ^XTMP("HMP") entries for testing
"RTN","HMPP3I",12,0)
 N HMPDT S HMPDT="HMP-1111111"
"RTN","HMPP3I",13,0)
 F  S HMPDT=$O(^XTMP(HMPDT)) Q:HMPDT'?1"HMP-"7N  K ^XTMP(HMPDT)
"RTN","HMPP3I",14,0)
 S HMPDT="HMPEF-1111111"
"RTN","HMPP3I",15,0)
 F  S HMPDT=$O(^XTMP(HMPDT)) Q:HMPDT'?1"HMPEF-"7N  K ^XTMP(HMPDT)
"RTN","HMPP3I",16,0)
 K ^XTMP("HMP"),^TMP("HMPX")
"RTN","HMPP3I",17,0)
 I $$VERCMP($$VERSRV(),"0.7-S54")>0 D  ; if current < S54
"RTN","HMPP3I",18,0)
 . K ^HMP(800000)
"RTN","HMPP3I",19,0)
 . S ^HMP(800000,0)="HMP SUBSCRIPTION^800000^^"
"RTN","HMPP3I",20,0)
 ;D CLEARPAR
"RTN","HMPP3I",21,0)
 I $D(^DD(800000.04)) D  ;remove old Subscription sub-files
"RTN","HMPP3I",22,0)
 . N DIU S DIU(0)="S"
"RTN","HMPP3I",23,0)
 . S DIU=800000.04 D EN^DIU2
"RTN","HMPP3I",24,0)
 . S DIU=800000.03 D EN^DIU2
"RTN","HMPP3I",25,0)
 I $D(^DD(800000.01,.03)) D  ; remote old PID field
"RTN","HMPP3I",26,0)
 . S DIK="^DD(800000.01,",DA=.03,DA(1)=800000.01
"RTN","HMPP3I",27,0)
 . D ^DIK
"RTN","HMPP3I",28,0)
 ;D TASKCONV
"RTN","HMPP3I",29,0)
 D ADDRSRC ; add resource for throttling extract tasks
"RTN","HMPP3I",30,0)
 S ^XTMP("HMP-LAST-SCHEMA",0)=$$HTFM^XLFDT(+$H+7)_U_$$HTFM^XLFDT(+$H)_U_"JSON schema before install"
"RTN","HMPP3I",31,0)
 S ^XTMP("HMP-LAST-SCHEMA",1)=+$P($$GET^XPAR("PKG","HMP JSON SCHEMA"),".")
"RTN","HMPP3I",32,0)
 Q
"RTN","HMPP3I",33,0)
 ;
"RTN","HMPP3I",34,0)
CLEARPAR ;
"RTN","HMPP3I",35,0)
 N ENT,ERROR,INST,LIST,PAR,TYPE,X,UID
"RTN","HMPP3I",36,0)
 ;S PAR="" F  S PAR=$O(^XTV(8989.51,"B","HMP PARAMETERS","")) I PAR>0 Q
"RTN","HMPP3I",37,0)
 S PAR=$O(^XTV(8989.51,"B","HMP PARAMETERS","")) Q:PAR'>0
"RTN","HMPP3I",38,0)
 S X="" F  S X=$O(^XTV(8989.5,"AC",PAR,X)) Q:X=""  D
"RTN","HMPP3I",39,0)
 .S TYPE=$S(X["VA":"USR",X["DIC":"SYS",1:"") I TYPE="" Q
"RTN","HMPP3I",40,0)
 .S ENT=TYPE_".`"_+X
"RTN","HMPP3I",41,0)
 .S UID="" F  S UID=$O(^XTV(8989.5,"AC",PAR,X,UID)) Q:UID=""  D
"RTN","HMPP3I",42,0)
 ..D DEL^XPAR(ENT,"HMP PARAMETERS",UID,.ERROR)
"RTN","HMPP3I",43,0)
 Q
"RTN","HMPP3I",44,0)
 ;
"RTN","HMPP3I",45,0)
 ; VERSRV and VERCMP are also in HMPUTILS, but not until after the install
"RTN","HMPP3I",46,0)
 ; of this patch (HMP*2*3), so they are reproduced here.
"RTN","HMPP3I",47,0)
 ;
"RTN","HMPP3I",48,0)
VERSRV()   ; Return server version of option name
"RTN","HMPP3I",49,0)
 N HMPLST,VAL
"RTN","HMPP3I",50,0)
 D FIND^DIC(19,"",1,"X","HMP UI CONTEXT",1,,,,"HMPLST")
"RTN","HMPP3I",51,0)
 S VAL=$G(HMPLST("DILIST","ID",1,1))
"RTN","HMPP3I",52,0)
 Q $$UP^XLFSTR($P(VAL,"version ",2))
"RTN","HMPP3I",53,0)
 ;
"RTN","HMPP3I",54,0)
VERCMP(CUR,VAL) ; Returns 1 if CUR<VAL, -1 if CUR>VAL, 0 if equal
"RTN","HMPP3I",55,0)
 N CURMAJOR,CURMINOR,CURSNAP,VALMAJOR,VALMINOR,VALSNAP
"RTN","HMPP3I",56,0)
 S CURMAJOR=$P(CUR,"-"),CURMINOR=$P(CUR,"-",2),CURSNAP=$E($P(CUR,"-",3),1,4)="SNAP"
"RTN","HMPP3I",57,0)
 S VALMAJOR=$P(VAL,"-"),VALMINOR=$P(VAL,"-",2),VALSNAP=$E($P(VAL,"-",3),1,4)="SNAP"
"RTN","HMPP3I",58,0)
 I $E(VALMINOR)="P" S VALMINOR=$E(VALMINOR,2,99)     ; "P"ilot versions (old)
"RTN","HMPP3I",59,0)
 I $E(CURMINOR)="P" S CURMINOR=$E(VALMINOR,2,99)
"RTN","HMPP3I",60,0)
 I $E(VALMINOR)="S" S VALMINOR=$E(VALMINOR,2,99)*10  ; "S"print versions
"RTN","HMPP3I",61,0)
 I $E(CURMINOR)="S" S CURMINOR=$E(CURMINOR,2,99)*10
"RTN","HMPP3I",62,0)
 Q:VALMAJOR>CURMAJOR 1   Q:VALMAJOR<CURMAJOR -1  ; compare major versions
"RTN","HMPP3I",63,0)
 Q:VALMINOR>CURMINOR 1   Q:VALMINOR<CURMINOR -1  ; compare minor versions
"RTN","HMPP3I",64,0)
 Q:(CURSNAP&'VALSNAP) 1  Q:(VALSNAP&'CURSNAP) -1 ; "SNAPSHOT" < released
"RTN","HMPP3I",65,0)
 Q 0
"RTN","HMPP3I",66,0)
 ;
"RTN","HMPP3I",67,0)
 ;
"RTN","HMPP3I",68,0)
POST ; -- set up new Tx data
"RTN","HMPP3I",69,0)
 ;D CREATEUS
"RTN","HMPP3I",70,0)
 N HMPLVER
"RTN","HMPP3I",71,0)
 S HMPLVER=$$VERSRV()
"RTN","HMPP3I",72,0)
 D VERSION
"RTN","HMPP3I",73,0)
 D EN^HMPIDX
"RTN","HMPP3I",74,0)
 D OBJCNT
"RTN","HMPP3I",75,0)
 I $$VERCMP(HMPLVER,"0.7-S58")>0 D PARPID            ; if current < S58
"RTN","HMPP3I",76,0)
 I $G(^XTMP("HMP-LAST-SCHEMA",1))<2 D CVTPAT,CVTSEL  ; if existing schema < 2.0
"RTN","HMPP3I",77,0)
 K ^XTMP("HMP-LAST-SCHEMA")
"RTN","HMPP3I",78,0)
 ;D CREATE^HMPAP1  ;BL;V5-6 Protocols now attached via KIDs build not post routine
"RTN","HMPP3I",79,0)
 D POST^HMPPRXY2
"RTN","HMPP3I",80,0)
 D DISABLE^HMPZ0218
"RTN","HMPP3I",81,0)
 Q
"RTN","HMPP3I",82,0)
 ;
"RTN","HMPP3I",83,0)
VERSION ; -- update V# parameter
"RTN","HMPP3I",84,0)
 D PUT^XPAR("PKG","HMP VERSION",1,"2.00")
"RTN","HMPP3I",85,0)
 D PUT^XPAR("SYS","HMP SYSTEM NAME",1,$$SYS^HMPUTILS)
"RTN","HMPP3I",86,0)
 Q
"RTN","HMPP3I",87,0)
 ;
"RTN","HMPP3I",88,0)
OBJCNT ; -- create count index for HMP OBJECT file
"RTN","HMPP3I",89,0)
 Q:$D(^HMP(800000.11,"ACNT"))
"RTN","HMPP3I",90,0)
 N DIK,DA
"RTN","HMPP3I",91,0)
 S DIK="^HMP(800000.11,"
"RTN","HMPP3I",92,0)
 S DIK(1)=".03^ACNT"
"RTN","HMPP3I",93,0)
 D ENALL^DIK
"RTN","HMPP3I",94,0)
 Q
"RTN","HMPP3I",95,0)
CREATEUS ;
"RTN","HMPP3I",96,0)
 N DIV,FDA,IC,IEN,IENS,NAME,SER,HMPERR
"RTN","HMPP3I",97,0)
 ;do not create the user if the patch is already installed or if the user is already created
"RTN","HMPP3I",98,0)
 I $$PATCH^XPDUTL("HMP*1.0*3") Q
"RTN","HMPP3I",99,0)
 D EN^DDIOL("Creating HMP Sync User")
"RTN","HMPP3I",100,0)
 ;
"RTN","HMPP3I",101,0)
 S NAME="HMP,USER SYNC"
"RTN","HMPP3I",102,0)
 S IEN=$$CREATE^XUSAP(NAME,"","HMP SYNCHRONIZATION CONTEXT")
"RTN","HMPP3I",103,0)
 I IEN=0 D EN^DDIOL("User already exists") Q
"RTN","HMPP3I",104,0)
 I IEN<0 D EN^DDIOL("Cannot create user") Q
"RTN","HMPP3I",105,0)
 S IENS="?"_IEN_","
"RTN","HMPP3I",106,0)
 S DIV=$$ASK(4) I DIV'>0 D EN^DDIOL("A division needs to be selected.") Q
"RTN","HMPP3I",107,0)
 S SER=$$ASK(49) I SER'>0 D EN^DDIOL("A service needs to be selected.") Q
"RTN","HMPP3I",108,0)
 S FDA(200,IENS,.01)=NAME
"RTN","HMPP3I",109,0)
 S FDA(200,IENS,7.2)=1
"RTN","HMPP3I",110,0)
 S FDA(200,IENS,29)=$P(SER,U)
"RTN","HMPP3I",111,0)
 S FDA(200,IENS,200.04)=1
"RTN","HMPP3I",112,0)
 S FDA(200,IENS,200.1)=99999
"RTN","HMPP3I",113,0)
 ;S FDA(200.03,"?+2,"_IENS,.01)="HMP SYNCHRONIZATION CONTEXT"
"RTN","HMPP3I",114,0)
 ;S FDA(200.03,"?+3,"_IENS,.01)="HMP UI CONTEXT"
"RTN","HMPP3I",115,0)
 S FDA(200.02,"?+4,"_IENS,.01)=$P(DIV,U)
"RTN","HMPP3I",116,0)
 S FDA(200.02,"?+4,"_IENS,1)=1
"RTN","HMPP3I",117,0)
 D UPDATE^DIE("","FDA","","HMPERR")
"RTN","HMPP3I",118,0)
 I $D(HMPERR) D  Q
"RTN","HMPP3I",119,0)
 .D EN^DDIOL("Update failed, UPDATE^DIE returned the following error message.")
"RTN","HMPP3I",120,0)
 .S IC="HMPERR"
"RTN","HMPP3I",121,0)
 .F  S IC=$Q(@IC) Q:IC=""  W !,IC,"=",@IC
"RTN","HMPP3I",122,0)
 .D EN^DDIOL("Examine the above error message for the reason.")
"RTN","HMPP3I",123,0)
 .H 2
"RTN","HMPP3I",124,0)
 D EN^DDIOL("Add ACCESS/VERIFY codes to the "_NAME)
"RTN","HMPP3I",125,0)
 Q
"RTN","HMPP3I",126,0)
 ;
"RTN","HMPP3I",127,0)
ASK(FILENUM) ;
"RTN","HMPP3I",128,0)
 N DIC,Y
"RTN","HMPP3I",129,0)
 S DIC=FILENUM,DIC(0)="AEQMZ",DIC("A")="Select "_$S(FILENUM=4:"division: ",1:"service/section: ")
"RTN","HMPP3I",130,0)
 I FILENUM=4 S DIC("S")="S DINUM=X K:$S($D(^XUSEC(""XUMGR"",DUZ)):0,'$$TF^XUAF4(X):1,1:0) X,DINUM"
"RTN","HMPP3I",131,0)
 D ^DIC
"RTN","HMPP3I",132,0)
 Q Y
"RTN","HMPP3I",133,0)
 ;
"RTN","HMPP3I",134,0)
TASKCONV ;
"RTN","HMPP3I",135,0)
 N COLL,I,IEN,NODE,PAT,TEMP,UID,UPDATE,HMPY
"RTN","HMPP3I",136,0)
 K ^TMP($J,"HMPY"),^TMP($J,"HMPTEMP")
"RTN","HMPP3I",137,0)
 S HMPY=$NA(^TMP($J,"HMPY")),TEMP=$NA(^TMP($J,"HMPTEMP"))
"RTN","HMPP3I",138,0)
 S PAT=0 F  S PAT=$O(^HMP(800000.1,"C",PAT)) Q:PAT'>0  D
"RTN","HMPP3I",139,0)
 .S IEN=0 F  S IEN=$O(^HMP(800000.1,"C",PAT,"task",IEN)) Q:IEN'>0  D
"RTN","HMPP3I",140,0)
 ..S NODE=$G(^HMP(800000.1,IEN,0))
"RTN","HMPP3I",141,0)
 ..S UID=$P(NODE,U) I UID="" Q
"RTN","HMPP3I",142,0)
 ..S UPDATE=0
"RTN","HMPP3I",143,0)
 ..S I=0 F  S I=$O(^HMP(800000.1,IEN,1,I)) Q:I<1  S X=$G(^(I,0)),HMPY(I)=X
"RTN","HMPP3I",144,0)
 ..D DECODE^HMPJSON("HMPY","TEMP","ERROR")
"RTN","HMPP3I",145,0)
 ..I $D(ERROR) D EN^DDIOL("Error in decoding JSON Object") Q
"RTN","HMPP3I",146,0)
 ..K HMPY,^TMP($J,"HMPY")
"RTN","HMPP3I",147,0)
 ..I $G(@TEMP@("assignToCode"))'="" S @TEMP@("createdByCode")=@TEMP@("assignToCode"),UPDATE=1 K @TEMP@("assignToCode")
"RTN","HMPP3I",148,0)
 ..I $G(@TEMP@("assignToName"))'="" S @TEMP@("createdByName")=@TEMP@("assignToName"),UPDATE=1 K @TEMP@("assignToName")
"RTN","HMPP3I",149,0)
 ..I $G(@TEMP@("ownerName"))'="" S UPDATE=1 K @TEMP@("ownerName")
"RTN","HMPP3I",150,0)
 ..I $G(@TEMP@("ownerCode"))'="" S UPDATE=1 K @TEMP@("ownerCode")
"RTN","HMPP3I",151,0)
 ..I UPDATE=0 Q
"RTN","HMPP3I",152,0)
 ..;
"RTN","HMPP3I",153,0)
 ..S HMPY=$NA(^TMP($J,"HMPY"))
"RTN","HMPP3I",154,0)
 ..D ENCODE^HMPJSON("TEMP","HMPY","ERROR")
"RTN","HMPP3I",155,0)
 ..I $D(ERROR) D EN^DDIOL("Error in encoding JSON Object") Q
"RTN","HMPP3I",156,0)
 ..D EN^DDIOL("Updating task uid: "_UID)
"RTN","HMPP3I",157,0)
 ..D PUT^HMPDJ1(.HMP,PAT,"task",.HMPY)
"RTN","HMPP3I",158,0)
 K ^TMP($J,"HMPY"),^TMP($J,"HMPTEMP")
"RTN","HMPP3I",159,0)
 Q
"RTN","HMPP3I",160,0)
ADDRSRC ; Add resource device
"RTN","HMPP3I",161,0)
 N RNAME,RDESC,RSLOT,RTYPE,RIEN
"RTN","HMPP3I",162,0)
 S RNAME="HMP EXTRACT RESOURCE"
"RTN","HMPP3I",163,0)
 S RDESC="Controls the number of HMP extract jobs that run simultaneously."
"RTN","HMPP3I",164,0)
 S RSLOT=10
"RTN","HMPP3I",165,0)
 S RTYPE="P-OTHER"
"RTN","HMPP3I",166,0)
 S RIEN=$$RES^XUDHSET(RNAME,RNAME,RSLOT,RDESC,RTYPE)
"RTN","HMPP3I",167,0)
 Q
"RTN","HMPP3I",168,0)
CVTPAT ; resend all the patient objects
"RTN","HMPP3I",169,0)
 D BMES^XPDUTL("Updating HMP patient objects")
"RTN","HMPP3I",170,0)
 N HMPIEN,DFN,CNT
"RTN","HMPP3I",171,0)
 K ^TMP("HMPCVT",$J)
"RTN","HMPP3I",172,0)
 S CNT=0
"RTN","HMPP3I",173,0)
 S HMPIEN=0 F  S HMPIEN=$O(^HMP(800000,HMPIEN)) Q:'HMPIEN  D
"RTN","HMPP3I",174,0)
 . S DFN=0 F  S DFN=$O(^HMP(800000,HMPIEN,1,DFN)) Q:'DFN  D
"RTN","HMPP3I",175,0)
 . . Q:$D(^TMP("HMPCVT",$J,DFN))
"RTN","HMPP3I",176,0)
 . . D POST^HMPDJFS(DFN,"patient",DFN,"","")
"RTN","HMPP3I",177,0)
 . . S ^TMP("HMPCVT",$J,DFN)=""
"RTN","HMPP3I",178,0)
 . . S CNT=CNT+1 I '(CNT#1000) D MES^XPDUTL("  "_CNT_" patient objects converted")
"RTN","HMPP3I",179,0)
 K ^TMP("HMPCVT",$J)
"RTN","HMPP3I",180,0)
 Q
"RTN","HMPP3I",181,0)
CVTSEL ; resend all patient selection objects
"RTN","HMPP3I",182,0)
 N HMPIEN
"RTN","HMPP3I",183,0)
 D BMES^XPDUTL("Updating patient select objects")
"RTN","HMPP3I",184,0)
 S HMPIEN=0 F  S HMPIEN=$O(^HMP(800000,HMPIEN)) Q:'HMPIEN  D
"RTN","HMPP3I",185,0)
 . Q:$P(^HMP(800000,HMPIEN,0),U,3)'=2  ; operational sync not completed
"RTN","HMPP3I",186,0)
 . N HMPSRV,BATCH,DOMAINS,HMPFERR
"RTN","HMPP3I",187,0)
 . S HMPSRV=$P(^HMP(800000,HMPIEN,0),U)
"RTN","HMPP3I",188,0)
 . S BATCH="HMPFX~"_HMPSRV_"~OPD"
"RTN","HMPP3I",189,0)
 . S DOMAINS(1)="pt-select"
"RTN","HMPP3I",190,0)
 . D QUINIT^HMPDJFSP(BATCH,"OPD",.DOMAINS)
"RTN","HMPP3I",191,0)
 . I $D(HMPFERR) D MES^XPDUTL("Error tasking pt-select objects for server "_HMPSRV)
"RTN","HMPP3I",192,0)
 Q
"RTN","HMPP3I",193,0)
PARPID ; Loop thru HMP PARAMETERS and switch ICN to qualified DFN
"RTN","HMPP3I",194,0)
 N PAR,ENT,UID,HMPWP,HMPERR,I,HMPSYS
"RTN","HMPP3I",195,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPP3I",196,0)
 S PAR=$O(^XTV(8989.51,"B","HMP PARAMETERS","")) Q:PAR'>0
"RTN","HMPP3I",197,0)
 S ENT="" F  S ENT=$O(^XTV(8989.5,"AC",PAR,ENT)) Q:ENT=""  D
"RTN","HMPP3I",198,0)
 . S UID="" F  S UID=$O(^XTV(8989.5,"AC",PAR,ENT,UID)) Q:UID=""  D  ;INST=UID
"RTN","HMPP3I",199,0)
 . . I $P(UID,":",6,7)'="HMP USER PREF:0" Q
"RTN","HMPP3I",200,0)
 . . N HMPWP,HMPERR,JSON,OBJ,ERR,DFN,RSLT
"RTN","HMPP3I",201,0)
 . . D GETWP^XPAR(.HMPWP,ENT,PAR,UID,.HMPERR)
"RTN","HMPP3I",202,0)
 . . I +HMPERR D WRERR(UID,$P(HMPERR,U,2,99)) Q
"RTN","HMPP3I",203,0)
 . . I $D(HMPWP)<10 Q                         ; no JSON found
"RTN","HMPP3I",204,0)
 . . S I=0 F  S I=$O(HMPWP(I)) Q:'I  S JSON(I)=HMPWP(I,0)
"RTN","HMPP3I",205,0)
 . . D DECODE^HMPJSON("JSON","OBJ","ERR")
"RTN","HMPP3I",206,0)
 . . I $D(ERR) D WRERR(UID,"Error decoding JSON") Q
"RTN","HMPP3I",207,0)
 . . I '$L($G(OBJ("cpe.context.patient"))) Q  ; nothing there
"RTN","HMPP3I",208,0)
 . . I OBJ("cpe.context.patient")[";" Q       ; already DFN
"RTN","HMPP3I",209,0)
 . . S DFN=$$GETDFN^MPIF001(OBJ("cpe.context.patient"))
"RTN","HMPP3I",210,0)
 . . I DFN<1 D WRERR(UID,"Error converting ICN: "_$P(DFN,U,2)) Q
"RTN","HMPP3I",211,0)
 . . S OBJ("cpe.context.patient")=HMPSYS_";"_DFN
"RTN","HMPP3I",212,0)
 . . K JSON
"RTN","HMPP3I",213,0)
 . . D ENCODE^HMPJSON("OBJ","JSON","ERR")
"RTN","HMPP3I",214,0)
 . . I $D(ERR) D WRERR(UID,"Error encoding JSON") Q
"RTN","HMPP3I",215,0)
 . . D PUTBYUID^HMPPARAM(.RSLT,UID,.JSON)
"RTN","HMPP3I",216,0)
 Q
"RTN","HMPP3I",217,0)
WRERR(UID,MSG) ; Write out error (from post-init in KIDS build)
"RTN","HMPP3I",218,0)
 D MES^XPDUTL("Error: "_MSG_" for UID "_UID)
"RTN","HMPP3I",219,0)
 Q
"RTN","HMPPANEL")
0^98^B9226601
"RTN","HMPPANEL",1,0)
HMPPANEL ;SLC/GRR -- Reminder List processing
"RTN","HMPPANEL",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPPANEL",3,0)
 ;
"RTN","HMPPANEL",4,0)
 ; External References          DBIA#
"RTN","HMPPANEL",5,0)
 ; -------------------          -----
"RTN","HMPPANEL",6,0)
 ;
"RTN","HMPPANEL",7,0)
 ; ------------ Get Panel(s) from VistA ------------
"RTN","HMPPANEL",8,0)
 ;
"RTN","HMPPANEL",9,0)
EN(HMP) ; -- find Panels to update
"RTN","HMPPANEL",10,0)
 K ^TMP($J,"HMPPANEL")
"RTN","HMPPANEL",11,0)
 N HMPPAN,HMPPAT,HMPI
"RTN","HMPPANEL",12,0)
 S HMP=$NA(^TMP($J,"HMP")),HMPC=0,HMPT=0
"RTN","HMPPANEL",13,0)
 F  S HMPC=$O(^HMPROSTR(HMPC)) Q:HMPC'>0  D
"RTN","HMPPANEL",14,0)
 . S HMPT=HMPT+1
"RTN","HMPPANEL",15,0)
 . S HMPPAN(HMPC)=^HMPROSTR(HMPC,0) D
"RTN","HMPPANEL",16,0)
 . N LIEN,PLNAME S LIEN=+$P(HMPPAN(HMPC),"^",2),PLNAME=$P(HMPPAN(HMPC),U,1)
"RTN","HMPPANEL",17,0)
 . ;agp need to determine what secure and over should be set to
"RTN","HMPPANEL",18,0)
 . S SECURE=0,OVER=1
"RTN","HMPPANEL",19,0)
 . D RUNLIST(.HMPPAN,LIEN,PLNAME,SECURE,OVER)
"RTN","HMPPANEL",20,0)
CREATE ; -- create panel(s) in XML
"RTN","HMPPANEL",21,0)
 N HMPVER S HMPVER="<results version='"_$P($T(HMPPANEL+1),";",3)_"'>"
"RTN","HMPPANEL",22,0)
 N HMPTTXT S HMPTTXT="<panels total='"_HMPT_"'>"
"RTN","HMPPANEL",23,0)
 D ADD(HMPVER),ADD(HMPTTXT)
"RTN","HMPPANEL",24,0)
 D PANEL
"RTN","HMPPANEL",25,0)
 S TEXT="</results>" D ADD(TEXT)
"RTN","HMPPANEL",26,0)
 Q
"RTN","HMPPANEL",27,0)
 ;
"RTN","HMPPANEL",28,0)
PANEL ;-- create panel XML
"RTN","HMPPANEL",29,0)
 S HMPC=0 F  S HMPC=$O(HMPPAN(HMPC)) Q:HMPC'>0  D
"RTN","HMPPANEL",30,0)
 .D ADD("<panel>")
"RTN","HMPPANEL",31,0)
 .N TEXT S TEXT="<panel name='"_$P(HMPPAN(HMPC),"^",2)_"' />" D ADD(TEXT)
"RTN","HMPPANEL",32,0)
 .S TEXT="<panelString code='"_$P(HMPPAN(HMPC),"^")_"' />" D ADD(TEXT)
"RTN","HMPPANEL",33,0)
 .D PATS
"RTN","HMPPANEL",34,0)
 .S TEXT="</panel>" D ADD(TEXT)
"RTN","HMPPANEL",35,0)
 S TEXT="</panels>" D ADD(TEXT)
"RTN","HMPPANEL",36,0)
 Q
"RTN","HMPPANEL",37,0)
 ;
"RTN","HMPPANEL",38,0)
CREATEPL(PLNAME,SECURE,OVER) ;
"RTN","HMPPANEL",39,0)
 N FDA,IENS,NAME,NUM,RESULT,UNIQUE
"RTN","HMPPANEL",40,0)
 S (NUM,RESULT,UNIQUE)=0
"RTN","HMPPANEL",41,0)
 ;if overwrite check to see if the list exist
"RTN","HMPPANEL",42,0)
 I OVER=1 S RESULT=$O(^PXRMXP(810.5,"B",PLNAME,""))
"RTN","HMPPANEL",43,0)
 I RESULT>0 Q RESULT
"RTN","HMPPANEL",44,0)
 S NAME=PLNAME
"RTN","HMPPANEL",45,0)
 ;if not overwrite find unique name
"RTN","HMPPANEL",46,0)
 I OVER=0 D
"RTN","HMPPANEL",47,0)
 .I $D(^PXRMXP(810.5,"B",NAME))=0 Q
"RTN","HMPPANEL",48,0)
 .F  Q:UNIQUE=1  D
"RTN","HMPPANEL",49,0)
 ..S NUM=NUM+1
"RTN","HMPPANEL",50,0)
 ..S NAME=PLNAME_" ("_NUM_")"
"RTN","HMPPANEL",51,0)
 ..I $D(^PXRMXP(810.5,"B",NAME))=0 S UNIQUE=1
"RTN","HMPPANEL",52,0)
 ;create stub in 810.5
"RTN","HMPPANEL",53,0)
 S IENS="+1,"
"RTN","HMPPANEL",54,0)
 S FDA(810.5,IENS,.01)=NAME
"RTN","HMPPANEL",55,0)
 S FDA(810.5,IENS,100)="L"
"RTN","HMPPANEL",56,0)
 S FDA(810.5,IENS,.07)=DUZ
"RTN","HMPPANEL",57,0)
 S FDA(810.5,IENS,.08)=$S(SECURE=0:"PUB",1:"PVT")
"RTN","HMPPANEL",58,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","HMPPANEL",59,0)
 ;if error display message and quit
"RTN","HMPPANEL",60,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG") Q 0
"RTN","HMPPANEL",61,0)
 S RESULT=$O(^PXRMXP(810.5,"B",NAME,""))
"RTN","HMPPANEL",62,0)
 Q RESULT
"RTN","HMPPANEL",63,0)
 ;
"RTN","HMPPANEL",64,0)
RUNLIST(HMPPAN,LIEN,PLNAME,SECURE,OVER) ;
"RTN","HMPPANEL",65,0)
 N PLIEN
"RTN","HMPPANEL",66,0)
 S PLIEN=$$CREATEPL(PLNAME,SECURE,OVER)
"RTN","HMPPANEL",67,0)
 S PATCREAT=$S(SECURE=1:"Y",1:0),PLISTPUG=1
"RTN","HMPPANEL",68,0)
 I PLIEN=0 Q
"RTN","HMPPANEL",69,0)
 D RUN^PXRMLCR(LIEN,PLIEN,"PXRMRULE",DT,DT,0,0)
"RTN","HMPPANEL",70,0)
 N HMPPAT S HMPPAT=0
"RTN","HMPPANEL",71,0)
 F  S HMPPAT=$O(^PXRMXP(810.5,PLIEN,30,HMPPAT)) Q:HMPPAT'>0  S HMPPAN(HMPC,HMPPAT)=$P($G(^PXRMXP(810.5,PLIEN,30,HMPPAT,0)),"^",1)
"RTN","HMPPANEL",72,0)
 Q
"RTN","HMPPANEL",73,0)
 ;
"RTN","HMPPANEL",74,0)
PATS ; -- create patient XML
"RTN","HMPPANEL",75,0)
 S TEXT="<patients>" D ADD(TEXT)
"RTN","HMPPANEL",76,0)
 S HMPPAT=0 F  S HMPPAT=$O(HMPPAN(HMPC,HMPPAT)) D  Q:HMPPAT'>0
"RTN","HMPPANEL",77,0)
 .I HMPPAT'>0 S TEXT="</patients>" D ADD(TEXT) Q
"RTN","HMPPANEL",78,0)
 .S TEXT="<patient code='"_HMPPAN(HMPC,HMPPAT)_"' />" D ADD(TEXT)
"RTN","HMPPANEL",79,0)
 ;
"RTN","HMPPANEL",80,0)
 ;
"RTN","HMPPANEL",81,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPPANEL",82,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPPANEL",83,0)
 S @HMP@(HMPI)=X
"RTN","HMPPANEL",84,0)
 Q
"RTN","HMPPANEL",85,0)
 ;
"RTN","HMPPANEL",86,0)
NITELY ; -- Nightly run to update all Panels
"RTN","HMPPANEL",87,0)
 ; 
"RTN","HMPPARAM")
0^99^B15385831
"RTN","HMPPARAM",1,0)
HMPPARAM ; SLC/AGP - Parameter routine. ; 8/16/12 7:09pm
"RTN","HMPPARAM",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPPARAM",3,0)
 Q
"RTN","HMPPARAM",4,0)
 ;
"RTN","HMPPARAM",5,0)
 ;
"RTN","HMPPARAM",6,0)
BLDENT(UID,ENTITY) ;
"RTN","HMPPARAM",7,0)
 ;urn:va:param:F484:1120:HMP USER PREF
"RTN","HMPPARAM",8,0)
 ;urn:va:param:F484:1120:HMP ROSTER PREF:13
"RTN","HMPPARAM",9,0)
 ;urn:va:param:F484:SYS:HMP USER PREF
"RTN","HMPPARAM",10,0)
 S ENTITY("uid")=UID
"RTN","HMPPARAM",11,0)
 I +$P(UID,":",5)>0 D  Q
"RTN","HMPPARAM",12,0)
 .S ENTITY("entity")="USR"
"RTN","HMPPARAM",13,0)
 .S ENTITY("entityId")=$P(UID,":",5)
"RTN","HMPPARAM",14,0)
 S ENTITY("entity")="SYS"
"RTN","HMPPARAM",15,0)
 Q
"RTN","HMPPARAM",16,0)
 ;
"RTN","HMPPARAM",17,0)
BUILDUID(VALUES,TYPE,ID) ;
"RTN","HMPPARAM",18,0)
 N DOMAIN
"RTN","HMPPARAM",19,0)
 S DOMAIN=$$BASE^XLFUTL($$CRC16^XLFCRC($$KSP^XUPARAM("WHERE")),10,16)
"RTN","HMPPARAM",20,0)
 S VALUES("uid")="urn:va:"_TYPE_":"_DOMAIN_":"_ID
"RTN","HMPPARAM",21,0)
 Q
"RTN","HMPPARAM",22,0)
 ;
"RTN","HMPPARAM",23,0)
DELPARAM(RESULT,UID) ;
"RTN","HMPPARAM",24,0)
 N ARRAY,ENT,ENTITY,ENTVALUE,ERR,STR,HMPERR
"RTN","HMPPARAM",25,0)
 D BLDENT(UID,.ARRAY)
"RTN","HMPPARAM",26,0)
 ;delete old parameter
"RTN","HMPPARAM",27,0)
 S ENTITY=ARRAY("entity")
"RTN","HMPPARAM",28,0)
 S ENTVALUE=ARRAY("entityId")
"RTN","HMPPARAM",29,0)
 S ENT=$S($G(ENTVALUE)>0:ENTITY_".`"_ENTVALUE,1:ENTITY)
"RTN","HMPPARAM",30,0)
 I $G(ARRAY("uid"))="" Q
"RTN","HMPPARAM",31,0)
 I $G(ENT)="" Q
"RTN","HMPPARAM",32,0)
 D DEL^XPAR(ENT,"HMP PARAMETERS",ARRAY("uid"),.HMPERR)
"RTN","HMPPARAM",33,0)
 Q
"RTN","HMPPARAM",34,0)
 ;
"RTN","HMPPARAM",35,0)
GETALPAR(JSONRES,ENTITY,ENTVALUE,RETVALUE) ;
"RTN","HMPPARAM",36,0)
 N CNT,DECODE,ENT,GETVAL,INST,PARAM,RESULT,HMPERR,HMPLIST
"RTN","HMPPARAM",37,0)
 S ENT=$S($G(ENTVALUE)'="":ENTITY_".`"_ENTVALUE,1:ENTITY)
"RTN","HMPPARAM",38,0)
 D GETLST^XPAR(.HMPLIST,ENT,"HMP PARAMETERS","I")
"RTN","HMPPARAM",39,0)
 I HMPLIST=0 Q
"RTN","HMPPARAM",40,0)
 S GETVAL=$S(RETVALUE="true":1,1:0)
"RTN","HMPPARAM",41,0)
 I GETVAL=0 D   Q
"RTN","HMPPARAM",42,0)
 .S CNT=0,INST="" F  S INST=$O(HMPLIST(INST)) Q:INST=""  S JSONRES(CNT)=INST,CNT=CNT+1
"RTN","HMPPARAM",43,0)
 S CNT=0,INST="" F  S INST=$O(HMPLIST(INST)) Q:INST=""  D
"RTN","HMPPARAM",44,0)
 .S CNT=CNT+1
"RTN","HMPPARAM",45,0)
 .S RESULT("params",CNT,"uid")=INST
"RTN","HMPPARAM",46,0)
 .D GETPARAM(.PARAM,"HMP PARAMETERS",ENTITY,ENTVALUE,INST)
"RTN","HMPPARAM",47,0)
 .I '$D(PARAM) Q
"RTN","HMPPARAM",48,0)
 .M RESULT("params",CNT,"value",":")=PARAM
"RTN","HMPPARAM",49,0)
 .K PARAM
"RTN","HMPPARAM",50,0)
 I '$D(RESULT) Q ""
"RTN","HMPPARAM",51,0)
 S RESULT("success")="true"
"RTN","HMPPARAM",52,0)
 D ENCODE^HMPJSON("RESULT","JSONRES","HMPERR")
"RTN","HMPPARAM",53,0)
 I $D(HMPERR) K JSONRES S TXT(1)="Problem encoding results to json format." D SETERROR(.RESULT,.HMPERR,.TXT,.JSONRES) Q
"RTN","HMPPARAM",54,0)
 Q
"RTN","HMPPARAM",55,0)
 ;
"RTN","HMPPARAM",56,0)
GETPARAM(RESULT,NAME,ENTITY,ENTVALUE,INST) ; Get value for a param
"RTN","HMPPARAM",57,0)
 N CNT,ENT,FORMAT,IEN,HMPPAR,HMPERR
"RTN","HMPPARAM",58,0)
 ;S IEN=$O(^XTV(8989.51,"B",NAME,"")) Q:IEN'>0
"RTN","HMPPARAM",59,0)
 S FORMAT="I"
"RTN","HMPPARAM",60,0)
 ;D BLDLST^XPAREDIT(.HMPPAR,IEN
"RTN","HMPPARAM",61,0)
 S ENT=$S($G(ENTVALUE)'="":ENTITY_".`"_ENTVALUE,1:ENTITY)
"RTN","HMPPARAM",62,0)
 D GETWP^XPAR(.HMPAR,ENT,NAME,INST,.HMPERR)
"RTN","HMPPARAM",63,0)
 S CNT=0 F  S CNT=$O(HMPAR(CNT)) Q:CNT'>0  D
"RTN","HMPPARAM",64,0)
 .S RESULT(CNT)=HMPAR(CNT,0)
"RTN","HMPPARAM",65,0)
 Q
"RTN","HMPPARAM",66,0)
 ;
"RTN","HMPPARAM",67,0)
GETBYUID(RESULT,UID) ;
"RTN","HMPPARAM",68,0)
 N ENTITY
"RTN","HMPPARAM",69,0)
 D BLDENT(UID,.ENTITY)
"RTN","HMPPARAM",70,0)
 D GETPARAM(.RESULT,"HMP PARAMETERS",$G(ENTITY("entity")),$G(ENTITY("entityId")),$G(ENTITY("uid")))
"RTN","HMPPARAM",71,0)
 ;I $D(RESULT)<10 S RESULT(0)="{}"
"RTN","HMPPARAM",72,0)
 Q
"RTN","HMPPARAM",73,0)
 ;
"RTN","HMPPARAM",74,0)
PARSEJSN(VALUE,ARRAY,ERR) ;
"RTN","HMPPARAM",75,0)
 N ERROR,JSON,TXT
"RTN","HMPPARAM",76,0)
 D DECODE^HMPJSON("VALUE","ARRAY","ERROR")
"RTN","HMPPARAM",77,0)
 I $D(ERR) K ARRAY S TXT(1)="Problem decoding json value." D SETERROR(.VALUE,.ERROR,.TXT,.ERR) Q 0
"RTN","HMPPARAM",78,0)
 Q 1
"RTN","HMPPARAM",79,0)
 ;
"RTN","HMPPARAM",80,0)
PUTPARAM(RESULT,VALUE,ENTARR) ;
"RTN","HMPPARAM",81,0)
 N CNT,ENT,ENTITY,ENTVALUE,ERR,STR,HMPERR,X
"RTN","HMPPARAM",82,0)
 I $D(ENTARR)<10 I $$PARSEJSN(.VALUE,.ENTARR,.ERR)=0 M RESULT=ERR Q
"RTN","HMPPARAM",83,0)
 ;delete old parameter
"RTN","HMPPARAM",84,0)
 S ENTITY=ENTARR("entity")
"RTN","HMPPARAM",85,0)
 S ENTVALUE=ENTARR("entityId")
"RTN","HMPPARAM",86,0)
 S ENT=$S($G(ENTVALUE)>0:ENTITY_".`"_ENTVALUE,1:ENTITY)
"RTN","HMPPARAM",87,0)
 D DEL^XPAR(ENT,"HMP PARAMETERS",ENTARR("uid"),.HMPERR)
"RTN","HMPPARAM",88,0)
 S CNT=$O(VALUE(""),-1) I CNT="" S STR(1,0)=VALUE
"RTN","HMPPARAM",89,0)
 I CNT>0 F X=0:1:CNT S STR(X+1,0)=VALUE(X)
"RTN","HMPPARAM",90,0)
 D PUT^XPAR(ENT,"HMP PARAMETERS",ENTARR("uid"),.STR,.HMPERR)
"RTN","HMPPARAM",91,0)
 S RESULT(0)="{""success"":""true""}"
"RTN","HMPPARAM",92,0)
 Q
"RTN","HMPPARAM",93,0)
 ;
"RTN","HMPPARAM",94,0)
PUTBYUID(RESULT,UID,VALUE) ;
"RTN","HMPPARAM",95,0)
 N ENTITY
"RTN","HMPPARAM",96,0)
 D BLDENT(UID,.ENTITY)
"RTN","HMPPARAM",97,0)
 D PUTPARAM(.RESULT,.VALUE,.ENTITY)
"RTN","HMPPARAM",98,0)
 Q
"RTN","HMPPARAM",99,0)
 ;
"RTN","HMPPARAM",100,0)
SETERROR(INPDATA,ERRORMSG,TXT,OUTPUT) ;
"RTN","HMPPARAM",101,0)
 N ERRARR
"RTN","HMPPARAM",102,0)
 D SETERROR^HMPUTILS(.ERRARR,.ERRORMSG,.TXT,.INPDATA)
"RTN","HMPPARAM",103,0)
 D ENCODE^HMPJSON("ERRARR","OUTPUT","ERROR")
"RTN","HMPPARAM",104,0)
 Q
"RTN","HMPPATS")
0^100^B44774120
"RTN","HMPPATS",1,0)
HMPPATS ;SLC/MKB -- Patient Management Utilities
"RTN","HMPPATS",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPPATS",3,0)
 ;
"RTN","HMPPATS",4,0)
 ; External References          DBIA#
"RTN","HMPPATS",5,0)
 ; -------------------          -----
"RTN","HMPPATS",6,0)
 ; ^DGS(41.1                     3796
"RTN","HMPPATS",7,0)
 ; ^DPT                         10035
"RTN","HMPPATS",8,0)
 ; ^OR(100.21
"RTN","HMPPATS",9,0)
 ; ^PXRMXP(810.5
"RTN","HMPPATS",10,0)
 ; ^SC                          10040
"RTN","HMPPATS",11,0)
 ; ^SCTM(404.51                 +2936? >>or use FIND^DIC?
"RTN","HMPPATS",12,0)
 ; DICN                         10009
"RTN","HMPPATS",13,0)
 ; MPIF001                       2701
"RTN","HMPPATS",14,0)
 ; SCAPMC                        1916
"RTN","HMPPATS",15,0)
 ; SDAMA301                      4433
"RTN","HMPPATS",16,0)
 ; XLFDT                        10103
"RTN","HMPPATS",17,0)
 ; XPAR                          2263
"RTN","HMPPATS",18,0)
 ; XUAF4                         2171
"RTN","HMPPATS",19,0)
 ;
"RTN","HMPPATS",20,0)
APPT ; -- Return patients w/appointments tomorrow
"RTN","HMPPATS",21,0)
 ; OPT = HMP APPOINTMENTS
"RTN","HMPPATS",22,0)
 N NOW,NOW1,HMPX,HMPL,HMPN,DFN,DA,TOKEN,NEW,X
"RTN","HMPPATS",23,0)
 S NOW=$$NOW^XLFDT,NOW1=$$FMADD^XLFDT(NOW,1)
"RTN","HMPPATS",24,0)
 S HMPX(1)=NOW_";"_NOW1 ;next 24hours
"RTN","HMPPATS",25,0)
 S HMPX("FLDS")=1,HMPX("SORT")="P",HMPX(3)="R;I;NT"
"RTN","HMPPATS",26,0)
 ; ck parameter for desired location(s): HMPX(2)="loc1;loc2;...;loc#"
"RTN","HMPPATS",27,0)
 D GETLST^XPAR(.HMPL,"ALL","HMP LOCATIONS") I +$G(HMPL) D
"RTN","HMPPATS",28,0)
 . S X=+$G(HMPL(1)),HMPX(2)=$S($D(^SC(X,0)):X,1:"")
"RTN","HMPPATS",29,0)
 . F I=2:1:+HMPL S X=+$G(HMPL(I)) S:$D(^SC(X,0)) HMPX(2)=HMPX(2)_";"_X
"RTN","HMPPATS",30,0)
 S HMPN=$$SDAPI^SDAMA301(.HMPX) Q:HMPN<1
"RTN","HMPPATS",31,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN<1  D
"RTN","HMPPATS",32,0)
 . S DA=0 F  S DA=$O(^HMP(800000,DA)) Q:DA<1  I $P($G(^(DA,0)),U,2) D
"RTN","HMPPATS",33,0)
 .. Q:$D(^HMP(800000,"ADFN",DFN,DA))  ;already subscribed
"RTN","HMPPATS",34,0)
 .. S TOKEN=DA_"~"_NOW,NEW(TOKEN)=""
"RTN","HMPPATS",35,0)
 .. S ^XTMP("HMPX",TOKEN,DFN)=""
"RTN","HMPPATS",36,0)
 I $D(NEW) D SEND^HMPHTTP(.NEW) ;send poke to each URL with list TOKEN
"RTN","HMPPATS",37,0)
 Q
"RTN","HMPPATS",38,0)
 ;
"RTN","HMPPATS",39,0)
ADM(DFN) ; -- Return new inpatient [from DGPM^HMPEVNT]
"RTN","HMPPATS",40,0)
 N NOW,DA,TOKEN,NEW
"RTN","HMPPATS",41,0)
 S NOW=$$NOW^XLFDT,DFN=+$G(DFN)
"RTN","HMPPATS",42,0)
 S DA=0 F  S DA=$O(^HMP(800000,DA)) Q:DA<1  I $P($G(^(DA,0)),U,3) D
"RTN","HMPPATS",43,0)
 . Q:$D(^HMP(800000,"ADFN",DFN,DA))  ;already subscribed
"RTN","HMPPATS",44,0)
 . S TOKEN=DA_"~"_NOW,NEW(TOKEN)=""
"RTN","HMPPATS",45,0)
 . S ^XTMP("HMPX",TOKEN,DFN)=""
"RTN","HMPPATS",46,0)
 I $D(NEW) D SEND^HMPHTTP(.NEW) ;send poke to each URL with list TOKEN
"RTN","HMPPATS",47,0)
 Q
"RTN","HMPPATS",48,0)
 ;
"RTN","HMPPATS",49,0)
GTALLLST(HMP,HMPTYPE) ;
"RTN","HMPPATS",50,0)
 S HMP=$NA(^TMP($J,"HMP")) K @HMP
"RTN","HMPPATS",51,0)
 N HMPI,HMPSITE,HMPUSER,HMPSTA
"RTN","HMPPATS",52,0)
 S HMPUSER=DUZ,HMPSITE=DUZ(2),HMPSTA=$$STA^XUAF4(DUZ(2)),HMPI=0
"RTN","HMPPATS",53,0)
 D ADD("<results>")
"RTN","HMPPATS",54,0)
 I $D(HMPTYPE("ALL"))>0 S (HMPTYPE("OR"),HMPTYPE("PXRM"),HMPTYPE("PCMM"))=""
"RTN","HMPPATS",55,0)
 D ADD("<lists>")
"RTN","HMPPATS",56,0)
 I $D(HMPTYPE("OR"))>0 D GETOERRL
"RTN","HMPPATS",57,0)
 I $D(HMPTYPE("PXRM"))>0 D GETPXRML
"RTN","HMPPATS",58,0)
 I $D(HMPTYPE("PCMM"))>0 D GETPCMML
"RTN","HMPPATS",59,0)
 D ADD("</lists>")
"RTN","HMPPATS",60,0)
 D ADD("</results>")
"RTN","HMPPATS",61,0)
 Q
"RTN","HMPPATS",62,0)
 ;
"RTN","HMPPATS",63,0)
GETLSTPT(HMP,HMPLIST) ;
"RTN","HMPPATS",64,0)
 S HMP=$NA(^TMP($J,"HMP")) K @HMP
"RTN","HMPPATS",65,0)
 N GBL,IEN,TAG,HMPI,HMPSITE,HMPUSER,HMPSTA
"RTN","HMPPATS",66,0)
 S HMPUSER=DUZ,HMPSITE=DUZ(2),HMPSTA=$$STA^XUAF4(DUZ(2)),HMPI=0
"RTN","HMPPATS",67,0)
 D ADD("<results>")
"RTN","HMPPATS",68,0)
 S GBL=HMPLIST("global"),IEN=HMPLIST("ien")
"RTN","HMPPATS",69,0)
 S TAG=$S(GBL="OR":"GETOERRP",GBL="PXRMXP":"GETPXRMP",GBL="PCMM":"GETPCMMP",1:"")
"RTN","HMPPATS",70,0)
 I TAG'="",IEN'="" D @(TAG_"(IEN)")
"RTN","HMPPATS",71,0)
 D ADD("</results>")
"RTN","HMPPATS",72,0)
 Q
"RTN","HMPPATS",73,0)
 Q
"RTN","HMPPATS",74,0)
 ;
"RTN","HMPPATS",75,0)
GETPCMML ;
"RTN","HMPPATS",76,0)
 N NAME,IEN
"RTN","HMPPATS",77,0)
 S NAME="" F  S NAME=$O(^SCTM(404.51,"B",NAME)) Q:NAME=""  D
"RTN","HMPPATS",78,0)
 .S IEN=$O(^SCTM(404.51,"B",NAME,"")) Q:IEN'>0
"RTN","HMPPATS",79,0)
 .D ADD("<list value='"_NAME_"' id='"_IEN_"' global='PCMM'/>")
"RTN","HMPPATS",80,0)
 Q
"RTN","HMPPATS",81,0)
 ;
"RTN","HMPPATS",82,0)
GETPCMMP(IEN) ;
"RTN","HMPPATS",83,0)
 N DFN,OK,HMPERR,HMPX
"RTN","HMPPATS",84,0)
 K ^TMP($J,"PCM")
"RTN","HMPPATS",85,0)
 S OK=$$PTTM^SCAPMC(IEN,"SCDT","^TMP($J,""PCM"")",.HMPERR)
"RTN","HMPPATS",86,0)
 I OK'>0 Q
"RTN","HMPPATS",87,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"PCM","SCPTA",DFN)) Q:DFN'>0  D
"RTN","HMPPATS",88,0)
 .S HMPX(DFN)=""
"RTN","HMPPATS",89,0)
 D XML(.HMPX)
"RTN","HMPPATS",90,0)
 Q
"RTN","HMPPATS",91,0)
 ;
"RTN","HMPPATS",92,0)
GETPXRML ;
"RTN","HMPPATS",93,0)
 N NAME,IEN
"RTN","HMPPATS",94,0)
 S NAME="" F  S NAME=$O(^PXRMXP(810.5,"B",NAME)) Q:NAME=""  D
"RTN","HMPPATS",95,0)
 .S IEN=$O(^PXRMXP(810.5,"B",NAME,"")) Q:IEN'>0
"RTN","HMPPATS",96,0)
 .D ADD("<list value='"_NAME_"' id='"_IEN_"' global='PXRMXP'/>")
"RTN","HMPPATS",97,0)
 Q
"RTN","HMPPATS",98,0)
 ;
"RTN","HMPPATS",99,0)
GETPXRMP(IEN) ;
"RTN","HMPPATS",100,0)
 N CNT,HMPX
"RTN","HMPPATS",101,0)
 S CNT=0 F  S CNT=$O(^PXRMXP(810.5,IEN,30,CNT)) Q:CNT'>0  D
"RTN","HMPPATS",102,0)
 .S HMPX(+$G(^PXRMXP(810.5,IEN,30,CNT,0)))=""
"RTN","HMPPATS",103,0)
 D XML(.HMPX)
"RTN","HMPPATS",104,0)
 Q
"RTN","HMPPATS",105,0)
 ;
"RTN","HMPPATS",106,0)
GETOERRL ;
"RTN","HMPPATS",107,0)
 N NAME,IEN
"RTN","HMPPATS",108,0)
 S NAME="" F  S NAME=$O(^OR(100.21,"B",NAME)) Q:NAME=""  D
"RTN","HMPPATS",109,0)
 .S IEN=$O(^OR(100.21,"B",NAME,"")) Q:IEN'>0
"RTN","HMPPATS",110,0)
 .D ADD("<list value='"_NAME_"' id='"_IEN_"' global='OR'/>")
"RTN","HMPPATS",111,0)
 Q
"RTN","HMPPATS",112,0)
 ;
"RTN","HMPPATS",113,0)
GETOERRP(IEN) ;
"RTN","HMPPATS",114,0)
 N CNT,HMPX
"RTN","HMPPATS",115,0)
 S CNT=0 F  S CNT=$O(^OR(100.21,IEN,10,CNT)) Q:CNT'>0  D
"RTN","HMPPATS",116,0)
 .S HMPX(+$G(^OR(100.21,IEN,10,CNT,0)))=""
"RTN","HMPPATS",117,0)
 D XML(.HMPX)
"RTN","HMPPATS",118,0)
 Q
"RTN","HMPPATS",119,0)
 ;
"RTN","HMPPATS",120,0)
IN(HMP) ; -- Return current inpatients
"RTN","HMPPATS",121,0)
 ; RPC = HMP INPATIENTS
"RTN","HMPPATS",122,0)
 N WARD,DFN,HMPX,HMPI
"RTN","HMPPATS",123,0)
 S WARD="" F  S WARD=$O(^DPT("CN",WARD)) Q:WARD=""  D
"RTN","HMPPATS",124,0)
 . S DFN=0 F  S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN<1  S HMPX(DFN)=""
"RTN","HMPPATS",125,0)
 S HMP=$NA(^TMP($J,"HMP")) K @HMP
"RTN","HMPPATS",126,0)
 D XML(.HMPX)
"RTN","HMPPATS",127,0)
 Q
"RTN","HMPPATS",128,0)
 ;
"RTN","HMPPATS",129,0)
OUT(HMP,BEG,END) ; -- Return patients w/appointments [tomorrow]
"RTN","HMPPATS",130,0)
 ; RPC = HMP APPOINTMENTS
"RTN","HMPPATS",131,0)
 N HMPX,HMPN,DFN,HMPDT,HMPI,HMPA
"RTN","HMPPATS",132,0)
 I '$G(BEG) D   ;default = tomorrow, if not passed in
"RTN","HMPPATS",133,0)
 . S BEG=$$FMADD^XLFDT(DT,1),END=BEG
"RTN","HMPPATS",134,0)
 ; find patients with appointments
"RTN","HMPPATS",135,0)
 S END=$G(END,BEG),HMPX(1)=BEG_";"_END
"RTN","HMPPATS",136,0)
 S HMPX("SORT")="P",HMPX("FLDS")=1,HMPX(3)="R;I;NT"
"RTN","HMPPATS",137,0)
 S HMPN=$$SDAPI^SDAMA301(.HMPX) Q:HMPN<1  K HMPX
"RTN","HMPPATS",138,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN<1  S HMPX(DFN)=""
"RTN","HMPPATS",139,0)
 ; find patients scheduled for admission
"RTN","HMPPATS",140,0)
 S HMPDT=0 F  S HMPDT=$O(^DGS(41.1,"C",HMPDT)) Q:HMPDT<1!(HMPDT>END)  D
"RTN","HMPPATS",141,0)
 . S HMPI=0 F  S HMPI=$O(^DGS(41.1,"C",HMPDT,HMPI)) Q:HMPI<1  D
"RTN","HMPPATS",142,0)
 .. S HMPA=$G(^DGS(41.1,HMPI))
"RTN","HMPPATS",143,0)
 .. Q:$P(HMPA,U,13)  Q:$P(HMPA,U,17)  ;cancelled or admitted
"RTN","HMPPATS",144,0)
 .. S DFN=+HMPA S:DFN HMPX(DFN)=""
"RTN","HMPPATS",145,0)
 ; return list
"RTN","HMPPATS",146,0)
 S HMP=$NA(^TMP($J,"HMP")) K @HMP
"RTN","HMPPATS",147,0)
 D XML(.HMPX)
"RTN","HMPPATS",148,0)
 Q
"RTN","HMPPATS",149,0)
 ;
"RTN","HMPPATS",150,0)
XML(PATIENT) ; -- Return patient list as XML
"RTN","HMPPATS",151,0)
 N DFN,ICN,Y
"RTN","HMPPATS",152,0)
 D ADD("<patients>")
"RTN","HMPPATS",153,0)
 S DFN=0 F  S DFN=$O(PATIENT(DFN)) Q:DFN<1  D
"RTN","HMPPATS",154,0)
 . S ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPPATS",155,0)
 . S Y="<patient id='"_DFN_$S(ICN:"' icn='"_ICN,1:"")_"' />" D ADD(Y)
"RTN","HMPPATS",156,0)
 D ADD("</patients>")
"RTN","HMPPATS",157,0)
 Q
"RTN","HMPPATS",158,0)
 ;
"RTN","HMPPATS",159,0)
SUBS(HMP,SYS,ON,LIST) ; -- Un/Subscribe to Patient Data Monitor
"RTN","HMPPATS",160,0)
 ; RPC = HMP SUBSCRIBE
"RTN","HMPPATS",161,0)
 N DA,I,ICN,DFN,HDR,HMPI
"RTN","HMPPATS",162,0)
 S SYS=$G(SYS),ON=+$G(ON) Q:'$L(SYS)
"RTN","HMPPATS",163,0)
 S DA=$$FIND(SYS) Q:DA<1
"RTN","HMPPATS",164,0)
 S HMP=$NA(^TMP("HMP",$J)) K @HMP
"RTN","HMPPATS",165,0)
 S:'$D(^XTMP("HMP")) ^XTMP("HMP",0)="3991231^"_DT_"^HMP Patient Data Monitor"
"RTN","HMPPATS",166,0)
 ;
"RTN","HMPPATS",167,0)
 ; loop through LIST(n) = 'dfn;icn'
"RTN","HMPPATS",168,0)
 D ADD("<patients>")
"RTN","HMPPATS",169,0)
 S I="" F  S I=$O(LIST(I)) Q:I=""  S DFN=LIST(I) D
"RTN","HMPPATS",170,0)
 . S ICN=+$P(DFN,";",2),DFN=+$G(DFN)
"RTN","HMPPATS",171,0)
 . I 'DFN S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","HMPPATS",172,0)
 . I DFN<1!'$D(^DPT(DFN)) D RET(DFN,"error") Q
"RTN","HMPPATS",173,0)
 . I ON D  Q
"RTN","HMPPATS",174,0)
 .. S:'$D(^HMP(800000,DA,1,DFN,0)) HDR=$G(^HMP(800000,DA,1,0)),^(0)="^800000.01P^"_DFN_U_($P(HDR,U,4)+1)
"RTN","HMPPATS",175,0)
 .. S ^HMP(800000,DA,1,DFN,0)=DFN_U_ON,^HMP(800000,"ADFN",DFN,DA)=""
"RTN","HMPPATS",176,0)
 .. D RET(DFN,"on")
"RTN","HMPPATS",177,0)
 . ; else, remove patient tracking info from ^XTMP
"RTN","HMPPATS",178,0)
 . S:$D(^HMP(800000,DA,1,DFN,0)) $P(^(0),U,2)=0
"RTN","HMPPATS",179,0)
 . K ^HMP(800000,"ADFN",DFN,DA)
"RTN","HMPPATS",180,0)
 . D RET(DFN,"off")
"RTN","HMPPATS",181,0)
 D ADD("</patients>")
"RTN","HMPPATS",182,0)
 Q
"RTN","HMPPATS",183,0)
 ;
"RTN","HMPPATS",184,0)
FIND(ID) ; -- Return ien of system ID in ^HMP
"RTN","HMPPATS",185,0)
 N DA,DO,DIC,X,Y
"RTN","HMPPATS",186,0)
 I $G(ID)="" Q 0                        ;error
"RTN","HMPPATS",187,0)
 S DA=+$O(^HMP(800000,"B",ID,0)) I DA<1 D  ;add
"RTN","HMPPATS",188,0)
 . S DIC="^HMP(800000,",DIC(0)="F",X=ID
"RTN","HMPPATS",189,0)
 . D FILE^DICN S DA=+Y
"RTN","HMPPATS",190,0)
 Q DA
"RTN","HMPPATS",191,0)
 ;
"RTN","HMPPATS",192,0)
ZFIND(URL) ; -- Return ien of URL in ^HMP
"RTN","HMPPATS",193,0)
 N NAME,DA S NAME=$G(URL)
"RTN","HMPPATS",194,0)
 S:NAME?1"http".E NAME=$P(NAME,"/",3) S:NAME[":" NAME=$P(NAME,":")
"RTN","HMPPATS",195,0)
 S DA=0 F  S DA=$O(^HMP(800000,"B",NAME,DA)) Q:DA<1  I $G(^HMP(800000,DA,.1))=URL Q
"RTN","HMPPATS",196,0)
 I DA<1 D  ;add
"RTN","HMPPATS",197,0)
 . N DO,DIC,X,Y
"RTN","HMPPATS",198,0)
 . S DIC="^HMP(800000,",DIC(0)="F",X=NAME
"RTN","HMPPATS",199,0)
 . D FILE^DICN S DA=+Y
"RTN","HMPPATS",200,0)
 . S:DA>0 ^HMP(800000,DA,.1)=URL
"RTN","HMPPATS",201,0)
 Q DA
"RTN","HMPPATS",202,0)
 ;
"RTN","HMPPATS",203,0)
RET(DFN,STS) ; -- add XML node for patient DFN update subscription
"RTN","HMPPATS",204,0)
 N Y S Y="<patient dfn='"_$G(DFN)
"RTN","HMPPATS",205,0)
 S Y=Y_"' subscribe='"_$G(STS)_"' />"
"RTN","HMPPATS",206,0)
 D ADD(Y)
"RTN","HMPPATS",207,0)
 Q
"RTN","HMPPATS",208,0)
 ;
"RTN","HMPPATS",209,0)
ADD(X) ; Add a line @HMP@(n)=X
"RTN","HMPPATS",210,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPPATS",211,0)
 S @HMP@(HMPI)=X
"RTN","HMPPATS",212,0)
 Q
"RTN","HMPPI")
0^101^B298411
"RTN","HMPPI",1,0)
HMPPI ;SLC/AGP -- HMP package post install ; 11/23/14 1:00pm
"RTN","HMPPI",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPPI",3,0)
 ;
"RTN","HMPPI",4,0)
POST ;
"RTN","HMPPI",5,0)
 ; Create proxy user
"RTN","HMPPI",6,0)
 Q:$O(^VA(200,"B","HMP,APPLICATION PROXY",0))
"RTN","HMPPI",7,0)
 N X
"RTN","HMPPI",8,0)
 S X=$$CREATE^XUSAP("HMP,APPLICATION PROXY","","HMP APPLICATION PROXY")
"RTN","HMPPI",9,0)
 Q
"RTN","HMPPRODC")
0^102^B2553263
"RTN","HMPPRODC",1,0)
HMPPRODC ;SLC/AGP - Environmental check for installations ;02/02/12
"RTN","HMPPRODC",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPPRODC",3,0)
 ;
"RTN","HMPPRODC",4,0)
 ;This routine will check to see if the user is in a production account
"RTN","HMPPRODC",5,0)
 ;if they are then the user will not be allowed to install this
"RTN","HMPPRODC",6,0)
 ;patch/build/bundle
"RTN","HMPPRODC",7,0)
 ;
"RTN","HMPPRODC",8,0)
ENV ;
"RTN","HMPPRODC",9,0)
 I $$PROD^XUPROD D
"RTN","HMPPRODC",10,0)
 .W !,"You are attempting to install this software into your production account.",!,"At this time, this software is not ready for a production install."
"RTN","HMPPRODC",11,0)
 .W !!,"Please verify the account you're attempting to install into and",!,"if you believe you're correct, contact Ron Massey or Tana Defa.",!!,"INSTALLATION ABORTED!"
"RTN","HMPPRODC",12,0)
 .S XPDABORT=1
"RTN","HMPPRODC",13,0)
 Q
"RTN","HMPPRXY2")
0^103^B14165386
"RTN","HMPPRXY2",1,0)
HMPPRXY2 ;SLC/JCH - Post-Install Routine to Create HMP User ;02/03/15 17:35
"RTN","HMPPRXY2",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Feb 03, 2015;Build 53
"RTN","HMPPRXY2",3,0)
 ;
"RTN","HMPPRXY2",4,0)
 Q
"RTN","HMPPRXY2",5,0)
 ;
"RTN","HMPPRXY2",6,0)
POST ; Entry point for post install
"RTN","HMPPRXY2",7,0)
 D BMES^XPDUTL("  Starting post-install")
"RTN","HMPPRXY2",8,0)
 D ADDUSR
"RTN","HMPPRXY2",9,0)
 Q
"RTN","HMPPRXY2",10,0)
 ;
"RTN","HMPPRXY2",11,0)
ADDUSR() ; FileMan calls to add user, update fields, update sub-files
"RTN","HMPPRXY2",12,0)
 N DIC ; DIC(0) is required by the LAGYO code attached to NAME (#.01) field in NEW  PERSON (#200) file (see below)
"RTN","HMPPRXY2",13,0)
 ;  NEW PERSON (#200 file :          ^DD(200,.01,"LAYGO",1,0)="D LAYGO^XUA4A7"
"RTN","HMPPRXY2",14,0)
 ;  Routine XUA4A7 :        LAYGO    ;Called from ^DD(200,.01,"LAYGO",1,0)
"RTN","HMPPRXY2",15,0)
 ;                                   Q:DIC(0)'["E"
"RTN","HMPPRXY2",16,0)
 N FDA ; The name of the root of a VA FileMan Data Array, which describes the entries to add to the database.
"RTN","HMPPRXY2",17,0)
 N ERR ; Array containing error messages.
"RTN","HMPPRXY2",18,0)
 N HMPERTXT ; Array contaning generic user message text indicating fields/files that were not updated
"RTN","HMPPRXY2",19,0)
 N USRIEN ; The Internal Entry Number (IEN) of the 
"RTN","HMPPRXY2",20,0)
 N FDAIEN ; The IEN of HMP,APPLICATION PROXY user found in the NEW PERSON (#200) file
"RTN","HMPPRXY2",21,0)
 N HMPERR ; The full reference to each ERR error node, including the array with subscripts and data (i.e., ERR("DIERR",1,"TEXT")="Error Message")
"RTN","HMPPRXY2",22,0)
 ;
"RTN","HMPPRXY2",23,0)
 ; Add new user to ^VA(200
"RTN","HMPPRXY2",24,0)
 S DIC(0)="" ; Define DIC(0) so DD(200,.01,"LAGYO" code doesn't blow up (LAYGO^XUA4A7)
"RTN","HMPPRXY2",25,0)
 S FDA(200,"?+1,",.01)="HMP,APPLICATION PROXY"
"RTN","HMPPRXY2",26,0)
 D UPDATE^DIE("E","FDA","FDAIEN","ERR")
"RTN","HMPPRXY2",27,0)
 ; Quit if user not added
"RTN","HMPPRXY2",28,0)
 S USRIEN=$G(FDAIEN(1))
"RTN","HMPPRXY2",29,0)
 I '$G(USRIEN) D  Q
"RTN","HMPPRXY2",30,0)
 .D BMES^XPDUTL("HMP,APPLICATION PROXY user not added")
"RTN","HMPPRXY2",31,0)
 .I $D(ERR) D ERROUT(.ERR)
"RTN","HMPPRXY2",32,0)
 ;
"RTN","HMPPRXY2",33,0)
 S HMPERTXT=$S($G(FDAIEN(1,0))="?":"User HMP,APPLICATION PROXY already on file.",$G(FDAIEN(1,0))="+":"User HMP,APPLICATION PROXY added",1:"")
"RTN","HMPPRXY2",34,0)
 D BMES^XPDUTL(HMPERTXT)
"RTN","HMPPRXY2",35,0)
 ;
"RTN","HMPPRXY2",36,0)
 ; Add fields for new user file entry
"RTN","HMPPRXY2",37,0)
 K FDA,ERR
"RTN","HMPPRXY2",38,0)
 S FDA(200,USRIEN_",",1)="PU"                ; Initials
"RTN","HMPPRXY2",39,0)
 S FDA(200,USRIEN_",",7.2)="Y"
"RTN","HMPPRXY2",40,0)
 S FDA(200,USRIEN_",",20.2)="HMPPROXY USER"  ; Signature Block
"RTN","HMPPRXY2",41,0)
 S FDA(200,USRIEN_",",101.01)="NO"           ; Restrict Patient Selection
"RTN","HMPPRXY2",42,0)
 S FDA(200,USRIEN_",",201)="XMUSER"             ; Primary Menu Option
"RTN","HMPPRXY2",43,0)
 D FILE^DIE("E","FDA","ERR")
"RTN","HMPPRXY2",44,0)
 ;
"RTN","HMPPRXY2",45,0)
 ;  display progress (Data is refiled each time post-install is run - updated message will display each time)
"RTN","HMPPRXY2",46,0)
 K HMPERTXT
"RTN","HMPPRXY2",47,0)
 S HMPERTXT(1)="The following HMP,APPLICATION PROXY fields were "_$S($D(ERR):"NOT updated: ",1:"updated: ")
"RTN","HMPPRXY2",48,0)
 S HMPERTXT(2)="INITIALS, ACCESS CODE, SIGNATURE BLOCK, RESTRICT PATIENT SELECTION, PRIMARY MENU OPTION"
"RTN","HMPPRXY2",49,0)
 D BMES^XPDUTL(.HMPERTXT)
"RTN","HMPPRXY2",50,0)
 ;
"RTN","HMPPRXY2",51,0)
 ; If failure, provide details
"RTN","HMPPRXY2",52,0)
 I $D(ERR) D ERROUT(.ERR)
"RTN","HMPPRXY2",53,0)
 ;
"RTN","HMPPRXY2",54,0)
 ; Update sub-files for new user file entry
"RTN","HMPPRXY2",55,0)
 K FDA,ERR
"RTN","HMPPRXY2",56,0)
 S FDA(200.051,"?+1,"_USRIEN_",",.01)="HMP ADMIN"
"RTN","HMPPRXY2",57,0)
 S FDA(200.051,"?+2,"_USRIEN_",",.01)="PROVIDER"
"RTN","HMPPRXY2",58,0)
 S FDA(200.010113,"?+3,"_USRIEN_",",.01)="COR"
"RTN","HMPPRXY2",59,0)
 S FDA(200.03,"?+4,"_USRIEN_",",.01)="OR PARAM COORDINATOR MENU"
"RTN","HMPPRXY2",60,0)
 S FDA(200.03,"?+5,"_USRIEN_",",.01)="HMP UI CONTEXT"
"RTN","HMPPRXY2",61,0)
 S FDA(200.03,"?+6,"_USRIEN_",",.01)="HMP SYNCHRONIZATION CONTEXT"
"RTN","HMPPRXY2",62,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","HMPPRXY2",63,0)
 ;
"RTN","HMPPRXY2",64,0)
 ; It's an all or nothing transaction - display progress (Data is refiled each time post-install is run - updated message will display each time)
"RTN","HMPPRXY2",65,0)
 K HMPERTXT
"RTN","HMPPRXY2",66,0)
 S HMPERTXT(1)="The following sub-files for user HMP,APPLICATION PROXY were "_$S($D(ERR):"NOT updated: ",1:"updated: ")
"RTN","HMPPRXY2",67,0)
 S HMPERTXT(2)="  KEYS, CPRS TAB, SECONDARY MENU OPTIONS"
"RTN","HMPPRXY2",68,0)
 D BMES^XPDUTL(.HMPERTXT)
"RTN","HMPPRXY2",69,0)
 ; 
"RTN","HMPPRXY2",70,0)
 ; If failure, provide details
"RTN","HMPPRXY2",71,0)
 I $D(ERR) D ERROUT(.ERR)
"RTN","HMPPRXY2",72,0)
 ;
"RTN","HMPPRXY2",73,0)
 Q
"RTN","HMPPRXY2",74,0)
 ;
"RTN","HMPPRXY2",75,0)
ERROUT(ERR) ; Output ERR array
"RTN","HMPPRXY2",76,0)
 D BMES^XPDUTL("Error Details:")
"RTN","HMPPRXY2",77,0)
 S HMPERR="ERR(""DIERR"")" F  S HMPERR=$Q(@HMPERR) Q:HMPERR=""  D MES^XPDUTL(HMPERR_"="_@HMPERR)
"RTN","HMPPRXY2",78,0)
 Q
"RTN","HMPPTDEM")
0^104^B12301900
"RTN","HMPPTDEM",1,0)
HMPPTDEM  ;AGX/EJK/JD -- File Patient Demographic Information passed via RPC ; 09/16/2014
"RTN","HMPPTDEM",2,0)
 ;;2.0;HEALTH MANAGEMENT PLATFORM;**1**;Oct 10, 2014;Build 53
"RTN","HMPPTDEM",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPPTDEM",4,0)
 ; RPC = HMP WRITEBACK PT DEM
"RTN","HMPPTDEM",5,0)
 ;
"RTN","HMPPTDEM",6,0)
 ; *** NOTES ***
"RTN","HMPPTDEM",7,0)
 ; Return variable must be an ARRAY
"RTN","HMPPTDEM",8,0)
 ; A success MUST be sent as a 1
"RTN","HMPPTDEM",9,0)
 ; A failure may take any form
"RTN","HMPPTDEM",10,0)
 ; *************
"RTN","HMPPTDEM",11,0)
 ;
"RTN","HMPPTDEM",12,0)
 Q  ;Must come in at a tag.
"RTN","HMPPTDEM",13,0)
 ;
"RTN","HMPPTDEM",14,0)
FILE(RSP,HMPDEM) ;File Patient Demographic information.
"RTN","HMPPTDEM",15,0)
 ;Inbound data layout:
"RTN","HMPPTDEM",16,0)
 ; "^" delimited
"RTN","HMPPTDEM",17,0)
 ; Piece 1: DFN
"RTN","HMPPTDEM",18,0)
 ; Piece 2: Home Phone Number - ^DD(2,.131 - ^DPT(DFN,.13) piece 1
"RTN","HMPPTDEM",19,0)
 ; Piece 3: Cell Phone Number - ^DD(2,.134 - ^DPT(DFN,.13) piece 4
"RTN","HMPPTDEM",20,0)
 ; Piece 4: Work Phone Number - ^DD(2,.132 - ^DPT(DFN,.13) piece 2
"RTN","HMPPTDEM",21,0)
 ; Piece 5: Emergency Phone Number - ^DD(2,.339 - ^DPT(DFN,.33) piece 9
"RTN","HMPPTDEM",22,0)
 ; Piece 6: NOK Phone Number - ^DD(2,.219 - ^DPT(DFN,.21) piece 9
"RTN","HMPPTDEM",23,0)
 ;
"RTN","HMPPTDEM",24,0)
 ; If a piece contains -1, it means DELETE it
"RTN","HMPPTDEM",25,0)
 ; If a piece is null, it means LEAVE it ALONE
"RTN","HMPPTDEM",26,0)
 ; If a piece is not -1 and not null, it means UPDATE it
"RTN","HMPPTDEM",27,0)
 ; 
"RTN","HMPPTDEM",28,0)
 ;D BEFORE  ; testing ONLY
"RTN","HMPPTDEM",29,0)
 D PROC
"RTN","HMPPTDEM",30,0)
 ;D AFTER  ; testing ONLY
"RTN","HMPPTDEM",31,0)
 Q
"RTN","HMPPTDEM",32,0)
 ;
"RTN","HMPPTDEM",33,0)
PROC ;
"RTN","HMPPTDEM",34,0)
 N HMPDFN,HMPHPN,HMPCPN,HMPWPN,HMPEPN,HMPNPN,RSPCNT
"RTN","HMPPTDEM",35,0)
 N HMPER,HMPX
"RTN","HMPPTDEM",36,0)
 K HMPX
"RTN","HMPPTDEM",37,0)
 S RSPCNT=0,HMPER=""
"RTN","HMPPTDEM",38,0)
 S HMPDFN=$P(HMPDEM,"^",1)
"RTN","HMPPTDEM",39,0)
 S HMPHPN=$P(HMPDEM,"^",2)
"RTN","HMPPTDEM",40,0)
 S HMPCPN=$P(HMPDEM,"^",3)
"RTN","HMPPTDEM",41,0)
 S HMPWPN=$P(HMPDEM,"^",4)
"RTN","HMPPTDEM",42,0)
 S HMPEPN=$P(HMPDEM,"^",5)
"RTN","HMPPTDEM",43,0)
 S HMPNPN=$P(HMPDEM,"^",6)
"RTN","HMPPTDEM",44,0)
 S DA=HMPDFN
"RTN","HMPPTDEM",45,0)
 K RSP
"RTN","HMPPTDEM",46,0)
 S RSP(0)=1 ;"Writeback was successful"  ; default to good news!
"RTN","HMPPTDEM",47,0)
 I HMPDFN']"" S RSP(0)="No DFN" Q
"RTN","HMPPTDEM",48,0)
 I '$D(^DPT(HMPDFN)) S RSP(0)="Patient does not exist.  DFN: "_HMPDFN Q
"RTN","HMPPTDEM",49,0)
 I $$GET1^DIQ(2,HMPDFN_",",.331)']"",HMPEPN]"" S RSP(0)="Setting EM CO PH w/o EM CO Name" Q
"RTN","HMPPTDEM",50,0)
 I $$GET1^DIQ(2,HMPDFN_",",.211)']"",HMPNPN]"" S RSP(0)="Setting NOK PH w/o NOK Name" Q
"RTN","HMPPTDEM",51,0)
 S HMPX(2,DA_",",.131)=$S(HMPHPN=-1:"",HMPHPN="":$$GET1^DIQ(2,HMPDFN_",",.131),1:HMPHPN)
"RTN","HMPPTDEM",52,0)
 S HMPX(2,DA_",",.132)=$S(HMPWPN=-1:"",HMPWPN="":$$GET1^DIQ(2,HMPDFN_",",.132),1:HMPWPN)
"RTN","HMPPTDEM",53,0)
 S HMPX(2,DA_",",.134)=$S(HMPCPN=-1:"",HMPCPN="":$$GET1^DIQ(2,HMPDFN_",",.134),1:HMPCPN)
"RTN","HMPPTDEM",54,0)
 S HMPX(2,DA_",",.219)=$S(HMPNPN=-1:"",HMPNPN="":$$GET1^DIQ(2,HMPDFN_",",.219),1:HMPNPN)
"RTN","HMPPTDEM",55,0)
 S HMPX(2,DA_",",.339)=$S(HMPEPN=-1:"",HMPEPN="":$$GET1^DIQ(2,HMPDFN_",",.339),1:HMPEPN)
"RTN","HMPPTDEM",56,0)
 D UPDATE^DIE(,"HMPX",,"HMPER")
"RTN","HMPPTDEM",57,0)
 I HMPER]"" S RSP(0)=HMPER
"RTN","HMPPTDEM",58,0)
 Q
"RTN","HMPPTDEM",59,0)
BEFORE ;
"RTN","HMPPTDEM",60,0)
 S DFN=$P(HMPDEM,"^",1)
"RTN","HMPPTDEM",61,0)
 S (HPN,CPN,WPN,EPN,NPN)=""
"RTN","HMPPTDEM",62,0)
 S PTNAME=$$GET1^DIQ(2,DFN_",",.01,"E")
"RTN","HMPPTDEM",63,0)
 S HPN=$$GET1^DIQ(2,DFN_",",.131,"E")
"RTN","HMPPTDEM",64,0)
 S CPN=$$GET1^DIQ(2,DFN_",",.134,"E")
"RTN","HMPPTDEM",65,0)
 S WPN=$$GET1^DIQ(2,DFN_",",.132,"E")
"RTN","HMPPTDEM",66,0)
 S EPN=$$GET1^DIQ(2,DFN_",",.339,"E")
"RTN","HMPPTDEM",67,0)
 S NPN=$$GET1^DIQ(2,DFN_",",.219,"E")
"RTN","HMPPTDEM",68,0)
 U 0 W "Patient: "_PTNAME,!
"RTN","HMPPTDEM",69,0)
 U 0 W "Before executing input string:",!
"RTN","HMPPTDEM",70,0)
 U 0 W ?5,"Home Phone: "_HPN,!
"RTN","HMPPTDEM",71,0)
 U 0 W ?5,"Cell Phone: "_CPN,!
"RTN","HMPPTDEM",72,0)
 U 0 W ?5,"Work Phone: "_WPN,!
"RTN","HMPPTDEM",73,0)
 U 0 W ?5,"Emergency Phone: "_EPN,!
"RTN","HMPPTDEM",74,0)
 U 0 W ?5,"NOK Phone: "_NPN,!!
"RTN","HMPPTDEM",75,0)
 Q
"RTN","HMPPTDEM",76,0)
AFTER ;
"RTN","HMPPTDEM",77,0)
 S (HPN,CPN,WPN,EPN,NPN)=""
"RTN","HMPPTDEM",78,0)
 S PTNAME=$$GET1^DIQ(2,DFN_",",.01,"E")
"RTN","HMPPTDEM",79,0)
 S HPN=$$GET1^DIQ(2,DFN_",",.131,"E")
"RTN","HMPPTDEM",80,0)
 S CPN=$$GET1^DIQ(2,DFN_",",.134,"E")
"RTN","HMPPTDEM",81,0)
 S WPN=$$GET1^DIQ(2,DFN_",",.132,"E")
"RTN","HMPPTDEM",82,0)
 S EPN=$$GET1^DIQ(2,DFN_",",.339,"E")
"RTN","HMPPTDEM",83,0)
 S NPN=$$GET1^DIQ(2,DFN_",",.219,"E")
"RTN","HMPPTDEM",84,0)
 U 0 W "After executing input string:",!
"RTN","HMPPTDEM",85,0)
 U 0 W "Patient: "_PTNAME,!
"RTN","HMPPTDEM",86,0)
 U 0 W ?5,"Home Phone: "_HPN,!
"RTN","HMPPTDEM",87,0)
 U 0 W ?5,"Cell Phone: "_CPN,!
"RTN","HMPPTDEM",88,0)
 U 0 W ?5,"Work Phone: "_WPN,!
"RTN","HMPPTDEM",89,0)
 U 0 W ?5,"Emergency Phone: "_EPN,!
"RTN","HMPPTDEM",90,0)
 U 0 W ?5,"NOK Phone: "_NPN
"RTN","HMPPTDEM",91,0)
 Q
"RTN","HMPPXPR1")
0^105^B845616
"RTN","HMPPXPR1",1,0)
HMPPXPR1 ;BL -- Proxy user creation for HMP ;06/23/2014 6:26pm
"RTN","HMPPXPR1",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPPXPR1",3,0)
 ;
"RTN","HMPPXPR1",4,0)
 ;This preprocessor is part of the VistAExchange eHMP project
"RTN","HMPPXPR1",5,0)
 ;will create the proxy user HMPPROXY,USER1, using the 
"RTN","HMPPXPR1",6,0)
 ;$$CREATE^XUSAP utility
"RTN","HMPPXPR1",7,0)
 ;
"RTN","HMPPXPR1",8,0)
 Q
"RTN","HMPPXPR1",9,0)
CREATE  ;CREATE HMP PROXY USER
"RTN","HMPPXPR1",10,0)
 K RETURN
"RTN","HMPPXPR1",11,0)
 S RETURN=$$CREATE^XUSAP("HMPPROXY,USER","")
"RTN","HMPPXPR1",12,0)
 ;Check for success
"RTN","HMPPXPR1",13,0)
 I +RETURN>1 W !,"PROXY USER CREATION SUCCESSFUL. USER IEN: "_$P(RETURN,"^",1)
"RTN","HMPPXPR1",14,0)
 ;If creation fail print reason if there is a reason
"RTN","HMPPXPR1",15,0)
 I +RETURN=0 W !,"PROXY USER CREATION FAIL. REASON: "_$P(RETURN,"^",2)
"RTN","HMPPXPR1",16,0)
 I +RETURN<0 W !,"PROXY USER CREATION FAIL. REASON: "_RETURN
"RTN","HMPPXPR1",17,0)
 Q 
"RTN","HMPPXRM")
0^106^B12212288
"RTN","HMPPXRM",1,0)
HMPPXRM ; SLC/AGP - Clinical Remidners routine. ; 8/16/12 7:09pm
"RTN","HMPPXRM",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPPXRM",3,0)
 Q
"RTN","HMPPXRM",4,0)
 ;
"RTN","HMPPXRM",5,0)
EVALLIST(RESULT,PT,USER,LOC) ;
"RTN","HMPPXRM",6,0)
 N CNT,NUM,RIEN,TMP,UID,HMPTMP,HMPSYS
"RTN","HMPPXRM",7,0)
 N DUEDATE,I,J,LASTDONE,NAME,NODE,STATUS,TXT
"RTN","HMPPXRM",8,0)
 ;S USER=$P(USERUID,":",5)
"RTN","HMPPXRM",9,0)
 D GETLIST^ORQQPX(.HMPTMP,LOC)
"RTN","HMPPXRM",10,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPPXRM",11,0)
 S CNT=0,NUM=0 F  S CNT=$O(HMPTMP(CNT)) Q:CNT'>0  D
"RTN","HMPPXRM",12,0)
 .S RIEN=$G(HMPTMP(CNT)) I RIEN'>0 Q
"RTN","HMPPXRM",13,0)
 .S NAME="" S NAME=$P($G(^PXD(811.9,RIEN,0)),U,3)
"RTN","HMPPXRM",14,0)
 .I NAME="" S NAME=$P($G(^PXD(811.9,RIEN,0)),U)
"RTN","HMPPXRM",15,0)
 .S UID="urn:va:pxrm:"_HMPSYS_":"_RIEN
"RTN","HMPPXRM",16,0)
 .S NUM=NUM+1,TMP("reminders",NUM,"uid")=UID,TMP("reminders",NUM,"name")=NAME
"RTN","HMPPXRM",17,0)
 .K ^TMP("PXRHM",$J)
"RTN","HMPPXRM",18,0)
 .D MAIN^PXRM(PT,RIEN,5)     ; 5 returns all reminder info
"RTN","HMPPXRM",19,0)
 .S I=1,TXT=""
"RTN","HMPPXRM",20,0)
 .S NAME="",NAME=$O(^TMP("PXRHM",$J,RIEN,NAME)) Q:NAME=""  D
"RTN","HMPPXRM",21,0)
 ..S NODE=$G(^TMP("PXRHM",$J,RIEN,NAME))
"RTN","HMPPXRM",22,0)
 ..S STATUS=$P(NODE,U),DUEDATE=$$JSONDT^HMPUTILS($P(NODE,U,2)),LASTDONE=$$JSONDT^HMPUTILS($P(NODE,U,3))
"RTN","HMPPXRM",23,0)
 ..S J=0 F  S J=$O(^TMP("PXRHM",$J,RIEN,NAME,"TXT",J)) Q:J=""  D
"RTN","HMPPXRM",24,0)
 ...S TXT=$G(TXT)_^TMP("PXRHM",$J,RIEN,NAME,"TXT",J)_$C(13)_$C(10),I=I+1
"RTN","HMPPXRM",25,0)
 .K ^TMP("PXRHM",$J)
"RTN","HMPPXRM",26,0)
 .S TMP("reminders",NUM,"status")=STATUS
"RTN","HMPPXRM",27,0)
 .S TMP("reminders",NUM,"dueDate")=DUEDATE
"RTN","HMPPXRM",28,0)
 .S TMP("reminders",NUM,"lastDone")=LASTDONE
"RTN","HMPPXRM",29,0)
 .S TMP("reminders",NUM,"clinicalMaintenance")=TXT
"RTN","HMPPXRM",30,0)
 S TMP("success")="true"
"RTN","HMPPXRM",31,0)
 D ENCODE^HMPJSON("TMP","RESULT","ERROR")
"RTN","HMPPXRM",32,0)
 I $D(ERROR) D SETERROR(.TMP,.ERROR,.RESULT)
"RTN","HMPPXRM",33,0)
 Q
"RTN","HMPPXRM",34,0)
 ;
"RTN","HMPPXRM",35,0)
EVALREM(RESULT,PT,UID) ;return detail for a pt's clinical reminder
"RTN","HMPPXRM",36,0)
 K ^TMP("PXRHM",$J)
"RTN","HMPPXRM",37,0)
 N DUEDATE,I,J,LASTDONE,NAME,NODE,RIEN,STATUS,TMP,TXT
"RTN","HMPPXRM",38,0)
 S RIEN=$P(UID,":",5)
"RTN","HMPPXRM",39,0)
 D MAIN^PXRM(PT,RIEN,5)     ; 5 returns all reminder info
"RTN","HMPPXRM",40,0)
 S I=1,TXT=""
"RTN","HMPPXRM",41,0)
 S NAME="",NAME=$O(^TMP("PXRHM",$J,RIEN,NAME)) Q:NAME=""  D
"RTN","HMPPXRM",42,0)
 .S NODE=$G(^TMP("PXRHM",$J,RIEN,NAME))
"RTN","HMPPXRM",43,0)
 .S STATUS=$P(NODE,U),DUEDATE=$$JSONDT^HMPUTILS($P(NODE,U,2)),LASTDONE=$$JSONDT^HMPUTILS($P(NODE,U,3))
"RTN","HMPPXRM",44,0)
 .S J=0 F  S J=$O(^TMP("PXRHM",$J,RIEN,NAME,"TXT",J)) Q:J=""  D
"RTN","HMPPXRM",45,0)
 ..S TXT=$G(TXT)_^TMP("PXRHM",$J,RIEN,NAME,"TXT",J)_$C(13)_$C(10),I=I+1
"RTN","HMPPXRM",46,0)
 K ^TMP("PXRHM",$J)
"RTN","HMPPXRM",47,0)
 S TMP("uid")=UID
"RTN","HMPPXRM",48,0)
 S TMP("status")=STATUS
"RTN","HMPPXRM",49,0)
 S TMP("dueDate")=DUEDATE
"RTN","HMPPXRM",50,0)
 S TMP("lastDone")=LASTDONE
"RTN","HMPPXRM",51,0)
 S TMP("clinicalMaintenance")=TXT
"RTN","HMPPXRM",52,0)
 S TMP("success")="true"
"RTN","HMPPXRM",53,0)
 D ENCODE^HMPJSON("TMP","RESULT","ERROR")
"RTN","HMPPXRM",54,0)
 I $D(ERROR) D SETERROR(.TMP,.ERROR,.RESULT)
"RTN","HMPPXRM",55,0)
 Q
"RTN","HMPPXRM",56,0)
 ;
"RTN","HMPPXRM",57,0)
REMLIST(RESULT,USERUID,LOC) ;
"RTN","HMPPXRM",58,0)
 N CNT,NUM,RIEN,TMP,UID,USER,HMPTMP,HMPSYS
"RTN","HMPPXRM",59,0)
 S USER=$P(USERUID,":",5)
"RTN","HMPPXRM",60,0)
 D GETLIST^ORQQPX(.HMPTMP,LOC)
"RTN","HMPPXRM",61,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPPXRM",62,0)
 S CNT=0,NUM=0 F  S CNT=$O(HMPTMP(CNT)) Q:CNT'>0  D
"RTN","HMPPXRM",63,0)
 .S RIEN=$G(HMPTMP(CNT)) I RIEN'>0 Q
"RTN","HMPPXRM",64,0)
 .S NAME="" S NAME=$P($G(^PXD(811.9,RIEN,0)),U,3)
"RTN","HMPPXRM",65,0)
 .I NAME="" S NAME=$P($G(^PXD(811.9,RIEN,0)),U)
"RTN","HMPPXRM",66,0)
 .S UID="urn:va:pxrm:"_HMPSYS_":"_RIEN
"RTN","HMPPXRM",67,0)
 .S NUM=NUM+1,TMP("reminders",NUM,"uid")=UID,TMP("reminders",NUM,"name")=NAME
"RTN","HMPPXRM",68,0)
 S TMP("success")="true"
"RTN","HMPPXRM",69,0)
 D ENCODE^HMPJSON("TMP","RESULT","ERROR")
"RTN","HMPPXRM",70,0)
 I $D(ERROR) D SETERROR(.TMP,.ERROR,.RESULT)
"RTN","HMPPXRM",71,0)
 Q
"RTN","HMPPXRM",72,0)
 ;
"RTN","HMPPXRM",73,0)
SETERROR(INPDATA,ERRORMSG,OUTPUT) ;
"RTN","HMPPXRM",74,0)
 N ERRARR,TXT
"RTN","HMPPXRM",75,0)
 S TXT(1)="Problem encoding json output"
"RTN","HMPPXRM",76,0)
 D SETERROR^HMPUTILS(.ERRARR,.ERRORMSG,.TXT,.INPDATA)
"RTN","HMPPXRM",77,0)
 D ENCODE^HMPJSON("ERRARR","OUTPUT","ERROR")
"RTN","HMPPXRM",78,0)
 Q
"RTN","HMPPXRM",79,0)
 ;
"RTN","HMPROS2")
0^107^B104804972
"RTN","HMPROS2",1,0)
HMPROS2 ;SLC/GRR -- Roster Management
"RTN","HMPROS2",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPROS2",3,0)
 ;; Compile Roster
"RTN","HMPROS2",4,0)
COMPILE(HMP,HMPIEN,HMPOWNER) ;
"RTN","HMPROS2",5,0)
 ;; Input - HMPIEN is internal entry number of roster
"RTN","HMPROS2",6,0)
 ;;         HMPOWNER - If this parameter exists, only rosters for this owner will be compiled and passed
"RTN","HMPROS2",7,0)
 ;; Output - AFTER array contains current patients
"RTN","HMPROS2",8,0)
 ;
"RTN","HMPROS2",9,0)
 K HMPLIST,HMPLIST2
"RTN","HMPROS2",10,0)
 N HMPLIST,HMPFILT,HMPTYPE,VPERR,HMPI,HMPRNAME,HMPY,HMPOP,HMPTAG,HMPLAB,HMPNLIST,BEG,DOB,END,GENDER,ICN,NAME,HMPACT,HMPC
"RTN","HMPROS2",11,0)
 N HMPCIEN,HMPDNAME,HMPDOB,HMPIII,HMPINM,HMPLIEN,HMPNAME,HMPOIEN,HMPONAME,HMPOWNID,HMPOWNNM,HMPPAT,HMPPIEN,HMPNME,HMPCNT
"RTN","HMPROS2",12,0)
 N HMPSRCDN,HMPCID,HMPTEXT,HMPTIEN,HMPTLST,HMPVER,HMPWIEN,HMPWNAME,HMPPNME,HMPRCNT,HMPSRCID,X,Y
"RTN","HMPROS2",13,0)
 K ^TMP($J,"HMPROSTR")
"RTN","HMPROS2",14,0)
 S HMP=$NA(^TMP($J,"HMPROSTR")),HMPNLIST=""
"RTN","HMPROS2",15,0)
 I $G(HMPIEN)="" S HMPIEN=0
"RTN","HMPROS2",16,0)
 S (HMPLIST,HMPFILT,HMPTYPE,HMPOP,HMPLIST2,VPERR)="",HMPI=0
"RTN","HMPROS2",17,0)
 I $G(HMPOWNER)'="" D MULTI Q HMP
"RTN","HMPROS2",18,0)
 I +$G(HMPIEN)'>0 S VPERR="0^Invalid Roster IEN" Q
"RTN","HMPROS2",19,0)
 S HMPRNAME=$P(^HMPROSTR(HMPIEN,0),"^",1)
"RTN","HMPROS2",20,0)
 F  S HMPI=$O(^HMPROSTR(HMPIEN,1,HMPI)) Q:HMPI'>0  D
"RTN","HMPROS2",21,0)
 . S HMPY=$G(^HMPROSTR(HMPIEN,1,HMPI,0))
"RTN","HMPROS2",22,0)
 . S HMPOP=$P(HMPY,"^",3)
"RTN","HMPROS2",23,0)
 . S HMPFILT=$P(HMPY,"^",4)
"RTN","HMPROS2",24,0)
 . S HMPTAG=$P($P(HMPY,"^",2),";",2)
"RTN","HMPROS2",25,0)
 . S HMPLAB=""
"RTN","HMPROS2",26,0)
 . I HMPTAG["SC(" S HMPLAB="CLIN"
"RTN","HMPROS2",27,0)
 . I HMPTAG["DIC(42" S HMPLAB="WARD"
"RTN","HMPROS2",28,0)
 . I HMPTAG["DPT" S HMPLAB="PAT"
"RTN","HMPROS2",29,0)
 . I HMPTAG["SCTM" S HMPLAB="PCMM"
"RTN","HMPROS2",30,0)
 . I HMPTAG["OR(100.21" S HMPLAB="CPRS"
"RTN","HMPROS2",31,0)
 . I HMPTAG["HMPROSTR" S HMPLAB="ROST"
"RTN","HMPROS2",32,0)
 . I HMPTAG["DIC(45.7" S HMPLAB="SPEC"
"RTN","HMPROS2",33,0)
 . I HMPTAG["VA(200" S HMPLAB="PROV"
"RTN","HMPROS2",34,0)
 . I HMPTAG["PXRM(810.4" S HMPLAB="PXRM"
"RTN","HMPROS2",35,0)
 . I HMPLAB="" S VPERR="1^INVALID FILE TYPE" Q
"RTN","HMPROS2",36,0)
 . D @HMPLAB
"RTN","HMPROS2",37,0)
 . S HMPLAB=$S(HMPOP=0:"UNION",HMPOP=1:"INTER",1:"DIFF")
"RTN","HMPROS2",38,0)
 . S HMPNLIST=""
"RTN","HMPROS2",39,0)
 . D @HMPLAB
"RTN","HMPROS2",40,0)
 I $D(HMPOUT) K HMPOUT M HMPLIST2=HMPLIST Q
"RTN","HMPROS2",41,0)
 I $O(HMPLIST(0))'>0 S VPERR="1^EMPTY ROSTER",@HMP@(1)=VPERR Q
"RTN","HMPROS2",42,0)
 M AFTER=HMPLIST
"RTN","HMPROS2",43,0)
 D SEND
"RTN","HMPROS2",44,0)
 D ENROS^HMPFPTC(.ZZ,.HMPLIST) ;added 5/17/12 grr to check patient sensitivity
"RTN","HMPROS2",45,0)
 Q
"RTN","HMPROS2",46,0)
 ;
"RTN","HMPROS2",47,0)
CLIN ;Process patients for this clinic.  Select all if filter is null
"RTN","HMPROS2",48,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS2",49,0)
 I '$D(DT) S DT=$$DT^XLFDT()
"RTN","HMPROS2",50,0)
 S BEG=DT,END=$S(HMPFILT="T":DT+.24,1:9999999+.24),HMPIII=BEG
"RTN","HMPROS2",51,0)
 S HMPCIEN=+$P(HMPY,"^",2) F  S HMPIII=$O(^SC(HMPCIEN,"S",HMPIII)) Q:HMPIII'>0!(HMPIII>END)  D
"RTN","HMPROS2",52,0)
 . S HMPII=0 F  S HMPII=$O(^SC(HMPCIEN,"S",HMPIII,1,HMPII)) Q:HMPII'>0  S DFN=$P($G(^SC(HMPCIEN,"S",HMPIII,1,HMPII,0)),"^",1) I DFN>0 D
"RTN","HMPROS2",53,0)
 . .S HMPLIST2(DFN)=""
"RTN","HMPROS2",54,0)
 Q
"RTN","HMPROS2",55,0)
 ;
"RTN","HMPROS2",56,0)
WARD ;Process patients for this ward
"RTN","HMPROS2",57,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS2",58,0)
 S HMPWIEN=+$P(HMPY,"^",2),HMPWNAME=$P($G(^DIC(42,HMPWIEN,0)),"^",1)
"RTN","HMPROS2",59,0)
 S HMPIII=0 F  S HMPIII=$O(^DGPM("CN",HMPWNAME,HMPIII)) Q:HMPIII'>0  D
"RTN","HMPROS2",60,0)
 . S DFN=$P($G(^DGPM(HMPIII,0)),"^",3),HMPLIST2(DFN)=""
"RTN","HMPROS2",61,0)
 Q
"RTN","HMPROS2",62,0)
 ;
"RTN","HMPROS2",63,0)
PAT ;Process patient from Patient file Source
"RTN","HMPROS2",64,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS2",65,0)
 S DFN=+$P(HMPY,"^",2),HMPLIST2(DFN)=""
"RTN","HMPROS2",66,0)
 Q
"RTN","HMPROS2",67,0)
 ;
"RTN","HMPROS2",68,0)
PCMM ;Process patients from a PCMM team
"RTN","HMPROS2",69,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS2",70,0)
 S HMPTIEN=+$P(HMPY,"^",2),VPERR="",HMPTLST=""
"RTN","HMPROS2",71,0)
 D PTTM^SCAPMC(HMPTIEN,,"HMPTLST",VPERR)
"RTN","HMPROS2",72,0)
 S HMPIII="" F  S HMPIII=$O(HMPTLST(HMPIII)) Q:HMPIII'>0  S DFN=$P(HMPTLST(HMPIII),"^",1) S HMPLIST2(DFN)=""
"RTN","HMPROS2",73,0)
 Q
"RTN","HMPROS2",74,0)
 ;
"RTN","HMPROS2",75,0)
CPRS ;Process patients from CPRS Lists
"RTN","HMPROS2",76,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS2",77,0)
 S HMPOIEN=+$P(HMPY,"^",2),VPERR=""
"RTN","HMPROS2",78,0)
 S HMPIII=0 F  S HMPIII=$O(^OR(100.21,HMPOIEN,10,HMPIII)) Q:HMPIII'>0  S DFN=$P(^OR(100.21,HMPOIEN,10,HMPIII,0),";",1) S HMPLIST2(DFN)=""
"RTN","HMPROS2",79,0)
 Q
"RTN","HMPROS2",80,0)
 ;
"RTN","HMPROS2",81,0)
ROST ;Process patients from selected roster
"RTN","HMPROS2",82,0)
 K HMPLIST2,HMPBLIST S (HMPLIST2,HMPBLIST)="" ; -- kcm added comma
"RTN","HMPROS2",83,0)
 N HMP,HMPIEN,VPERR
"RTN","HMPROS2",84,0)
 S HMPIEN=+$P(HMPY,"^",2),VPERR="",HMPOUT=1,HMP="HMPBLIST"
"RTN","HMPROS2",85,0)
 D COMPILE^HMPROS2(.HMP,HMPIEN,"")
"RTN","HMPROS2",86,0)
 M HMPBLIST=HMPLIST2
"RTN","HMPROS2",87,0)
 K HMPOUT
"RTN","HMPROS2",88,0)
 Q
"RTN","HMPROS2",89,0)
 ;
"RTN","HMPROS2",90,0)
SPEC ;Process patients with selected Treating Specialty
"RTN","HMPROS2",91,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS2",92,0)
 S HMPOIEN=+$P(HMPY,"^",2),VPERR=""
"RTN","HMPROS2",93,0)
 N DFN S DFN=0 F  S DFN=$O(^DPT("ATR",HMPOIEN,DFN)) Q:DFN'>0  S HMPLIST2(DFN)=""
"RTN","HMPROS2",94,0)
 Q
"RTN","HMPROS2",95,0)
 ;
"RTN","HMPROS2",96,0)
PROV ;Process patients for selected provider
"RTN","HMPROS2",97,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS2",98,0)
 S HMPPIEN=+$P(HMPY,"^",2),VPERR=""
"RTN","HMPROS2",99,0)
 N DFN S DFN=0 F  S DFN=$O(^DPT("APR",HMPPIEN,DFN)) Q:DFN'>0  S HMPLIST2(DFN)=""
"RTN","HMPROS2",100,0)
 Q
"RTN","HMPROS2",101,0)
 ;
"RTN","HMPROS2",102,0)
PXRM ;Process patients for selected panel
"RTN","HMPROS2",103,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS2",104,0)
 S HMPPIEN=+$P(HMPY,"^",2),VPERR=""
"RTN","HMPROS2",105,0)
 S HMPC=HMPPIEN,HMPLIEN=$P(^HMPROSTR(HMPIEN,0),"^",1),HMPPNME=$P(^HMPROSTR(HMPIEN,0),"^",6) I HMPPNME="" S HMPPNME=HMPRNAME,$P(^HMPROSTR(HMPIEN,0),U,6)=HMPRNAME
"RTN","HMPROS2",106,0)
 S HMPPAT="" D RUNLIST^HMPROS5(.HMPPAT,HMPLIEN,HMPPNME,0,1)
"RTN","HMPROS2",107,0)
 S HMPII=0 F  S HMPII=$O(HMPPAT(HMPC,HMPII)) Q:HMPII'>0  S DFN=HMPPAT(HMPC,HMPII),HMPLIST2(DFN)=""
"RTN","HMPROS2",108,0)
 Q
"RTN","HMPROS2",109,0)
 ;
"RTN","HMPROS2",110,0)
UNION ;Add to existing list
"RTN","HMPROS2",111,0)
 S HMPII=0 F  S HMPII=$O(HMPLIST2(HMPII)) Q:HMPII'>0  S HMPLIST(HMPII)=""
"RTN","HMPROS2",112,0)
 Q
"RTN","HMPROS2",113,0)
 ;
"RTN","HMPROS2",114,0)
INTER ;Intersect with existing list
"RTN","HMPROS2",115,0)
 S HMPII=0 F  S HMPII=$O(HMPLIST(HMPII)) Q:HMPII'>0  D
"RTN","HMPROS2",116,0)
 . I '$D(HMPLIST2(HMPII)) K HMPLIST(HMPII)
"RTN","HMPROS2",117,0)
 Q
"RTN","HMPROS2",118,0)
 ;
"RTN","HMPROS2",119,0)
DIFF ;Remove patients from this source that we have so far
"RTN","HMPROS2",120,0)
 S HMPII=0 F  S HMPII=$O(HMPLIST2(HMPII)) Q:HMPII'>0  D
"RTN","HMPROS2",121,0)
 . K HMPLIST(HMPII)
"RTN","HMPROS2",122,0)
 Q
"RTN","HMPROS2",123,0)
 ;
"RTN","HMPROS2",124,0)
SEND ;send pending rosters.  Called through RPC
"RTN","HMPROS2",125,0)
 S HMPRCNT=0,HMPI=0,HMPII=0
"RTN","HMPROS2",126,0)
 S HMPVER="<results version='"_$P($T(HMPROS2+1),";",3)_"'>"
"RTN","HMPROS2",127,0)
 D ADD(HMPVER)
"RTN","HMPROS2",128,0)
 S HMPRNAME=$P(^HMPROSTR(HMPIEN,0),"^",1),HMPDNAME=$P(^HMPROSTR(HMPIEN,0),"^",2),HMPRNAME=$$ESC^HMPD(HMPRNAME),HMPDNAME=$$ESC^HMPD(HMPDNAME)
"RTN","HMPROS2",129,0)
 S HMPTEXT="<roster ien='"_HMPIEN_"'>" D ADD(HMPTEXT)
"RTN","HMPROS2",130,0)
 S HMPTEXT="<rosterName>"_HMPRNAME_"</rosterName>" D ADD(HMPTEXT)
"RTN","HMPROS2",131,0)
 S HMPTEXT="<displayName>"_HMPDNAME_"</displayName>" D ADD(HMPTEXT)
"RTN","HMPROS2",132,0)
 D ADD("<patients>")
"RTN","HMPROS2",133,0)
 K HMPII S HMPII=0 F  S HMPII=$O(HMPLIST(HMPII)) Q:HMPII'>0  D
"RTN","HMPROS2",134,0)
 . N HMPY
"RTN","HMPROS2",135,0)
 . S DFN=HMPII,HMPY=$G(^DPT(DFN,0))
"RTN","HMPROS2",136,0)
 . S ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPROS2",137,0)
 . S NAME=$P(HMPY,"^",1),GENDER=$P(HMPY,"^",2),DOB=$P(HMPY,"^",3),SSN=$P(HMPY,"^",9),HMPDOB=$$FMTHL7^XLFDT(DOB)
"RTN","HMPROS2",138,0)
 . S Y="<patient name='"_NAME_"' gender='"_GENDER_"' dob='"_HMPDOB_"' ssn='"_SSN_"' id='"_DFN_$S(ICN:"' icn='"_ICN,1:"")_"' />" D ADD(Y)
"RTN","HMPROS2",139,0)
 D ADD("</patients>")
"RTN","HMPROS2",140,0)
 D ADD("</roster>")
"RTN","HMPROS2",141,0)
 S HMPTEXT="</results>" D ADD(HMPTEXT)
"RTN","HMPROS2",142,0)
 Q
"RTN","HMPROS2",143,0)
 ;
"RTN","HMPROS2",144,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPROS2",145,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPROS2",146,0)
 S @HMP@(HMPI)=X
"RTN","HMPROS2",147,0)
 Q
"RTN","HMPROS2",148,0)
 ;
"RTN","HMPROS2",149,0)
GETROS(HMP,HMPFILT) ;; Get all Rosters
"RTN","HMPROS2",150,0)
 ;; Input - None
"RTN","HMPROS2",151,0)
 N HMPLIST,HMPTYPE,VPERR,HMPI,HMPRNAME,HMPY,HMPOP,HMPTAG,HMPLAB,HMPNLIST,BEG,DOB,END,GENDER,ICN,NAME,HMPACT,HMPC
"RTN","HMPROS2",152,0)
 N HMPCIEN,HMPDNAME,HMPDOB,HMPIII,HMPINM,HMPLIEN,HMPNAME,HMPOIEN,HMPONAME,HMPOWNID,HMPOWNNM,HMPPAT,HMPPIEN,HMPNME,HMPCNT
"RTN","HMPROS2",153,0)
 N HMPSRCDN,HMPCID,HMPTEXT,HMPTIEN,HMPTLST,HMPVER,HMPWIEN,HMPWNAME,HMPPNME,HMPRCNT,HMPSRCID,X,Y
"RTN","HMPROS2",154,0)
 K HMPLIST
"RTN","HMPROS2",155,0)
 S (HMPLIST,HMPNAME,HMPTYPE,HMPOP,HMPLIST2)="",HMPI=0,HMPIEN=0
"RTN","HMPROS2",156,0)
 S HMPACT="I 1"
"RTN","HMPROS2",157,0)
 K ^TMP($J,"HMPROSTR")
"RTN","HMPROS2",158,0)
 S HMP=$NA(^TMP($J,"HMPROSTR"))
"RTN","HMPROS2",159,0)
 S HMPVER="<results version='"_$P($T(HMPROS2+1),";",3)_"'>"
"RTN","HMPROS2",160,0)
 D ADD(HMPVER)
"RTN","HMPROS2",161,0)
 S HMPNAME="",HMPFILT=$G(HMPFILT)
"RTN","HMPROS2",162,0)
 I HMPFILT'="" S X=HMPFILT X ^%ZOSF("UPPERCASE") S HMPFILT=X,HMPNAME="",HMPACT="I HMPNAME[HMPFILT"
"RTN","HMPROS2",163,0)
 F  S HMPNAME=$O(^HMPROSTR("B",HMPNAME)) Q:HMPNAME=""  S X=HMPNAME X ^%ZOSF("UPPERCASE") X HMPACT D
"RTN","HMPROS2",164,0)
 . S HMPIEN=0 F  S HMPIEN=$O(^HMPROSTR("B",HMPNAME,HMPIEN)) Q:HMPIEN'>0  I '$P(^HMPROSTR(HMPIEN,0),"^",3)!($P($G(^HMPROSTR(HMPIEN,3)),"^",1)']"") X HMPACT I  D 
"RTN","HMPROS2",165,0)
 . . S HMPONAME=$$ESC^HMPD(HMPNAME),HMPDNAME=$P(^HMPROSTR(HMPIEN,0),"^",2),HMPDNAME=$$ESC^HMPD(HMPDNAME)
"RTN","HMPROS2",166,0)
 . . S HMPOWNID=$P(^HMPROSTR(HMPIEN,0),"^",4),HMPOWNNM=$P($G(^VA(200,HMPOWNID,0)),"^",1),HMPOWNNM=$$ESC^HMPD(HMPOWNNM)
"RTN","HMPROS2",167,0)
 . . S HMPTEXT="<roster ien='"_HMPIEN_"'  ownername='"_HMPOWNNM_"'  ownerid='"_HMPOWNID_"'>" D ADD(HMPTEXT)
"RTN","HMPROS2",168,0)
 . . S HMPTEXT="<rosterName>"_HMPONAME_"</rosterName>" D ADD(HMPTEXT)
"RTN","HMPROS2",169,0)
 . . S HMPTEXT="<displayName>"_HMPDNAME_"</displayName>" D ADD(HMPTEXT)
"RTN","HMPROS2",170,0)
 . . S HMPTEXT="<sources>" D ADD(HMPTEXT)
"RTN","HMPROS2",171,0)
 . . N HMPII,HMPAS S HMPII=0 F  S HMPII=$O(^HMPROSTR(HMPIEN,1,"AS",HMPII)) Q:HMPII'>0  S HMPAS=$O(^HMPROSTR(HMPIEN,1,"AS",HMPII,0)) D
"RTN","HMPROS2",172,0)
 . . . N HMPSEQ,HMPSRC,HMPTYP,HMPOP,HMPY,HMPSRCNM
"RTN","HMPROS2",173,0)
 . . . S HMPY=$G(^HMPROSTR(HMPIEN,1,HMPAS,0))
"RTN","HMPROS2",174,0)
 . . . S HMPSRC=$P($P(HMPY,"^",2),";",2)
"RTN","HMPROS2",175,0)
 . . . S HMPSEQ=HMPII
"RTN","HMPROS2",176,0)
 . . . I HMPSRC["SC(" S HMPSRCNM="Clinic"
"RTN","HMPROS2",177,0)
 . . . I HMPSRC["DIC(42," S HMPSRCNM="Ward"
"RTN","HMPROS2",178,0)
 . . . I HMPSRC["DPT(" S HMPSRCNM="Patient"
"RTN","HMPROS2",179,0)
 . . . I HMPSRC["SCTM" S HMPSRCNM="PCMM Team"
"RTN","HMPROS2",180,0)
 . . . I HMPSRC["OR(100.21" S HMPSRCNM="OE/RR"
"RTN","HMPROS2",181,0)
 . . . I HMPSRC["HMPROSTR" S HMPSRCNM="HMP Roster"
"RTN","HMPROS2",182,0)
 . . . I HMPSRC["DIC(45.7" S HMPSRCNM="Specialty"
"RTN","HMPROS2",183,0)
 . . . I HMPSRC["VA(200," S HMPSRCNM="Provider"
"RTN","HMPROS2",184,0)
 . . . I HMPSRC["PXRM(810.4," S HMPSRCNM="PXRM"
"RTN","HMPROS2",185,0)
 . . . S HMPSRCID=+$P(HMPY,"^",2),HMPSRCDN="^"_HMPSRC_HMPSRCID_",0)",HMPINM=$P(@HMPSRCDN,"^",1),HMPINM=$$ESC^HMPD(HMPINM)
"RTN","HMPROS2",186,0)
 . . . S HMPOP=$S($P(HMPY,"^",3)=0:"Union",$P(HMPY,"^",3)=1:"Intersection",$P(HMPY,"^",3)=2:"Difference",1:"Invalid")
"RTN","HMPROS2",187,0)
 . . . S HMPTEXT="<source sequence='"_HMPSEQ_"'  type='"_HMPSRCNM_"'  name='"_HMPINM_"'  id='"_HMPSRCID_"'  operation='"_HMPOP_"' />" D ADD(HMPTEXT)
"RTN","HMPROS2",188,0)
 . . S HMPTEXT="</sources>" D ADD(HMPTEXT)
"RTN","HMPROS2",189,0)
 . . S HMPTEXT="</roster>" D ADD(HMPTEXT)
"RTN","HMPROS2",190,0)
 S HMPTEXT="</results>" D ADD(HMPTEXT)
"RTN","HMPROS2",191,0)
 Q
"RTN","HMPROS2",192,0)
 ;
"RTN","HMPROS2",193,0)
MULTI ;;Process multiple rosters
"RTN","HMPROS2",194,0)
 I $O(^HMPROSTR("AC",HMPOWNER,0))'>0 S VPERR="1^EMPTY ROSTER",@HMP@(1)=VPERR Q
"RTN","HMPROS2",195,0)
 S HMPRCNT=0,HMPI=0,HMPII=0,HMPIII=0
"RTN","HMPROS2",196,0)
 S HMPVER="<results version='"_$P($T(HMPROS2+1),";",3)_"'>"
"RTN","HMPROS2",197,0)
 D ADD(HMPVER)
"RTN","HMPROS2",198,0)
 F  S HMPIEN=$O(^HMPROSTR("AC",HMPOWNER,HMPIEN)) Q:HMPIEN'>0  D
"RTN","HMPROS2",199,0)
 .S HMPRNAME=$P(^HMPROSTR(HMPIEN,0),"^",1),HMPDNAME=$P(^HMPROSTR(HMPIEN,0),"^",2)
"RTN","HMPROS2",200,0)
 .S HMPTEXT="<roster ien='"_HMPIEN_"'>" D ADD(HMPTEXT)
"RTN","HMPROS2",201,0)
 .S HMPTEXT="<rosterName>"_HMPRNAME_"</rosterName>" D ADD(HMPTEXT)
"RTN","HMPROS2",202,0)
 .S HMPTEXT="<displayName>"_HMPDNAME_"</displayName>" D ADD(HMPTEXT)
"RTN","HMPROS2",203,0)
 . S HMPIII=0 F  S HMPIII=$O(^HMPROSTR(HMPIEN,1,HMPIII)) Q:HMPIII'>0  D
"RTN","HMPROS2",204,0)
 .. S HMPY=$G(^HMPROSTR(HMPIEN,1,HMPIII,0))
"RTN","HMPROS2",205,0)
 .. S HMPOP=$P(HMPY,"^",3)
"RTN","HMPROS2",206,0)
 .. S HMPFILT=$P(HMPY,"^",4)
"RTN","HMPROS2",207,0)
 .. S HMPTAG=$P($P(HMPY,"^",2),";",2)
"RTN","HMPROS2",208,0)
 .. S HMPLAB=""
"RTN","HMPROS2",209,0)
 .. I HMPTAG["SC(" S HMPLAB="CLIN"
"RTN","HMPROS2",210,0)
 .. I HMPTAG["DIC(42" S HMPLAB="WARD"
"RTN","HMPROS2",211,0)
 .. I HMPTAG["DPT" S HMPLAB="PAT"
"RTN","HMPROS2",212,0)
 .. I HMPTAG["SCTM" S HMPLAB="PCMM"
"RTN","HMPROS2",213,0)
 .. I HMPTAG["OR(100.21" S HMPLAB="CPRS"
"RTN","HMPROS2",214,0)
 .. I HMPTAG["HMPROSTR" S HMPLAB="ROST"
"RTN","HMPROS2",215,0)
 .. I HMPTAG["DIC(45.7" S HMPLAB="SPEC"
"RTN","HMPROS2",216,0)
 .. I HMPTAG["VA(200" S HMPLAB="PROV"
"RTN","HMPROS2",217,0)
 .. I HMPTAG["PXRM(810.4," S HMPLAB="PXRM"
"RTN","HMPROS2",218,0)
 .. I HMPLAB="" S VPERR="1^INVALID FILE TYPE" Q
"RTN","HMPROS2",219,0)
 .. D @HMPLAB
"RTN","HMPROS2",220,0)
 .. S HMPLAB=$S(HMPOP=0:"UNION",HMPOP=1:"INTER",1:"DIFF")
"RTN","HMPROS2",221,0)
 .. D @HMPLAB
"RTN","HMPROS2",222,0)
 . D FORMAT
"RTN","HMPROS2",223,0)
 . I $O(HMPLIST(0))'>0 S VPERR="1^EMPTY ROSTER",@HMP@(1)=VPERR Q
"RTN","HMPROS2",224,0)
 . D ENROS^HMPFPTC(.ZZ,HMPLIST) ;added 5/17/12 grr to check patient sensitivity
"RTN","HMPROS2",225,0)
 . I $D(HMPOUT) K HMPOUT M @HMP=HMPLIST Q
"RTN","HMPROS2",226,0)
 S HMPTEXT="</results>" D ADD(HMPTEXT)
"RTN","HMPROS2",227,0)
 Q
"RTN","HMPROS2",228,0)
 ;;
"RTN","HMPROS2",229,0)
FORMAT ;;
"RTN","HMPROS2",230,0)
 D ADD("<patients>")
"RTN","HMPROS2",231,0)
 K HMPII S HMPII=0 F  S HMPII=$O(HMPLIST(HMPII)) Q:HMPII'>0  D
"RTN","HMPROS2",232,0)
 . N HMPY
"RTN","HMPROS2",233,0)
 . S DFN=HMPII,HMPY=^DPT(DFN,0)
"RTN","HMPROS2",234,0)
 . S ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPROS2",235,0)
 . S NAME=$P(HMPY,"^",1),GENDER=$P(HMPY,"^",2),DOB=$P(HMPY,"^",3),HMPDOB=$$FMTHL7^XLFDT(DOB),SSN=$P(HMPY,"^",9)
"RTN","HMPROS2",236,0)
 . S Y="<patient name='"_NAME_"' gender='"_GENDER_"' dob='"_HMPDOB_"' ssn='"_SSN_"' id='"_DFN_$S(ICN:"' icn='"_ICN,1:"")_"' />" D ADD(Y)
"RTN","HMPROS2",237,0)
 D ADD("</patients>")
"RTN","HMPROS2",238,0)
 D ADD("</roster>")
"RTN","HMPROS2",239,0)
 K Y
"RTN","HMPROS2",240,0)
 Q
"RTN","HMPROS2",241,0)
 ;;
"RTN","HMPROS3")
0^108^B85901883
"RTN","HMPROS3",1,0)
HMPROS3 ;SLC/GRR -- Roster Management ;4/24/2012
"RTN","HMPROS3",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;AUG 17, 2011;Build 53
"RTN","HMPROS3",3,0)
PREVIEW(HMP,HMPARRAY) ;; Previews what a roster would look like as defined
"RTN","HMPROS3",4,0)
 ;;  Called by the GUI Roster Builder
"RTN","HMPROS3",5,0)
 ;; Input - HMPARRAY - contains roster data entered thru GUI
"RTN","HMPROS3",6,0)
 K HMPLIST,HMPLIST2
"RTN","HMPROS3",7,0)
 N %,BEG,DA,DIDEL,DIE,DOB,SSN,DR,END,GENDER,ICN,NAME,HMPC,HMPCIEN,HMPDIS,HMPDNAME,HMPDOB,HMPDT,HMPIII,HMPLIEN,HMPOIEN,HMPOWNID
"RTN","HMPROS3",8,0)
 N HMPOWNNM,HMPPAT,HMPPIEN,HMPPNME,HMPRCNT,HMPRID,HMPTEXT,HMPTIEN,HMPLST,HMPVAR,HMPVER,HMPWIEN,HMPWNAME,HMPZ,X,Y
"RTN","HMPROS3",9,0)
 N HMPFILT,HMPI,HMPNLIST,HMPSRCID,HMPTAG,HMPTLST,HMPY,HMPTYPE,ZZ
"RTN","HMPROS3",10,0)
 N HMPSYS S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPROS3",11,0)
 S (HMPLIST,HMPFILT,HMPTYPE,HMPOP,HMPLIST2,VPERR)="",HMPI=0
"RTN","HMPROS3",12,0)
 S HMP=$NA(^TMP($J,"HMPROSTR")) ; kcm -- moved this here so HMP gets defined
"RTN","HMPROS3",13,0)
 K ^TMP($J,"HMPROSTR")
"RTN","HMPROS3",14,0)
 I $O(HMPARRAY(""))="" S @HMP@(1)="0^No roster data passed" Q
"RTN","HMPROS3",15,0)
 Q:'$$VALIDATE
"RTN","HMPROS3",16,0)
 D NOW^%DTC S HMPDT=%
"RTN","HMPROS3",17,0)
 S HMPZ="" S HMPZ=$O(HMPARRAY(HMPZ)) I HMPZ="" Q
"RTN","HMPROS3",18,0)
 S HMPNLIST=""
"RTN","HMPROS3",19,0)
 S HMPRNAME=$P(HMPARRAY(HMPZ),"^",1),HMPRNAME=$$ESC^HMPD(HMPRNAME)
"RTN","HMPROS3",20,0)
 S HMPDNAME=$P(HMPARRAY(HMPZ),"^",3),HMPDNAME=$$ESC^HMPD(HMPDNAME)
"RTN","HMPROS3",21,0)
 S HMPDIS=$P(HMPARRAY(HMPZ),"^",4)
"RTN","HMPROS3",22,0)
 S HMPOWNID=$P(HMPARRAY(HMPZ),"^",5)
"RTN","HMPROS3",23,0)
 S HMPOWNNM=$P($G(^VA(200,HMPOWNID,0)),"^",1),HMPOWNNM=$$ESC^HMPD(HMPOWNNM)
"RTN","HMPROS3",24,0)
 F  S HMPZ=$O(HMPARRAY(HMPZ)) Q:HMPZ=""  D
"RTN","HMPROS3",25,0)
 . S HMPY=HMPARRAY(HMPZ)
"RTN","HMPROS3",26,0)
 . S HMPOP=$P(HMPY,"^",2)
"RTN","HMPROS3",27,0)
 . S HMPTAG=$P(HMPY,"^",1)
"RTN","HMPROS3",28,0)
 . S HMPLAB=""
"RTN","HMPROS3",29,0)
 . I HMPTAG["Clinic" S HMPLAB="CLIN"
"RTN","HMPROS3",30,0)
 . I HMPTAG["Ward" S HMPLAB="WARD"
"RTN","HMPROS3",31,0)
 . I HMPTAG["Patient" S HMPLAB="PAT"
"RTN","HMPROS3",32,0)
 . I HMPTAG["PCMM Team" S HMPLAB="PCMM"
"RTN","HMPROS3",33,0)
 . I HMPTAG["OE/RR" S HMPLAB="CPRS"
"RTN","HMPROS3",34,0)
 . I HMPTAG["HMP Roster" S HMPLAB="ROST"
"RTN","HMPROS3",35,0)
 . I HMPTAG["Specialty" S HMPLAB="SPEC"
"RTN","HMPROS3",36,0)
 . I HMPTAG["Provider" S HMPLAB="PROV"
"RTN","HMPROS3",37,0)
 . I HMPTAG["PXRM" S HMPLAB="PXRM"
"RTN","HMPROS3",38,0)
 . I HMPLAB="" S @HMP@(1)="1^INVALID FILE TYPE" Q
"RTN","HMPROS3",39,0)
 . D @HMPLAB
"RTN","HMPROS3",40,0)
 . S HMPLAB=$S(HMPOP="UNION":"UNION",HMPOP="Intersection":"INTER",1:"DIFF")
"RTN","HMPROS3",41,0)
 . S HMPNLIST=""
"RTN","HMPROS3",42,0)
 . D @HMPLAB
"RTN","HMPROS3",43,0)
 I $D(HMPOUT) K HMPOUT M HMPLIST2=HMPLIST Q
"RTN","HMPROS3",44,0)
 I $O(HMPLIST(0))'>0 S @HMP@(1)="1^EMPTY ROSTER" Q
"RTN","HMPROS3",45,0)
 D SEND
"RTN","HMPROS3",46,0)
 D ENROS^HMPFPTC(.ZZ,HMPLIST) ;added 5/17/12 grr to check patient sensitivity
"RTN","HMPROS3",47,0)
 Q
"RTN","HMPROS3",48,0)
 ;
"RTN","HMPROS3",49,0)
CLIN ;Process patients for this clinic.  Select all if filter is null
"RTN","HMPROS3",50,0)
 K HMPLIST2,HMPOUT S HMPLIST2=""
"RTN","HMPROS3",51,0)
 I '$D(DT) S DT=$$DT^XLFDT()
"RTN","HMPROS3",52,0)
 S BEG=DT,END=$S(HMPFILT="T":DT+.24,1:9999999+.24),HMPIII=BEG
"RTN","HMPROS3",53,0)
 S HMPCIEN=+$P(HMPY,"^",3) F  S HMPIII=$O(^SC(HMPCIEN,"S",HMPIII)) Q:HMPIII'>0!(HMPIII>END)  D
"RTN","HMPROS3",54,0)
 . S HMPII=0 F  S HMPII=$O(^SC(HMPCIEN,"S",HMPIII,1,HMPII)) Q:HMPII'>0  S DFN=$P($G(^SC(HMPCIEN,"S",HMPIII,1,HMPII,0)),"^",1) I DFN>0 D
"RTN","HMPROS3",55,0)
 . .S HMPLIST2(DFN)=""
"RTN","HMPROS3",56,0)
 Q
"RTN","HMPROS3",57,0)
 ;
"RTN","HMPROS3",58,0)
WARD ;Process patients for this ward
"RTN","HMPROS3",59,0)
 K HMPLIST2,HMPOUT S HMPLIST2=""
"RTN","HMPROS3",60,0)
 S HMPWIEN=+$P(HMPY,"^",3),HMPWNAME=$P($G(^DIC(42,HMPWIEN,0)),"^",1)
"RTN","HMPROS3",61,0)
 S HMPIII=0 F  S HMPIII=$O(^DGPM("CN",HMPWNAME,HMPIII)) Q:HMPIII'>0  D
"RTN","HMPROS3",62,0)
 . S DFN=$P($G(^DGPM(HMPIII,0)),"^",3),HMPLIST2(DFN)=""
"RTN","HMPROS3",63,0)
 Q
"RTN","HMPROS3",64,0)
 ;
"RTN","HMPROS3",65,0)
PAT ;Process patient from Patient file Source
"RTN","HMPROS3",66,0)
 K HMPLIST2,HMPOUT S HMPLIST2=""
"RTN","HMPROS3",67,0)
 S DFN=+$P(HMPY,"^",3),HMPLIST2(DFN)=""
"RTN","HMPROS3",68,0)
 Q
"RTN","HMPROS3",69,0)
 ;
"RTN","HMPROS3",70,0)
PCMM ;Process patients from a PCMM team
"RTN","HMPROS3",71,0)
 K HMPLIST2,HMPOUT S HMPLIST2=""
"RTN","HMPROS3",72,0)
 S HMPTIEN=+$P(HMPY,"^",3),VPERR="",HMPTLST=""
"RTN","HMPROS3",73,0)
 D PTTM^SCAPMC(HMPTIEN,,"HMPTLST",VPERR)
"RTN","HMPROS3",74,0)
 S HMPIII="" F  S HMPIII=$O(HMPTLST(HMPIII)) Q:HMPIII'>0  S DFN=$P(HMPTLST(HMPIII),"^",1) S HMPLIST2(DFN)=""
"RTN","HMPROS3",75,0)
 Q
"RTN","HMPROS3",76,0)
 ;
"RTN","HMPROS3",77,0)
CPRS ;Process patients from CPRS Lists
"RTN","HMPROS3",78,0)
 K HMPLIST2,HMPOUT S HMPLIST2=""
"RTN","HMPROS3",79,0)
 S HMPOIEN=+$P(HMPY,"^",3),VPERR=""
"RTN","HMPROS3",80,0)
 S HMPIII=0 F  S HMPIII=$O(^OR(100.21,HMPOIEN,10,HMPIII)) Q:HMPIII'>0  S DFN=$P(^OR(100.21,HMPOIEN,10,HMPIII,0),";",1) S HMPLIST2(DFN)=""
"RTN","HMPROS3",81,0)
 Q
"RTN","HMPROS3",82,0)
 ;
"RTN","HMPROS3",83,0)
ROST ;Process patients from selected roster
"RTN","HMPROS3",84,0)
 N HMP,HMPIEN,VPERR
"RTN","HMPROS3",85,0)
 S HMPIEN=+$P(HMPY,"^",3),VPERR="",HMPOUT=1
"RTN","HMPROS3",86,0)
 D COMPILE^HMPROS2(.HMP,HMPIEN,"")
"RTN","HMPROS3",87,0)
 M HMPLIST=HMPLIST2
"RTN","HMPROS3",88,0)
 K HMPOUT
"RTN","HMPROS3",89,0)
 Q
"RTN","HMPROS3",90,0)
 ;
"RTN","HMPROS3",91,0)
SPEC ;Process patients with selected Treating Specialty
"RTN","HMPROS3",92,0)
 K HMPLIST2,HMPOUT S HMPLIST2=""
"RTN","HMPROS3",93,0)
 S HMPOIEN=+$P(HMPY,"^",3),VPERR=""
"RTN","HMPROS3",94,0)
 N DFN S DFN=0 F  S DFN=$O(^DPT("ATR",HMPOIEN,DFN)) Q:DFN'>0  S HMPLIST2(DFN)=""
"RTN","HMPROS3",95,0)
 Q
"RTN","HMPROS3",96,0)
 ;
"RTN","HMPROS3",97,0)
PROV ;Process patients for selected provider
"RTN","HMPROS3",98,0)
 K HMPLIST2,HMPOUT S HMPLIST2=""
"RTN","HMPROS3",99,0)
 S HMPPIEN=+$P(HMPY,"^",3),VPERR=""
"RTN","HMPROS3",100,0)
 N DFN S DFN=0 F  S DFN=$O(^DPT("APR",HMPPIEN,DFN)) Q:DFN'>0  S HMPLIST2(DFN)=""
"RTN","HMPROS3",101,0)
 Q
"RTN","HMPROS3",102,0)
 ;
"RTN","HMPROS3",103,0)
PXRM ;Process patients for selected panel
"RTN","HMPROS3",104,0)
 K HMPLIST2,HMPOUT,HMPPAT,HMPRIEN S HMPLIST2=""
"RTN","HMPROS3",105,0)
 S HMPPIEN=+$P(HMPY,"^",3),VPERR="",HMPLIEN=$P($G(^PXRM(810.4,HMPPIEN,0)),"^",1) I HMPLIEN="" S @HMP@(1)="Invalid PXRM" Q
"RTN","HMPROS3",106,0)
 ;S HMPRIEN=$O(^HMPROSTR("B",HMPRNAME,"")) I HMPRIEN'>0 S @HMP@(1)="Invalid PXRM" Q
"RTN","HMPROS3",107,0)
 ;S HMPPNME=$P(^HMPROSTR(HMPRIEN,0),"^",6)
"RTN","HMPROS3",108,0)
 S HMPC=HMPPIEN
"RTN","HMPROS3",109,0)
 S HMPPAT="" D RUNLIST^HMPROS5(.HMPPAT,HMPPIEN,HMPRNAME,0,1)
"RTN","HMPROS3",110,0)
 S HMPII=0 F  S HMPII=$O(HMPPAT(HMPC,HMPII)) Q:HMPII'>0  S DFN=HMPPAT(HMPC,HMPII),HMPLIST2(DFN)=""
"RTN","HMPROS3",111,0)
 Q
"RTN","HMPROS3",112,0)
 ;
"RTN","HMPROS3",113,0)
UNION ;Add to existing list
"RTN","HMPROS3",114,0)
 S HMPII=0 F  S HMPII=$O(HMPLIST2(HMPII)) Q:HMPII'>0  S HMPLIST(HMPII)=""
"RTN","HMPROS3",115,0)
 Q
"RTN","HMPROS3",116,0)
 ;
"RTN","HMPROS3",117,0)
INTER ;Intersect with existing list
"RTN","HMPROS3",118,0)
 S HMPII=0 F  S HMPII=$O(HMPLIST(HMPII)) Q:HMPII'>0  D
"RTN","HMPROS3",119,0)
 . I '$D(HMPLIST2(HMPII)) K HMPLIST(HMPII)
"RTN","HMPROS3",120,0)
 Q
"RTN","HMPROS3",121,0)
 ;
"RTN","HMPROS3",122,0)
DIFF ;Remove patients from this source that we have so far or add new one
"RTN","HMPROS3",123,0)
 S HMPII=0 F  S HMPII=$O(HMPLIST2(HMPII)) Q:HMPII'>0  D
"RTN","HMPROS3",124,0)
 . I '$D(HMPLIST(HMPII)) S HMPLIST(HMPII)=""
"RTN","HMPROS3",125,0)
 . E  K HMPLIST(HMPII)
"RTN","HMPROS3",126,0)
 Q
"RTN","HMPROS3",127,0)
 ;
"RTN","HMPROS3",128,0)
SEND ;send pending rosters.  Called through RPC
"RTN","HMPROS3",129,0)
 S HMPRCNT=0,HMPI=0,HMPII=0
"RTN","HMPROS3",130,0)
 S HMPVER="<results version='"_$P($T(HMPROS3+1),";",3)_"'>"
"RTN","HMPROS3",131,0)
 D ADD(HMPVER)
"RTN","HMPROS3",132,0)
 ;S HMPRNAME=$P(^HMPROSTR(HMPIEN,0),"^",1),HMPDNAME=$P(^HMPROSTR(HMPIEN,0),"^",2)
"RTN","HMPROS3",133,0)
 S HMPTEXT="<roster ien='' ownername='"_HMPOWNNM_"'  ownerid='"_HMPOWNID_"'>" D ADD(HMPTEXT)
"RTN","HMPROS3",134,0)
 S HMPTEXT="<rosterName>"_HMPRNAME_"</rosterName>" D ADD(HMPTEXT)
"RTN","HMPROS3",135,0)
 S HMPTEXT="<displayName>"_HMPDNAME_"</displayName>" D ADD(HMPTEXT)
"RTN","HMPROS3",136,0)
 D ADD("<patients>")
"RTN","HMPROS3",137,0)
 K HMPII S HMPII=0 F  S HMPII=$O(HMPLIST(HMPII)) Q:HMPII'>0  D 
"RTN","HMPROS3",138,0)
 . S DFN=HMPII
"RTN","HMPROS3",139,0)
 . S ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPROS3",140,0)
 . S NAME=$P(^DPT(DFN,0),"^",1),GENDER=$P(^DPT(DFN,0),"^",2),SSN=$P(^DPT(DFN,0),"^",9),DOB=$P(^DPT(DFN,0),"^",3),HMPDOB=$$FMTHL7^XLFDT(DOB)
"RTN","HMPROS3",141,0)
 . S Y="<patient name='"_NAME_"' gender='"_GENDER_"' dob='"_HMPDOB_"' ssn='"_SSN_"' id='"_DFN_$S(ICN:"' icn='"_ICN,1:"")_"' />" D ADD(Y)
"RTN","HMPROS3",142,0)
 D ADD("</patients>")
"RTN","HMPROS3",143,0)
 D ADD("</roster>")
"RTN","HMPROS3",144,0)
 S HMPTEXT="</results>" D ADD(HMPTEXT)
"RTN","HMPROS3",145,0)
 Q
"RTN","HMPROS3",146,0)
 ;
"RTN","HMPROS3",147,0)
 ;
"RTN","HMPROS3",148,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPROS3",149,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPROS3",150,0)
 S @HMP@(HMPI)=X
"RTN","HMPROS3",151,0)
 Q
"RTN","HMPROS3",152,0)
 ;
"RTN","HMPROS3",153,0)
UPDATE(HMP,HMPARRAY) ;;Update Roster data with data from GUI
"RTN","HMPROS3",154,0)
 N HMPZ,HMPRNAME,HMPID,HMPDNAME,HMPDIS,HMPRID,FDA,HMPOWNID,HMPSRCID,HMPOP,HMPSRCNM,HMPLAB,HMPVAR,BEFORE,AFTER
"RTN","HMPROS3",155,0)
 N HMPSYS S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPROS3",156,0)
 S HMP=$NA(^TMP($J,"HMPROSTR"))
"RTN","HMPROS3",157,0)
 Q:'$$VALIDATE
"RTN","HMPROS3",158,0)
 D NOW^%DTC S HMPDT=% ;added 5/11/12 grr for tracing
"RTN","HMPROS3",159,0)
 S HMPZ="" S HMPZ=$O(HMPARRAY(HMPZ)) Q:HMPZ=""
"RTN","HMPROS3",160,0)
 S HMPRNAME=$P(HMPARRAY(HMPZ),"^",1),HMPRID=$P(HMPARRAY(HMPZ),"^",2),HMPDNAME=$P(HMPARRAY(HMPZ),"^",3),HMPDIS=$P(HMPARRAY(HMPZ),"^",4),HMPOWNID=$P(HMPARRAY(HMPZ),"^",5)
"RTN","HMPROS3",161,0)
 D:HMPRID>0 BEFORE
"RTN","HMPROS3",162,0)
 I HMPRID="" D ADDROS
"RTN","HMPROS3",163,0)
 I '$D(^HMPROSTR(HMPRID,0)) S @HMP@(1)="RosterID passed was invalid" Q
"RTN","HMPROS3",164,0)
 S FDA(1,800001.2,""_HMPRID_","_"",.01)=HMPRNAME
"RTN","HMPROS3",165,0)
 S FDA(1,800001.2,""_HMPRID_","_"",.02)=HMPDNAME
"RTN","HMPROS3",166,0)
 S FDA(1,800001.2,""_HMPRID_","_"",.03)=HMPDIS
"RTN","HMPROS3",167,0)
 S FDA(1,800001.2,""_HMPRID_","_"",.04)=HMPOWNID
"RTN","HMPROS3",168,0)
 S FDA(1,800001.2,""_HMPRID_","_"",99)=HMPDT
"RTN","HMPROS3",169,0)
 D UPDATE^DIE("","FDA(1)")
"RTN","HMPROS3",170,0)
 K ^HMPROSTR(HMPRID,1),FDA
"RTN","HMPROS3",171,0)
 F  S HMPZ=$O(HMPARRAY(HMPZ)) Q:HMPZ=""  D
"RTN","HMPROS3",172,0)
 . S HMPY=HMPARRAY(HMPZ)
"RTN","HMPROS3",173,0)
 . S HMPSRCID=$P(HMPY,"^",3)
"RTN","HMPROS3",174,0)
 . S HMPOP=$P(HMPY,"^",2)
"RTN","HMPROS3",175,0)
 . S HMPSRCNM=$$UP^XLFSTR($P(HMPY,"^",1))
"RTN","HMPROS3",176,0)
 . S HMPLAB=""
"RTN","HMPROS3",177,0)
 . I HMPSRCNM["CLINIC" S HMPVAR="SC("
"RTN","HMPROS3",178,0)
 . I HMPSRCNM["WARD" S HMPVAR="DIC(42,"
"RTN","HMPROS3",179,0)
 . I HMPSRCNM["PATIENT" S HMPVAR="DPT("
"RTN","HMPROS3",180,0)
 . I HMPSRCNM["PCMM TEAM" S HMPVAR="SCTM(404.51,"
"RTN","HMPROS3",181,0)
 . I HMPSRCNM["OE/RR" S HMPVAR="OR(100.21,"
"RTN","HMPROS3",182,0)
 . I HMPSRCNM["HMP ROSTER" S HMPVAR="HMPROSTR("
"RTN","HMPROS3",183,0)
 . I HMPSRCNM["SPECIALTY" S HMPVAR="DIC(45.7,"
"RTN","HMPROS3",184,0)
 . I HMPSRCNM["PROVIDER" S HMPVAR="VA(200,"
"RTN","HMPROS3",185,0)
 . I HMPSRCNM["PXRM" S HMPVAR="PXRM(810.4,"
"RTN","HMPROS3",186,0)
 . S FDA(1,800001.21,"+1,"_HMPRID_",",.01)=HMPZ
"RTN","HMPROS3",187,0)
 . S FDA(1,800001.21,"+1,"_HMPRID_",",.02)=HMPSRCID_";"_HMPVAR
"RTN","HMPROS3",188,0)
 . S FDA(1,800001.21,"+1,"_HMPRID_",",.03)=$S(HMPOP="UNION":0,HMPOP="INTERSECTION":1,1:2)
"RTN","HMPROS3",189,0)
 . I HMPSRCNM="PXRM" S FDA(1,800001.21,"+1,"_HMPRID_",",.06)="UPDATE TEST HMP ROSTER"
"RTN","HMPROS3",190,0)
 . D UPDATE^DIE("","FDA(1)")
"RTN","HMPROS3",191,0)
 ;D GET^HMPROS6(HMPRID)
"RTN","HMPROS3",192,0)
 S FILTER("domain")="roster",FILTER("id")=HMPRID
"RTN","HMPROS3",193,0)
 D GET^HMPEF(.HMP,.FILTER)
"RTN","HMPROS3",194,0)
 S RESULT=$$COMPARE(.BEFORE,.AFTER)
"RTN","HMPROS3",195,0)
 I RESULT=1 D POSTX^HMPEVNT("roster",HMPRID) ;if RESULT is 1 means roster has changed
"RTN","HMPROS3",196,0)
 Q
"RTN","HMPROS3",197,0)
 ;
"RTN","HMPROS3",198,0)
ADDROS ;
"RTN","HMPROS3",199,0)
 N DIC,DLAYGO,X,Y
"RTN","HMPROS3",200,0)
 S DIC="^HMPROSTR(",DIC(0)="LQ",DLAYGO=800001.2,X=HMPRNAME D ^DIC S HMPRID=+Y
"RTN","HMPROS3",201,0)
 Q
"RTN","HMPROS3",202,0)
 ;
"RTN","HMPROS3",203,0)
DELROS(HMP,HMPIEN) ;
"RTN","HMPROS3",204,0)
 S HDUZ(0)=DUZ(0),DUZ(0)="@",DIK="^HMPROSTR(",DA=HMPIEN,DIDEL=1 D ^DIK S DUZ(0)=HDUZ(0),HMP="Roster Deleted!"
"RTN","HMPROS3",205,0)
 K HDUZ,DIK,DIDEL
"RTN","HMPROS3",206,0)
 Q
"RTN","HMPROS3",207,0)
 ;
"RTN","HMPROS3",208,0)
COMPARE(OLD,NEW) ;
"RTN","HMPROS3",209,0)
 N HMPII,DIFF
"RTN","HMPROS3",210,0)
 S HMPII=0 F  S HMPII=$O(OLD(HMPII)) Q:HMPII'>0  D
"RTN","HMPROS3",211,0)
 . I '$D(NEW(HMPII)) S NEW(HMPII)=""
"RTN","HMPROS3",212,0)
 . E  K NEW(HMPII)
"RTN","HMPROS3",213,0)
 S DIFF=$S($O(NEW(0))'>0:0,1:1)
"RTN","HMPROS3",214,0)
 Q DIFF
"RTN","HMPROS3",215,0)
 ;
"RTN","HMPROS3",216,0)
VALIDATE() ;Will verify HMPARRAY entries are all valid
"RTN","HMPROS3",217,0)
 N I,OUT,OK
"RTN","HMPROS3",218,0)
 S I="",OK=0,OUT=0
"RTN","HMPROS3",219,0)
 F  S I=$O(HMPARRAY(I)) Q:I=""  D  Q:OUT
"RTN","HMPROS3",220,0)
 . I $L(HMPARRAY(I),"^")'=5&($L(HMPARRAY(I),"^")'=3) S @HMP@(1)="Parameter format invalid: "_HMPARRAY(I) S OK=0,OUT=1 Q
"RTN","HMPROS3",221,0)
 . I $L(HMPARRAY(I),"^")=3 D  Q:OUT
"RTN","HMPROS3",222,0)
 . . I $P(HMPARRAY(I),"^",2)="UNION"!($P(HMPARRAY(I),"^",2)="INTERSECTION")!($P(HMPARRAY(I),"^",2)="DIFFERENCE") S OK=1,OUT=0
"RTN","HMPROS3",223,0)
 . . E  S OK=0,OUT=1,@HMP@(1)="Parameter format invalid: "_HMPARRAY(I) Q
"RTN","HMPROS3",224,0)
 . . I $P(HMPARRAY(I),"^",3)>0 S OK=1,OUT=0
"RTN","HMPROS3",225,0)
 . . E  S OK=0,OUT=1,@HMP@(1)="Parameter format invalid: "_HMPARRAY(I) Q
"RTN","HMPROS3",226,0)
 Q OK
"RTN","HMPROS3",227,0)
 ;
"RTN","HMPROS3",228,0)
BEFORE ;SAVE EXISTING ROSTER PATIENTS
"RTN","HMPROS3",229,0)
 Q:$O(^HMPROSTR(HMPRID,4,0))'>0
"RTN","HMPROS3",230,0)
 S I=0 F  S I=$O(^HMPROSTR(HMPRID,4,I)) Q:I'>0  S DFN=$P(^HMPROSTR(HMPRID,4,I,0),"^"),BEFORE(DFN)=""
"RTN","HMPROS3",231,0)
 Q
"RTN","HMPROS3",232,0)
 ;
"RTN","HMPROS3",233,0)
TEST ;TEMPORARY
"RTN","HMPROS3",234,0)
 S HMPARRAY(0)="AAA TEST^^aaaa test^^1088"
"RTN","HMPROS3",235,0)
 S HMPARRAY(1)="Patient^UNION^100846"
"RTN","HMPROS3",236,0)
 S HMPARRAY(2)="Patient^UNION^100847"
"RTN","HMPROS3",237,0)
 D UPDATE(.HMP,.HMPARRAY)
"RTN","HMPROS3",238,0)
 Q
"RTN","HMPROS3",239,0)
TEST0 ;
"RTN","HMPROS3",240,0)
 S BEFORE(1)="",BEFORE(5)="",BEFORE(8)="",AFTER(1)="",AFTER(5)="",AFTER(8)=""
"RTN","HMPROS3",241,0)
 S RESULT=$$COMPARE(.BEFORE,.AFTER)
"RTN","HMPROS3",242,0)
 W "RESULT IS: ",RESULT
"RTN","HMPROS3",243,0)
 Q
"RTN","HMPROS3",244,0)
 ;
"RTN","HMPROS3",245,0)
TEST1 ;
"RTN","HMPROS3",246,0)
 S BEFORE(1)="",BEFORE(5)="",BEFORE(8)="",AFTER(5)="",AFTER(8)=""
"RTN","HMPROS3",247,0)
 S RESULT=$$COMPARE(.BEFORE,.AFTER)
"RTN","HMPROS3",248,0)
 W "RESULT IS: ",RESULT
"RTN","HMPROS3",249,0)
 Q
"RTN","HMPROS3",250,0)
 ;
"RTN","HMPROS4")
0^109^B90329378
"RTN","HMPROS4",1,0)
HMPROS4 ;SLC/GRR -- Roster Management
"RTN","HMPROS4",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;AUG 17, 2011;Build 53
"RTN","HMPROS4",3,0)
GETSRC(HMP,HMPSRC,HMPFILT) ;; Get Source data from requested source type
"RTN","HMPROS4",4,0)
 ;;  For example, If source type is "Clinic", pass all clinic names and id's to calling GUI
"RTN","HMPROS4",5,0)
 ;; Input - HMPARRAY - contains roster data entered thru GUI
"RTN","HMPROS4",6,0)
 ;K HMPLIST,HMPLIST2
"RTN","HMPROS4",7,0)
 I '$D(HMPFILT) S HMPFILT=""
"RTN","HMPROS4",8,0)
 N HMPLIST,HMPLIST2,HMPTYPE,VPERR,HMPI,HMPRNAME,HMPY,HMPOP,HMPTAG,HMPLAB,HMPNLIST,HMPSTN,HMPTEXT,HMPVER,Y,ACT,CHK,CSNM
"RTN","HMPROS4",9,0)
 N CSNUM,CSP,IDNAME,IDVALUE,TYPENM,UPNAME,VDATE,HMPACT,HMPDATA,HMPDIVP,HMPNAME,HMPCNT,HMPRCNT,ACTIVE
"RTN","HMPROS4",10,0)
 N HMPSYS S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPROS4",11,0)
 S (HMPLIST,HMPTYPE,HMPOP,HMPLIST2,VPERR)="",HMPI=0
"RTN","HMPROS4",12,0)
 K ^TMP($J,"HMPROSTR")
"RTN","HMPROS4",13,0)
 S HMP=$NA(^TMP($J,"HMPROSTR"))
"RTN","HMPROS4",14,0)
 S HMPACT="I 1"
"RTN","HMPROS4",15,0)
 I HMPFILT'="" S X=HMPFILT X ^%ZOSF("UPPERCASE") S HMPFILT=Y S HMPACT="I UPNAME[HMPFILT"
"RTN","HMPROS4",16,0)
 I HMPSRC["Clinic" S HMPLAB="CLIN"
"RTN","HMPROS4",17,0)
 I HMPSRC["Ward" S HMPLAB="WARD"
"RTN","HMPROS4",18,0)
 I HMPSRC["Patient" S HMPLAB="PAT"
"RTN","HMPROS4",19,0)
 I HMPSRC["PCMM Team" S HMPLAB="PCMM"
"RTN","HMPROS4",20,0)
 I HMPSRC["OE/RR" S HMPLAB="CPRS"
"RTN","HMPROS4",21,0)
 I HMPSRC["HMP Roster" S HMPLAB="ROST"
"RTN","HMPROS4",22,0)
 I HMPSRC["Specialty" S HMPLAB="SPEC"
"RTN","HMPROS4",23,0)
 I HMPSRC["Provider" S HMPLAB="PROV"
"RTN","HMPROS4",24,0)
 I HMPSRC["PXRM" S HMPLAB="PXRM"
"RTN","HMPROS4",25,0)
 I HMPLAB="" S VPERR="1^INVALID SOURCE TYPE" Q
"RTN","HMPROS4",26,0)
 D @HMPLAB
"RTN","HMPROS4",27,0)
 D SEND
"RTN","HMPROS4",28,0)
 Q HMP
"RTN","HMPROS4",29,0)
 ;
"RTN","HMPROS4",30,0)
CLIN ;Process patients for this clinic.  Select all if filter is null
"RTN","HMPROS4",31,0)
 K HMPARRAY S HMPARRAY=""
"RTN","HMPROS4",32,0)
 S HMPNAME="" F  S HMPNAME=$O(^SC("B",HMPNAME)) Q:HMPNAME=""  S X=HMPNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X HMPACT I  D
"RTN","HMPROS4",33,0)
 . S HMPI=$O(^SC("B",HMPNAME,0)) I ($P(^SC(HMPI,0),"^",3)="C")&($$ACTLOC^ORWU(HMPI)) D
"RTN","HMPROS4",34,0)
 . . I $D(^SC(HMPI,"I")) Q:$P(^("I"),"^",2)=""  ;added 4/24/2013
"RTN","HMPROS4",35,0)
 . . S (CSP,CSNM,CSNUM,SVC,SERVICE,HMPDIV,HMPDIVP)="" ;added 4/24/2013
"RTN","HMPROS4",36,0)
 . . S CSP=$P(^SC(HMPI,0),"^",7) I CSP]"" S CSNM=$P(^DIC(40.7,CSP,0),"^",1),CSNUM=$P(^DIC(40.7,CSP,0),"^",2) ;modified 4/24/2013
"RTN","HMPROS4",37,0)
 . . S HMPDIVP=$P(^SC(HMPI,0),"^",15) I HMPDIVP]"" S HMPDIV=$P($G(^DG(40.8,HMPDIVP,0)),"^",1) ;modified 4/24/2013
"RTN","HMPROS4",38,0)
 . . S SVC=$P(^SC(HMPI,0),"^",8),SERVICE=$S(SVC="M":"MEDICINE",SVC="S":"SURGERY",SVC="P":"PSYCHIATRY",SVC="R":"REHAB MEDICINE",SVC="N":"NEUROLOGY",1:"NONE")
"RTN","HMPROS4",39,0)
 . . S HMPARRAY(HMPNAME)=HMPI
"RTN","HMPROS4",40,0)
 . . S HMPARRAY(HMPNAME,1)="DIVISION"_"^"_HMPDIV
"RTN","HMPROS4",41,0)
 . . S HMPARRAY(HMPNAME,2)="CLINIC STOP NAME"_"^"_CSNM
"RTN","HMPROS4",42,0)
 . . S HMPARRAY(HMPNAME,3)="CLINIC STOP NUMBER"_"^"_CSNUM
"RTN","HMPROS4",43,0)
 . . S HMPARRAY(HMPNAME,4)="SERVICE"_"^"_SERVICE
"RTN","HMPROS4",44,0)
 Q
"RTN","HMPROS4",45,0)
 ;
"RTN","HMPROS4",46,0)
WARD ;Process patients for this ward
"RTN","HMPROS4",47,0)
 K HMPARRAY S HMPARRAY=""
"RTN","HMPROS4",48,0)
 S HMPNAME="" F  S HMPNAME=$O(^DIC(42,"B",HMPNAME)) Q:HMPNAME=""  S X=HMPNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X HMPACT I  D 
"RTN","HMPROS4",49,0)
 . S HMPI=$O(^DIC(42,"B",HMPNAME,0))
"RTN","HMPROS4",50,0)
 . S HMPARRAY(HMPNAME)=HMPI
"RTN","HMPROS4",51,0)
 . N DIVP,HMPDIV,SPECP,SPEC,SVC,SERVICE
"RTN","HMPROS4",52,0)
 . S (DIVP,HMPDIV,SPECP,SPEC,SVC,SERVICE)=""
"RTN","HMPROS4",53,0)
 . S DIVP=$P(^DIC(42,HMPI,0),"^",11) I DIVP]"" S HMPDIV=$P($G(^DG(40.8,DIVP,0)),"^",1)
"RTN","HMPROS4",54,0)
 . S SPECP=$P(^DIC(42,HMPI,0),"^",12) I SPECP]"" S SPEC=$P($G(^DIC(42.4,SPECP,0)),"^",1)
"RTN","HMPROS4",55,0)
 . S SVC=$P(^DIC(42,HMPI,0),"^",3)
"RTN","HMPROS4",56,0)
 . S SERVICE=$S(SVC="M":"MEDICINE",SVC="S":"SURGERY",SVC="P":"PSYCHIATRY",SVC="NH":"NHCU",SVC="NE":"NEUROLOGY",SVC="I":"INTERMEDIATE MEDICINE",1:"")
"RTN","HMPROS4",57,0)
 . S:'$L(SERVICE) SERVICE=$S(SVC="R":"REHAB MEDICINE",SVC="SCI":"SPINAL CORD INJURY",SVC="D":"DOMICILLIARY",SVC="B":"BLIND REHAB",1:"NONE")
"RTN","HMPROS4",58,0)
 . S HMPARRAY(HMPNAME,1)="DIVISION"_"^"_HMPDIV
"RTN","HMPROS4",59,0)
 . S HMPARRAY(HMPNAME,2)="SPECIALTY"_"^"_SPEC
"RTN","HMPROS4",60,0)
 . S HMPARRAY(HMPNAME,3)="SERVICE"_"^"_SERVICE
"RTN","HMPROS4",61,0)
 Q
"RTN","HMPROS4",62,0)
 ;
"RTN","HMPROS4",63,0)
PAT ;Process patient from Patient file Source
"RTN","HMPROS4",64,0)
 K HMPARRAY S HMPARRAY=""
"RTN","HMPROS4",65,0)
 N DFN,SEX,DOB,SSN,ICN,DOBOUT
"RTN","HMPROS4",66,0)
 I HMPFILT?1U4N D  Q
"RTN","HMPROS4",67,0)
 . I $D(^DPT("BS5",HMPFILT)) D
"RTN","HMPROS4",68,0)
 . . S HMPI=0 F  S HMPI=$O(^DPT("BS5",HMPFILT,HMPI)) Q:HMPI'>0  D
"RTN","HMPROS4",69,0)
 . . . S DFN=HMPI,ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPROS4",70,0)
 . . . K WARN S WARN="" D SECCHK ;ZW WARN
"RTN","HMPROS4",71,0)
 . . . S HMPNAME=$P(^DPT(HMPI,0),"^",1),HMPARRAY(HMPNAME)=HMPI
"RTN","HMPROS4",72,0)
 . . . S SEX=$P(^DPT(HMPI,0),"^",2),DOB=$P(^DPT(HMPI,0),"^",3),SSN=$P(^DPT(HMPI,0),"^",9)
"RTN","HMPROS4",73,0)
 . . . S DOBOUT=$$FMTHL7^XLFDT(DOB)
"RTN","HMPROS4",74,0)
 . . . S HMPARRAY(HMPNAME,1)="ICN"_"^"_ICN
"RTN","HMPROS4",75,0)
 . . . S HMPARRAY(HMPNAME,2)="GENDER"_"^"_$S(SEX="M":"MALE",SEX="F":"FEMALE",1:"NONE")
"RTN","HMPROS4",76,0)
 . . . S HMPARRAY(HMPNAME,3)="DOB"_"^"_DOBOUT
"RTN","HMPROS4",77,0)
 . . . S HMPARRAY(HMPNAME,4)="SSN"_"^"_SSN
"RTN","HMPROS4",78,0)
 S HMPNAME=HMPFILT
"RTN","HMPROS4",79,0)
 I $D(^DPT("B",HMPNAME)) D  Q
"RTN","HMPROS4",80,0)
 . S HMPI=0 F  S HMPI=$O(^DPT("B",HMPNAME,HMPI)) Q:HMPI'>0  S HMPARRAY(HMPNAME)=HMPI D
"RTN","HMPROS4",81,0)
 . . S DFN=HMPI,ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPROS4",82,0)
 . . K WARN S WARN="" D SECCHK ;ZW WARN
"RTN","HMPROS4",83,0)
 . . S SEX=$P(^DPT(HMPI,0),"^",2),DOB=$P(^DPT(HMPI,0),"^",3),SSN=$P(^DPT(HMPI,0),"^",9)
"RTN","HMPROS4",84,0)
 . . S DOBOUT=$$FMTHL7^XLFDT(DOB)
"RTN","HMPROS4",85,0)
 . . S HMPARRAY(HMPNAME,1)="ICN"_"^"_ICN
"RTN","HMPROS4",86,0)
 . . S HMPARRAY(HMPNAME,2)="GENDER"_"^"_$S(SEX="M":"MALE",SEX="F":"FEMALE",1:"NONE")
"RTN","HMPROS4",87,0)
 . . S HMPARRAY(HMPNAME,3)="DOB"_"^"_DOBOUT
"RTN","HMPROS4",88,0)
 . . S HMPARRAY(HMPNAME,4)="SSN"_"^"_SSN
"RTN","HMPROS4",89,0)
 E  F  S HMPNAME=$O(^DPT("B",HMPNAME)) Q:HMPNAME=""!(HMPNAME'[HMPFILT)  D
"RTN","HMPROS4",90,0)
 . S HMPI=0 F  S HMPI=$O(^DPT("B",HMPNAME,HMPI)) Q:HMPI'>0  S HMPARRAY(HMPNAME)=HMPI D
"RTN","HMPROS4",91,0)
 . . S DFN=HMPI,ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPROS4",92,0)
 . . K WARN S WARN="" D SECCHK ;ZW WARN
"RTN","HMPROS4",93,0)
 . . S SEX=$P(^DPT(HMPI,0),"^",2),DOB=$P(^DPT(HMPI,0),"^",3),SSN=$P(^DPT(HMPI,0),"^",9)
"RTN","HMPROS4",94,0)
 . . S DOBOUT=$$FMTHL7^XLFDT(DOB)
"RTN","HMPROS4",95,0)
 . . S HMPARRAY(HMPNAME,1)="ICN"_"^"_ICN
"RTN","HMPROS4",96,0)
 . . S HMPARRAY(HMPNAME,2)="GENDER"_"^"_$S(SEX="M":"MALE",SEX="F":"FEMALE",1:"NONE")
"RTN","HMPROS4",97,0)
 . . S HMPARRAY(HMPNAME,3)="DOB"_"^"_DOBOUT
"RTN","HMPROS4",98,0)
 . . S HMPARRAY(HMPNAME,4)="SSN"_"^"_SSN
"RTN","HMPROS4",99,0)
 Q
"RTN","HMPROS4",100,0)
 ;
"RTN","HMPROS4",101,0)
PCMM ;Process patients from a PCMM team
"RTN","HMPROS4",102,0)
 K HMPARRAY S HMPARRAY=""
"RTN","HMPROS4",103,0)
 S HMPSTN=$P($G(^XMB(1,1,"XUS")),"^",17)
"RTN","HMPROS4",104,0)
 S HMPI=0 F  S HMPI=$O(^SCTM(404.51,"AINST",HMPSTN,HMPI)) Q:HMPI'>0  S HMPNAME=$P($G(^SCTM(404.51,HMPI,0)),"^",1) S X=HMPNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X HMPACT I  D
"RTN","HMPROS4",105,0)
 . S HMPARRAY(HMPNAME)=HMPI
"RTN","HMPROS4",106,0)
 . N TEAMP,TEAMPP,SVCP,SERVICE S (TEAMP,TEAMPP,SVCP,SERVICE)=""
"RTN","HMPROS4",107,0)
 . S TEAMPP=$P(^SCTM(404.51,HMPI,0),"^",3) I TEAMPP]"" S TEAMP=$P(^SD(403.47,TEAMPP,0),"^",1)
"RTN","HMPROS4",108,0)
 . S SVCP=$P(^SCTM(404.51,HMPI,0),"^",6) I SVCP]"" S SERVICE=$P(^DIC(49,SVCP,0),"^",1)
"RTN","HMPROS4",109,0)
 . S HMPARRAY(HMPNAME,1)="TEAM PURPOSE"_"^"_TEAMP
"RTN","HMPROS4",110,0)
 . S HMPARRAY(HMPNAME,2)="SERVICE"_"^"_SERVICE
"RTN","HMPROS4",111,0)
 Q
"RTN","HMPROS4",112,0)
 ;
"RTN","HMPROS4",113,0)
CPRS ;Process patients from CPRS Lists
"RTN","HMPROS4",114,0)
 K HMPARRAY S HMPARRAY=""
"RTN","HMPROS4",115,0)
 S HMPNAME="" F  S HMPNAME=$O(^OR(100.21,"B",HMPNAME)) Q:HMPNAME=""  S X=HMPNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X HMPACT I  D
"RTN","HMPROS4",116,0)
 . S HMPI=0 F  S HMPI=$O(^OR(100.21,"B",HMPNAME,HMPI)) Q:HMPI'>0  D
"RTN","HMPROS4",117,0)
 . . S HMPARRAY(HMPNAME)=HMPI
"RTN","HMPROS4",118,0)
 . . N TYPE,CREATP,CREATOR
"RTN","HMPROS4",119,0)
 . . S TYPE=$P(^OR(100.21,HMPI,0),"^",2)
"RTN","HMPROS4",120,0)
 . . S TYPENM=$S(TYPE="P":"PERSONAL PATIENT",TYPE="TA":"TEAM PATIENT AUTOLINKED",TYPE="TM":"TEAM PATIENT MANUAL",TYPE="MRAL":"MANUAL REMOVAL AUTOLINK ADDITION",1:"NONE")
"RTN","HMPROS4",121,0)
 . . S CREATP=$P(^OR(100.21,HMPI,0),"^",5),CREATOR=""
"RTN","HMPROS4",122,0)
 . . I CREATP]"" S CREATOR=$P($G(^VA(200,CREATP,0)),"^",1)
"RTN","HMPROS4",123,0)
 . . S HMPARRAY(HMPNAME,1)="TYPE"_"^"_TYPENM
"RTN","HMPROS4",124,0)
 . . S HMPARRAY(HMPNAME,2)="CREATOR"_"^"_CREATOR
"RTN","HMPROS4",125,0)
 Q
"RTN","HMPROS4",126,0)
 ;
"RTN","HMPROS4",127,0)
ROST ;Process patients from selected roster
"RTN","HMPROS4",128,0)
 K HMPARRAY S HMPARRAY=""
"RTN","HMPROS4",129,0)
 S HMPNAME="" F  S HMPNAME=$O(^HMPROSTR("B",HMPNAME)) Q:HMPNAME=""  S X=HMPNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X HMPACT I  D
"RTN","HMPROS4",130,0)
 . S HMPI=$O(^HMPROSTR("B",HMPNAME,0)) S HMPARRAY(HMPNAME)=HMPI
"RTN","HMPROS4",131,0)
 . N DISP,OWNERP,OWNER
"RTN","HMPROS4",132,0)
 . S DISP=$P(^HMPROSTR(HMPI,0),"^",2)
"RTN","HMPROS4",133,0)
 . S OWNERP=$P(^HMPROSTR(HMPI,0),"^",4),OWNER=""
"RTN","HMPROS4",134,0)
 . I OWNERP]"" S OWNER=$P($G(^VA(200,OWNERP,0)),"^",1)
"RTN","HMPROS4",135,0)
 . S HMPARRAY(HMPNAME,1)="DISPLAY NAME"_"^"_DISP
"RTN","HMPROS4",136,0)
 . S HMPARRAY(HMPNAME,2)="OWNER"_"^"_OWNER
"RTN","HMPROS4",137,0)
 Q
"RTN","HMPROS4",138,0)
 ;
"RTN","HMPROS4",139,0)
SPEC ;Process patients with selected Treating Specialty
"RTN","HMPROS4",140,0)
 K HMPARRAY S HMPARRAY=""
"RTN","HMPROS4",141,0)
 S HMPNAME="" F  S HMPNAME=$O(^DIC(45.7,"B",HMPNAME)) Q:HMPNAME=""  S X=HMPNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X HMPACT I  D
"RTN","HMPROS4",142,0)
 . S HMPI=$O(^DIC(45.7,"B",HMPNAME,0)),VDATE=$O(^DIC(45.7,HMPI,"E","ADATE","")),ACT=$O(^DIC(45.7,HMPI,"E","ADATE",VDATE,0)),ACTIVE=$P(^DIC(45.7,HMPI,"E",ACT,0),"^",2)
"RTN","HMPROS4",143,0)
 . I ACTIVE D
"RTN","HMPROS4",144,0)
 . . S HMPARRAY(HMPNAME)=HMPI
"RTN","HMPROS4",145,0)
 . . N SVC,SERVICE
"RTN","HMPROS4",146,0)
 . . S SVC=$P(^DIC(45.7,HMPI,0),"^",3)
"RTN","HMPROS4",147,0)
 . . S SERVICE=$S(SVC="M":"MEDICINE",SVC="S":"SURGERY",SVC="P":"PSYCHIATRY",SVC="NH":"NHCU",SVC="NE":"NEUROLOGY",SVC="I":"INTERMEDIATE MEDICINE",1:"")
"RTN","HMPROS4",148,0)
 . . S:'$L(SERVICE) SERVICE=$S(SVC="R":"REHAB MEDICINE",SVC="SCI":"SPINAL CORD INJURY",SVC="D":"DOMICILLIARY",SVC="B":"BLIND REHAB",SVC="RE":"RESPITE CARE",1:"NONE")
"RTN","HMPROS4",149,0)
 . . S HMPARRAY(HMPNAME,1)="SERVICE"_"^"_SERVICE
"RTN","HMPROS4",150,0)
 Q
"RTN","HMPROS4",151,0)
 ;
"RTN","HMPROS4",152,0)
PROV ;Process patients for selected provider
"RTN","HMPROS4",153,0)
 K HMPARRAY S HMPARRAY=""
"RTN","HMPROS4",154,0)
 N TITLEP,VTITLE,SEX
"RTN","HMPROS4",155,0)
 S VTITLE=""
"RTN","HMPROS4",156,0)
 I HMPFILT'="" D
"RTN","HMPROS4",157,0)
 . S HMPNAME=HMPFILT
"RTN","HMPROS4",158,0)
 . F  S HMPNAME=$O(^VA(200,"B",HMPNAME)) Q:HMPNAME=""!(HMPNAME'[HMPFILT)  D
"RTN","HMPROS4",159,0)
 . . S HMPI=0 F  S HMPI=$O(^VA(200,"B",HMPNAME,HMPI)) Q:HMPI'>0  D
"RTN","HMPROS4",160,0)
 . . . S TITLEP=$P(^VA(200,HMPI,0),"^",9) I TITLEP]"" S VTITLE=$P($G(^DIC(3.1,TITLEP,0)),"^",1)
"RTN","HMPROS4",161,0)
 . . . S SEX=$P(^VA(200,HMPI,1),"^",2)
"RTN","HMPROS4",162,0)
 . . . S HMPARRAY(HMPNAME)=HMPI
"RTN","HMPROS4",163,0)
 . . . S HMPARRAY(HMPNAME,1)="SEX"_"^"_SEX
"RTN","HMPROS4",164,0)
 . . . S HMPARRAY(HMPNAME,2)="TITLE"_"^"_VTITLE
"RTN","HMPROS4",165,0)
 I HMPFILT="" D
"RTN","HMPROS4",166,0)
 . S HMPNAME="" F  S HMPNAME=$O(^VA(200,"B",HMPNAME)) Q:HMPNAME=""  D
"RTN","HMPROS4",167,0)
 . . S HMPI=0 F  S HMPI=$O(^VA(200,"B",HMPNAME,HMPI)) Q:HMPI'>0  D
"RTN","HMPROS4",168,0)
 . . . S TITLEP=$P(^VA(200,HMPI,0),"^",9) I TITLEP]"" S VTITLE=$P($G(^DIC(3.1,TITLEP,0)),"^",1)
"RTN","HMPROS4",169,0)
 . . . S SEX=$P(^VA(200,HMPI,1),"^",2)
"RTN","HMPROS4",170,0)
 . . . S HMPARRAY(HMPNAME)=HMPI
"RTN","HMPROS4",171,0)
 . . . S HMPARRAY(HMPNAME,1)="SEX"_"^"_SEX
"RTN","HMPROS4",172,0)
 . . . S HMPARRAY(HMPNAME,2)="TITLE"_"^"_VTITLE
"RTN","HMPROS4",173,0)
 Q
"RTN","HMPROS4",174,0)
 ;
"RTN","HMPROS4",175,0)
PXRM ;Process patients for selected panel
"RTN","HMPROS4",176,0)
 K HMPARRAY S HMPARRAY=""
"RTN","HMPROS4",177,0)
 S HMPNAME="" F  S HMPNAME=$O(^PXRM(810.4,"B",HMPNAME)) Q:HMPNAME=""  S X=HMPNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X HMPACT I  D
"RTN","HMPROS4",178,0)
 . S HMPI=0 F  S HMPI=$O(^PXRM(810.4,"B",HMPNAME,HMPI)) Q:HMPI'>0  I $P($G(^PXRM(810.4,HMPI,0)),"^",3)=3 D
"RTN","HMPROS4",179,0)
 . . S HMPARRAY(HMPNAME)=HMPI
"RTN","HMPROS4",180,0)
 . . N LISTP,LISTN,CLASS,CLASSNM
"RTN","HMPROS4",181,0)
 . . S (LISTP,LISTN,CLASS,CLASSNM)="" ;added 3/15/11 grr
"RTN","HMPROS4",182,0)
 . . S LISTP=$P(^PXRM(810.4,HMPI,0),"^",7) I LISTP]"" S LISTN=$P(^PXRMD(811.5,LISTP,0),"^",1)
"RTN","HMPROS4",183,0)
 . . S CLASS=$P(^PXRM(810.4,HMPI,100),"^",1),CLASSNM=$S(CLASS="N":"National",CLASS="V":"VISN",CLASS="L":"Local",1:"NONE")
"RTN","HMPROS4",184,0)
 . . S HMPARRAY(HMPNAME,1)="TERM"_"^"_LISTN
"RTN","HMPROS4",185,0)
 . . S HMPARRAY(HMPNAME,2)="CLASS"_"^"_CLASSNM
"RTN","HMPROS4",186,0)
 Q
"RTN","HMPROS4",187,0)
 ;
"RTN","HMPROS4",188,0)
SEND ;send pending rosters.  Called through RPC
"RTN","HMPROS4",189,0)
 S HMPRCNT=0,HMPI=0
"RTN","HMPROS4",190,0)
 S HMPVER="<results version='"_$P($T(HMPROS4+1),";",3)_"'>"
"RTN","HMPROS4",191,0)
 D ADD(HMPVER)
"RTN","HMPROS4",192,0)
 S HMPTEXT="<source name='"_HMPSRC_"' >" D ADD(HMPTEXT)
"RTN","HMPROS4",193,0)
 D ADD("<entries>")
"RTN","HMPROS4",194,0)
 K HMPII S HMPII="" F  S HMPII=$O(HMPARRAY(HMPII)) Q:HMPII=""  D
"RTN","HMPROS4",195,0)
 . S HMPDATA=$$ESC^HMPD(HMPII)
"RTN","HMPROS4",196,0)
 . S HMPTEXT="<entry NAME='"_HMPDATA_"' id='"_HMPARRAY(HMPII)_"' />" D ADD(HMPTEXT)
"RTN","HMPROS4",197,0)
 . D ADD("<identifiers>")
"RTN","HMPROS4",198,0)
 . N I S I=0 F  S I=$O(HMPARRAY(HMPII,I)) Q:I'>0  D
"RTN","HMPROS4",199,0)
 . . S IDNAME=$P(HMPARRAY(HMPII,I),"^",1),IDVALUE=$P(HMPARRAY(HMPII,I),"^",2),IDVALUE=$$ESC^HMPD(IDVALUE)
"RTN","HMPROS4",200,0)
 . . S HMPTEXT="<ident name='"_IDNAME_"' value='"_IDVALUE_"' />" D ADD(HMPTEXT)
"RTN","HMPROS4",201,0)
 . D ADD("</identifiers>")
"RTN","HMPROS4",202,0)
 D ADD("</entries>")
"RTN","HMPROS4",203,0)
 D ADD("</source>")
"RTN","HMPROS4",204,0)
 S HMPTEXT="</results>" D ADD(HMPTEXT)
"RTN","HMPROS4",205,0)
 Q
"RTN","HMPROS4",206,0)
 ;
"RTN","HMPROS4",207,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPROS4",208,0)
 I X'["<" S X=$$ESC^HMPD(X)
"RTN","HMPROS4",209,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPROS4",210,0)
 S @HMP@(HMPI)=X
"RTN","HMPROS4",211,0)
 Q
"RTN","HMPROS4",212,0)
 ;
"RTN","HMPROS4",213,0)
SECCHK ; check for sensitive record
"RTN","HMPROS4",214,0)
 N HMPY,I,X
"RTN","HMPROS4",215,0)
 K WARN
"RTN","HMPROS4",216,0)
 D PTSEC^DGSEC4(.HMPY,DFN,1)  ;IA #3027
"RTN","HMPROS4",217,0)
 S CHK("dfn")=DFN
"RTN","HMPROS4",218,0)
 S CHK("sensitive")=(HMPY(1)>0)
"RTN","HMPROS4",219,0)
 S CHK("mayAccess")=(HMPY(1)<3)
"RTN","HMPROS4",220,0)
 S CHK("logAccess")=(HMPY(1)>1)
"RTN","HMPROS4",221,0)
 M WARN=HMPY K WARN(1)
"RTN","HMPROS4",222,0)
 ;
"RTN","HMPROS5")
0^110^B9592522
"RTN","HMPROS5",1,0)
HMPROS5 ;SLC/GRR -- Clinical Reminders List Processing
"RTN","HMPROS5",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPROS5",3,0)
 ;
"RTN","HMPROS5",4,0)
 ; External References          DBIA#
"RTN","HMPROS5",5,0)
 ; -------------------          -----
"RTN","HMPROS5",6,0)
 ;
"RTN","HMPROS5",7,0)
 ; ------------ Get Panel(s) from VistA ------------
"RTN","HMPROS5",8,0)
 ;
"RTN","HMPROS5",9,0)
EN(HMP) ; -- find Panels to update
"RTN","HMPROS5",10,0)
 K ^TMP($J,"HMPPANEL")
"RTN","HMPROS5",11,0)
 N HMPPAN,HMPPAT,HMPI,MSG,PATCREAT,PLISTPUG,HMPC,HMPT
"RTN","HMPROS5",12,0)
 N HMPSYS S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPROS5",13,0)
 S HMP=$NA(^TMP($J,"HMP")),HMPC=0,HMPT=0
"RTN","HMPROS5",14,0)
 F  S HMPC=$O(^HMPPANEL(HMPC)) Q:HMPC'>0  D
"RTN","HMPROS5",15,0)
 . S HMPT=HMPT+1
"RTN","HMPROS5",16,0)
 . S HMPPAN(HMPC)=^HMPPANEL(HMPC,0) D
"RTN","HMPROS5",17,0)
 . N LIEN,PLNAME S LIEN=$P(HMPPAN(HMPC),"^"),PLNAME=$P(HMPPAN(HMPC),U,3)
"RTN","HMPROS5",18,0)
 . ;agp need to determine what secure and over should be set to
"RTN","HMPROS5",19,0)
 . S SECURE=0,OVER=1
"RTN","HMPROS5",20,0)
 . D RUNLIST(.HMPPAN,LIEN,PLNAME,SECURE,OVER)
"RTN","HMPROS5",21,0)
CREATE ; -- create panel(s) in XML
"RTN","HMPROS5",22,0)
 N HMPVER S HMPVER="<results version='"_$P($T(HMPPANEL+1),";",3)_"'>"
"RTN","HMPROS5",23,0)
 N HMPTTXT S HMPTTXT="<panels total='"_HMPT_"'>"
"RTN","HMPROS5",24,0)
 D ADD(HMPVER),ADD(HMPTTXT)
"RTN","HMPROS5",25,0)
 D PANEL
"RTN","HMPROS5",26,0)
 S TEXT="</results>" D ADD(TEXT)
"RTN","HMPROS5",27,0)
 Q
"RTN","HMPROS5",28,0)
 ;
"RTN","HMPROS5",29,0)
PANEL ;-- create panel XML
"RTN","HMPROS5",30,0)
 S HMPC=0 F  S HMPC=$O(HMPPAN(HMPC)) Q:HMPC'>0  D
"RTN","HMPROS5",31,0)
 .D ADD("<panel>")
"RTN","HMPROS5",32,0)
 .N TEXT S TEXT="<panel name='"_$P(HMPPAN(HMPC),"^",2)_"' />" D ADD(TEXT)
"RTN","HMPROS5",33,0)
 .S TEXT="<panelString code='"_$P(HMPPAN(HMPC),"^")_"' />" D ADD(TEXT)
"RTN","HMPROS5",34,0)
 .D PATS
"RTN","HMPROS5",35,0)
 .S TEXT="</panel>" D ADD(TEXT)
"RTN","HMPROS5",36,0)
 S TEXT="</panels>" D ADD(TEXT)
"RTN","HMPROS5",37,0)
 Q
"RTN","HMPROS5",38,0)
 ;
"RTN","HMPROS5",39,0)
CREATEPL(PLNAME,SECURE,OVER) ;
"RTN","HMPROS5",40,0)
 N FDA,IENS,NAME,NUM,RESULT,UNIQUE
"RTN","HMPROS5",41,0)
 S (NUM,RESULT,UNIQUE)=0
"RTN","HMPROS5",42,0)
 ;if overwrite check to see if the list exist
"RTN","HMPROS5",43,0)
 I OVER=1 S RESULT=$O(^PXRMXP(810.5,"B",PLNAME,""))
"RTN","HMPROS5",44,0)
 I RESULT>0 Q RESULT
"RTN","HMPROS5",45,0)
 S NAME=PLNAME
"RTN","HMPROS5",46,0)
 ;if not overwrite find unique name
"RTN","HMPROS5",47,0)
 I OVER=0 D
"RTN","HMPROS5",48,0)
 .I $D(^PXRMXP(810.5,"B",NAME))=0 Q
"RTN","HMPROS5",49,0)
 .F  Q:UNIQUE=1  D
"RTN","HMPROS5",50,0)
 ..S NUM=NUM+1
"RTN","HMPROS5",51,0)
 ..S NAME=PLNAME_" ("_NUM_")"
"RTN","HMPROS5",52,0)
 ..I $D(^PXRMXP(810.5,"B",NAME))=0 S UNIQUE=1
"RTN","HMPROS5",53,0)
 ;create stub in 810.5
"RTN","HMPROS5",54,0)
 S IENS="+1,"
"RTN","HMPROS5",55,0)
 S FDA(810.5,IENS,.01)=NAME
"RTN","HMPROS5",56,0)
 S FDA(810.5,IENS,100)="L"
"RTN","HMPROS5",57,0)
 S FDA(810.5,IENS,.07)=DUZ
"RTN","HMPROS5",58,0)
 S FDA(810.5,IENS,.08)=$S(SECURE=0:"PUB",1:"PVT")
"RTN","HMPROS5",59,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","HMPROS5",60,0)
 ;if error display message and quit
"RTN","HMPROS5",61,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG") Q 0
"RTN","HMPROS5",62,0)
 S RESULT=$O(^PXRMXP(810.5,"B",NAME,""))
"RTN","HMPROS5",63,0)
 Q RESULT
"RTN","HMPROS5",64,0)
 ;
"RTN","HMPROS5",65,0)
RUNLIST(HMPPAN,LIEN,PLNAME,SECURE,OVER) ;
"RTN","HMPROS5",66,0)
 N PLIEN
"RTN","HMPROS5",67,0)
 S PLIEN=$$CREATEPL(PLNAME,SECURE,OVER)
"RTN","HMPROS5",68,0)
 S PATCREAT=$S(SECURE=1:"Y",1:0),PLISTPUG=1
"RTN","HMPROS5",69,0)
 I PLIEN=0 Q
"RTN","HMPROS5",70,0)
 D RUN^PXRMLCR(LIEN,PLIEN,"PXRMRULE",DT,DT,0,0)
"RTN","HMPROS5",71,0)
 N HMPPAT S HMPPAT=0
"RTN","HMPROS5",72,0)
 F  S HMPPAT=$O(^PXRMXP(810.5,PLIEN,30,HMPPAT)) Q:HMPPAT'>0  S HMPPAN(HMPC,HMPPAT)=$P($G(^PXRMXP(810.5,PLIEN,30,HMPPAT,0)),"^",1)
"RTN","HMPROS5",73,0)
 Q
"RTN","HMPROS5",74,0)
 ;
"RTN","HMPROS5",75,0)
PATS ; -- create patient XML
"RTN","HMPROS5",76,0)
 S TEXT="<patients>" D ADD(TEXT)
"RTN","HMPROS5",77,0)
 S HMPPAT=0 F  S HMPPAT=$O(HMPPAN(HMPC,HMPPAT)) D  Q:HMPPAT'>0
"RTN","HMPROS5",78,0)
 .I HMPPAT'>0 S TEXT="</patients>" D ADD(TEXT) Q
"RTN","HMPROS5",79,0)
 .S TEXT="<patient code='"_HMPPAN(HMPC,HMPPAT)_"' />" D ADD(TEXT)
"RTN","HMPROS5",80,0)
 ;
"RTN","HMPROS5",81,0)
 ;
"RTN","HMPROS5",82,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPROS5",83,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPROS5",84,0)
 S @HMP@(HMPI)=X
"RTN","HMPROS5",85,0)
 Q
"RTN","HMPROS5",86,0)
 ;
"RTN","HMPROS5",87,0)
NITELY ; -- Nightly run to update all Panels
"RTN","HMPROS5",88,0)
 ;
"RTN","HMPROS6")
0^111^B26014820
"RTN","HMPROS6",1,0)
HMPROS6 ;SLC/GRR -- Generate Roster Patients
"RTN","HMPROS6",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPROS6",3,0)
 ;; Compile Roster
"RTN","HMPROS6",4,0)
GET(HMPIEN) ;
"RTN","HMPROS6",5,0)
 ;; Input - HMPIEN is internal entry number of roster
"RTN","HMPROS6",6,0)
 ;;         HMPOWNER - If this parameter exists, only rosters for this owner will be compiled and passed
"RTN","HMPROS6",7,0)
 ;; Output - AFTER array contains current patients
"RTN","HMPROS6",8,0)
 ;
"RTN","HMPROS6",9,0)
 K HMPLIST,HMPLIST2
"RTN","HMPROS6",10,0)
 N HMPI,HMPFILT,HMPTYPE,VPERR,HMPRNAME,HMPNY,HMPOP,HMPTAG,HMPLAB,HMPNLIST,BEG,DOB,END,GENDER,ICN,NAME,HMPACT,HMPC
"RTN","HMPROS6",11,0)
 N HMPCIEN,HMPDNAME,HMPDOB,HMPIII,HMPINM,HMPLIEN,HMPNAME,HMPOIEN,HMPONAME,HMPOWNID,HMPOWNNM,HMPPAT,HMPPIEN,HMPNME,HMPCNT
"RTN","HMPROS6",12,0)
 N HMPSRCDN,HMPCID,HMPTEXT,HMPTIEN,HMPTLST,HMPVER,HMPWIEN,HMPWNAME,HMPPNME,HMPRCNT,HMPSRCID,X,Y,SSN,HMPZ,HMPIZ,HMPX
"RTN","HMPROS6",13,0)
 N HMPSYS S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPROS6",14,0)
 S HMPIZ=0
"RTN","HMPROS6",15,0)
 I $G(HMPIEN)="" S HMPIEN=0
"RTN","HMPROS6",16,0)
 S (HMPLIST,HMPFILT,HMPTYPE,HMPOP,HMPLIST2,VPERR)=""
"RTN","HMPROS6",17,0)
 I +$G(HMPIEN)'>0 S VPERR="0^Invalid Roster IEN" Q
"RTN","HMPROS6",18,0)
 S HMPRNAME=$P($G(^HMPROSTR(HMPIEN,0)),"^",1) I HMPRNAME="" S VPERR="0^Deleted Roster IEN" Q
"RTN","HMPROS6",19,0)
 F  S HMPIZ=$O(^HMPROSTR(HMPIEN,1,HMPIZ)) Q:HMPIZ'>0  D
"RTN","HMPROS6",20,0)
 . S HMPX=$G(^HMPROSTR(HMPIEN,1,HMPIZ,0))
"RTN","HMPROS6",21,0)
 . S HMPOP=$P(HMPX,"^",3)
"RTN","HMPROS6",22,0)
 . S HMPFILT=$P(HMPX,"^",4)
"RTN","HMPROS6",23,0)
 . S HMPTAG=$P($P(HMPX,"^",2),";",2)
"RTN","HMPROS6",24,0)
 . S HMPLAB=""
"RTN","HMPROS6",25,0)
 . I HMPTAG["SC(" S HMPLAB="CLIN"
"RTN","HMPROS6",26,0)
 . I HMPTAG["DIC(42" S HMPLAB="WARD"
"RTN","HMPROS6",27,0)
 . I HMPTAG["DPT" S HMPLAB="PAT"
"RTN","HMPROS6",28,0)
 . I HMPTAG["SCTM" S HMPLAB="PCMM"
"RTN","HMPROS6",29,0)
 . I HMPTAG["OR(100.21" S HMPLAB="CPRS"
"RTN","HMPROS6",30,0)
 . I HMPTAG["HMPROSTR" S HMPLAB="ROST"
"RTN","HMPROS6",31,0)
 . I HMPTAG["DIC(45.7" S HMPLAB="SPEC"
"RTN","HMPROS6",32,0)
 . I HMPTAG["VA(200" S HMPLAB="PROV"
"RTN","HMPROS6",33,0)
 . I HMPTAG["PXRM(810.4" S HMPLAB="PXRM"
"RTN","HMPROS6",34,0)
 . I HMPLAB="" S VPERR="1^INVALID FILE TYPE" Q
"RTN","HMPROS6",35,0)
 . D @HMPLAB
"RTN","HMPROS6",36,0)
 . S HMPLAB=$S(HMPOP=0:"UNION",HMPOP=1:"INTER",1:"DIFF")
"RTN","HMPROS6",37,0)
 . S HMPNLIST=""
"RTN","HMPROS6",38,0)
 . D @HMPLAB
"RTN","HMPROS6",39,0)
 M HMPLIST2=HMPLIST
"RTN","HMPROS6",40,0)
 D GENPAT(HMPIEN)
"RTN","HMPROS6",41,0)
 Q
"RTN","HMPROS6",42,0)
 ;
"RTN","HMPROS6",43,0)
CLIN ;Process patients for this clinic.  Select all if filter is null
"RTN","HMPROS6",44,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS6",45,0)
 I '$D(DT) S DT=$$DT^XLFDT()
"RTN","HMPROS6",46,0)
 S BEG=DT,END=$S(HMPFILT="T":DT+.24,1:9999999+.24),HMPIII=BEG
"RTN","HMPROS6",47,0)
 S HMPCIEN=+$P(HMPX,"^",2) F  S HMPIII=$O(^SC(HMPCIEN,"S",HMPIII)) Q:HMPIII'>0!(HMPIII>END)  D
"RTN","HMPROS6",48,0)
 . S HMPII=0 F  S HMPII=$O(^SC(HMPCIEN,"S",HMPIII,1,HMPII)) Q:HMPII'>0  S DFN=$P($G(^SC(HMPCIEN,"S",HMPIII,1,HMPII,0)),"^",1) I DFN>0 D
"RTN","HMPROS6",49,0)
 . .S HMPLIST2(DFN)=HMPIZ
"RTN","HMPROS6",50,0)
 Q
"RTN","HMPROS6",51,0)
 ;
"RTN","HMPROS6",52,0)
WARD ;Process patients for this ward
"RTN","HMPROS6",53,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS6",54,0)
 S HMPWIEN=+$P(HMPX,"^",2),HMPWNAME=$P($G(^DIC(42,HMPWIEN,0)),"^",1)
"RTN","HMPROS6",55,0)
 S HMPIII=0 F  S HMPIII=$O(^DGPM("CN",HMPWNAME,HMPIII)) Q:HMPIII'>0  D
"RTN","HMPROS6",56,0)
 . S DFN=$P($G(^DGPM(HMPIII,0)),"^",3),HMPLIST2(DFN)=HMPIZ
"RTN","HMPROS6",57,0)
 Q
"RTN","HMPROS6",58,0)
 ;
"RTN","HMPROS6",59,0)
PAT ;Process patient from Patient file Source
"RTN","HMPROS6",60,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS6",61,0)
 S DFN=+$P(HMPX,"^",2),HMPLIST2(DFN)=HMPIZ
"RTN","HMPROS6",62,0)
 Q
"RTN","HMPROS6",63,0)
 ;
"RTN","HMPROS6",64,0)
PCMM ;Process patients from a PCMM team
"RTN","HMPROS6",65,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS6",66,0)
 S HMPTIEN=+$P(HMPX,"^",2),VPERR="",HMPTLST=""
"RTN","HMPROS6",67,0)
 D PTTM^SCAPMC(HMPTIEN,,"HMPTLST",VPERR)
"RTN","HMPROS6",68,0)
 S HMPIII="" F  S HMPIII=$O(HMPTLST(HMPIII)) Q:HMPIII'>0  S DFN=$P(HMPTLST(HMPIII),"^",1) S HMPTST2(DFN)=HMPIZ
"RTN","HMPROS6",69,0)
 Q
"RTN","HMPROS6",70,0)
 ;
"RTN","HMPROS6",71,0)
CPRS ;Process patients from CPRS Lists
"RTN","HMPROS6",72,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS6",73,0)
 S HMPOIEN=+$P(HMPX,"^",2),VPERR=""
"RTN","HMPROS6",74,0)
 S HMPIII=0 F  S HMPIII=$O(^OR(100.21,HMPOIEN,10,HMPIII)) Q:HMPIII'>0  S DFN=$P(^OR(100.21,HMPOIEN,10,HMPIII,0),";",1) S HMPLIST2(DFN)=HMPIZ
"RTN","HMPROS6",75,0)
 Q
"RTN","HMPROS6",76,0)
 ;
"RTN","HMPROS6",77,0)
ROST ;Process patients from selected roster
"RTN","HMPROS6",78,0)
 K HMPLIST2,HMPBLIST S (HMPLIST2,HMPBLIST)="" ; -- kcm added comma
"RTN","HMPROS6",79,0)
 N HMP,HMPIEN,VPERR
"RTN","HMPROS6",80,0)
 S HMPIEN=+$P(HMPX,"^",2),VPERR="",HMPOUT=1,HMP="HMPBLIST"
"RTN","HMPROS6",81,0)
 D COMPILE^HMPROS2(.HMPZ,HMPIEN,"")
"RTN","HMPROS6",82,0)
 M HMPBLIST=HMPLIST2
"RTN","HMPROS6",83,0)
 K HMPOUT
"RTN","HMPROS6",84,0)
 Q
"RTN","HMPROS6",85,0)
 ;
"RTN","HMPROS6",86,0)
SPEC ;Process patients with selected Treating Specialty
"RTN","HMPROS6",87,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS6",88,0)
 S HMPOIEN=+$P(HMPX,"^",2),VPERR=""
"RTN","HMPROS6",89,0)
 N DFN S DFN=0 F  S DFN=$O(^DPT("ATR",HMPOIEN,DFN)) Q:DFN'>0  S HMPLIST2(DFN)=HMPIZ
"RTN","HMPROS6",90,0)
 Q
"RTN","HMPROS6",91,0)
 ;
"RTN","HMPROS6",92,0)
PROV ;Process patients for selected provider
"RTN","HMPROS6",93,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS6",94,0)
 S HMPPIEN=+$P(HMPX,"^",2),VPERR=""
"RTN","HMPROS6",95,0)
 N DFN S DFN=0 F  S DFN=$O(^DPT("APR",HMPPIEN,DFN)) Q:DFN'>0  S HMPLIST2(DFN)=""
"RTN","HMPROS6",96,0)
 Q
"RTN","HMPROS6",97,0)
 ;
"RTN","HMPROS6",98,0)
PXRM ;Process patients for selected panel
"RTN","HMPROS6",99,0)
 K HMPLIST2 S HMPLIST2=""
"RTN","HMPROS6",100,0)
 S HMPPIEN=+$P(HMPX,"^",2),VPERR=""
"RTN","HMPROS6",101,0)
 S HMPC=HMPPIEN,HMPLIEN=$P(^HMPROSTR(HMPIEN,0),"^",1),HMPPNME=$P(^HMPROSTR(HMPIEN,0),"^",6) I HMPPNME="" S HMPPNME=HMPRNAME,$P(^HMPROSTR(HMPIEN,0),U,6)=HMPRNAME
"RTN","HMPROS6",102,0)
 S HMPPAT="" D RUNLIST^HMPROS5(.HMPPAT,HMPLIEN,HMPPNME,0,1)
"RTN","HMPROS6",103,0)
 S HMPII=0 F  S HMPII=$O(HMPPAT(HMPC,HMPII)) Q:HMPII'>0  S DFN=HMPPAT(HMPC,HMPII),HMPLIST2(DFN)=HMPIZ
"RTN","HMPROS6",104,0)
 Q
"RTN","HMPROS6",105,0)
 ;
"RTN","HMPROS6",106,0)
UNION ;Add to existing list
"RTN","HMPROS6",107,0)
 S HMPII=0 F  S HMPII=$O(HMPLIST2(HMPII)) Q:HMPII'>0  S HMPLIST(HMPII)=HMPLIST2(HMPII)
"RTN","HMPROS6",108,0)
 Q
"RTN","HMPROS6",109,0)
 ;
"RTN","HMPROS6",110,0)
INTER ;Intersect with existing list
"RTN","HMPROS6",111,0)
 S HMPII=0 F  S HMPII=$O(HMPLIST(HMPII)) Q:HMPII'>0  D
"RTN","HMPROS6",112,0)
 . I '$D(HMPLIST2(HMPII)) K HMPLIST(HMPII)
"RTN","HMPROS6",113,0)
 Q
"RTN","HMPROS6",114,0)
 ;
"RTN","HMPROS6",115,0)
DIFF ;Remove patients from this source that we have so far
"RTN","HMPROS6",116,0)
 S HMPII=0 F  S HMPII=$O(HMPLIST2(HMPII)) Q:HMPII'>0  D
"RTN","HMPROS6",117,0)
 . K HMPLIST(HMPII)
"RTN","HMPROS6",118,0)
 Q
"RTN","HMPROS6",119,0)
 ;
"RTN","HMPROS6",120,0)
GENPAT(HMPID) ;
"RTN","HMPROS6",121,0)
 N DFN,DIC,DR,DIE,DA,NODE,HMPNUM
"RTN","HMPROS6",122,0)
 S DFN=0
"RTN","HMPROS6",123,0)
 S HMPNUM=0
"RTN","HMPROS6",124,0)
 K ^HMPROSTR(HMPID,4) S ^HMPROSTR(HMPID,4,0)="^800001.23P^^"
"RTN","HMPROS6",125,0)
 F  S DFN=$O(HMPLIST(DFN)) Q:DFN'>0  D
"RTN","HMPROS6",126,0)
 . S HMPNUM=HMPNUM+1 S ^HMPROSTR(HMPID,4,HMPNUM,0)=DFN_"^"_HMPLIST(DFN),^HMPROSTR(HMPID,4,"B",DFN,HMPNUM)="",^HMPROSTR("AB",DFN,HMPID,HMPNUM)=""
"RTN","HMPROS6",127,0)
 Q
"RTN","HMPROS7")
0^112^B23792527
"RTN","HMPROS7",1,0)
HMPROS7 ;SLC/GRR -- Get Roster identification for patient(s) ;4/24/2012
"RTN","HMPROS7",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;AUG 17, 2011;Build 53
"RTN","HMPROS7",3,0)
GET(HMP,HMPARRAY) ;; Previews what a roster would look like as defined
"RTN","HMPROS7",4,0)
 ;;  Called by the GUI Roster Builder
"RTN","HMPROS7",5,0)
 ;; Input - HMPARRAY - contains roster data entered thru GUI
"RTN","HMPROS7",6,0)
 K HMPLIST,HMPLIST2
"RTN","HMPROS7",7,0)
 N %,BEG,DA,DIDEL,DIE,DOB,SSN,DR,END,GENDER,ICN,NAME,HMPC,HMPCIEN,HMPDIS,HMPDNAME,HMPDOB,HMPDT,HMPIII,HMPLIEN,HMPOIEN,HMPOWNID
"RTN","HMPROS7",8,0)
 N HMPOWNNM,HMPPAT,HMPPIEN,HMPPNME,HMPRCNT,HMPRID,HMPTEXT,HMPTIEN,HMPLST,HMPVAR,HMPVER,HMPWIEN,HMPWNAME,HMPZ,X,Y
"RTN","HMPROS7",9,0)
 N HMPFILT,HMPI,HMPNLIST,HMPSRCID,HMPTAG,HMPTLST,HMPY,HMPTYPE,ZZ,DFN,IEN,VPERR,HMPICN,HMPOP,HMPPNAME,HMPRNAME
"RTN","HMPROS7",10,0)
 N HMPSYS S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPROS7",11,0)
 S (HMPLIST,HMPFILT,HMPTYPE,HMPOP,HMPLIST2,VPERR)="",HMPI=0
"RTN","HMPROS7",12,0)
 S HMP=$NA(^TMP($J,"HMPROSTR")) ; kcm -- moved this here so HMP gets defined
"RTN","HMPROS7",13,0)
 K ^TMP($J,"HMPROSTR")
"RTN","HMPROS7",14,0)
 I $O(HMPARRAY(""))="" S @HMP@(1)="0^No patient data passed" Q
"RTN","HMPROS7",15,0)
 D NOW^%DTC S HMPDT=%
"RTN","HMPROS7",16,0)
 S HMPVER="<results version='"_$P($T(HMPROS7+1),";",3)_"'>"
"RTN","HMPROS7",17,0)
 D ADD(HMPVER)
"RTN","HMPROS7",18,0)
 S HMPZ="" F  S HMPZ=$O(HMPARRAY(HMPZ)) Q:HMPZ=""  D
"RTN","HMPROS7",19,0)
 . S DFN=$P(HMPARRAY(HMPZ),"^",1),HMPPNAME=$P(HMPARRAY(HMPZ),"^",2),HMPPNAME=$$ESC^HMPD(HMPPNAME),HMPICN=$P(HMPARRAY(HMPZ),"^",3)
"RTN","HMPROS7",20,0)
 . S ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPROS7",21,0)
 . S NAME=$P(^DPT(DFN,0),"^",1),GENDER=$P(^DPT(DFN,0),"^",2),SSN=$P(^DPT(DFN,0),"^",9),DOB=$P(^DPT(DFN,0),"^",3),HMPDOB=$$FMTHL7^XLFDT(DOB)
"RTN","HMPROS7",22,0)
 . S Y="<patient name='"_NAME_"' gender='"_GENDER_"' dob='"_HMPDOB_"' ssn='"_SSN_"' id='"_DFN_$S(ICN:"' icn='"_ICN,1:"")_"' />" D ADD(Y)
"RTN","HMPROS7",23,0)
 . S IEN="" F  S IEN=$O(^HMPROSTR("AB",DFN,IEN)) Q:IEN=""  D
"RTN","HMPROS7",24,0)
 . . S HMPRID=IEN,HMPRNAME=$P($G(^HMPROSTR(HMPRID,0)),"^",1),HMPRNAME=$$ESC^HMPD(HMPRNAME)
"RTN","HMPROS7",25,0)
 . . S HMPTEXT="<roster ien='"_HMPRID_"' rosterName='"_HMPRNAME_"'/>" D ADD(HMPTEXT)
"RTN","HMPROS7",26,0)
 S HMPTEXT="</results>" D ADD(HMPTEXT)
"RTN","HMPROS7",27,0)
 Q
"RTN","HMPROS7",28,0)
 ;
"RTN","HMPROS7",29,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPROS7",30,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPROS7",31,0)
 S @HMP@(HMPI)=X
"RTN","HMPROS7",32,0)
 Q
"RTN","HMPROS7",33,0)
 ;
"RTN","HMPROS7",34,0)
TEST ;TEMPORARY
"RTN","HMPROS7",35,0)
 S HMPARRAY(0)="100845^AVIVAPATIENT,FOUR^"
"RTN","HMPROS7",36,0)
 S HMPARRAY(1)="100850^AVIVAPATIENT,TEN^"
"RTN","HMPROS7",37,0)
 D GET(.HMP,.HMPARRAY)
"RTN","HMPROS7",38,0)
 Q
"RTN","HMPROS7",39,0)
 ;
"RTN","HMPROS7",40,0)
TESTJ ;TEMPORARY
"RTN","HMPROS7",41,0)
 S HMPARRAY(0)="100845^AVIVAPATIENT,FOUR^"
"RTN","HMPROS7",42,0)
 S HMPARRAY(1)="100850^AVIVAPATIENT,TEN^"
"RTN","HMPROS7",43,0)
 D GETJ(.HMP,.HMPARRAY)
"RTN","HMPROS7",44,0)
 Q
"RTN","HMPROS7",45,0)
 ;
"RTN","HMPROS7",46,0)
GETJ(HMP,HMPARRAY) ;Get Rosters which are in selected patient(s)
"RTN","HMPROS7",47,0)
 ;output in JSON object contains patient information and all rosters patient is currently in
"RTN","HMPROS7",48,0)
 S HMP=$NA(^TMP($J,"HMPROSTR")) ; kcm -- moved this here so HMP gets defined
"RTN","HMPROS7",49,0)
 N HMPI,HMPDT,HMPZ,DFN,HMPRNAME,HMPICN,NAME,SSN,DOB,HMPDOB,PAT,HMPRID,X,Y
"RTN","HMPROS7",50,0)
 K ^TMP($J,"HMPROSTR")
"RTN","HMPROS7",51,0)
 I $O(HMPARRAY(""))="" S @HMP@(1)="0^No patient data passed" Q
"RTN","HMPROS7",52,0)
 D NOW^%DTC S HMPDT=%
"RTN","HMPROS7",53,0)
 S HMPI=0
"RTN","HMPROS7",54,0)
 S HMPZ="" F  S HMPZ=$O(HMPARRAY(HMPZ)) Q:HMPZ=""  D
"RTN","HMPROS7",55,0)
 . S DFN=$P(HMPARRAY(HMPZ),"^",1),HMPPNAME=$P(HMPARRAY(HMPZ),"^",2),HMPPNAME=$$ESC^HMPD(HMPPNAME),HMPICN=$P(HMPARRAY(HMPZ),"^",3)
"RTN","HMPROS7",56,0)
 . S ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPROS7",57,0)
 . S NAME=$P(^DPT(DFN,0),"^",1),GENDER=$P(^DPT(DFN,0),"^",2),SSN=$P(^DPT(DFN,0),"^",9),DOB=$P(^DPT(DFN,0),"^",3),HMPDOB=$$JSONDT^HMPUTILS(DOB)
"RTN","HMPROS7",58,0)
 . S PAT("familyName")=$P(NAME,",",1),PAT("givenNames")=$P(NAME,",",2,99),PAT("ssn")=SSN,PAT("localId")=DFN
"RTN","HMPROS7",59,0)
 . S X=GENDER S PAT("genderCode")="urn:va:pat-gender:"_X,PAT("genderName")=$$NAME^HMPDJ00(X,"gender")
"RTN","HMPROS7",60,0)
 . S PAT("dateOfBirth")=HMPDOB,PAT("uid")=$$SETUID^HMPUTILS("pat",DFN,DFN,"")
"RTN","HMPROS7",61,0)
 . S IEN="" F  S IEN=$O(^HMPROSTR("AB",DFN,IEN)) Q:IEN=""  D
"RTN","HMPROS7",62,0)
 . . S HMPRID=IEN,HMPRNAME=$P($G(^HMPROSTR(HMPRID,0)),"^",1),HMPRNAME=$$ESC^HMPD(HMPRNAME)
"RTN","HMPROS7",63,0)
 . . S PAT("roster",IEN,"localId")=IEN,PAT("roster",IEN,"uid")=$$SETUID^HMPUTILS("roster","",IEN,"")
"RTN","HMPROS7",64,0)
 . . S PAT("roster",IEN,"rosterName")=HMPRNAME
"RTN","HMPROS7",65,0)
 I $D(PAT)>9 D ADDJ
"RTN","HMPROS7",66,0)
 Q
"RTN","HMPROS7",67,0)
 ;
"RTN","HMPROS7",68,0)
ADDJ ;
"RTN","HMPROS7",69,0)
 N HMPY,ERR
"RTN","HMPROS7",70,0)
 D ENCODE^HMPJSON("PAT","HMPY","ERR")
"RTN","HMPROS7",71,0)
 I $D(HMPY) D
"RTN","HMPROS7",72,0)
 . D:HMPI COMMA(HMPI)
"RTN","HMPROS7",73,0)
 . S HMPI=HMPI+1 M @HMP@(HMPI)=HMPY
"RTN","HMPROS7",74,0)
 Q
"RTN","HMPROS7",75,0)
 ;
"RTN","HMPROS7",76,0)
COMMA(I) ;; -- add comma between items
"RTN","HMPROS7",77,0)
 N J S J=+$O(@HMP@(I,"A"),-1) ;last sub-node for item I
"RTN","HMPROS7",78,0)
 S J=J+1,@HMP@(I,J)=","
"RTN","HMPROS7",79,0)
 Q
"RTN","HMPROS7",80,0)
 ;
"RTN","HMPROS7",81,0)
SUBS(HMP,SYS,ON,LIST) ; -- Un/Subscribe to Patient Data Monitor
"RTN","HMPROS7",82,0)
 ; RPC = HMP SUBSCRIBE ROSTERS
"RTN","HMPROS7",83,0)
 N DA,I,ID,HDR,HMPI
"RTN","HMPROS7",84,0)
 S SYS=$G(SYS),ON=+$G(ON) Q:'$L(SYS)
"RTN","HMPROS7",85,0)
 S DA=$$FIND^HMPPATS(SYS) Q:DA<1
"RTN","HMPROS7",86,0)
 S HMP=$NA(^TMP("HMP",$J)) K @HMP
"RTN","HMPROS7",87,0)
 ;S:'$D(^XTMP("HMPOS")) ^XTMP("HMPOS",0)="3991231^"_DT_"^HMP Patient Data Monitor"
"RTN","HMPROS7",88,0)
 ;
"RTN","HMPROS7",89,0)
 ; loop through LIST(n) = 'id'
"RTN","HMPROS7",90,0)
 D ADD("<rosters>")
"RTN","HMPROS7",91,0)
 S I="" F  S I=$O(LIST(I)) Q:I=""  S ID=LIST(I) D
"RTN","HMPROS7",92,0)
 . I ID<1!'$D(^HMPROSTR(ID)) D RET(ID,"error") Q
"RTN","HMPROS7",93,0)
 . I ON D  Q
"RTN","HMPROS7",94,0)
 .. S:'$D(^HMP(800000,DA,2,ID,0)) HDR=$G(^HMP(800000,DA,2,0)),^(0)="^800000.02P^"_ID_U_($P(HDR,U,4)+1)
"RTN","HMPROS7",95,0)
 .. S ^HMP(800000,DA,2,ID,0)=ID_U_ON,^HMP(800000,"AROS",ID,DA)=""
"RTN","HMPROS7",96,0)
 .. D RET(ID,"on") ;S ^XTMP("HMPOS",ID)=ON
"RTN","HMPROS7",97,0)
 . ; else, remove patient tracking info from ^XTMP
"RTN","HMPROS7",98,0)
 . S:$D(^HMP(800000,DA,2,ID,0)) $P(^(0),U,2)=0
"RTN","HMPROS7",99,0)
 . K ^HMP(800000,"AROS",ID,DA) ;I '$D(^HMP(800000,"AROS",ID)) K ^XTMP("HMPOS",ID)
"RTN","HMPROS7",100,0)
 . D RET(ID,"off")
"RTN","HMPROS7",101,0)
 D ADD("</rosters>")
"RTN","HMPROS7",102,0)
 Q
"RTN","HMPROS7",103,0)
 ;
"RTN","HMPROS7",104,0)
RET(ID,STS) ; -- add XML node for roster ID update subscription
"RTN","HMPROS7",105,0)
 N Y S Y="<roster id='"_$G(ID)
"RTN","HMPROS7",106,0)
 S Y=Y_"' subscribe='"_$G(STS)_"' />"
"RTN","HMPROS7",107,0)
 D ADD(Y)
"RTN","HMPROS7",108,0)
 Q
"RTN","HMPROS8")
0^113^B77589966
"RTN","HMPROS8",1,0)
HMPROS8 ;SLC/AGP -- Get CPRS User Default Roster List ; 6/11/14 8:38pm
"RTN","HMPROS8",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;AUG 17, 2011;Build 53
"RTN","HMPROS8",3,0)
 Q
"RTN","HMPROS8",4,0)
BLDSORT(NODE,SRC,SORT,SEQ) ; emulate TStringList Sort found in CPRS
"RTN","HMPROS8",5,0)
 ; append separator to ensure string sort (rather than numeric)
"RTN","HMPROS8",6,0)
 ; append SEQ to avoid dropping node where SORTKEY is duplicated
"RTN","HMPROS8",7,0)
 ; SORT:  A:Alphabetic;R:Room/Bed;P:Appointment Date;T:Terminal Digit;S:Source
"RTN","HMPROS8",8,0)
 I $E(NODE)=U QUIT  ; i.e., "^No patients found"
"RTN","HMPROS8",9,0)
 N SORTKEY,S
"RTN","HMPROS8",10,0)
 S NODE=$G(NODE),S=" "
"RTN","HMPROS8",11,0)
 S SORTKEY=$P(NODE,U,2)_S_SEQ ; default alphabetic by name
"RTN","HMPROS8",12,0)
 I SRC="C",(SORT="P") S SORTKEY=$P(NODE,U,4)_S_SEQ
"RTN","HMPROS8",13,0)
 I SRC="M" D
"RTN","HMPROS8",14,0)
 .I SORT="S" S SORTKEY=$P(NODE,U,3)_S_$P(NODE,U,8)_S_$P(NODE,U,2)_S_SEQ
"RTN","HMPROS8",15,0)
 .I SORT="P" S SORTKEY=$P(NODE,U,8)_S_$P(NODE,U,2)_S_SEQ
"RTN","HMPROS8",16,0)
 .I SORT="T" S SORTKEY=$P(NODE,U,5)_S_SEQ
"RTN","HMPROS8",17,0)
 I SRC="W",(SORT="R") S SORTKEY=$P(NODE,U,3)_S_$P(NODE,U,2)_S_SEQ
"RTN","HMPROS8",18,0)
 I '$L(SORTKEY) S SORTKEY=S_SEQ
"RTN","HMPROS8",19,0)
 S ^TMP("HMPSORT",$J,$P(SRC,U,2)_":"_SORT,SORTKEY)=NODE
"RTN","HMPROS8",20,0)
 Q
"RTN","HMPROS8",21,0)
 ;
"RTN","HMPROS8",22,0)
CHKPAT(PATIENTS,SERVER) ;
"RTN","HMPROS8",23,0)
 N ARGS,OUT,PAT,STATUS
"RTN","HMPROS8",24,0)
 S ARGS("command")="putPtSubscription"
"RTN","HMPROS8",25,0)
 S ARGS("server")=SERVER
"RTN","HMPROS8",26,0)
 S PAT="" F  S PAT=$O(PATIENTS(PAT)) Q:PAT'>0  D
"RTN","HMPROS8",27,0)
 .S STATUS=$G(^HMP(800000,"AITEM",PAT,SERVER))
"RTN","HMPROS8",28,0)
 .I STATUS'="",STATUS>0 Q
"RTN","HMPROS8",29,0)
 .S ARGS("localId")=PAT
"RTN","HMPROS8",30,0)
 .D API^HMPDJFS(.OUT,.ARGS)
"RTN","HMPROS8",31,0)
 Q
"RTN","HMPROS8",32,0)
 ;
"RTN","HMPROS8",33,0)
GETDLIST(RESULT,SERVER) ;
"RTN","HMPROS8",34,0)
 N APPT,ARRAY,DFN,CNT,ERROR,GBL,GSOURCE,GISOUT,LISTIEN,LROOT,NAME,NODE,PATIENTS
"RTN","HMPROS8",35,0)
 N PATTYPE,PATUID,PID,ROOM,ROOT,SOURCE,SOURCETYPE,TYPE,TYPEI,HMPSRC,HMPSORT,HMPOUT
"RTN","HMPROS8",36,0)
 N XOBDATA S XOBDATA(0)=1
"RTN","HMPROS8",37,0)
 N XWBOS S XWBOS(0)=1
"RTN","HMPROS8",38,0)
 K ^TMP("OR",$J)
"RTN","HMPROS8",39,0)
 S HMPSRC=$$LSTSRC(DUZ)
"RTN","HMPROS8",40,0)
 S LISTIEN=$P(HMPSRC,U,2),HMPSRC=$P(HMPSRC,U)
"RTN","HMPROS8",41,0)
 D DEFSORT^ORQPTQ11(.HMPSORT)
"RTN","HMPROS8",42,0)
 D DEFLIST^ORQPTQ11(.HMPOUT)
"RTN","HMPROS8",43,0)
 S GSOURCE=$S(LISTIEN>0:$$STGSRCE(HMPSRC,LISTIEN),1:"")
"RTN","HMPROS8",44,0)
 K ^TMP("HMPRESULT",$J),^TMP("HMPTEMP",$J),^TMP("HMPSORT",$J)
"RTN","HMPROS8",45,0)
 S CNT=0 F  S CNT=$O(^TMP("OR",$J,"PATIENTS",CNT)) Q:CNT'>0  D
"RTN","HMPROS8",46,0)
 .S NODE=$G(^TMP("OR",$J,"PATIENTS",CNT,0))
"RTN","HMPROS8",47,0)
 .D BLDSORT(NODE,HMPSRC,HMPSORT,CNT)
"RTN","HMPROS8",48,0)
 K ^TMP("OR",$J)
"RTN","HMPROS8",49,0)
 D SRTSRC(HMPSORT,HMPSRC,$P($$FDEFSRC^ORQPTQ11(DUZ),U,2))
"RTN","HMPROS8",50,0)
 S GBL=$NA(^TMP("HMPSORT",$J)),CNT=0,LROOT=$L(GBL)-1,ROOT=$E(GBL,1,LROOT)
"RTN","HMPROS8",51,0)
 F  S GBL=$Q(@GBL) Q:$E(GBL,1,LROOT)'=ROOT  D
"RTN","HMPROS8",52,0)
 .S NODE=@GBL
"RTN","HMPROS8",53,0)
 .S CNT=CNT+1
"RTN","HMPROS8",54,0)
 .S DFN=$P(NODE,U),ROOM=$G(^DPT(DFN,.101))
"RTN","HMPROS8",55,0)
 .S PATIENTS(DFN)=""
"RTN","HMPROS8",56,0)
 .S PID=$$PID^HMPDJFS(DFN)
"RTN","HMPROS8",57,0)
 .S PATTYPE=$P(NODE,U,9)
"RTN","HMPROS8",58,0)
 .S APPT=$S(HMPSRC="M":$P(NODE,U,8),1:$P(NODE,U,4)),TYPE=$P(NODE,U,3),TYPEI=$P(NODE,U,7)
"RTN","HMPROS8",59,0)
 .S SOURCE=$S($G(GSOURCE)'="":GSOURCE,1:$$GTSOURCE(TYPE,TYPEI))
"RTN","HMPROS8",60,0)
 .S ISOUT=$S(PATTYPE="OPT":1,1:0)
"RTN","HMPROS8",61,0)
 .I $P(NODE,U,3)'="" S ^TMP("HMPTEMP",$J,"data","patients",CNT,"sourceDisplayName")=$P(NODE,U,3)
"RTN","HMPROS8",62,0)
 .S ^TMP("HMPTEMP",$J,"data","patients",CNT,"pid")=PID
"RTN","HMPROS8",63,0)
 .S ^TMP("HMPTEMP",$J,"data","patients",CNT,"patientType")=$S(PATTYPE="OPT":"Outpatient",1:"Inpatient")
"RTN","HMPROS8",64,0)
 .I $G(APPT)'="" D SETAPPT(SOURCE,APPT,DFN,CNT)
"RTN","HMPROS8",65,0)
 .;S ^TMP("HMPTEMP",$J,"data","patients",CNT,"appointment")=$$JSONDT^HMPUTILS(APPT)
"RTN","HMPROS8",66,0)
 .I $G(ROOM)'=""!(PATTYPE'="OPT") D STINP(DFN,CNT,ROOM)
"RTN","HMPROS8",67,0)
 .;S ^TMP("HMPTEMP",$J,"data","patients",CNT,"roomBed")=ROOM
"RTN","HMPROS8",68,0)
 .D STPTSRC(SOURCE,CNT)
"RTN","HMPROS8",69,0)
 ;
"RTN","HMPROS8",70,0)
GETDLSTX ;
"RTN","HMPROS8",71,0)
 D ENCODE^HMPJSON($NA(^TMP("HMPTEMP",$J)),"RESULT","ERROR")
"RTN","HMPROS8",72,0)
 I SERVER'="" D CHKPAT(.PATIENTS,SERVER)
"RTN","HMPROS8",73,0)
 K ^TMP("HMPSORT",$J)
"RTN","HMPROS8",74,0)
 K ^TMP("HMPTEMP",$J)
"RTN","HMPROS8",75,0)
 Q
"RTN","HMPROS8",76,0)
 ;
"RTN","HMPROS8",77,0)
SETAPPT(SOURCE,APPT,DFN,CNT) ;
"RTN","HMPROS8",78,0)
 N LOC,UID,X
"RTN","HMPROS8",79,0)
 S ^TMP("HMPTEMP",$J,"data","patients",CNT,"appointment")=$$JSONDT^HMPUTILS(APPT)
"RTN","HMPROS8",80,0)
 S UID=$P(SOURCE,U,2),LOC=$P($G(UID),":",5) I LOC'>0 Q
"RTN","HMPROS8",81,0)
 S X="A;"_APPT_";"_+LOC
"RTN","HMPROS8",82,0)
 S ^TMP("HMPTEMP",$J,"data","patients",CNT,"appointmentUid")=$$SETUID^HMPUTILS("appointment",DFN,X)
"RTN","HMPROS8",83,0)
 Q
"RTN","HMPROS8",84,0)
 ;
"RTN","HMPROS8",85,0)
STINP(DFN,CNT,ROOM) ;
"RTN","HMPROS8",86,0)
 N LOC,NODE,UID,VAIN,WIEN
"RTN","HMPROS8",87,0)
 I ROOM'="" S ^TMP("HMPTEMP",$J,"data","patients",CNT,"roomBed")=ROOM
"RTN","HMPROS8",88,0)
 D INP^VADPT I $G(VAIN(1))="" D KVA^VADPT Q
"RTN","HMPROS8",89,0)
 S ^TMP("HMPTEMP",$J,"data","patients",CNT,"admissionUid")=$$SETUID^HMPUTILS("visit",DFN,"H"_VAIN(1))
"RTN","HMPROS8",90,0)
 S WIEN=+$G(VAIN(4)) I WIEN'>0 D KVA^VADPT Q
"RTN","HMPROS8",91,0)
 S LOC=+$G(^DIC(42,WIEN,44))
"RTN","HMPROS8",92,0)
 S NODE=$P($G(^SC(+LOC,0)),U,1,2)
"RTN","HMPROS8",93,0)
 S ^TMP("HMPTEMP",$J,"data","patients",CNT,"locationUid")=$$SETUID^HMPUTILS("location","",LOC,"")
"RTN","HMPROS8",94,0)
 I $P(NODE,U)'="" S ^TMP("HMPTEMP",$J,"data","patients",CNT,"locationName")=$P(NODE,U)
"RTN","HMPROS8",95,0)
 I $P(NODE,U,2)'="" S ^TMP("HMPTEMP",$J,"data","patients",CNT,"locationShortName")=$P(NODE,U,2)
"RTN","HMPROS8",96,0)
 D KVA^VADPT
"RTN","HMPROS8",97,0)
 Q
"RTN","HMPROS8",98,0)
 ;
"RTN","HMPROS8",99,0)
STPTSRC(SOURCE,CNT) ;
"RTN","HMPROS8",100,0)
 N UID,VAIN
"RTN","HMPROS8",101,0)
 S UID=$P(SOURCE,U,2)
"RTN","HMPROS8",102,0)
 S ^TMP("HMPTEMP",$J,"data","patients",CNT,"sourceUid")=UID
"RTN","HMPROS8",103,0)
 I UID'["location" Q
"RTN","HMPROS8",104,0)
 S ^TMP("HMPTEMP",$J,"data","patients",CNT,"locationUid")=UID
"RTN","HMPROS8",105,0)
 I $P(SOURCE,U,3)'="" S ^TMP("HMPTEMP",$J,"data","patients",CNT,"sourceName")=$P(SOURCE,U,3),^TMP("HMPTEMP",$J,"data","patients",CNT,"locationName")=$P(SOURCE,U,3)
"RTN","HMPROS8",106,0)
 I $P(SOURCE,U,4)'="" S ^TMP("HMPTEMP",$J,"data","patients",CNT,"sourceShortName")=$P(SOURCE,U,4),^TMP("HMPTEMP",$J,"data","patients",CNT,"locationShortName")=$P(SOURCE,U,4)
"RTN","HMPROS8",107,0)
 Q
"RTN","HMPROS8",108,0)
 ;
"RTN","HMPROS8",109,0)
LSTSRC(ADUZ) ; Return type of list source
"RTN","HMPROS8",110,0)
 ; T:TeamList, W:Ward List, P:Provider List, S:Specialty List, C:Clinic List, M:Combination
"RTN","HMPROS8",111,0)
 N FROM,IEN,SRV
"RTN","HMPROS8",112,0)
 S:'$G(ADUZ) ADUZ=DUZ
"RTN","HMPROS8",113,0)
 S SRV=$G(^VA(200,ADUZ,5)) I +SRV>0 S SRV=$P(SRV,U)
"RTN","HMPROS8",114,0)
 S FROM=$$GET^XPAR("USR.`"_ADUZ_"^SRV.`"_+$G(SRV),"ORLP DEFAULT LIST SOURCE",1,"Q")
"RTN","HMPROS8",115,0)
 I FROM="M" Q FROM
"RTN","HMPROS8",116,0)
 I FROM="T" S IEN=$$GET^XPAR("USR^SRV.`"_+$G(SRV),"ORLP DEFAULT TEAM",1,"Q") Q FROM_U_+$G(IEN)
"RTN","HMPROS8",117,0)
 I FROM="W" S IEN=$$GET^XPAR("USR^SRV.`"_+$G(SRV),"ORLP DEFAULT WARD",1,"Q") Q FROM_U_+$G(IEN)
"RTN","HMPROS8",118,0)
 I FROM="P" S IEN=$$GET^XPAR("USR^SRV.`"_+$G(SRV),"ORLP DEFAULT PROVIDER",1,"Q") Q FROM_U_+$G(IEN)
"RTN","HMPROS8",119,0)
 I FROM="S" S IEN=$$GET^XPAR("USR^SRV.`"_+$G(SRV),"ORLP DEFAULT SPECIALTY",1,"Q") Q FROM_U_+$G(IEN)
"RTN","HMPROS8",120,0)
 I FROM="C" S API="ORLP DEFAULT CLINIC "_$$UP^XLFSTR($$DOW^XLFDT(DT)),IEN=$$GET^XPAR("USR^SRV.`"_+$G(ORSRV),API,1,"Q") Q FROM_U_+$G(IEN)
"RTN","HMPROS8",121,0)
 Q FROM
"RTN","HMPROS8",122,0)
 ;
"RTN","HMPROS8",123,0)
GETCLIST(RESULT,SERVER,ID,START,END) ;
"RTN","HMPROS8",124,0)
 N APPT,CNT,DFN,ITR,NODE,PATIENTS,PID,SOURCE,TEMP,ERROR,HMPARRAY,HMPSORT,S
"RTN","HMPROS8",125,0)
 K ^TMP("HMPTEMP",$J)
"RTN","HMPROS8",126,0)
 D DEFSORT^ORQPTQ11(.HMPSORT)
"RTN","HMPROS8",127,0)
 D CLINPTS2^ORQPTQ2(.HMPARRAY,ID,START,END)
"RTN","HMPROS8",128,0)
 S SOURCE=$$GTSOURCE("Cl",ID)
"RTN","HMPROS8",129,0)
 S S=" " ; separator for sort
"RTN","HMPROS8",130,0)
 S CNT=0 F  S CNT=$O(HMPARRAY(CNT)) Q:CNT'>0  D
"RTN","HMPROS8",131,0)
 . S NODE=$G(HMPARRAY(CNT))
"RTN","HMPROS8",132,0)
 . Q:$E(NODE)=U  ; i.e., "^No appointments"
"RTN","HMPROS8",133,0)
 . I HMPSORT="P" S TEMP($P(NODE,U,4)_S_CNT)=NODE Q
"RTN","HMPROS8",134,0)
 . S TEMP($P(NODE,U,2)_S_$P(NODE,U,4)_S_CNT)=NODE
"RTN","HMPROS8",135,0)
 S CNT=0,ITR="" F  S ITR=$O(TEMP(ITR)) Q:ITR=""  D
"RTN","HMPROS8",136,0)
 . S NODE=TEMP(ITR),CNT=CNT+1
"RTN","HMPROS8",137,0)
 . S DFN=$P(NODE,U),APPT=$P(NODE,U,4)
"RTN","HMPROS8",138,0)
 . S PATIENTS(DFN)="",PID=$$PID^HMPDJFS(DFN)
"RTN","HMPROS8",139,0)
 . S ^TMP("HMPTEMP",$J,"data","patients",CNT,"pid")=PID
"RTN","HMPROS8",140,0)
 . S ^TMP("HMPTEMP",$J,"data","patients",CNT,"patientType")=$S($P(NODE,U,9)="OPT":"Outpatient",1:"Inpatient")
"RTN","HMPROS8",141,0)
 . I $G(APPT)'="" D SETAPPT(SOURCE,APPT,DFN,CNT)
"RTN","HMPROS8",142,0)
 . ;S ^TMP("HMPTEMP",$J,"data","patients",CNT,"appointment")=$$JSONDT^HMPUTILS(APPT)
"RTN","HMPROS8",143,0)
 D SRTSRC(HMPSORT,"C",$P($G(^SC(ID,0)),U))
"RTN","HMPROS8",144,0)
 D ENCODE^HMPJSON($NA(^TMP("HMPTEMP",$J)),"RESULT","ERROR")
"RTN","HMPROS8",145,0)
 ;I SERVER'="" D CHKPAT(.PATIENTS,SERVER)    ;    *S68-JCH*
"RTN","HMPROS8",146,0)
 Q
"RTN","HMPROS8",147,0)
 ;
"RTN","HMPROS8",148,0)
GTSOURCE(TYPE,INT) ;
"RTN","HMPROS8",149,0)
 N REC,RESULT,SPEC,SPECTYPE,UID
"RTN","HMPROS8",150,0)
 S SPEC=$P(TYPE," ")
"RTN","HMPROS8",151,0)
 S SPECTYPE=$S(SPEC="Cl":"Clinic",SPEC="Wd":"Ward",SPEC="Sp":"Treating Specality",SPEC="Pr":"Provider",SPEC="Tm":"OR Team",1:SPEC)
"RTN","HMPROS8",152,0)
 I SPECTYPE=SPEC Q SPEC_U_""
"RTN","HMPROS8",153,0)
 I SPECTYPE="Ward" S REC=+$G(^DIC(42,INT,44)) I REC'=INT S INT=REC
"RTN","HMPROS8",154,0)
 S UID=$$SETUID^HMPUTILS($S(SPEC="Cl":"location",SPEC="Wd":"location",SPEC="Sp":"treatingSpecialty",SPEC="Pr":"provider",SPEC="Tm":"orTeam",1:SPEC),"",INT,"")
"RTN","HMPROS8",155,0)
 S RESULT=SPECTYPE_U_UID
"RTN","HMPROS8",156,0)
 I UID["location" S RESULT=RESULT_U_$P($G(^SC(+INT,0)),U,1,2)
"RTN","HMPROS8",157,0)
 Q RESULT
"RTN","HMPROS8",158,0)
 ;
"RTN","HMPROS8",159,0)
STGSRCE(SPEC,INT) ;
"RTN","HMPROS8",160,0)
 N REC,RESULT,SPECTYPE,UID
"RTN","HMPROS8",161,0)
 ;T:TeamList, W:Ward List, P:Provider List, S:Specialty List, C:Clinic List, M:Combination
"RTN","HMPROS8",162,0)
 S RESULT=""
"RTN","HMPROS8",163,0)
 I "TWPSC"'[SPEC Q RESULT
"RTN","HMPROS8",164,0)
 S SPECTYPE=$S(SPEC="C":"Clinic",SPEC="W":"Ward",SPEC="S":"Treating Specality",SPEC="P":"Provider",SPEC="T":"OR Team",1:SPEC) I SPECTYPE=SPEC Q RESULT
"RTN","HMPROS8",165,0)
 I SPECTYPE="Ward" S REC=+$G(^DIC(42,INT,44)) I REC'=INT S INT=REC
"RTN","HMPROS8",166,0)
 S UID=$$SETUID^HMPUTILS($S(SPEC="C":"location",SPEC="W":"location",SPEC="S":"treatingSpecialty",SPEC="P":"provider",SPEC="T":"orTeam",1:SPEC),"",INT,"")
"RTN","HMPROS8",167,0)
 S RESULT=SPECTYPE_U_UID
"RTN","HMPROS8",168,0)
 I UID["location" S RESULT=RESULT_U_$P($G(^SC(+INT,0)),U,1,2)
"RTN","HMPROS8",169,0)
 Q RESULT
"RTN","HMPROS8",170,0)
 ;        
"RTN","HMPROS8",171,0)
GETWLIST(RESULT,SERVER,ID) ;
"RTN","HMPROS8",172,0)
 N CNT,DFN,ITR,NODE,PATIENTS,PID,ROOM,TEMP,WARD,ERROR,HMPARRAY,HMPSORT
"RTN","HMPROS8",173,0)
 K ^TMP("HMPTEMP",$J)
"RTN","HMPROS8",174,0)
 D DEFSORT^ORQPTQ11(.HMPSORT)
"RTN","HMPROS8",175,0)
 D BYWARD^ORWPT(.HMPARRAY,ID)
"RTN","HMPROS8",176,0)
 S CNT=0 F  S CNT=$O(HMPARRAY(CNT)) Q:CNT'>0  D
"RTN","HMPROS8",177,0)
 . S NODE=$G(HMPARRAY(CNT))
"RTN","HMPROS8",178,0)
 . Q:$E(NODE)=U  ; i.e., "^No patients found"
"RTN","HMPROS8",179,0)
 . I HMPSORT="R" S TEMP($P(NODE,U,3)_" "_CNT)=NODE Q
"RTN","HMPROS8",180,0)
 . S TEMP($P(NODE,U,2)_" "_CNT)=NODE
"RTN","HMPROS8",181,0)
 S ITR="",CNT=0 F  S ITR=$O(TEMP(ITR)) Q:ITR=""  D
"RTN","HMPROS8",182,0)
 .S NODE=TEMP(ITR),CNT=CNT+1
"RTN","HMPROS8",183,0)
 .S DFN=$P(NODE,U),ROOM=$P(NODE,U,3)
"RTN","HMPROS8",184,0)
 .S PATIENTS(DFN)="",PID=$$PID^HMPDJFS(DFN)
"RTN","HMPROS8",185,0)
 .S ^TMP("HMPTEMP",$J,"data","patients",CNT,"pid")=PID
"RTN","HMPROS8",186,0)
 .D STINP(DFN,CNT,ROOM)
"RTN","HMPROS8",187,0)
 .;S ^TMP("HMPTEMP",$J,"data","patients",CNT,"roomBed")=ROOM
"RTN","HMPROS8",188,0)
 D SRTSRC(HMPSORT,"W",$P($G(^DIC(42,ID,0)),U))
"RTN","HMPROS8",189,0)
 D ENCODE^HMPJSON($NA(^TMP("HMPTEMP",$J)),"RESULT","ERROR")
"RTN","HMPROS8",190,0)
 ;I SERVER'="" D CHKPAT(.PATIENTS,SERVER)    ;    *S68-JCH*
"RTN","HMPROS8",191,0)
 Q
"RTN","HMPROS8",192,0)
SRTSRC(SORT,SRCTYPE,SRCNAME) ; Set sort type, source type, source name
"RTN","HMPROS8",193,0)
 S ^TMP("HMPTEMP",$J,"data","defaultPatientListSourceType")=SRCTYPE
"RTN","HMPROS8",194,0)
 S ^TMP("HMPTEMP",$J,"data","defaultPatientListSourceName")=SRCNAME
"RTN","HMPROS8",195,0)
 S ^TMP("HMPTEMP",$J,"data","defaultPatientListSourceSort")=SORT
"RTN","HMPROS8",196,0)
 Q
"RTN","HMPSR")
0^114^B404968
"RTN","HMPSR",1,0)
HMPSR ;SLC/MKB -- Surgery interface
"RTN","HMPSR",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPSR",3,0)
 ;
"RTN","HMPSR",4,0)
 ; Supported by DBIA #4750
"RTN","HMPSR",5,0)
 ;
"RTN","HMPSR",6,0)
 ; ---------------- Update Triggers ----------------
"RTN","HMPSR",7,0)
 ;
"RTN","HMPSR",8,0)
NEW(IEN,DFN,STS) ; -- new surgery request [from SROERR]
"RTN","HMPSR",9,0)
 S IEN=+$G(IEN),DFN=+$G(DFN) Q:DFN<1
"RTN","HMPSR",10,0)
 D SR^HMPEVNT(DFN,IEN)
"RTN","HMPSR",11,0)
 Q
"RTN","HMPSR",12,0)
 ;
"RTN","HMPSR",13,0)
UPD(IEN,DFN,STS) ; -- updated surgery request [from SROERR0]
"RTN","HMPSR",14,0)
 S IEN=+$G(IEN),DFN=+$G(DFN) Q:DFN<1
"RTN","HMPSR",15,0)
 D SR^HMPEVNT(DFN,IEN)
"RTN","HMPSR",16,0)
 Q
"RTN","HMPSR",17,0)
 ;
"RTN","HMPSR",18,0)
DEL(IEN,DFN) ; -- delete surgery request [from SROERR]
"RTN","HMPSR",19,0)
 S IEN=+$G(IEN),DFN=+$G(DFN) Q:DFN<1
"RTN","HMPSR",20,0)
 D SR^HMPEVNT(DFN,IEN,"@")
"RTN","HMPSR",21,0)
 Q
"RTN","HMPSTMP")
0^115^B57667855
"RTN","HMPSTMP",1,0)
HMPSTMP ;JD/CNP -- MetaStamp ;12/29/14  16:11
"RTN","HMPSTMP",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPSTMP",3,0)
 ;; Returns the most recent date/time
"RTN","HMPSTMP",4,0)
 ;
"RTN","HMPSTMP",5,0)
 Q
"RTN","HMPSTMP",6,0)
 ;
"RTN","HMPSTMP",7,0)
EN(A) ;
"RTN","HMPSTMP",8,0)
 N C
"RTN","HMPSTMP",9,0)
 ; A is either "now" or a domain name (per PTDOMS^HMPDJFSD)
"RTN","HMPSTMP",10,0)
 ; B is the return value (stampTime)
"RTN","HMPSTMP",11,0)
 S C=$$UP^XLFSTR(A)
"RTN","HMPSTMP",12,0)
 I C="NOW" G NOW
"RTN","HMPSTMP",13,0)
 I C="ADM" G ADM
"RTN","HMPSTMP",14,0)
 I C="ALLERGY" G ALL
"RTN","HMPSTMP",15,0)
 I C="AUXILIARY" G AUX
"RTN","HMPSTMP",16,0)
 I C="APPOINTMENT" G APP
"RTN","HMPSTMP",17,0)
 I C="DIAGNOSIS" G DIA
"RTN","HMPSTMP",18,0)
 I C="DOCUMENT" G DOC
"RTN","HMPSTMP",19,0)
 I C="FACTOR" G FAC
"RTN","HMPSTMP",20,0)
 I C="IMMUNIZATION" G IMM
"RTN","HMPSTMP",21,0)
 I C="LAB" G LAB
"RTN","HMPSTMP",22,0)
 I C="MED" G MED
"RTN","HMPSTMP",23,0)
 I C="OBS" G OBS
"RTN","HMPSTMP",24,0)
 I C="ORDER" G ORD
"RTN","HMPSTMP",25,0)
 I C="PROBLEM" G PRO
"RTN","HMPSTMP",26,0)
 I C="PROCEDURE" G PRC
"RTN","HMPSTMP",27,0)
 I C="CONSULT" G CON
"RTN","HMPSTMP",28,0)
 I C="IMAGE" G IMA
"RTN","HMPSTMP",29,0)
 I C="SURGERY" G SUR
"RTN","HMPSTMP",30,0)
 I C="TASK" G TAS
"RTN","HMPSTMP",31,0)
 I C="VISIT" G VIS
"RTN","HMPSTMP",32,0)
 I C="VITAL" G VIT
"RTN","HMPSTMP",33,0)
 I C="PTF" G PTF
"RTN","HMPSTMP",34,0)
 I C="EXAM" G EXA
"RTN","HMPSTMP",35,0)
 I C="CPT" G CPT
"RTN","HMPSTMP",36,0)
 I C="EDUCATION" G EDU
"RTN","HMPSTMP",37,0)
 I C="POV" G POV
"RTN","HMPSTMP",38,0)
 I C="SKIN" G SKI
"RTN","HMPSTMP",39,0)
 I C="TREATMENT" G TRE
"RTN","HMPSTMP",40,0)
 I C="MH" G MH
"RTN","HMPSTMP",41,0)
 Q B
"RTN","HMPSTMP",42,0)
NOW ;
"RTN","HMPSTMP",43,0)
 ; Set stamptime in YYYYMMDDHHMMSS format (FMTHL7 will return time zone)
"RTN","HMPSTMP",44,0)
 S B=$P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")
"RTN","HMPSTMP",45,0)
 Q B
"RTN","HMPSTMP",46,0)
ADM ; Admissions (these are visits whose ID starts with an "H").  JD - 1/126/15
"RTN","HMPSTMP",47,0)
 K DATA
"RTN","HMPSTMP",48,0)
 S DATE(1)=$G(ADM("dateTime"))
"RTN","HMPSTMP",49,0)
 S DATE(2)=$G(ADM("stay","dischargeDateTime"))
"RTN","HMPSTMP",50,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",51,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",52,0)
ALL ; Allergy ; rhl 20141231
"RTN","HMPSTMP",53,0)
 K DATE
"RTN","HMPSTMP",54,0)
 S DATE(1)=$G(REAC("entered"))
"RTN","HMPSTMP",55,0)
 S DATE(2)=$G(REAC("verified"))
"RTN","HMPSTMP",56,0)
 ;  dates in observations array
"RTN","HMPSTMP",57,0)
 N I,J
"RTN","HMPSTMP",58,0)
 S J="",J=$O(DATE(J),-1)
"RTN","HMPSTMP",59,0)
 S I=0
"RTN","HMPSTMP",60,0)
 F  S I=$O(REAC("observations",I)) Q:I=""  D
"RTN","HMPSTMP",61,0)
 . I $G(REAC("observations",I,"date"))]"" S J=J+1,DATE(J)=REAC("observations",I,"date")
"RTN","HMPSTMP",62,0)
 ;  dates in comment array
"RTN","HMPSTMP",63,0)
 N I,J
"RTN","HMPSTMP",64,0)
 S J="",J=$O(DATE(J),-1)
"RTN","HMPSTMP",65,0)
 S I=0
"RTN","HMPSTMP",66,0)
 F  S I=$O(REAC("comments",I)) Q:I=""  D
"RTN","HMPSTMP",67,0)
 . I $G(REAC("comments",I,"entered"))]"" S J=J+1,DATE(J)=REAC("comments",I,"entered")
"RTN","HMPSTMP",68,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",69,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",70,0)
AUX ; Auxiliary
"RTN","HMPSTMP",71,0)
 Q ""
"RTN","HMPSTMP",72,0)
 K DATE
"RTN","HMPSTMP",73,0)
 ;S DATE(1)=$G(
"RTN","HMPSTMP",74,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",75,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",76,0)
APP ; Appointment
"RTN","HMPSTMP",77,0)
 K DATE
"RTN","HMPSTMP",78,0)
 S DATE(1)=$G(APPT("dateTime"))
"RTN","HMPSTMP",79,0)
 S DATE(2)=$G(APPT("checkIn"))
"RTN","HMPSTMP",80,0)
 S DATE(3)=$G(APPT("checkOut"))
"RTN","HMPSTMP",81,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",82,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",83,0)
DIA ; Diagnosis
"RTN","HMPSTMP",84,0)
 Q ""
"RTN","HMPSTMP",85,0)
 K DATE
"RTN","HMPSTMP",86,0)
 ;S DATE(1)=$G(
"RTN","HMPSTMP",87,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",88,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",89,0)
DOC ; Document
"RTN","HMPSTMP",90,0)
 K DATE
"RTN","HMPSTMP",91,0)
 S DATE(1)=$G(DOC("referenceDateTime"))
"RTN","HMPSTMP",92,0)
 S DATE(2)=$G(DOC("entered"))
"RTN","HMPSTMP",93,0)
 ;go through HMPDJ array
"RTN","HMPSTMP",94,0)
 N I,II,J
"RTN","HMPSTMP",95,0)
 S J=""
"RTN","HMPSTMP",96,0)
 S J=$O(DATE(J),-1)
"RTN","HMPSTMP",97,0)
 S I=0
"RTN","HMPSTMP",98,0)
 F  S I=$O(DOC("text",I)) Q:I=""  D
"RTN","HMPSTMP",99,0)
 . I $G(DOC("text",I,"dateTime"))]"" S J=J+1,DATE(J)=DOC("text",I,"dateTime")
"RTN","HMPSTMP",100,0)
 . S II=0 F  S II=$O(DOC("text",I,"clinicians",II)) Q:II=""  D
"RTN","HMPSTMP",101,0)
 . . I $G(DOC("text",I,"clinicians",II,"signedDateTime"))]"" S J=J+1,DATE(J)=DOC("text",I,"clinicians",II,"signedDateTime")
"RTN","HMPSTMP",102,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",103,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",104,0)
FAC ; Factor
"RTN","HMPSTMP",105,0)
 K DATE
"RTN","HMPSTMP",106,0)
 S DATE(1)=$G(PCE("entered"))
"RTN","HMPSTMP",107,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",108,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",109,0)
IMM ; Immunization
"RTN","HMPSTMP",110,0)
 K DATE
"RTN","HMPSTMP",111,0)
 S DATE(1)=$G(PCE("administeredDateTime"))
"RTN","HMPSTMP",112,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",113,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",114,0)
LAB ; Lab
"RTN","HMPSTMP",115,0)
 K DATE
"RTN","HMPSTMP",116,0)
 S DATE(1)=$G(LAB("observed"))
"RTN","HMPSTMP",117,0)
 S DATE(2)=$G(LAB("resulted"))
"RTN","HMPSTMP",118,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",119,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",120,0)
MED ; Med
"RTN","HMPSTMP",121,0)
 K DATE
"RTN","HMPSTMP",122,0)
 S DATE(1)=$G(MED("orders",1,"ordered"))
"RTN","HMPSTMP",123,0)
 S DATE(2)=$G(MED("overallStart"))
"RTN","HMPSTMP",124,0)
 S DATE(3)=$G(MED("overallStop"))
"RTN","HMPSTMP",125,0)
 S DATE(4)=$G(MED("stopped"))
"RTN","HMPSTMP",126,0)
 S DATE(5)=$G(MED("lastFilled"))
"RTN","HMPSTMP",127,0)
 ;go through value array
"RTN","HMPSTMP",128,0)
 N I,J
"RTN","HMPSTMP",129,0)
 S J="",J=$O(DATE(J),-1)
"RTN","HMPSTMP",130,0)
 S I=0
"RTN","HMPSTMP",131,0)
 F  S I=$O(MED("dosages",I)) Q:I=""  D
"RTN","HMPSTMP",132,0)
 . I $G(MED("dosages",I,"start"))]"" S J=J+1,DATE(J)=MED("dosages",I,"start")
"RTN","HMPSTMP",133,0)
 . I $G(MED("dosages",I,"stop"))]"" S J=J+1,DATE(J)=MED("dosages",I,"stop")
"RTN","HMPSTMP",134,0)
 S J="",J=$O(DATE(J),-1)
"RTN","HMPSTMP",135,0)
 S I=0
"RTN","HMPSTMP",136,0)
 F  S I=$O(MED("fills",I)) Q:I=""  D
"RTN","HMPSTMP",137,0)
 . I $G(MED("fills",I,"dispenseDate"))]"" S J=J+1,DATE(J)=MED("fills",I,"dispenseDate")
"RTN","HMPSTMP",138,0)
 . I $G(MED("fills",I,"releaseDate"))]"" S J=J+1,DATE(J)=MED("fills",I,"releaseDate")
"RTN","HMPSTMP",139,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",140,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",141,0)
OBS ; Obs ; rhl 20141231
"RTN","HMPSTMP",142,0)
 K DATE
"RTN","HMPSTMP",143,0)
 S DATE(1)=$G(CLIO("entered"))
"RTN","HMPSTMP",144,0)
 S DATE(2)=$G(CLIO("observed"))
"RTN","HMPSTMP",145,0)
 S DATE(3)=$G(CLIO("setStart"))
"RTN","HMPSTMP",146,0)
 S DATE(4)=$G(CLIO("setStop"))
"RTN","HMPSTMP",147,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",148,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",149,0)
ORD ; Order ; RHL 20141231
"RTN","HMPSTMP",150,0)
 K DATE
"RTN","HMPSTMP",151,0)
 S DATE(1)=$G(ORDER("entered"))
"RTN","HMPSTMP",152,0)
 ;S DATE(2)=$G(ORDER("start"))
"RTN","HMPSTMP",153,0)
 ;S DATE(3)=$G(ORDER("stop"))
"RTN","HMPSTMP",154,0)
 ;these are dates in signature/verification dates
"RTN","HMPSTMP",155,0)
 I $G(ORDER("clinicians")) D
"RTN","HMPSTMP",156,0)
 . N I,J
"RTN","HMPSTMP",157,0)
 . S J="",J=$O(DATE(J),-1)
"RTN","HMPSTMP",158,0)
 . S I=0
"RTN","HMPSTMP",159,0)
 . F  S I=$O(ORDER("clinicians",I)) Q:I=""  D
"RTN","HMPSTMP",160,0)
 . . I $G(ORDER("clinicians",I,"signedDateTime"))]"" S J=J+1,DATE(J)=ORDER("clinicians",I,"signedDateTime")
"RTN","HMPSTMP",161,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",162,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",163,0)
PRO ; Problem
"RTN","HMPSTMP",164,0)
 K DATE
"RTN","HMPSTMP",165,0)
 S DATE(1)=$G(PROB("entered"))
"RTN","HMPSTMP",166,0)
 S DATE(2)=$G(PROB("updated"))
"RTN","HMPSTMP",167,0)
 S DATE(3)=$G(PROB("onset"))
"RTN","HMPSTMP",168,0)
 S DATE(4)=$G(PROB("resolved"))
"RTN","HMPSTMP",169,0)
 ;these are dates in possible comments
"RTN","HMPSTMP",170,0)
 N I,J
"RTN","HMPSTMP",171,0)
 S J="",J=$O(DATE(J),-1)
"RTN","HMPSTMP",172,0)
 S I=0
"RTN","HMPSTMP",173,0)
 F  S I=$O(PROB("comments",I)) Q:I=""  D
"RTN","HMPSTMP",174,0)
 . I $G(PROB("comments",I,"entered"))]"" S J=J+1,DATE(J)=PROB("comments",I,"entered")
"RTN","HMPSTMP",175,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",176,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",177,0)
PRC ; Procedure
"RTN","HMPSTMP",178,0)
 K DATE
"RTN","HMPSTMP",179,0)
 S DATE(1)=$G(PROC("dateTime"))
"RTN","HMPSTMP",180,0)
 S DATE(2)=$G(PROC("requested"))
"RTN","HMPSTMP",181,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",182,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",183,0)
CON ; Consult
"RTN","HMPSTMP",184,0)
 K DATE
"RTN","HMPSTMP",185,0)
 S DATE(1)=$G(CONS("dateTime"))
"RTN","HMPSTMP",186,0)
 S DATE(2)=$G(CONS("earliestDate"))
"RTN","HMPSTMP",187,0)
 S DATE(3)=$G(ACT("entered"))
"RTN","HMPSTMP",188,0)
 S DATE(4)=$G(ACT("dateTime"))
"RTN","HMPSTMP",189,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",190,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",191,0)
IMA ; Image ; RHL 20150102
"RTN","HMPSTMP",192,0)
 K DATE
"RTN","HMPSTMP",193,0)
 S DATE(1)=$G(EXAM("dateTime"))
"RTN","HMPSTMP",194,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",195,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",196,0)
SUR ; Surgery ; RHL 20150102
"RTN","HMPSTMP",197,0)
 K DATE
"RTN","HMPSTMP",198,0)
 S DATE(1)=$G(SURG("dateTime"))
"RTN","HMPSTMP",199,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",200,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",201,0)
TAS ; Task
"RTN","HMPSTMP",202,0)
 Q ""
"RTN","HMPSTMP",203,0)
 K DATE
"RTN","HMPSTMP",204,0)
 ;S DATE(1)=$G(
"RTN","HMPSTMP",205,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",206,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",207,0)
VIS ; Visit
"RTN","HMPSTMP",208,0)
 K DATE
"RTN","HMPSTMP",209,0)
 S DATE(1)=$G(VST("dateTime"))
"RTN","HMPSTMP",210,0)
 S DATE(2)=$G(VST("checkOut"))
"RTN","HMPSTMP",211,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",212,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",213,0)
VIT ; Vital
"RTN","HMPSTMP",214,0)
 K DATE
"RTN","HMPSTMP",215,0)
 S DATE(1)=$G(VIT("observed"))
"RTN","HMPSTMP",216,0)
 S DATE(2)=$G(VIT("resulted"))
"RTN","HMPSTMP",217,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",218,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",219,0)
PTF ; Ptf ; RHL 20150102
"RTN","HMPSTMP",220,0)
 K DATE
"RTN","HMPSTMP",221,0)
 S DATE(1)=$G(PTF("arrivalDateTime"))
"RTN","HMPSTMP",222,0)
 S DATE(2)=$G(PTF("dischargeDateTime"))
"RTN","HMPSTMP",223,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",224,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",225,0)
EXA ; Exam
"RTN","HMPSTMP",226,0)
 K DATE
"RTN","HMPSTMP",227,0)
 S DATE(1)=$G(PCE("entered"))
"RTN","HMPSTMP",228,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",229,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",230,0)
CPT ; CPT
"RTN","HMPSTMP",231,0)
 K DATE
"RTN","HMPSTMP",232,0)
 S DATE(1)=$G(PCE("entered"))
"RTN","HMPSTMP",233,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",234,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",235,0)
EDU ; Education
"RTN","HMPSTMP",236,0)
 K DATE
"RTN","HMPSTMP",237,0)
 S DATE(1)=$G(PCE("entered"))
"RTN","HMPSTMP",238,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",239,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",240,0)
POV ; Pov
"RTN","HMPSTMP",241,0)
 K DATE
"RTN","HMPSTMP",242,0)
 S DATE(1)=$G(PCE("entered"))
"RTN","HMPSTMP",243,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",244,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",245,0)
SKI ; Skin
"RTN","HMPSTMP",246,0)
 K DATE
"RTN","HMPSTMP",247,0)
 S DATE(1)=$G(PCE("entered"))
"RTN","HMPSTMP",248,0)
 S DATE(2)=$G(PCE("dateRead"))
"RTN","HMPSTMP",249,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",250,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",251,0)
TRE ; Treatment ; RHL 20150102
"RTN","HMPSTMP",252,0)
 K DATE
"RTN","HMPSTMP",253,0)
 S DATE(1)=$G(NTX("entered"))
"RTN","HMPSTMP",254,0)
 S DATE(2)=$G(NTX("start"))
"RTN","HMPSTMP",255,0)
 S DATE(3)=$G(NTX("stop"))
"RTN","HMPSTMP",256,0)
 ;these are dates in signature/verification dates; is this used for NTX orders
"RTN","HMPSTMP",257,0)
 I $G(NTX("clinicians")) D
"RTN","HMPSTMP",258,0)
 . N I,J
"RTN","HMPSTMP",259,0)
 . S J="",J=$O(DATE(J),-1)
"RTN","HMPSTMP",260,0)
 . S I=0
"RTN","HMPSTMP",261,0)
 . F  S I=$O(NTX("clinicians",I)) Q:I=""  D
"RTN","HMPSTMP",262,0)
 . . I $G(NTX("clinicians",I,"signedDateTime"))]"" S J=J+1,DATE(J)=NTX("clinicians",I,"signedDateTime")
"RTN","HMPSTMP",263,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",264,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",265,0)
MH ; Mh   ; RHL 20150103
"RTN","HMPSTMP",266,0)
 K DATE
"RTN","HMPSTMP",267,0)
 S DATE(1)=$G(MH("administeredDateTime"))
"RTN","HMPSTMP",268,0)
 ;DETERMINE WHICH ONE IS NEWER
"RTN","HMPSTMP",269,0)
 Q $$FINDNEW(.DATE)
"RTN","HMPSTMP",270,0)
FINDNEW(DATE)  ;Find the newest date from an array
"RTN","HMPSTMP",271,0)
 ;DATE array has the following format DATE(1)=DATE DATE(2)=DATE
"RTN","HMPSTMP",272,0)
 N X,ADATE,COMDATE
"RTN","HMPSTMP",273,0)
 S X=""
"RTN","HMPSTMP",274,0)
 F  S X=$O(DATE(X)) Q:X=""  D
"RTN","HMPSTMP",275,0)
 . ;S ADATE=$E(DATE(X),1,12) ; normalize dates to YYYYMMDDHHMM
"RTN","HMPSTMP",276,0)
 . S ADATE=$E(DATE(X)_"000000",1,14) ;Need padding down to the second (YYYYMMDDHHMM). JD-1/23/15
"RTN","HMPSTMP",277,0)
 . I $G(COMDATE)="" S COMDATE=ADATE
"RTN","HMPSTMP",278,0)
 . I ADATE>COMDATE S COMDATE=ADATE
"RTN","HMPSTMP",279,0)
 Q COMDATE
"RTN","HMPTFU2")
0^116^B33657314
"RTN","HMPTFU2",1,0)
HMPTFU2 ;SLC/JCH-Utilities for the Treating Facility file 391.91 ; 02/05/15 15:25
"RTN","HMPTFU2",2,0)
 ;;2.0;Health Management Platform (HMP);1;Feb 05, 2015;Build 53
"RTN","HMPTFU2",3,0)
 ;
"RTN","HMPTFU2",4,0)
 ; Reference to ^DGCN(391.91 is NOT currently supported; see ICR #2911 for an existing Private ICR between 
"RTN","HMPTFU2",5,0)
 ;  Registration and CIRN that would meet the needs of this routine, or provide an example for a new ICR.
"RTN","HMPTFU2",6,0)
 ;
"RTN","HMPTFU2",7,0)
TFL(LIST,PT) ;for this PT [patient] (either DFN, ICN or EDIPI) return the list of treating facilities
"RTN","HMPTFU2",8,0)
 ; CALLED FROM RPC HMP LOCAL GET CORRESPONDINGIDS
"RTN","HMPTFU2",9,0)
 ; PT values :   Source ID^Source ID Type^Assigning Authority^Assigning Facility
"RTN","HMPTFU2",10,0)
 ;  ICN example:   1008520438V882204^NI^USVHA^200M
"RTN","HMPTFU2",11,0)
 ;  DFN example:   100000511^PI^USVHA^500
"RTN","HMPTFU2",12,0)
 ;  EDIPI example: 852043888^NI^USDOD^200DOD
"RTN","HMPTFU2",13,0)
 ;
"RTN","HMPTFU2",14,0)
 ; SOURCE ID:      SOURCE ID is the unique system assigned identifier at the identified facility for the
"RTN","HMPTFU2",15,0)
 ;                 patient record.  The value of SOURCE ID varies, depending on the source facility. 
"RTN","HMPTFU2",16,0)
 ;                 If SOURCE ID is from the Master Patient Index, the value is the Integration 
"RTN","HMPTFU2",17,0)
 ;                 Control Number (ICN).  If SOURCE ID is from the Department of Defense (DOD), the
"RTN","HMPTFU2",18,0)
 ;                 value is the Electronic Data Interchange Personal Identifier (EDIPI), which is 
"RTN","HMPTFU2",19,0)
 ;                 their equivalent of an ICN. In the future, SOURCE ID may come from other sources 
"RTN","HMPTFU2",20,0)
 ;                 due to additional initiatives.
"RTN","HMPTFU2",21,0)
 ;
"RTN","HMPTFU2",22,0)
 ; SOURCE ID TYPE: SOURCE ID TYPE defines the data source for the TREATING FACILITY LIST file (#391.91) entry.
"RTN","HMPTFU2",23,0)
 ;                 The source ID type is a reference to the HL7 Table 0203, Identifier Type, and the VA
"RTN","HMPTFU2",24,0)
 ;                 Identity Management user defined values: NI (National Identifier), PI (Patient Identifier)
"RTN","HMPTFU2",25,0)
 ; 
"RTN","HMPTFU2",26,0)
 ; Return:
"RTN","HMPTFU2",27,0)
 ; This will return the ICN and the list of treating facilities in the following format:
"RTN","HMPTFU2",28,0)
 ;   RESULT(n)=Id^IdType^AssigningFacility^AssigningAuthority^IdStatus
"RTN","HMPTFU2",29,0)
 ;     Examples:
"RTN","HMPTFU2",30,0)
 ;      RESULT(1)="1011232151V598646^NI^200M^A"
"RTN","HMPTFU2",31,0)
 ;      RESULT(2)="7168937^PI^91E3^USVHA^A"
"RTN","HMPTFU2",32,0)
 ;      RESULT(3)="852043888^NI^200DOD^USDOD^A"
"RTN","HMPTFU2",33,0)
 ;
"RTN","HMPTFU2",34,0)
 ; ID STATUS:      ID STATUS supports joint VA/DoD medical centers, Veteran's Record Management (VRM), and Virtual 
"RTN","HMPTFU2",35,0)
 ;                 Lifetime Electronic Record (VLER) initiatives.  This field allows the capture of resolved 
"RTN","HMPTFU2",36,0)
 ;                 duplicate events and exposes the related identifier and identifier status to the consuming 
"RTN","HMPTFU2",37,0)
 ;                 applications. A value of ""A"" indicates that the patient record is an active record on 
"RTN","HMPTFU2",38,0)
 ;                 the identifying system (e.g., VAMC or DoD). A value of "H" indicates that the patient 
"RTN","HMPTFU2",39,0)
 ;                 record was identified as part of a duplicate pair, has been merged, and is no longer active 
"RTN","HMPTFU2",40,0)
 ;                 on the identifying system (e.g., VAMC or DoD).
"RTN","HMPTFU2",41,0)
 ;
"RTN","HMPTFU2",42,0)
 N X,ICN,DFN,EDIPI,ASSIGN,ID,SITE,TYPE,SITEIEN,TFIEN
"RTN","HMPTFU2",43,0)
 ;
"RTN","HMPTFU2",44,0)
 ; Master Patient Index (MPI) must be installed to continue
"RTN","HMPTFU2",45,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T S LIST(1)="-1^MPI Not Installed" Q
"RTN","HMPTFU2",46,0)
 ;
"RTN","HMPTFU2",47,0)
 K LIST ; Clear "return" variable
"RTN","HMPTFU2",48,0)
 ;
"RTN","HMPTFU2",49,0)
 ; what do we have
"RTN","HMPTFU2",50,0)
 S TYPE=$P(PT,"^",2) ; SOURCE ID TYPE
"RTN","HMPTFU2",51,0)
 S SITE=$P(PT,"^",4) ; 
"RTN","HMPTFU2",52,0)
 S ID=$P(PT,"^")
"RTN","HMPTFU2",53,0)
 S ASSIGN=$P(PT,"^",3)
"RTN","HMPTFU2",54,0)
 ; check input data
"RTN","HMPTFU2",55,0)
 I ID']"" S LIST(1)="-1^Id is not defined." Q
"RTN","HMPTFU2",56,0)
 I TYPE'="NI",TYPE'="PI" S LIST(1)="-1^Invalid Id Type." Q
"RTN","HMPTFU2",57,0)
 I ASSIGN'="USVHA",ASSIGN'="USDOD" S LIST(1)="-1^Invalid Assigning Authority." Q
"RTN","HMPTFU2",58,0)
 I SITE']"" S LIST(1)="-1^Missing Assigning Facility." Q
"RTN","HMPTFU2",59,0)
 ; find the ien for the station number
"RTN","HMPTFU2",60,0)
 S SITEIEN=$O(^DIC(4,"D",SITE,0))
"RTN","HMPTFU2",61,0)
 I 'SITEIEN S LIST(1)="-1^Assigning Facility is not defined in database." Q
"RTN","HMPTFU2",62,0)
 ;
"RTN","HMPTFU2",63,0)
 I TYPE="PI",ASSIGN="USVHA" S DFN=ID
"RTN","HMPTFU2",64,0)
 I TYPE="NI",ASSIGN="USVHA",SITE="200M" S ICN=ID
"RTN","HMPTFU2",65,0)
 I TYPE="NI",ASSIGN="USDOD",SITE="200DOD" S EDIPI=ID
"RTN","HMPTFU2",66,0)
 I $D(ICN) S DFN=$$GETDFN^MPIF001(ICN) D  Q:$D(LIST(1))
"RTN","HMPTFU2",67,0)
 . I +DFN<0 S LIST(1)="-1^ICN is not known" Q
"RTN","HMPTFU2",68,0)
 . S SITEIEN=$$IEN^XUAF4($P($$SITE^VASITE,"^",3))
"RTN","HMPTFU2",69,0)
 ;
"RTN","HMPTFU2",70,0)
 I $D(DFN) S ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPTFU2",71,0)
 ; DFN should be defined, but ICN may not.
"RTN","HMPTFU2",72,0)
 ;Use new xref AISS appropriately to retrieve DFN from EDIPI
"RTN","HMPTFU2",73,0)
 I $D(EDIPI)=""!(ASSIGN="")!(TYPE="")!(SITEIEN="") S LIST(1)="-1^Insufficient data" Q
"RTN","HMPTFU2",74,0)
 I $D(EDIPI),'$D(^DGCN(391.91,"AISS",EDIPI,ASSIGN,TYPE,SITEIEN)) D  Q
"RTN","HMPTFU2",75,0)
 . S LIST(1)="-1^EDIPI Record is unknown at this facility"
"RTN","HMPTFU2",76,0)
 I $D(EDIPI),$D(^DGCN(391.91,"AISS",EDIPI,ASSIGN,TYPE,SITEIEN)) D
"RTN","HMPTFU2",77,0)
 .S EN=$O(^DGCN(391.91,"AISS",EDIPI,ASSIGN,TYPE,SITEIEN,0))
"RTN","HMPTFU2",78,0)
 .S DFN=$P($G(^DGCN(391.91,EN,0)),"^")
"RTN","HMPTFU2",79,0)
 ;
"RTN","HMPTFU2",80,0)
 ; if ICN is not defined, it is OK, but DFN should be defined
"RTN","HMPTFU2",81,0)
 ; bad input, such as Id^NI^USVHA^123
"RTN","HMPTFU2",82,0)
 I '$G(DFN) S LIST(1)="-1^Invalid input" Q
"RTN","HMPTFU2",83,0)
 ; check DFN and Site to be matching an entry in file #391.91
"RTN","HMPTFU2",84,0)
 I '$O(^DGCN(391.91,"APAT",DFN,SITEIEN,0)) D  Q
"RTN","HMPTFU2",85,0)
 . S LIST(1)="-1^Id as '"_ID_"'"_" is not in database"
"RTN","HMPTFU2",86,0)
 ; DFN should be defined, but ICN may not.
"RTN","HMPTFU2",87,0)
 S X=$$QUERYTF($P($G(ICN),"V"),"LIST")
"RTN","HMPTFU2",88,0)
 I $P(X,U)="1" S LIST(1)="-1"_U_$P(X,U,2) Q
"RTN","HMPTFU2",89,0)
 Q
"RTN","HMPTFU2",90,0)
 ;
"RTN","HMPTFU2",91,0)
GETICN(EDIPI) ;return the ICN when EDIPI is passed
"RTN","HMPTFU2",92,0)
 N EN,DFN,ICN,IEN
"RTN","HMPTFU2",93,0)
 S IEN=$$IEN^XUAF4("200DOD")
"RTN","HMPTFU2",94,0)
 I 'IEN Q "-1^Unknown Assigning Facility."
"RTN","HMPTFU2",95,0)
 I '$D(^DGCN(391.91,"ASCR",EDIPI,IEN)) Q "-1^EDIPI Record is unknown at this facility"
"RTN","HMPTFU2",96,0)
 I $D(^DGCN(391.91,"ASCR",EDIPI,IEN)) D
"RTN","HMPTFU2",97,0)
 .S EN=$O(^DGCN(391.91,"ASCR",EDIPI,$$IEN^XUAF4("200DOD"),""))
"RTN","HMPTFU2",98,0)
 .S DFN=$P($G(^DGCN(391.91,EN,0)),"^")
"RTN","HMPTFU2",99,0)
 .I DFN'="" S ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPTFU2",100,0)
 .I DFN="" S ICN="-1^No Site Record associated with this entry"
"RTN","HMPTFU2",101,0)
 Q ICN
"RTN","HMPTFU2",102,0)
 ;
"RTN","HMPTFU2",103,0)
QUERYTF(PAT,ARY) ;a query for Treating Facility.
"RTN","HMPTFU2",104,0)
 ;INPUT   PAT - The patient's ICN
"RTN","HMPTFU2",105,0)
 ;        ARY - The array in which to return the Treating facility info.
"RTN","HMPTFU2",106,0)
 ;OUTPUT  A list of the Treating Facilities in the array provided from
"RTN","HMPTFU2",107,0)
 ;        the parameter.  It will be in the structure of x(1), x(2) etc.
"RTN","HMPTFU2",108,0)
 ;  Ex  X(1)=<ID> ^ <ID TYPE> ^ <Assigning Authority> ^ <Assigning Facility> ^ <ID Status>
"RTN","HMPTFU2",109,0)
 ;
"RTN","HMPTFU2",110,0)
 ; This is also a function call.  If there is an error then "1^error description" will be returned. 
"RTN","HMPTFU2",111,0)
 ; If no data is found the array will not be populated and "1^error description" will be returned.
"RTN","HMPTFU2",112,0)
 ;
"RTN","HMPTFU2",113,0)
 N PDFN,HMPER,LP,CTR
"RTN","HMPTFU2",114,0)
 ;
"RTN","HMPTFU2",115,0)
 ; ICN is not required
"RTN","HMPTFU2",116,0)
 I ('$D(ARY)) S HMPER="1^Parameter missing." G QUERYTFQ
"RTN","HMPTFU2",117,0)
 S HMPER=0,CTR=1
"RTN","HMPTFU2",118,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G QUERYTFQ
"RTN","HMPTFU2",119,0)
 S PDFN=$G(DFN)
"RTN","HMPTFU2",120,0)
 I '$G(PDFN) S HMPER="1^DFN is not defined." G QUERYTFQ
"RTN","HMPTFU2",121,0)
 ;SET FIRST ENTRY TO BE THE ICN - FULL ICN - PAT IS NOT THE ICN
"RTN","HMPTFU2",122,0)
 S @ARY@(CTR)=$$GETICN^MPIF001(PDFN)_"^NI^200M^USVHA^A"
"RTN","HMPTFU2",123,0)
 ;**856 - MVI 1371 (ckn)
"RTN","HMPTFU2",124,0)
 ;Loop through all TFIENs for site
"RTN","HMPTFU2",125,0)
 ;F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,"")) D SET(TFIEN,ARY,.CTR)
"RTN","HMPTFU2",126,0)
 F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:'LP  D
"RTN","HMPTFU2",127,0)
 .S TFIEN=0 F  S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,LP,TFIEN)) Q:'TFIEN  D
"RTN","HMPTFU2",128,0)
 ..D SET(TFIEN,ARY,.CTR)
"RTN","HMPTFU2",129,0)
 I $D(@ARY)'>9 S HMPER="1^Could not find Treating Facilities"
"RTN","HMPTFU2",130,0)
QUERYTFQ Q HMPER
"RTN","HMPTFU2",131,0)
 ;
"RTN","HMPTFU2",132,0)
SET(TFIEN,ARY,CTR) ;This sets the array with the treating facility list.
"RTN","HMPTFU2",133,0)
 ;  Ex  ARY(1)=<ID> ^ <ID TYPE> ^ <Assigning Facility> ^ <Assigning Authority> ^ <ID Status>
"RTN","HMPTFU2",134,0)
 N DGCN,INSTIEN,SOURCE,EN,SDFN,STATUS,SITEN,ID,IDTYPE,SITE,ASSAUTH,FOUND,NODE,NODE0,NODE2
"RTN","HMPTFU2",135,0)
 S DGCN(0)=$G(^DGCN(391.91,TFIEN,0)),SITEN=""
"RTN","HMPTFU2",136,0)
 ;
"RTN","HMPTFU2",137,0)
 S INSTIEN=$P($G(DGCN(0)),"^",2) ;            TREATING FACILITY LIST (#391.91) INSTITUTION field (#.02)
"RTN","HMPTFU2",138,0)
 I INSTIEN'="" S SITEN=$$STA^XUAF4(INSTIEN) ; STATION from Institution IEN
"RTN","HMPTFU2",139,0)
 S ID=$P(DGCN(0),"^") ;                       ID=Patient DFN field (#.01)
"RTN","HMPTFU2",140,0)
 ;
"RTN","HMPTFU2",141,0)
 S NODE2=$G(^DGCN(391.91,TFIEN,2))
"RTN","HMPTFU2",142,0)
 S SDFN=$P(NODE2,"^",2) ; SDFN="SOURCE ID"
"RTN","HMPTFU2",143,0)
 S STATUS=$P(NODE2,"^",3) ; STATUS="IDENTIFIER STATUS"
"RTN","HMPTFU2",144,0)
 S ASSAUTH=$P(NODE2,"^") ; Assigning Authority
"RTN","HMPTFU2",145,0)
 ;
"RTN","HMPTFU2",146,0)
 S NODE0=$G(^DGCN(391.91,TFIEN,0))
"RTN","HMPTFU2",147,0)
 S IDTYPE=$P(NODE0,"^",9) ; SOURCE ID TYPE
"RTN","HMPTFU2",148,0)
 ;
"RTN","HMPTFU2",149,0)
 I SITEN="200DOD"!(SITEN["200N") S IDTYPE="NI"
"RTN","HMPTFU2",150,0)
 I SITEN="200DOD" S ASSAUTH="USDOD"
"RTN","HMPTFU2",151,0)
 I IDTYPE="" S IDTYPE="PI"
"RTN","HMPTFU2",152,0)
 I ASSAUTH="" S ASSAUTH="USVHA"
"RTN","HMPTFU2",153,0)
 I SITEN["200N"&(IDTYPE="NI")&(ASSAUTH="USVHA") S ASSAUTH=""
"RTN","HMPTFU2",154,0)
 I IDTYPE="PI" S SITEN=$$SYS^HMPUTILS
"RTN","HMPTFU2",155,0)
 ;
"RTN","HMPTFU2",156,0)
 ; If VA Internal Patient ID, get site hash from domain associated with Treating Facility
"RTN","HMPTFU2",157,0)
 S NODE0=$G(^DGCN(391.91,TFIEN,0))
"RTN","HMPTFU2",158,0)
 S NODE2=$G(^DGCN(391.91,TFIEN,2))
"RTN","HMPTFU2",159,0)
 S SDFN=$P(NODE2,"^",2),STATUS=$P(NODE2,"^",3),IDTYPE=$P(NODE0,"^",9)
"RTN","HMPTFU2",160,0)
 S ASSAUTH=$P(NODE2,"^")
"RTN","HMPTFU2",161,0)
 I SITEN="200DOD"!(SITEN["200N") S IDTYPE="NI"
"RTN","HMPTFU2",162,0)
 I SITEN="200DOD" S ASSAUTH="USDOD"
"RTN","HMPTFU2",163,0)
 I IDTYPE="" S IDTYPE="PI"
"RTN","HMPTFU2",164,0)
 I ASSAUTH="" S ASSAUTH="USVHA"
"RTN","HMPTFU2",165,0)
 I SITEN["200N"&(IDTYPE="NI")&(ASSAUTH="USVHA") S ASSAUTH=""
"RTN","HMPTFU2",166,0)
 I SDFN'="" S CTR=CTR+1,@ARY@(CTR)=SDFN_"^"_IDTYPE_"^"_SITEN_"^"_ASSAUTH_"^"_STATUS,FOUND=1
"RTN","HMPTFU2",167,0)
 Q
"RTN","HMPTRPC")
0^117^B3719901
"RTN","HMPTRPC",1,0)
HMPTRPC ;SLC/AGP - Generic RPC controller for HMP ; 7/30/13 3:29pm
"RTN","HMPTRPC",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPTRPC",3,0)
 ;
"RTN","HMPTRPC",4,0)
 ;
"RTN","HMPTRPC",5,0)
RPC(HMPRES,PARAMS) ; Process request via RPC instead of CSP
"RTN","HMPTRPC",6,0)
 N X,REQ,HMPCNT,HMPSITE,HMPUSER,HMPDBUG,HMPSTA
"RTN","HMPTRPC",7,0)
 ;S HMPXML=$NA(^TMP($J,"HMP RESULTS")) K @HMPXML
"RTN","HMPTRPC",8,0)
 S HMPCNT=0
"RTN","HMPTRPC",9,0)
 ;S HMPUSER=DUZ,HMPSITE=DUZ(2),HMPSTA=$$STA^XUAF4(DUZ(2))
"RTN","HMPTRPC",10,0)
 S X="" F  S X=$O(PARAMS(X)) Q:X=""  S REQ(X,1)=PARAMS(X)
"RTN","HMPTRPC",11,0)
 ;
"RTN","HMPTRPC",12,0)
COMMON ; Come here for both CSP and RPC Mode
"RTN","HMPTRPC",13,0)
 ; 
"RTN","HMPTRPC",14,0)
 N CMD
"RTN","HMPTRPC",15,0)
 S CMD=$G(REQ("command",1))
"RTN","HMPTRPC",16,0)
 ;
"RTN","HMPTRPC",17,0)
 I CMD="testRPC" D  G OUT
"RTN","HMPTRPC",18,0)
 . D TESTRPC(.HMPRES,$$VAL("value"))
"RTN","HMPTRPC",19,0)
 ;
"RTN","HMPTRPC",20,0)
 I CMD="importJson" D IMPJSON^HMPTRPC1(.HMPRES,.PARAMS)
"RTN","HMPTRPC",21,0)
 ;
"RTN","HMPTRPC",22,0)
 I CMD="testDelay" D DELAY^HMPTRPC1(.HMPRES,.PARAMS)
"RTN","HMPTRPC",23,0)
 ;
"RTN","HMPTRPC",24,0)
 I CMD="saveData" D SAVE^HMPTRPC1(.HMPRES,$$VAL("patient"),$$VAL("user"),$$VAL("domain"),$$VAL("num"),$$VAL("system"),$$VAL("json"))
"RTN","HMPTRPC",25,0)
 ;
"RTN","HMPTRPC",26,0)
 I CMD="deleteData" D DELETE^HMPTRPC1(.HMPRES,$$VAL("patient"),$$VAL("system"),$$VAL("json"))
"RTN","HMPTRPC",27,0)
 ;
"RTN","HMPTRPC",28,0)
 ;M ^XTMP("AGP TEST","PARAMS")=PARAMS
"RTN","HMPTRPC",29,0)
 I CMD="clearData" D CLEARVAL^HMPTRPC1(.HMPRES,$$VAL("system"),$$VAL("patient"),$$VAL("beg"),$$VAL("end"),$$VAL("json"))
"RTN","HMPTRPC",30,0)
 ;
"RTN","HMPTRPC",31,0)
 I CMD="getFields" D GETFLDS^HMPTRPC1(.HMPRES)
"RTN","HMPTRPC",32,0)
 ;
"RTN","HMPTRPC",33,0)
OUT ;
"RTN","HMPTRPC",34,0)
 I '$D(HMPRES) S HMPRES=""
"RTN","HMPTRPC",35,0)
END Q
"RTN","HMPTRPC",36,0)
 ;
"RTN","HMPTRPC",37,0)
VAL(X) ; return value from request
"RTN","HMPTRPC",38,0)
 Q $G(REQ(X,1))
"RTN","HMPTRPC",39,0)
 ;
"RTN","HMPTRPC",40,0)
TESTRPC(RESULT,VALUE) ;
"RTN","HMPTRPC",41,0)
 S RESULT="result"
"RTN","HMPTRPC",42,0)
 I VALUE="error" D APPERROR^%ZTER("test RPC Error") Q
"RTN","HMPTRPC",43,0)
 I VALUE="wait" H 60
"RTN","HMPTRPC",44,0)
 Q
"RTN","HMPTRPC",45,0)
 ;
"RTN","HMPTRPC1")
0^118^B41566182
"RTN","HMPTRPC1",1,0)
HMPTRPC1 ; SLC/AGP - Process Order Request from AVIVA System. ; 7/30/13 3:29pm
"RTN","HMPTRPC1",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPTRPC1",3,0)
 Q
"RTN","HMPTRPC1",4,0)
 ;
"RTN","HMPTRPC1",5,0)
GETFLDS(RESULT) ;
"RTN","HMPTRPC1",6,0)
 N ARRAY,CNT,FCNT,FIELDS,NUM,TYPE,HMPP,HMPTYPE,X
"RTN","HMPTRPC1",7,0)
 S CNT=0
"RTN","HMPTRPC1",8,0)
 ;F TYPE="vs","prob","art","order","med","cons","proc","obs","lab","rad","surgery","tiu","mha","imm","pov","skin","exam","cpt","ed","factor","appt","visit","ptf" D
"RTN","HMPTRPC1",9,0)
 S HMPTYPE=$$ALL^HMPDJ
"RTN","HMPTRPC1",10,0)
 F HMPP=1:1:$L(HMPTYPE,";") S TYPE=$P(HMPTYPE,";",HMPP) I $L(TYPE) D
"RTN","HMPTRPC1",11,0)
 .S CNT=CNT+1
"RTN","HMPTRPC1",12,0)
 .S ARRAY("data",CNT,"type","name")=TYPE
"RTN","HMPTRPC1",13,0)
 .S FIELDS=$$ATTR^HMPDCRC(TYPE)
"RTN","HMPTRPC1",14,0)
 .S NUM=$L(FIELDS,U)
"RTN","HMPTRPC1",15,0)
 .S FCNT=0
"RTN","HMPTRPC1",16,0)
 .F X=1:1:NUM D
"RTN","HMPTRPC1",17,0)
 ..I $P(FIELDS,U,X)="" Q
"RTN","HMPTRPC1",18,0)
 ..S FCNT=FCNT+1
"RTN","HMPTRPC1",19,0)
 ..S ARRAY("data",CNT,"type","fields",FCNT,"field")=$P(FIELDS,U,X)
"RTN","HMPTRPC1",20,0)
 D ENCODE^HMPJSON("ARRAY","RESULT","ERROR")
"RTN","HMPTRPC1",21,0)
 ;I $D(ERROR) ZW ERROR
"RTN","HMPTRPC1",22,0)
 Q
"RTN","HMPTRPC1",23,0)
 ;
"RTN","HMPTRPC1",24,0)
TESTRPC(OUT,PARAMS) ;
"RTN","HMPTRPC1",25,0)
 ;K ^XTMP("ZZHMP PARAMS"),^XTMP("ZZHMP JSON") ; KCM -- commented out for XINDEX
"RTN","HMPTRPC1",26,0)
 ;M ^XTMP("ZZHMP JSON")=JSON
"RTN","HMPTRPC1",27,0)
 ;M ^XTMP("ZZHMP PARAMS")=PARAMS ; KCM -- commented out for XINDEX
"RTN","HMPTRPC1",28,0)
 Q
"RTN","HMPTRPC1",29,0)
 ;
"RTN","HMPTRPC1",30,0)
CLEARVAL(RESULT,SYS,PAT,BEG,END,JSON) ;
"RTN","HMPTRPC1",31,0)
 N BDATE,BNUM,DATE,EDATE,ENUM,LAST,NODE,SUB,X,LAST
"RTN","HMPTRPC1",32,0)
 D DELSYS(SYS)
"RTN","HMPTRPC1",33,0)
 S BDATE=$P(BEG,":"),BNUM=$P(BEG,":",2)
"RTN","HMPTRPC1",34,0)
 S EDATE=$P(END,":"),ENUM=$P(END,":",2)
"RTN","HMPTRPC1",35,0)
 S SUB="HMP-"_BDATE
"RTN","HMPTRPC1",36,0)
 ;handle cleaning out the ^xtmp for the same date range
"RTN","HMPTRPC1",37,0)
 I BDATE=EDATE D  Q
"RTN","HMPTRPC1",38,0)
 .F X=BNUM:1:ENUM I $P(^XTMP("HMP-"_BDATE,X),U)=PAT K ^XTMP("HMP-"_BDATE,X)
"RTN","HMPTRPC1",39,0)
 ;
"RTN","HMPTRPC1",40,0)
 F  S SUB=$O(^XTMP(SUB)) D  Q:SUB=""!($$END(SUB,EDATE)=1)
"RTN","HMPTRPC1",41,0)
 .;handle date less then end date but date equal start date
"RTN","HMPTRPC1",42,0)
 .S DATE=$P(SUB,"-",2) I DATE<EDATE,DATE=BDATE D  Q
"RTN","HMPTRPC1",43,0)
 ..S LAST=$O(^XTMP(SUB,""),-1)
"RTN","HMPTRPC1",44,0)
 ..F X=BNUM:1:LAST I $P(^XTMP(SUB,X),U)=PAT K ^XTMP(SUB,X)
"RTN","HMPTRPC1",45,0)
 .;
"RTN","HMPTRPC1",46,0)
 .;handle date greater then start date and less then end date
"RTN","HMPTRPC1",47,0)
 .I DATE<EDATE,DATE>BDATE D  Q
"RTN","HMPTRPC1",48,0)
 ..S LAST=$O(^XTMP(SUB,""),-1)
"RTN","HMPTRPC1",49,0)
 ..F X=1:1:LAST I $P(^XTMP(SUB,X),U)=PAT K ^XTMP(SUB,X)
"RTN","HMPTRPC1",50,0)
 .;
"RTN","HMPTRPC1",51,0)
 .;S LAST=$O(^XTMP(SUB,""),-1)
"RTN","HMPTRPC1",52,0)
 .;assume date equal stop date and greater then start date
"RTN","HMPTRPC1",53,0)
 .F X=1:1:ENUM I $P(^XTMP(SUB,X),U)=PAT K ^XTMP(SUB,X)
"RTN","HMPTRPC1",54,0)
 ;S LAST=$O(^XTMP("HMP-"_DATE,""),-1)
"RTN","HMPTRPC1",55,0)
 ;F X=NUM:1:LAST K ^XTMP("HMP-"_DATE,X)
"RTN","HMPTRPC1",56,0)
 ;Need to iterate json node and delete entries that were marked as entered in error (for example  Vitals)
"RTN","HMPTRPC1",57,0)
 ;This reset the freshness XTMP. Should this be in it own RPC call?
"RTN","HMPTRPC1",58,0)
 ;K ^XTMP("HMP-"_DT) M ^XTMP("HMP-"_DT)=^XTMP("HMP BACKUP") K ^XTMP("HMP BACKUP")
"RTN","HMPTRPC1",59,0)
 Q
"RTN","HMPTRPC1",60,0)
END(NODE,EDATE) ;
"RTN","HMPTRPC1",61,0)
 N DATE
"RTN","HMPTRPC1",62,0)
 S DATE=$P(NODE,"-",2)
"RTN","HMPTRPC1",63,0)
 I DATE'>EDATE Q 0
"RTN","HMPTRPC1",64,0)
 Q 1
"RTN","HMPTRPC1",65,0)
 ;
"RTN","HMPTRPC1",66,0)
DELETE(RESULT,PAT,SYS,JSON) ;
"RTN","HMPTRPC1",67,0)
 N CNT,DA,DIK,ERROR,FILENUM,GLOBAL
"RTN","HMPTRPC1",68,0)
 D DECODE^HMPJSON("JSON","IN","ERROR")
"RTN","HMPTRPC1",69,0)
 S FILENUM=IN("FILENUM")
"RTN","HMPTRPC1",70,0)
 ;Handle files that are not deleted need to check with Mel/Jerry about the action
"RTN","HMPTRPC1",71,0)
 ;I FILENUM="NOT DELETE NODES" D NODELETE D POST^HMPEVNT(PAT,DOMAIN,DA,"") Q
"RTN","HMPTRPC1",72,0)
 S GLOBAL=$$GET1^DID(FILENUM,"","","GLOBAL NAME")
"RTN","HMPTRPC1",73,0)
 S DIK=GLOBAL
"RTN","HMPTRPC1",74,0)
 S CNT=0 F  S CNT=$O(IN("ITEMS",CNT)) Q:CNT'>0  D
"RTN","HMPTRPC1",75,0)
 .S DA=$G(IN("ITEMS",CNT,"IEN"))
"RTN","HMPTRPC1",76,0)
 .D ^DIK
"RTN","HMPTRPC1",77,0)
 .D POST^HMPEVNT(PAT,"factor",DA,"@")
"RTN","HMPTRPC1",78,0)
 ;This reset the freshness XTMP. Should this be in it own RPC call?
"RTN","HMPTRPC1",79,0)
 ;K ^XTMP("HMP-"_DT) M ^XTMP("HMP-"_DT)=^XTMP("HMP BACKUP") K ^XTMP("HMP BACKUP")
"RTN","HMPTRPC1",80,0)
 Q
"RTN","HMPTRPC1",81,0)
 ;
"RTN","HMPTRPC1",82,0)
DELAY(OUT,PARAMS) ;
"RTN","HMPTRPC1",83,0)
 N ARRAY,DELAY
"RTN","HMPTRPC1",84,0)
 S DELAY=$G(PARAMS("delay"))
"RTN","HMPTRPC1",85,0)
 H DELAY
"RTN","HMPTRPC1",86,0)
 S ARRAY("success")="true"
"RTN","HMPTRPC1",87,0)
 D ENCODE^HMPJSON("ARRAY","OUT","ERROR")
"RTN","HMPTRPC1",88,0)
 I $D(ERROR) D
"RTN","HMPTRPC1",89,0)
 .N RESULT,TXT K OUT
"RTN","HMPTRPC1",90,0)
 .S TXT(1)="Problem encoding json output"
"RTN","HMPTRPC1",91,0)
 .D SETERROR^HMPUTILS(.RESULT,.ERROR,.TXT,.ARRAY)
"RTN","HMPTRPC1",92,0)
 .D ENCODE^HMPJSON("RESULT","OUT","ERROR")
"RTN","HMPTRPC1",93,0)
 Q
"RTN","HMPTRPC1",94,0)
 ;
"RTN","HMPTRPC1",95,0)
DELSYS(SYS) ;
"RTN","HMPTRPC1",96,0)
 N DA,DIK
"RTN","HMPTRPC1",97,0)
 S DA=$O(^HMP(800000,"B",SYS,"")) I +DA'>0 Q
"RTN","HMPTRPC1",98,0)
 S DIK="^HMP(800000," D ^DIK
"RTN","HMPTRPC1",99,0)
 Q
"RTN","HMPTRPC1",100,0)
 ;
"RTN","HMPTRPC1",101,0)
IMPJSON(OUT,PARAMS) ;
"RTN","HMPTRPC1",102,0)
 N GBL,JSONI,DOMAIN,PATIENT,ERROR
"RTN","HMPTRPC1",103,0)
 S JSONI=PARAMS("value"),DOMAIN=PARAMS("domain"),PATIENT=PARAMS("patientId")
"RTN","HMPTRPC1",104,0)
 S GBL=$NA(^TMP($J,"JSON",DOMAIN,PATIENT)) ; KCM -- changed from ^XTMP("JSON") to pass XINDEX
"RTN","HMPTRPC1",105,0)
 D DECODE^HMPJSON("JSONI",GBL,"ERROR")
"RTN","HMPTRPC1",106,0)
 I $D(ERROR) D  Q
"RTN","HMPTRPC1",107,0)
 .N RESULT,TXT K OUT
"RTN","HMPTRPC1",108,0)
 .S TXT(1)="Problem decoding json input"
"RTN","HMPTRPC1",109,0)
 .D SETERROR^HMPUTILS(.RESULT,.ERROR,.TXT,.JSONI)
"RTN","HMPTRPC1",110,0)
 .D ENCODE^HMPJSON("RESULT","OUT","ERROR")
"RTN","HMPTRPC1",111,0)
 D ENCODE^HMPJSON("ARRAY","OUT","ERROR")
"RTN","HMPTRPC1",112,0)
 Q
"RTN","HMPTRPC1",113,0)
 ;
"RTN","HMPTRPC1",114,0)
GETTEAMS(OUT) ;
"RTN","HMPTRPC1",115,0)
 N ACTPRIM,ARRAY,CNT,ERROR,NODE,NUM,NAME,PATS,SER
"RTN","HMPTRPC1",116,0)
 S NUM=0,CNT=0 F  S NUM=$O(^SCTM(404.51,NUM)) Q:NUM'>0  D
"RTN","HMPTRPC1",117,0)
 .S NODE=$G(^SCTM(404.51,NUM,0)),CNT=CNT+1
"RTN","HMPTRPC1",118,0)
 .S NAME=$P(NODE,U),ACTPRIM=$S($P(NODE,U,5)=1:"true",1:"false")
"RTN","HMPTRPC1",119,0)
 .S SER=""
"RTN","HMPTRPC1",120,0)
 .I $P(NODE,U,6)>6 S SER=$P($G(^DIC(49,$P(NODE,U,6),0)),U)
"RTN","HMPTRPC1",121,0)
 .S PATS=$$TEAMCNT^SCAPMCU1(NUM,DT)
"RTN","HMPTRPC1",122,0)
 .S ARRAY("data",CNT,"name")=NAME
"RTN","HMPTRPC1",123,0)
 .I SER'="" S ARRAY("data",CNT,"service")=SER
"RTN","HMPTRPC1",124,0)
 .S ARRAY("data",CNT,"patients")=PATS
"RTN","HMPTRPC1",125,0)
 D ENCODE^HMPJSON("ARRAY","OUT","ERROR")
"RTN","HMPTRPC1",126,0)
 I $D(ERROR) D
"RTN","HMPTRPC1",127,0)
 .N RESULT,TXT K OUT
"RTN","HMPTRPC1",128,0)
 .S TXT(1)="Problem encoding json output"
"RTN","HMPTRPC1",129,0)
 .D SETERROR^HMPUTILS(.RESULT,.ERROR,.TXT,.ARRAY)
"RTN","HMPTRPC1",130,0)
 .D ENCODE^HMPJSON("RESULT","OUT","ERROR")
"RTN","HMPTRPC1",131,0)
 Q
"RTN","HMPTRPC1",132,0)
 ;
"RTN","HMPTRPC1",133,0)
SAVE(RESULT,PAT,USER,DOMAIN,NUM,SYS,JSON) ;
"RTN","HMPTRPC1",134,0)
 N ERROR,IENARRAY,LDATE,LNUM,VALUE
"RTN","HMPTRPC1",135,0)
 D SETSYS(SYS,PAT)
"RTN","HMPTRPC1",136,0)
 D DECODE^HMPJSON("JSON","VALUE","ERROR")
"RTN","HMPTRPC1",137,0)
 K ^XTMP("HMP BACKUP")
"RTN","HMPTRPC1",138,0)
 S LDATE="HMP-"_DT,LNUM=0
"RTN","HMPTRPC1",139,0)
 I '$D(^XTMP("HMP-"_DT)) S LDATE=$O(^XTMP("HMP-A"),-1)
"RTN","HMPTRPC1",140,0)
 S LNUM=$O(^XTMP(LDATE,""),-1)
"RTN","HMPTRPC1",141,0)
 S IENARRAY("lastUpdate")=$P(LDATE,"-",2)_":"_LNUM
"RTN","HMPTRPC1",142,0)
 M ^XTMP("HMP BACKUP")=^XTMP("HMP-"_DT)
"RTN","HMPTRPC1",143,0)
 I DOMAIN="factor" D HF(PAT,USER,NUM,.VALUE,.IENARRAY)
"RTN","HMPTRPC1",144,0)
 ;M RESULT=IENARRAY
"RTN","HMPTRPC1",145,0)
 D ENCODE^HMPJSON("IENARRAY","RESULT","ERROR")
"RTN","HMPTRPC1",146,0)
 Q
"RTN","HMPTRPC1",147,0)
 ;
"RTN","HMPTRPC1",148,0)
SETSYS(SYS,PAT) ;
"RTN","HMPTRPC1",149,0)
 N FDA,MSG,NAME
"RTN","HMPTRPC1",150,0)
 S NAME=$P($G(^DPT(PAT,0)),U) I NAME="" Q
"RTN","HMPTRPC1",151,0)
 S FDA(800000,"?+1,",.01)=SYS
"RTN","HMPTRPC1",152,0)
 S FDA(800000.01,"?+2,?+1,",.01)=PAT
"RTN","HMPTRPC1",153,0)
 S FDA(800000.01,"?+2,?+1,",2)=1
"RTN","HMPTRPC1",154,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","HMPTRPC1",155,0)
 I $D(MSG) D  Q
"RTN","HMPTRPC1",156,0)
 .D EN^DDIOL("Update failed, UPDATE^DIE returned the following error message.")
"RTN","HMPTRPC1",157,0)
 .S IC="MSG"
"RTN","HMPTRPC1",158,0)
 .F  S IC=$Q(@IC) Q:IC=""  W !,IC,"=",@IC
"RTN","HMPTRPC1",159,0)
 .D EN^DDIOL("Examine the above error message for the reason.")
"RTN","HMPTRPC1",160,0)
 .H 2
"RTN","HMPTRPC1",161,0)
 Q
"RTN","HMPTRPC1",162,0)
 ;
"RTN","HMPTRPC1",163,0)
HF(PAT,USER,NUM,VALUE,IENARRAY) ;
"RTN","HMPTRPC1",164,0)
 N CNT,ENCIEN,FDA,FM,FSEC,IEN,LNUM,MSG,NAME,UID,X
"RTN","HMPTRPC1",165,0)
 S FSEC=$P(VALUE("uid"),":",1,5)
"RTN","HMPTRPC1",166,0)
 S FM=$$HL7TFM^XLFDT(VALUE("entered"))
"RTN","HMPTRPC1",167,0)
 S LNUM=$O(^AUPNVHF("A"),-1)
"RTN","HMPTRPC1",168,0)
 S NAME=$G(VALUE("name"))
"RTN","HMPTRPC1",169,0)
 S IEN=$O(^AUTTHF("B",NAME,""))
"RTN","HMPTRPC1",170,0)
 S ENCIEN=$P($G(VALUE("encounterUid")),":",6)
"RTN","HMPTRPC1",171,0)
 S CNT=0
"RTN","HMPTRPC1",172,0)
 F X=1:1:NUM D
"RTN","HMPTRPC1",173,0)
 .S IENS=LNUM+X
"RTN","HMPTRPC1",174,0)
 .S CNT=CNT+1
"RTN","HMPTRPC1",175,0)
 .S FDA(9000010.23,"+"_IENS_",",.01)=IEN
"RTN","HMPTRPC1",176,0)
 .S FDA(9000010.23,"+"_IENS_",",.03)=ENCIEN
"RTN","HMPTRPC1",177,0)
 .S FDA(9000010.23,"+"_IENS_",",1201)=FM
"RTN","HMPTRPC1",178,0)
 .S FDA(9000010.23,"+"_IENS_",",.02)=PAT
"RTN","HMPTRPC1",179,0)
 .D UPDATE^DIE("","FDA","","MSG")
"RTN","HMPTRPC1",180,0)
 .I $D(MSG) D  Q
"RTN","HMPTRPC1",181,0)
 ..D EN^DDIOL("Update failed, UPDATE^DIE returned the following error message.")
"RTN","HMPTRPC1",182,0)
 ..S IC="MSG"
"RTN","HMPTRPC1",183,0)
 ..F  S IC=$Q(@IC) Q:IC=""  W !,IC,"=",@IC
"RTN","HMPTRPC1",184,0)
 ..D EN^DDIOL("Examine the above error message for the reason.")
"RTN","HMPTRPC1",185,0)
 ..H 2
"RTN","HMPTRPC1",186,0)
 .D POST^HMPEVNT(PAT,"factor",IENS)
"RTN","HMPTRPC1",187,0)
 .S IENARRAY("FILENUM")="9000010.23"
"RTN","HMPTRPC1",188,0)
 .S IENARRAY("ITEMS",X,"IEN")=IENS
"RTN","HMPTRPC1",189,0)
 Q
"RTN","HMPTRPC1",190,0)
 ;
"RTN","HMPUPD")
0^119^B22706701
"RTN","HMPUPD",1,0)
HMPUPD ;SLC/MKB - Update local data ;11/13/13 2:11pm
"RTN","HMPUPD",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPUPD",3,0)
 ;
"RTN","HMPUPD",4,0)
PHONE(HMP,JSON) ; RPC = HMP PUT PHONE
"RTN","HMPUPD",5,0)
 Q
"RTN","HMPUPD",6,0)
PUT(HMP,DFN,CMD,JSON) ; -- update phone numbers
"RTN","HMPUPD",7,0)
 ; RPC = HMP PUT DEMOGRAPHICS
"RTN","HMPUPD",8,0)
 ;
"RTN","HMPUPD",9,0)
 N ARRAY,HMPERR,ERR,HOME,CELL,WORK,NOK,ECON,X,OK,HMPSYS
"RTN","HMPUPD",10,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPUPD",11,0)
 D DECODE^HMPJSON("JSON","ARRAY","HMPERR")
"RTN","HMPUPD",12,0)
 I $D(HMPERR) D  G PQ
"RTN","HMPUPD",13,0)
 . K ARRAY N HMPTMP,HMPTXT
"RTN","HMPUPD",14,0)
 . S HMPTXT(1)="Problem decoding json input."
"RTN","HMPUPD",15,0)
 . D SETERROR^HMPUTILS(.HMPTMP,.HMPERR,.HMPTXT,.JSON)
"RTN","HMPUPD",16,0)
 . K HMPERR D ENCODE^HMPJSON("HMPTMP","ARRAY","HMPERR")
"RTN","HMPUPD",17,0)
 . S HMP(.5)="{""apiVersion"":""1.01"",""error"":{"
"RTN","HMPUPD",18,0)
 . M HMP(1)=ARRAY
"RTN","HMPUPD",19,0)
 . S HMP(2)="}}"
"RTN","HMPUPD",20,0)
 ;
"RTN","HMPUPD",21,0)
 S DFN=+$G(DFN) I DFN<1 S ERR=$$ERR(1,DFN) G PHQ
"RTN","HMPUPD",22,0)
 S CMD=$G(CMD) ;can only update phone#
"RTN","HMPUPD",23,0)
 N HMPX,HMPDR,I,J S (HMPDR,HOME,CELL,WORK,NOK,ECON)=""
"RTN","HMPUPD",24,0)
 D VAL("old")
"RTN","HMPUPD",25,0)
 S I="" F  S I=$O(ARRAY("telecom",I)) Q:I<1  D
"RTN","HMPUPD",26,0)
 . I $G(ARRAY("telecom",I,"use"))="H" D  Q
"RTN","HMPUPD",27,0)
 .. S HOME=$G(ARRAY("telecom",I,"value"))
"RTN","HMPUPD",28,0)
 .. I HOME=HOME("old") S HOME="" Q           ;no change
"RTN","HMPUPD",29,0)
 .. I "@"[HOME S:$L(HOME("old")) HOME="@" Q  ;delete
"RTN","HMPUPD",30,0)
 .. S HOME=$$FORMAT(HOME),ARRAY("telecom",I,"value")=HOME
"RTN","HMPUPD",31,0)
 . I $G(ARRAY("telecom",I,"use"))="MC" D  Q
"RTN","HMPUPD",32,0)
 .. S CELL=$G(ARRAY("telecom",I,"value"))
"RTN","HMPUPD",33,0)
 .. I CELL=CELL("old") S CELL="" Q           ;no change
"RTN","HMPUPD",34,0)
 .. I "@"[CELL S:$L(CELL("old")) CELL="@" Q  ;delete
"RTN","HMPUPD",35,0)
 .. S CELL=$$FORMAT(CELL),ARRAY("telecom",I,"value")=CELL
"RTN","HMPUPD",36,0)
 . I $G(ARRAY("telecom",I,"use"))="WP" D  Q
"RTN","HMPUPD",37,0)
 .. S WORK=$G(ARRAY("telecom",I,"value"))
"RTN","HMPUPD",38,0)
 .. I WORK=WORK("old") S WORK="" Q           ;no change
"RTN","HMPUPD",39,0)
 .. I "@"[WORK S:$L(WORK("old")) WORK="@" Q  ;delete
"RTN","HMPUPD",40,0)
 .. S WORK=$$FORMAT(WORK),ARRAY("telecom",I,"value")=WORK
"RTN","HMPUPD",41,0)
 S I="" F  S I=$O(ARRAY("contact",I)) Q:I<1  D
"RTN","HMPUPD",42,0)
 . S X=$P($G(ARRAY("contact",I,"typeCode")),":",4) Q:X=""  ;NOK or ECON
"RTN","HMPUPD",43,0)
 . S J="" F  S J=$O(ARRAY("contact",I,"telecom",J)) Q:J<1  D
"RTN","HMPUPD",44,0)
 .. Q:$G(ARRAY("contact",I,"telecom",J,"use"))'="H"
"RTN","HMPUPD",45,0)
 .. S @X=$G(ARRAY("contact",I,"telecom",J,"value"))
"RTN","HMPUPD",46,0)
 .. I @X=@X@("old") S @X="" Q           ;no change
"RTN","HMPUPD",47,0)
 .. I "@"[@X S:$L(@X@("old")) @X="@" Q  ;delete
"RTN","HMPUPD",48,0)
 .. S @X=$$FORMAT(@X),ARRAY("contact",I,"telecom",J,"value")=@X
"RTN","HMPUPD",49,0)
 .. ; X="NOK" S NOK=$$FORMAT(NOK),ARRAY("contact",I,"telecom",J,"value")=NOK
"RTN","HMPUPD",50,0)
 ;
"RTN","HMPUPD",51,0)
 S:$L(HOME) HMPX(.131)=HOME,HMPDR=".131"
"RTN","HMPUPD",52,0)
 S:$L(CELL) HMPX(.134)=CELL,HMPDR=HMPDR_$S($L(HMPDR):";",1:"")_".134"
"RTN","HMPUPD",53,0)
 S:$L(WORK) HMPX(.132)=WORK,HMPDR=HMPDR_$S($L(HMPDR):";",1:"")_".132"
"RTN","HMPUPD",54,0)
 S:$L(ECON) HMPX(.339)=ECON,HMPDR=HMPDR_$S($L(HMPDR):";",1:"")_".339"
"RTN","HMPUPD",55,0)
 S:$L(NOK) HMPX(.219)=NOK,HMPDR=HMPDR_$S($L(HMPDR):";",1:"")_".219"
"RTN","HMPUPD",56,0)
 I '$O(HMPX(0)) S ERR=$$ERR(3) G PHQ
"RTN","HMPUPD",57,0)
 D EDIT^VAFCPTED(DFN,"HMPX",HMPDR)
"RTN","HMPUPD",58,0)
 S X=$G(^DPT(DFN,.13)),OK=1 D  ;check global
"RTN","HMPUPD",59,0)
 . I $L(HOME),$S(HOME="@":$L($P(X,U)),1:(HMPX(.131)'=$P(X,U))) S OK=0
"RTN","HMPUPD",60,0)
 . I $L(CELL),$S(CELL="@":$L($P(X,U,4)),1:(HMPX(.134)'=$P(X,U,4))) S OK=0
"RTN","HMPUPD",61,0)
 . I $L(WORK),$S(WORK="@":$L($P(X,U,2)),1:(HMPX(.132)'=$P(X,U,2))) S OK=0
"RTN","HMPUPD",62,0)
 . I $L(ECON) S X=$G(^DPT(DFN,.33)) I $S(ECON="@":$L($P(X,U,9)),1:(HMPX(.339)'=$P(X,U,9))) S OK=0
"RTN","HMPUPD",63,0)
 . I $L(NOK) S X=$G(^DPT(DFN,.21)) I $S(NOK="@":$L($P(X,U,9)),1:(HMPX(.219)'=$P(X,U,9))) S OK=0
"RTN","HMPUPD",64,0)
 S:'OK ERR=$$ERR(5)
"RTN","HMPUPD",65,0)
 ;
"RTN","HMPUPD",66,0)
PHQ ; add item count and terminating characters
"RTN","HMPUPD",67,0)
 I $D(ERR) S HMP(1)="{""apiVersion"":""1.01"",""error"":{""message"":"""_ERR_"""},""success"":false}" G PQ
"RTN","HMPUPD",68,0)
 ; HMP="{""apiVersion"":""1.01"",""data"":{""updated"":"_""""_$$HL7NOW_""""_",""localId"":"""_DFN_"""},""success"":true}"
"RTN","HMPUPD",69,0)
 D POSTX^HMPEVNT("patient",DFN)
"RTN","HMPUPD",70,0)
 D ENCODE^HMPJSON("ARRAY","HMP","HMPERR")
"RTN","HMPUPD",71,0)
 I $D(HMPERR) D  G PQ
"RTN","HMPUPD",72,0)
 . K HMP N HMPTMP,HMPTXT
"RTN","HMPUPD",73,0)
 . S HMPTXT(1)="Problem encoding json output."
"RTN","HMPUPD",74,0)
 . D SETERROR^HMPUTILS(.HMPTMP,.HMPERR,.HMPTXT,.ARRAY)
"RTN","HMPUPD",75,0)
 . K HMPERR D ENCODE^HMPJSON("HMPTMP","HMP","HMPERR")
"RTN","HMPUPD",76,0)
 . S HMP(.5)="{""apiVersion"":""1.01"",""error"":{",HMP(99)="}}"
"RTN","HMPUPD",77,0)
 S HMP(.5)="{""apiVersion"":""1.01"",""params"":{"_$$SYS^HMPDJ_"},""success"":true,"
"RTN","HMPUPD",78,0)
 S HMP(.6)="""data"":{""updated"":"""_$$HL7NOW^HMPDJ_""",""totalItems"":1,""items"":["
"RTN","HMPUPD",79,0)
 S HMP(99)="]}}"
"RTN","HMPUPD",80,0)
PQ ; exit
"RTN","HMPUPD",81,0)
 K ^TMP($J,"HMP")
"RTN","HMPUPD",82,0)
 M ^TMP($J,"HMP")=HMP
"RTN","HMPUPD",83,0)
 K HMP S HMP=$NA(^TMP($J,"HMP"))
"RTN","HMPUPD",84,0)
 Q
"RTN","HMPUPD",85,0)
 ;
"RTN","HMPUPD",86,0)
FORMAT(X) ; -- enforce (xxx)xxx-xxxx phone format
"RTN","HMPUPD",87,0)
 S X=$G(X) I X?1"("3N1")"3N1"-"4N.E Q X
"RTN","HMPUPD",88,0)
 N P,N,I,Y S P=""
"RTN","HMPUPD",89,0)
 F I=1:1:$L(X) S N=$E(X,I) I N=+N S P=P_N
"RTN","HMPUPD",90,0)
 S:$L(P)<10 P=$E("0000000000",1,10-$L(P))_P
"RTN","HMPUPD",91,0)
 S Y=$S(P:"("_$E(P,1,3)_")"_$E(P,4,6)_"-"_$E(P,7,10),1:"")
"RTN","HMPUPD",92,0)
 Q Y
"RTN","HMPUPD",93,0)
 ;
"RTN","HMPUPD",94,0)
HL7NOW() ; -- Return current time in HL7 format
"RTN","HMPUPD",95,0)
 Q $P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")
"RTN","HMPUPD",96,0)
 ;
"RTN","HMPUPD",97,0)
ERR(X,VAL) ; -- return error message
"RTN","HMPUPD",98,0)
 N MSG  S MSG="Error"
"RTN","HMPUPD",99,0)
 I X=1  S MSG="Patient with dfn '"_$G(VAL)_"' not found"
"RTN","HMPUPD",100,0)
 I X=2  S MSG="Domain type '"_$G(VAL)_"' not recognized"
"RTN","HMPUPD",101,0)
 I X=3  S MSG="Data not changed"
"RTN","HMPUPD",102,0)
 I X=4  S MSG="Unable to create new object"
"RTN","HMPUPD",103,0)
 I X=5  S MSG="Update failed"
"RTN","HMPUPD",104,0)
 I X=99 S MSG="Unknown request"
"RTN","HMPUPD",105,0)
 Q MSG
"RTN","HMPUPD",106,0)
 ;
"RTN","HMPUPD",107,0)
VAL(SUB) ; -- pull values from ^DPT
"RTN","HMPUPD",108,0)
 N X S X=$G(^DPT(DFN,.13))
"RTN","HMPUPD",109,0)
 S HOME(SUB)=$P(X,U),CELL(SUB)=$P(X,U,4),WORK(SUB)=$P(X,U,2)
"RTN","HMPUPD",110,0)
 S X=$G(^DPT(DFN,.33)),ECON(SUB)=$P(X,U,9)
"RTN","HMPUPD",111,0)
 S X=$G(^DPT(DFN,.21)),NOK(SUB)=$P(X,U,9)
"RTN","HMPUPD",112,0)
 Q
"RTN","HMPUTIL1")
0^120^B31443785
"RTN","HMPUTIL1",1,0)
HMPUTIL1 ;SLC/AGP -- HMP utilities routine ;8/14/13  11:22
"RTN","HMPUTIL1",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPUTIL1",3,0)
 ;
"RTN","HMPUTIL1",4,0)
ADHOC(HMPDOM1,HMPFCNT,DFN) ; Add syncStart metastamp and syncStatus to unsolicited updates
"RTN","HMPUTIL1",5,0)
 Q:($G(HMPDOM1)="")!($G(DFN)="")
"RTN","HMPUTIL1",6,0)
 ; Save delete date/time for later use.
"RTN","HMPUTIL1",7,0)
 ;===JD START===
"RTN","HMPUTIL1",8,0)
 N HMP96,HMP99,HMP100
"RTN","HMPUTIL1",9,0)
 S (HMP99,HMP100,HMP96)=""
"RTN","HMPUTIL1",10,0)
 ;I DFN'="OPD",$G(ACT)="@" D  ;;removed US5647
"RTN","HMPUTIL1",11,0)
 I $G(ACT)="@" D
"RTN","HMPUTIL1",12,0)
 .; Get the date from from fresh stream (HMPFS~<server>~<date>)
"RTN","HMPUTIL1",13,0)
 .S HMP96=$$FMTH^XLFDT($P(HMPFSTRM,"~",3))
"RTN","HMPUTIL1",14,0)
 .; Add delete time stored in ARGS("hmp-fst")
"RTN","HMPUTIL1",15,0)
 .S HMP96=$$HTFM^XLFDT($P(HMP96,",")_","_$G(ARGS("hmp-fst"),0))
"RTN","HMPUTIL1",16,0)
 .; Convert delete date/time into JSON format
"RTN","HMPUTIL1",17,0)
 .S HMP96=$$JSONDT^HMPUTILS(HMP96)
"RTN","HMPUTIL1",18,0)
 .; HMP100 = pid (pid = <sitehash>;<DFN>   e.g. C877;8
"RTN","HMPUTIL1",19,0)
 .; HMP97 = UID = urn:va:<domain>:<sitehash>:DFN:<domain IEN>
"RTN","HMPUTIL1",20,0)
 .; HMP97 is set in HMPDJFSG routine
"RTN","HMPUTIL1",21,0)
 .S HMP100=$P($G(HMP97),":",4)_";"_$P($G(HMP97),":",5)
"RTN","HMPUTIL1",22,0)
 .S HMP99="{""pid"":"""_HMP100_""",""removed"":""true"",""stampTime"":"_HMP96_",""uid"":"""_$G(HMP97)_"""}"
"RTN","HMPUTIL1",23,0)
 ;===JD   END===
"RTN","HMPUTIL1",24,0)
 ;Build SyncStart
"RTN","HMPUTIL1",25,0)
 N HMPDAT,HMPDAT1,HMPDOM,HMPJSN,HMPSUB,HMPTOT,HMPTSK,HMPZ,HMPID,HMPQ,HMPY
"RTN","HMPUTIL1",26,0)
 S HMPTSK=$J
"RTN","HMPUTIL1",27,0)
 S HMPSUB=$O(^TMP("HMP",HMPTSK,0)) Q:'HMPSUB
"RTN","HMPUTIL1",28,0)
 S HMPY=$$EN^HMPSTMP("NOW"),HMPID=$$SYS^HMPUTILS
"RTN","HMPUTIL1",29,0)
 S HMPZ=0,HMPQ="""",HMPFCNT=$G(HMPFCNT)+1
"RTN","HMPUTIL1",30,0)
 I DFN="OPD" S HMPJSN="{""collection"":"""_"OPDsyncStart"_""""_","""_"systemId"":"""_$P(HMPID,";")_""""_","
"RTN","HMPUTIL1",31,0)
 E  S HMPJSN="{""collection"":"""_"syncStart"_""""_$$PIDS^HMPDJFS(DFN)_","
"RTN","HMPUTIL1",32,0)
 S:HMPFCNT>1 HMPJSN="},"_HMPJSN
"RTN","HMPUTIL1",33,0)
 S HMPJSN=HMPJSN_"""metaStamp"":"_"{"
"RTN","HMPUTIL1",34,0)
 I DFN'="OPD" S HMPJSN=HMPJSN_$E($$PIDS^HMPDJFS(DFN),2,$L($$PIDS^HMPDJFS(DFN)))_","
"RTN","HMPUTIL1",35,0)
 S HMPJSN=HMPJSN_"""stampTime"":"""_HMPY_""""_",""sourceMetaStamp"":"_"{"
"RTN","HMPUTIL1",36,0)
 S HMPJSN=HMPJSN_""""_$P(HMPID,";")_""""_":{"
"RTN","HMPUTIL1",37,0)
 I DFN'="OPD" S HMPJSN=HMPJSN_$E($$PIDS^HMPDJFS(DFN),2,$L($$PIDS^HMPDJFS(DFN)))_","
"RTN","HMPUTIL1",38,0)
 S HMPJSN=HMPJSN_"""stampTime"":"""_HMPY_""""_","
"RTN","HMPUTIL1",39,0)
 S HMPJSN=HMPJSN_"""domainMetaStamp"""_":"_"{"
"RTN","HMPUTIL1",40,0)
 ; transform the domain name for quick orders to match the uid
"RTN","HMPUTIL1",41,0)
 S HMPDOM=HMPDOM1 I HMPDOM="quick" S HMPDOM="qo"
"RTN","HMPUTIL1",42,0)
 S HMPTOT=1
"RTN","HMPUTIL1",43,0)
 S HMPJSN=HMPJSN_""""_HMPDOM_""""_":{"
"RTN","HMPUTIL1",44,0)
 S HMPJSN=HMPJSN_"""domain"":"""_HMPDOM_""""_","
"RTN","HMPUTIL1",45,0)
 S HMPJSN=HMPJSN_"""stampTime"":"""_HMPY_""""_","
"RTN","HMPUTIL1",46,0)
 I DFN="OPD" S HMPJSN=HMPJSN_"""itemMetaStamp"""_":"_"{"
"RTN","HMPUTIL1",47,0)
 E  S HMPJSN=HMPJSN_"""eventMetaStamp"""_":"_"{"
"RTN","HMPUTIL1",48,0)
 D  ;Extract stampTime and/or UID from ^TMP("HMP",$J - US5859
"RTN","HMPUTIL1",49,0)
 .N DONE,HMPN,I,NEXT,SRCH
"RTN","HMPUTIL1",50,0)
 .S SRCH="""uid"""_":"_""""_"urn:va:"_HMPDOM_":"
"RTN","HMPUTIL1",51,0)
 .;Search back from last record
"RTN","HMPUTIL1",52,0)
 .S HMPN="",HMPDAT1="",DONE=""
"RTN","HMPUTIL1",53,0)
 .F  S HMPN=$O(^TMP("HMP",$J,HMPSUB,HMPN),-1) Q:'HMPN  D  Q:DONE
"RTN","HMPUTIL1",54,0)
 ..S HMPDAT=$G(^TMP("HMP",$J,HMPSUB,HMPN)) Q:HMPDAT="null"!(HMPDAT']"")
"RTN","HMPUTIL1",55,0)
 ..;Search for last occurance of uid in record (this will be parent)
"RTN","HMPUTIL1",56,0)
 ..I $F(HMPDAT,SRCH),'HMPDAT1 F I=2:1 S NEXT=$P($P(HMPDAT,SRCH,I),HMPQ) Q:NEXT=""  S HMPDAT1=NEXT
"RTN","HMPUTIL1",57,0)
 ..;For OPD only search for UID
"RTN","HMPUTIL1",58,0)
 ..I DFN="OPD" S:HMPDAT1 DONE=1 Q
"RTN","HMPUTIL1",59,0)
 ..;Extract stamptime if present (patient data ONLY)
"RTN","HMPUTIL1",60,0)
 ..I $F(HMPDAT,"stampTime") S HMPY=$P($P(HMPDAT,"""stampTime"":",2),",")
"RTN","HMPUTIL1",61,0)
 ..;Patient data requires both UID and stampTime to be complete
"RTN","HMPUTIL1",62,0)
 ..S:HMPDAT1&HMPY DONE=1
"RTN","HMPUTIL1",63,0)
 I $L(HMPJSN)>1000 S HMPZ=HMPZ+1,^TMP("HMPF",$J,HMPFCNT,.3,HMPZ)=HMPJSN,HMPJSN=""
"RTN","HMPUTIL1",64,0)
 I $G(ACT)="@" S HMPDAT1=$P($G(HMP97),":",4,99)
"RTN","HMPUTIL1",65,0)
 S HMPJSN=HMPJSN_"""urn:va:"_HMPDOM_":"_HMPDAT1_""""_":{"
"RTN","HMPUTIL1",66,0)
 S HMPJSN=HMPJSN_"""stampTime"":"""_$S($G(HMP96)]"":HMP96,1:HMPY)_""""_"}}"
"RTN","HMPUTIL1",67,0)
 S HMPJSN=HMPJSN_"},"
"RTN","HMPUTIL1",68,0)
 I $L(HMPJSN)>1000 S HMPZ=HMPZ+1,^TMP("HMPF",$J,HMPFCNT,.3,HMPZ)=HMPJSN,HMPJSN=""
"RTN","HMPUTIL1",69,0)
 S HMPZ=HMPZ+1
"RTN","HMPUTIL1",70,0)
 S HMPJSN=$E(HMPJSN,1,$L(HMPJSN)-1)_"}}}}},"
"RTN","HMPUTIL1",71,0)
 ;Save syncStart
"RTN","HMPUTIL1",72,0)
 S ^TMP("HMPF",$J,HMPFCNT,.3,HMPZ)=HMPJSN
"RTN","HMPUTIL1",73,0)
 ;Merge in data section from FRESHITM^HMPDJFSG
"RTN","HMPUTIL1",74,0)
 S HMPSUB=""
"RTN","HMPUTIL1",75,0)
 F  S HMPSUB=$O(^TMP("HMP",HMPTSK,HMPSUB)) Q:'HMPSUB  D
"RTN","HMPUTIL1",76,0)
 .N HMPX,HMPDAT
"RTN","HMPUTIL1",77,0)
 .S HMPFCNT=HMPFCNT+1
"RTN","HMPUTIL1",78,0)
 .I DFN'="OPD" S ^TMP("HMPF",HMPTSK,HMPFCNT,.3)="{""collection"":"""_HMPDOM_""""_$$PIDS^HMPDJFS(DFN)_",""seq"":1,""total"":1,""object"":"_$S($G(ACT)="@":HMP99,1:"")
"RTN","HMPUTIL1",79,0)
 .I DFN="OPD",$G(ACT)="@" S ^TMP("HMPF",HMPTSK,HMPFCNT,.3)="{""collection"":"""_HMPDOM_""",""seq"":1,""total"":1,""object"":"_HMP99 ;;US5647
"RTN","HMPUTIL1",80,0)
 .I DFN="OPD",$G(ACT)'="@"  D  ;US5859
"RTN","HMPUTIL1",81,0)
 ..S ^TMP("HMPF",HMPTSK,HMPFCNT,.3)="{""collection"":"""_HMPDOM_""",""seq"":1,""total"":1,""object"":"
"RTN","HMPUTIL1",82,0)
 ..S HMPX="""stampTime"":"_HMPQ_HMPY_HMPQ_","
"RTN","HMPUTIL1",83,0)
 ..S HMPDAT=^TMP("HMP",HMPTSK,HMPSUB,1)
"RTN","HMPUTIL1",84,0)
 ..S ^TMP("HMP",HMPTSK,HMPSUB,1)="{"_HMPX_$P(HMPDAT,"{",2,999)
"RTN","HMPUTIL1",85,0)
 .M ^TMP("HMPF",HMPTSK,HMPFCNT,1)=^TMP("HMP",HMPTSK,HMPSUB,1)
"RTN","HMPUTIL1",86,0)
 ;
"RTN","HMPUTIL1",87,0)
 ; Build and add syncStatus
"RTN","HMPUTIL1",88,0)
 N STS,STSJSON,X,ERR
"RTN","HMPUTIL1",89,0)
 S STS("uid")="urn:va:syncStatus:"_HMPDAT1
"RTN","HMPUTIL1",90,0)
 S STS("initialized")="true"
"RTN","HMPUTIL1",91,0)
 S STS("domainTotals",HMPDOM)=1
"RTN","HMPUTIL1",92,0)
 D ENCODE^HMPJSON("STS","STSJSON","ERR")
"RTN","HMPUTIL1",93,0)
 I $D(ERR) S $EC=",UJSON encode error in unsolicited update," Q
"RTN","HMPUTIL1",94,0)
 S HMPFCNT=HMPFCNT+1
"RTN","HMPUTIL1",95,0)
 M ^TMP("HMPF",$J,HMPFCNT)=STSJSON
"RTN","HMPUTIL1",96,0)
 S ^TMP("HMPF",$J,HMPFCNT,.3)=$$WRAP("syncStatus",$$PIDS^HMPDJFS(DFN),1,1,DFN)
"RTN","HMPUTIL1",97,0)
 Q
"RTN","HMPUTIL1",98,0)
 ;
"RTN","HMPUTIL1",99,0)
WRAP(DOMAIN,PIDS,OFFSET,DOMSIZE,DFN) ; JSON wrapper
"RTN","HMPUTIL1",100,0)
 N X S X=""
"RTN","HMPUTIL1",101,0)
 S:$G(DOMAIN)'="syncStart" X="},{""collection"":"""_$P(DOMAIN,"#")_""""_PIDS
"RTN","HMPUTIL1",102,0)
 S X=X_","
"RTN","HMPUTIL1",103,0)
 I $G(OFFSET)>-1 S X=X_"""seq"":"_OFFSET_","
"RTN","HMPUTIL1",104,0)
 I $G(DOMSIZE)>-1 S X=X_"""total"":"_DOMSIZE_","
"RTN","HMPUTIL1",105,0)
 I $G(OFFSET)>-1 S X=X_"""object"":"
"RTN","HMPUTIL1",106,0)
 Q X
"RTN","HMPUTIL1",107,0)
 ;
"RTN","HMPUTIL1",108,0)
OP1 ; Check for completion of the staged operational data in the background.  US5152
"RTN","HMPUTIL1",109,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTSAVE,ZTKIL,ZTSYNC,ZTSK
"RTN","HMPUTIL1",110,0)
 S ZTRTN="OP2^HMPUTIL1",ZTIO="HMP EXTRACT RESOURCE",ZTDTH=$H
"RTN","HMPUTIL1",111,0)
 S ZTSAVE("HMPFHMP")="",ZTSAVE("ARGS(")=""
"RTN","HMPUTIL1",112,0)
 S ZTSAVE("HMPENVIR(")=""  ; environment information
"RTN","HMPUTIL1",113,0)
 S ZTDESC="Wait untill ALL operational data is staged and then add timestamp to it"
"RTN","HMPUTIL1",114,0)
 D ^%ZTLOAD
"RTN","HMPUTIL1",115,0)
 Q
"RTN","HMPUTIL1",116,0)
OP2 ; US5152
"RTN","HMPUTIL1",117,0)
 F  I $$INITDONE^HMPDJFSP("HMPFX~"_HMPFHMP_"~OPD") D OPDTME^HMPUTILS(ARGS("hmpstmp")) Q
"RTN","HMPUTIL1",118,0)
 Q
"RTN","HMPUTILS")
0^121^B213811808
"RTN","HMPUTILS",1,0)
HMPUTILS ;SLC/AGP -- HMP utilities routine ;8/14/13  11:22
"RTN","HMPUTILS",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPUTILS",3,0)
 ;
"RTN","HMPUTILS",4,0)
 ; External References          DBIA#
"RTN","HMPUTILS",5,0)
 ; -------------------          -----
"RTN","HMPUTILS",6,0)
 ; XLFCRC                        3156
"RTN","HMPUTILS",7,0)
 ; XLFDT                        10103
"RTN","HMPUTILS",8,0)
 ; XLFUTL                        2622
"RTN","HMPUTILS",9,0)
 ; XUPARAM                       2541
"RTN","HMPUTILS",10,0)
 ;
"RTN","HMPUTILS",11,0)
 Q
"RTN","HMPUTILS",12,0)
 ;
"RTN","HMPUTILS",13,0)
SETERROR(RESULT,ERROR,EXTERROR,DATA) ; -- error text for JSON
"RTN","HMPUTILS",14,0)
 N CNT,TEMP,HMPTEMP,XCNT
"RTN","HMPUTILS",15,0)
 S HMPTEMP="HMPXTEMP ERRORS"
"RTN","HMPUTILS",16,0)
 I '$D(^XTMP(HMPTEMP,0)) S ^XTMP(HMPTEMP,0)=$$FMADD^XLFDT(DT,7)_U_DT_U_"HMP ERROR GLOBAL"
"RTN","HMPUTILS",17,0)
 S RESULT("success")="false"
"RTN","HMPUTILS",18,0)
 I $D(DATA) S XCNT=$O(^XTMP(HMPTEMP,""),-1)+1 M ^XTMP(HMPTEMP,XCNT,"ERROR")=DATA
"RTN","HMPUTILS",19,0)
 I $D(ERROR) D SETERRTX(.TEMP,.ERROR) S RESULT("error","code")=TEMP
"RTN","HMPUTILS",20,0)
 I +$G(XCNT)>0 S RESULT("error","code")=$G(RESULT("error","code"))_" See ^XTMP("_HMPTEMP_","_XCNT_",DATA) for data"
"RTN","HMPUTILS",21,0)
 I $D(EXTERROR) D SETERRTX(.TEMP,.EXTERROR) I TEMP'="" S RESULT("error","message")=TEMP
"RTN","HMPUTILS",22,0)
 ;
"RTN","HMPUTILS",23,0)
 Q
"RTN","HMPUTILS",24,0)
 ;
"RTN","HMPUTILS",25,0)
SETERRTX(TEMP,ERROR) ;
"RTN","HMPUTILS",26,0)
 S TEMP=""
"RTN","HMPUTILS",27,0)
 S CNT=0 F  S CNT=$O(ERROR(CNT)) Q:CNT'>0  D
"RTN","HMPUTILS",28,0)
 .S TEMP=$S(TEMP'="":TEMP=TEMP_$C(13,10)_ERROR(CNT),1:ERROR(CNT))
"RTN","HMPUTILS",29,0)
 Q
"RTN","HMPUTILS",30,0)
 ;
"RTN","HMPUTILS",31,0)
SETTEXT(X,VALUE) ; -- format word processing
"RTN","HMPUTILS",32,0)
 N FIRST,I,LINE
"RTN","HMPUTILS",33,0)
 S FIRST=1
"RTN","HMPUTILS",34,0)
 S I=0 F  S I=$O(@X@(I)) Q:I<1  D
"RTN","HMPUTILS",35,0)
 .S LINE=$S($D(@X@(I,0)):@X@(I,0),1:@X@(I))
"RTN","HMPUTILS",36,0)
 .; FIRST=1 S @VALUE@(I)=LINE,FIRST=0 Q
"RTN","HMPUTILS",37,0)
 .S @VALUE@(I)=LINE_$C(13)_$C(10)
"RTN","HMPUTILS",38,0)
 Q
"RTN","HMPUTILS",39,0)
 ;
"RTN","HMPUTILS",40,0)
SPLITVAL(NODE,ARRAY) ; -- split a value into a list
"RTN","HMPUTILS",41,0)
 N CNT,NAME,VALUE,FIELD
"RTN","HMPUTILS",42,0)
 S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  D
"RTN","HMPUTILS",43,0)
 .S CNT=+ARRAY(NAME)
"RTN","HMPUTILS",44,0)
 .S VALUE=$P($G(NODE),U,CNT)
"RTN","HMPUTILS",45,0)
 .I NAME="Code" S FIELD=$P(ARRAY(NAME),U,2) S VALUE=$$SETVURN(FIELD,VALUE)
"RTN","HMPUTILS",46,0)
 .S ARRAY(NAME)=VALUE
"RTN","HMPUTILS",47,0)
 Q
"RTN","HMPUTILS",48,0)
 ;
"RTN","HMPUTILS",49,0)
SETPROV(NODE,PROV) ; -- providers
"RTN","HMPUTILS",50,0)
 S PROV("providerUid")=$$SETUID("user",,+NODE)
"RTN","HMPUTILS",51,0)
 S PROV("providerName")=$P(NODE,U,2)
"RTN","HMPUTILS",52,0)
 Q
"RTN","HMPUTILS",53,0)
 ;
"RTN","HMPUTILS",54,0)
SETUID(DOMAIN,PAT,ID,ADDDATA) ; -- create uid string
"RTN","HMPUTILS",55,0)
 N RESULT,SYS
"RTN","HMPUTILS",56,0)
 S SYS=$S($D(HMPSYS):HMPSYS,1:$$GET^XPAR("SYS","HMP SYSTEM NAME"))
"RTN","HMPUTILS",57,0)
 S RESULT="urn:va:"_DOMAIN_":"_SYS_":"_$S($G(PAT):PAT_":",1:"")_ID
"RTN","HMPUTILS",58,0)
 I $L($G(ADDDATA)) S RESULT=RESULT_":"_ADDDATA
"RTN","HMPUTILS",59,0)
 Q RESULT
"RTN","HMPUTILS",60,0)
 ;
"RTN","HMPUTILS",61,0)
SETFCURN(DOMAIN,FACILITY,VALUE) ; -- create facility urn
"RTN","HMPUTILS",62,0)
 Q "urn:va:"_DOMAIN_":"_FACILITY_":"_VALUE
"RTN","HMPUTILS",63,0)
 ;
"RTN","HMPUTILS",64,0)
SETVURN(DOMAIN,VALUE) ; -- create VA urn
"RTN","HMPUTILS",65,0)
 N RESULT S RESULT=""
"RTN","HMPUTILS",66,0)
 S RESULT="urn:va:"_DOMAIN_":"_VALUE
"RTN","HMPUTILS",67,0)
 Q RESULT
"RTN","HMPUTILS",68,0)
 ;
"RTN","HMPUTILS",69,0)
SYS() ; -- return hashed system name
"RTN","HMPUTILS",70,0)
 Q $$BASE^XLFUTL($$CRC16^XLFCRC($$KSP^XUPARAM("WHERE")),10,16)
"RTN","HMPUTILS",71,0)
 ;
"RTN","HMPUTILS",72,0)
SETNCS(CODESET,VALUE) ; -- create national codeset urn
"RTN","HMPUTILS",73,0)
 Q "urn:"_CODESET_":"_VALUE
"RTN","HMPUTILS",74,0)
 ;
"RTN","HMPUTILS",75,0)
JSONDT(X) ; -- convert FileMan DT to HL7 DT for JSON
"RTN","HMPUTILS",76,0)
 N D,DATE,M,TIME,Y
"RTN","HMPUTILS",77,0)
 S DATE=$P($$FMTHL7^XLFDT(X),"-")
"RTN","HMPUTILS",78,0)
 I $L(DATE)>8 S TIME=$E(DATE,9,$L(DATE))
"RTN","HMPUTILS",79,0)
 S Y=$E(DATE,1,4),M=$E(DATE,5,6),D=$E(DATE,7,8)
"RTN","HMPUTILS",80,0)
 K DATE
"RTN","HMPUTILS",81,0)
 S DATE=Y I M>0 S DATE=DATE_M S:D>0 DATE=DATE_D
"RTN","HMPUTILS",82,0)
 I $G(TIME)'="" D  S DATE=DATE_TIME
"RTN","HMPUTILS",83,0)
 . N S S S=$E(TIME_"000000",5,6)
"RTN","HMPUTILS",84,0)
 . I S,S>59 S TIME=$E(TIME,1,4) ;strip bad seconds
"RTN","HMPUTILS",85,0)
 Q DATE
"RTN","HMPUTILS",86,0)
 ;
"RTN","HMPUTILS",87,0)
FACILITY(X,Y) ; -- add facility info to array for JSON
"RTN","HMPUTILS",88,0)
 ;  X=STATION NUMBER^STATION NAME
"RTN","HMPUTILS",89,0)
 ;  Y=Variable array name
"RTN","HMPUTILS",90,0)
 ; >D FACILITY^HMPUTILS("500^CAMP MASTER","LAB")
"RTN","HMPUTILS",91,0)
 ;
"RTN","HMPUTILS",92,0)
 S @Y@("facilityCode")=$P(X,"^")
"RTN","HMPUTILS",93,0)
 S @Y@("facilityName")=$P(X,"^",2)
"RTN","HMPUTILS",94,0)
 Q
"RTN","HMPUTILS",95,0)
VERSRV()   ; Return server version of option name
"RTN","HMPUTILS",96,0)
 N HMPLST,VAL
"RTN","HMPUTILS",97,0)
 D FIND^DIC(19,"",1,"X","HMP UI CONTEXT",1,,,,"HMPLST")
"RTN","HMPUTILS",98,0)
 S VAL=$G(HMPLST("DILIST","ID",1,1))
"RTN","HMPUTILS",99,0)
 Q $$UP^XLFSTR($P(VAL,"version ",2))
"RTN","HMPUTILS",100,0)
 ;
"RTN","HMPUTILS",101,0)
VERCMP(CUR,VAL) ; Returns 1 if CUR<VAL, -1 if CUR>VAL, 0 if equal
"RTN","HMPUTILS",102,0)
 N CURMAJOR,CURMINOR,CURSNAP,VALMAJOR,VALMINOR,VALSNAP
"RTN","HMPUTILS",103,0)
 S CURMAJOR=$P(CUR,"-"),CURMINOR=$P(CUR,"-",2),CURSNAP=$E($P(CUR,"-",3),1,4)="SNAP"
"RTN","HMPUTILS",104,0)
 S VALMAJOR=$P(VAL,"-"),VALMINOR=$P(VAL,"-",2),VALSNAP=$E($P(VAL,"-",3),1,4)="SNAP"
"RTN","HMPUTILS",105,0)
 I $E(VALMINOR)="P" S VALMINOR=$E(VALMINOR,2,99)     ; "P"ilot versions (old)
"RTN","HMPUTILS",106,0)
 I $E(CURMINOR)="P" S CURMINOR=$E(VALMINOR,2,99)
"RTN","HMPUTILS",107,0)
 I $E(VALMINOR)="S" S VALMINOR=$E(VALMINOR,2,99)*10  ; "S"print versions
"RTN","HMPUTILS",108,0)
 I $E(CURMINOR)="S" S CURMINOR=$E(CURMINOR,2,99)*10
"RTN","HMPUTILS",109,0)
 Q:VALMAJOR>CURMAJOR 1   Q:VALMAJOR<CURMAJOR -1  ; compare major versions
"RTN","HMPUTILS",110,0)
 Q:VALMINOR>CURMINOR 1   Q:VALMINOR<CURMINOR -1  ; compare minor versions
"RTN","HMPUTILS",111,0)
 Q:(CURSNAP&'VALSNAP) 1  Q:(VALSNAP&'CURSNAP) -1 ; "SNAPSHOT" < released
"RTN","HMPUTILS",112,0)
 Q 0
"RTN","HMPUTILS",113,0)
 ;
"RTN","HMPUTILS",114,0)
META(A) ; Create "metaStamp" JSON segment from ^XTMP
"RTN","HMPUTILS",115,0)
 ; --Input parameter
"RTN","HMPUTILS",116,0)
 ; A = "^^HMPFX~hmp-development-box~"<DFN> (e.g. ^^HMPFX~hmp-development-box~3)
"RTN","HMPUTILS",117,0)
 ;
"RTN","HMPUTILS",118,0)
 ; --Local variables
"RTN","HMPUTILS",119,0)
 ; HMPA = "HMPFX~hmp-development-box~"<DFN>
"RTN","HMPUTILS",120,0)
 ; HMPB = ZTASK# --> ^XTMP(HMPA,<ZTASK#>
"RTN","HMPUTILS",121,0)
 ; HMPC = Domain (e.g. "allergy") --> ^XTMP(HMPA,HMPB,<Domain>
"RTN","HMPUTILS",122,0)
 ; HMPD = Counter (sequential number) --> ^XTMP(HMPA,HMPB,HMPC,<Counter>
"RTN","HMPUTILS",123,0)
 ; HMPN = Subscript --> ^XTMP(HMPA,HMPB,HMPC,HMPD,<Subscript>
"RTN","HMPUTILS",124,0)
 ; HMPE = ^XTMP(HMPA,HMPB,HMPC,HMPD,HMPN)
"RTN","HMPUTILS",125,0)
 ; HMPF = Domain id (e.g. the "C877:3:751" part of "urn:va:allergy:C877:3:751"
"RTN","HMPUTILS",126,0)
 ; HMPID = pid --> <site-hash>;DFN (e.g. C877;3)
"RTN","HMPUTILS",127,0)
 ; HMPZ1 = DFN
"RTN","HMPUTILS",128,0)
 ; HMPP = $$PIDS^HMPDJFS(HMPZ1)  --> JSON construct containing pid, systemId, localId, icn
"RTN","HMPUTILS",129,0)
 ; HMPQ = " (double quote literal)
"RTN","HMPUTILS",130,0)
 ; HMPT = The "total" node from ^XTMP --> ^XTMP(HMPA,HMPB,HMPC,"total")
"RTN","HMPUTILS",131,0)
 ; HMPX = JSON construct for the entire metaStamp
"RTN","HMPUTILS",132,0)
 ; HMPW = Event timeStamp
"RTN","HMPUTILS",133,0)
 ; HMPY = $$EN^HMPSTMP("NOW")
"RTN","HMPUTILS",134,0)
 ; HMPZ = Counter for breaking up the large nodes into sub-nodes in ^TMP
"RTN","HMPUTILS",135,0)
 ; 
"RTN","HMPUTILS",136,0)
 I '$D(U) S U="^"
"RTN","HMPUTILS",137,0)
 N HMPA,HMPB,HMPC,HMPC1,HMPD,HMPE,HMPF,HMPID,HMPM,HMPN
"RTN","HMPUTILS",138,0)
 N HMPP,HMPQ,HMPT,HMPW,HMPX,HMPY,HMPZ,HMPZ1
"RTN","HMPUTILS",139,0)
 S HMPA=$P(A,U,3),HMPB=$O(^XTMP(HMPA,0)),HMPZ1=$P(HMPA,"~",3)
"RTN","HMPUTILS",140,0)
 S (HMPC,HMPE)="",HMPQ="""",HMPZ=0
"RTN","HMPUTILS",141,0)
 S HMPP=$$PIDS^HMPDJFS(HMPZ1)
"RTN","HMPUTILS",142,0)
 S HMPY=$$EN^HMPSTMP("NOW")
"RTN","HMPUTILS",143,0)
 S HMPX=",""metaStamp"":"_"{""icn"":"""_$$GETICN^MPIF001(HMPZ1)_""""_","
"RTN","HMPUTILS",144,0)
 S HMPX=HMPX_"""stampTime"":"""_HMPY_""""_",""sourceMetaStamp"":"_"{"
"RTN","HMPUTILS",145,0)
 S HMPID=$TR($P($P(HMPP,"pid",2),","),""":")
"RTN","HMPUTILS",146,0)
 S HMPX=HMPX_""""_$P(HMPID,";")_""""_":{"
"RTN","HMPUTILS",147,0)
 S HMPX=HMPX_"""pid"":"""_HMPID_""""_","
"RTN","HMPUTILS",148,0)
 S HMPX=HMPX_"""localId"":"""_$P(HMPID,";",2)_""""_","
"RTN","HMPUTILS",149,0)
 S HMPX=HMPX_"""stampTime"":"""_HMPY_""""_","
"RTN","HMPUTILS",150,0)
 S HMPX=HMPX_"""domainMetaStamp"""_":"_"{"
"RTN","HMPUTILS",151,0)
 F  S HMPC=$O(^XTMP(HMPA,HMPB,HMPC)) Q:HMPC']""  D
"RTN","HMPUTILS",152,0)
 .S HMPT=+$G(^XTMP(HMPA,HMPB,HMPC,"total"))
"RTN","HMPUTILS",153,0)
 .I HMPT'>0 Q
"RTN","HMPUTILS",154,0)
 .S HMPX=HMPX_""""_HMPC_""""_":{"
"RTN","HMPUTILS",155,0)
 .S HMPX=HMPX_"""domain"":"""_HMPC_""""_","
"RTN","HMPUTILS",156,0)
 .S HMPX=HMPX_"""stampTime"":"""_HMPY_""""_","
"RTN","HMPUTILS",157,0)
 .S HMPD=0
"RTN","HMPUTILS",158,0)
 .S HMPX=HMPX_"""eventMetaStamp"""_":"_"{"
"RTN","HMPUTILS",159,0)
 .F  S HMPD=$O(^XTMP(HMPA,HMPB,HMPC,HMPD)) Q:HMPD'=+HMPD  D
"RTN","HMPUTILS",160,0)
 ..I HMPC'="document" S HMPE=^XTMP(HMPA,HMPB,HMPC,HMPD,1)
"RTN","HMPUTILS",161,0)
 ..E  D  ;uid for document may not be in node 1 if document text spans over multiple nodes
"RTN","HMPUTILS",162,0)
 ...S HMPW1=$TR($P($P(^XTMP(HMPA,HMPB,HMPC,HMPD,1),"lastUpdateTime",2),","),""":")
"RTN","HMPUTILS",163,0)
 ...F HMPN=1:1 S HMPM=^XTMP(HMPA,HMPB,HMPC,HMPD,HMPN) Q:'$D(HMPM)  I HMPM[("urn:va:"_HMPC) S HMPE=^XTMP(HMPA,HMPB,HMPC,HMPD,HMPN) Q
"RTN","HMPUTILS",164,0)
 ..I HMPE="null"!(HMPE']"") Q
"RTN","HMPUTILS",165,0)
 ..S HMPC1=$P(HMPC,"#")
"RTN","HMPUTILS",166,0)
 ..S HMPF=$P($P(HMPE,"""uid"""_":"_""""_"urn:va:"_HMPC1_":",2),HMPQ)
"RTN","HMPUTILS",167,0)
 ..;;PJH fix HMPF start
"RTN","HMPUTILS",168,0)
 ..;I HMPC["order"!(HMPC["visit")!(HMPC["problem") D
"RTN","HMPUTILS",169,0)
 ..;;JD removed the condition.  Many (if not all) domains can span across multiple nodes.
"RTN","HMPUTILS",170,0)
 ..;;We need to find the "uid" data regardless of where it is located.  US5858
"RTN","HMPUTILS",171,0)
 ..D
"RTN","HMPUTILS",172,0)
 ...N I,NEXT,SRCH,HMPE
"RTN","HMPUTILS",173,0)
 ...S HMPF="",HMPN=$O(^XTMP(HMPA,HMPB,HMPC,HMPD,""),-1) Q:'HMPN
"RTN","HMPUTILS",174,0)
 ...S HMPE=$G(^XTMP(HMPA,HMPB,HMPC,HMPD,HMPN)) Q:HMPE="null"!(HMPE']"")
"RTN","HMPUTILS",175,0)
 ...;Search last record for last occurance of uid - this should be parent
"RTN","HMPUTILS",176,0)
 ...S SRCH="""uid"""_":"_""""_"urn:va:"_$P(HMPC,"#")_":"
"RTN","HMPUTILS",177,0)
 ...S HMPF="" F I=2:1 S NEXT=$P($P(HMPE,SRCH,I),HMPQ) Q:NEXT=""  S HMPF=NEXT
"RTN","HMPUTILS",178,0)
 ..;;PJH fix HMPF end
"RTN","HMPUTILS",179,0)
 ..I $L(HMPX)>20000 S HMPZ=HMPZ+1,^TMP("HMPF",$J,HMPFCNT,.3,HMPZ)=HMPX,HMPX=""
"RTN","HMPUTILS",180,0)
 ..S HMPX=HMPX_"""urn:va:"_HMPC1_":"_HMPF_""""_":{"
"RTN","HMPUTILS",181,0)
 ..S HMPW=$TR($P($P(HMPE,"lastUpdateTime",2),","),""":")
"RTN","HMPUTILS",182,0)
 ..;;PJH fix HMPW start
"RTN","HMPUTILS",183,0)
 ..;If lastUpdateTime is not present in this node search back
"RTN","HMPUTILS",184,0)
 ..I HMPW="" D
"RTN","HMPUTILS",185,0)
 ...N DONE,HMPN1,HMPE
"RTN","HMPUTILS",186,0)
 ...S DONE=0,HMPN1=""
"RTN","HMPUTILS",187,0)
 ...F  S HMPN1=$O(^XTMP(HMPA,HMPB,HMPC,HMPD,HMPN1),-1) Q:HMPN1<1  D  Q:DONE
"RTN","HMPUTILS",188,0)
 ....S HMPE=$G(^XTMP(HMPA,HMPB,HMPC,HMPD,HMPN1)) Q:'$F(HMPE,"lastUpdateTime")
"RTN","HMPUTILS",189,0)
 ....S HMPW=$TR($P($P(HMPE,"lastUpdateTime",2),","),""":"),DONE=1
"RTN","HMPUTILS",190,0)
 ..;;PJH fix HMPW end
"RTN","HMPUTILS",191,0)
 ..S HMPX=HMPX_"""stampTime"":"""_$S(HMPC="document":HMPW1,1:HMPW)_""""_"}"_$S(HMPD=HMPT:"}",1:",")
"RTN","HMPUTILS",192,0)
 .S HMPX=HMPX_"},"
"RTN","HMPUTILS",193,0)
 .I $L(HMPX)>20000 S HMPZ=HMPZ+1,^TMP("HMPF",$J,HMPFCNT,.3,HMPZ)=HMPX,HMPX=""
"RTN","HMPUTILS",194,0)
 I $L(HMPX)>0 D
"RTN","HMPUTILS",195,0)
 .S HMPZ=HMPZ+1
"RTN","HMPUTILS",196,0)
 .S HMPX=$E(HMPX,1,$L(HMPX)-1)_"}}}}" D
"RTN","HMPUTILS",197,0)
 ..I $E(HMPX,$L(HMPX))="{" S HMPX=HMPX_"""seq"":"_OFFSET_",""total"":"_DOMSIZE
"RTN","HMPUTILS",198,0)
 ..E  S HMPX=HMPX_",""seq"":"_OFFSET_",""total"":"_DOMSIZE
"RTN","HMPUTILS",199,0)
 .S HMPX=HMPX_",""object"":"
"RTN","HMPUTILS",200,0)
 .S ^TMP("HMPF",$J,HMPFCNT,.3,HMPZ)=HMPX
"RTN","HMPUTILS",201,0)
 Q
"RTN","HMPUTILS",202,0)
 ;
"RTN","HMPUTILS",203,0)
DONE() ; Done staging?
"RTN","HMPUTILS",204,0)
 ; HMPBAT = "HMPFX~hmp-development-box~"_<either DFN or 'OPD'>
"RTN","HMPUTILS",205,0)
 ; HMPFLG = An array of batches --> HMPFLG(HMPBAT)=1 If all data for the batch is staged
"RTN","HMPUTILS",206,0)
 ;                                                 0 Otherwise
"RTN","HMPUTILS",207,0)
 ; HMPL   = Loop Counter                      
"RTN","HMPUTILS",208,0)
 ; HMPRET = 1 if ALL data (patient & operational) is staged
"RTN","HMPUTILS",209,0)
 ;          0 Otherwise
"RTN","HMPUTILS",210,0)
 N HMPBAT,HMPFLG,HMPL,HMPRET
"RTN","HMPUTILS",211,0)
 S HMPBAT="HMPFX",HMPRET=1
"RTN","HMPUTILS",212,0)
 F  S HMPBAT=$O(^XTMP(HMPBAT)) Q:HMPBAT']""  D
"RTN","HMPUTILS",213,0)
 .I $$INITDONE^HMPDJFSP(HMPBAT) S HMPFLG(HMPBAT)=1
"RTN","HMPUTILS",214,0)
 .E  S HMPFLG(HMPBAT)=0
"RTN","HMPUTILS",215,0)
 S (HMPF,HMPL)=""
"RTN","HMPUTILS",216,0)
 F  S HMPL=$O(HMPFLG(HMPL)) Q:(HMPRET=0)!(HMPL']"")  D
"RTN","HMPUTILS",217,0)
 .I HMPFLG(HMPL)=0 S HMPRET=0 Q
"RTN","HMPUTILS",218,0)
 Q HMPRET
"RTN","HMPUTILS",219,0)
 ;
"RTN","HMPUTILS",220,0)
OPDTME(A) ; Insert stampTime in the staged operational data
"RTN","HMPUTILS",221,0)
 ; A      = stampTime to be stored
"RTN","HMPUTILS",222,0)
 ; HMPDAT = Data --> ^XTMP(HMPSRV,HMPTSK,HMPDOM,HMPSEQ,1)
"RTN","HMPUTILS",223,0)
 ; HMPDOM = Patient Domain (e.g. allergy) --> ^XTMP(HMPSRV,0,"count",HMPDOM
"RTN","HMPUTILS",224,0)
 ; HMPQ   = String Literal equal to double quotes (")
"RTN","HMPUTILS",225,0)
 ; HMPSEQ = Sequence Number --> ^XTMP(HMPSRV,HMPTSK,HMPDOM,HMPSEQ
"RTN","HMPUTILS",226,0)
 ; HMPSRV = Server info (e.g. "HMPFX~hmp-development-box~OPD") --> ^XTMP(HMPSRV
"RTN","HMPUTILS",227,0)
 ; HMPTSK = Task Number (e.g. 1396067) --> ^XTMP(HMPSRV,HMPTSK
"RTN","HMPUTILS",228,0)
 ; HMPX   = Dummy variable
"RTN","HMPUTILS",229,0)
 N HMPDAT,HMPDOM,HMPQ,HMPSEQ,HMPSRV,HMPTSK,HMPX
"RTN","HMPUTILS",230,0)
 S HMPSRV="",HMPQ=""""
"RTN","HMPUTILS",231,0)
 F  S HMPSRV=$O(^XTMP(HMPSRV)) Q:HMPSRV']""  D
"RTN","HMPUTILS",232,0)
 .I HMPSRV'["OPD" Q
"RTN","HMPUTILS",233,0)
 .S HMPTSK=0
"RTN","HMPUTILS",234,0)
 .F  S HMPTSK=$O(^XTMP(HMPSRV,HMPTSK)) Q:HMPTSK'=+HMPTSK  D
"RTN","HMPUTILS",235,0)
 ..S HMPDOM=""
"RTN","HMPUTILS",236,0)
 ..F  S HMPDOM=$O(^XTMP(HMPSRV,HMPTSK,HMPDOM)) Q:HMPDOM']""  D
"RTN","HMPUTILS",237,0)
 ...S HMPSEQ=0
"RTN","HMPUTILS",238,0)
 ...F  S HMPSEQ=$O(^XTMP(HMPSRV,HMPTSK,HMPDOM,HMPSEQ)) Q:HMPSEQ'=+HMPSEQ  D
"RTN","HMPUTILS",239,0)
 ....S HMPDAT=^XTMP(HMPSRV,HMPTSK,HMPDOM,HMPSEQ,1)
"RTN","HMPUTILS",240,0)
 ....I $E(HMPDAT)'="{" Q
"RTN","HMPUTILS",241,0)
 ....S HMPX="""stampTime"":"_HMPQ_$G(A)_HMPQ_","
"RTN","HMPUTILS",242,0)
 ....S ^XTMP(HMPSRV,HMPTSK,HMPDOM,HMPSEQ,1)="{"_HMPX_$P(HMPDAT,"{",2,999)
"RTN","HMPUTILS",243,0)
 Q
"RTN","HMPUTILS",244,0)
 ;
"RTN","HMPUTILS",245,0)
WDWH() ; What kind of data exists?
"RTN","HMPUTILS",246,0)
 ; HMPA   = loop counter
"RTN","HMPUTILS",247,0)
 ; HMPB   = dummy variable
"RTN","HMPUTILS",248,0)
 ; HMPOPD = 1 if operational data exists
"RTN","HMPUTILS",249,0)
 ;         "" otherwise
"RTN","HMPUTILS",250,0)
 ; HMPPAT = 1 if patient data exists
"RTN","HMPUTILS",251,0)
 ;         "" otherwise
"RTN","HMPUTILS",252,0)
 ; HMPRET = return variable - 0 if no data exists
"RTN","HMPUTILS",253,0)
 ;                            1 if ONLY patient data exists
"RTN","HMPUTILS",254,0)
 ;                            2 if ONLY operational data exists
"RTN","HMPUTILS",255,0)
 ;                            3 if BOTH patient and operational data exist
"RTN","HMPUTILS",256,0)
 N HMPA,HMPOPD,HMPPAT,HMPRET
"RTN","HMPUTILS",257,0)
 S (HMPOPD,HMPPAT)="",HMPA="HMPFX",HMPRET=0
"RTN","HMPUTILS",258,0)
 F  S HMPA=$O(^XTMP(HMPA)) Q:HMPA']""  D
"RTN","HMPUTILS",259,0)
 .S HMPB=$P(HMPA,"~",3)
"RTN","HMPUTILS",260,0)
 .I HMPB="OPD" S HMPOPD=1 Q
"RTN","HMPUTILS",261,0)
 .I HMPB=+HMPB S HMPPAT=1
"RTN","HMPUTILS",262,0)
 I HMPPAT,'HMPOPD S HMPRET=1
"RTN","HMPUTILS",263,0)
 I 'HMPPAT,HMPOPD S HMPRET=2
"RTN","HMPUTILS",264,0)
 I HMPPAT,HMPOPD S HMPRET=3
"RTN","HMPUTILS",265,0)
 Q HMPRET
"RTN","HMPUTILS",266,0)
 ;
"RTN","HMPUTILS",267,0)
META1(A,HMPSTMP) ; Create "metaStamp" JSON segment from ^XTMP
"RTN","HMPUTILS",268,0)
 ; --Input parameter
"RTN","HMPUTILS",269,0)
 ; A = "^^HMPFX~hmp-development-box~"<DFN> (e.g. ^^HMPFX~hmp-development-box~3)
"RTN","HMPUTILS",270,0)
 ;
"RTN","HMPUTILS",271,0)
 ; --Local variables
"RTN","HMPUTILS",272,0)
 ; HMPA = "HMPFX~hmp-development-box~"<DFN>
"RTN","HMPUTILS",273,0)
 ; HMPB = ZTASK# --> ^XTMP(HMPA,<ZTASK#>
"RTN","HMPUTILS",274,0)
 ; HMPC = Domain (e.g. "allergy") --> ^XTMP(HMPA,HMPB,<Domain>
"RTN","HMPUTILS",275,0)
 ; HMPD = Counter (sequential number) --> ^XTMP(HMPA,HMPB,HMPC,<Counter>
"RTN","HMPUTILS",276,0)
 ; HMPN = Subscript --> ^XTMP(HMPA,HMPB,HMPC,HMPD,<Subscript>
"RTN","HMPUTILS",277,0)
 ; HMPE = ^XTMP(HMPA,HMPB,HMPC,HMPD,HMPN)
"RTN","HMPUTILS",278,0)
 ; HMPF = Domain id (e.g. the "C877:3:751" part of "urn:va:allergy:C877:3:751"
"RTN","HMPUTILS",279,0)
 ; HMPID = pid --> <site-hash>;DFN (e.g. C877;3)
"RTN","HMPUTILS",280,0)
 ; HMPZ1 = DFN
"RTN","HMPUTILS",281,0)
 ; HMPP = $$PIDS^HMPDJFS(HMPZ1)  --> JSON construct containing pid, systemId, localId, icn
"RTN","HMPUTILS",282,0)
 ; HMPQ = " (double quote literal)
"RTN","HMPUTILS",283,0)
 ; HMPT = The "total" node from ^XTMP --> ^XTMP(HMPA,HMPB,HMPC,"total")
"RTN","HMPUTILS",284,0)
 ; HMPX = JSON construct for the entire metaStamp
"RTN","HMPUTILS",285,0)
 ; HMPW = Event timeStamp
"RTN","HMPUTILS",286,0)
 ; HMPY = $$EN^HMPSTMP("NOW")
"RTN","HMPUTILS",287,0)
 ; HMPZ = Counter for breaking up the large nodes into sub-nodes in ^TMP
"RTN","HMPUTILS",288,0)
 ; 
"RTN","HMPUTILS",289,0)
 I '$D(U) S U="^"
"RTN","HMPUTILS",290,0)
 N HMPA,HMPJ,HMPQ,HMPSEP,HMPZ
"RTN","HMPUTILS",291,0)
 S HMPA=$P(A,U,3),HMPQ="""",HMPZ=0,HMPSEP=","""
"RTN","HMPUTILS",292,0)
 S HMPCNT=$G(HMPCNT)+1,HMPJ=$P(HMPA,"~",1,2)_"~OPD"
"RTN","HMPUTILS",293,0)
 I HMPCNT=1,$D(^XTMP(HMPJ))>0 S HMPSEP=HMPQ D MTOD1(HMPJ,HMPSTMP) Q ""
"RTN","HMPUTILS",294,0)
 N HMPB,HMPC,HMPC1,HMPD,HMPE,HMPF,HMPID,HMPM,HMPN
"RTN","HMPUTILS",295,0)
 N HMPP,HMPT,HMPW,HMPX,HMPY,HMPZ1
"RTN","HMPUTILS",296,0)
 S HMPB=$O(^XTMP(HMPA,0)),HMPZ1=$P(HMPA,"~",3)
"RTN","HMPUTILS",297,0)
 S (HMPC,HMPE)=""
"RTN","HMPUTILS",298,0)
 S HMPP=$$PIDS^HMPDJFS(HMPZ1)
"RTN","HMPUTILS",299,0)
 S HMPY=$$EN^HMPSTMP("NOW")
"RTN","HMPUTILS",300,0)
 I HMPSEP=HMPQ S HMPX="""collection"":"""_$P(DOMAIN,"#")_""""_PIDS_"," ;BOTH pat & opd
"RTN","HMPUTILS",301,0)
 E  S HMPX="{""collection"":"""_$P(DOMAIN,"#")_""""_PIDS ;pat ONLY
"RTN","HMPUTILS",302,0)
 S HMPX=HMPX_HMPSEP_"metaStamp"":"_"{""icn"":"""_$$GETICN^MPIF001(HMPZ1)_""""_"," ;BOTH pat & opd
"RTN","HMPUTILS",303,0)
 S HMPX=HMPX_"""stampTime"":"""_HMPY_""""_",""sourceMetaStamp"":"_"{"
"RTN","HMPUTILS",304,0)
 S HMPID=$TR($P($P(HMPP,"pid",2),","),""":")
"RTN","HMPUTILS",305,0)
 S HMPX=HMPX_""""_$P(HMPID,";")_""""_":{"
"RTN","HMPUTILS",306,0)
 S HMPX=HMPX_"""pid"":"""_HMPID_""""_","
"RTN","HMPUTILS",307,0)
 S HMPX=HMPX_"""localId"":"""_$P(HMPID,";",2)_""""_","
"RTN","HMPUTILS",308,0)
 S HMPX=HMPX_"""stampTime"":"""_HMPY_""""_","
"RTN","HMPUTILS",309,0)
 S HMPX=HMPX_"""domainMetaStamp"""_":"_"{"
"RTN","HMPUTILS",310,0)
 F  S HMPC=$O(^XTMP(HMPA,HMPB,HMPC)) Q:HMPC']""  D
"RTN","HMPUTILS",311,0)
 .S HMPT=+$G(^XTMP(HMPA,HMPB,HMPC,"total"))
"RTN","HMPUTILS",312,0)
 .I HMPT'>0 Q
"RTN","HMPUTILS",313,0)
 .S HMPX=HMPX_""""_HMPC_""""_":{"
"RTN","HMPUTILS",314,0)
 .S HMPX=HMPX_"""domain"":"""_HMPC_""""_","
"RTN","HMPUTILS",315,0)
 .S HMPX=HMPX_"""stampTime"":"""_HMPY_""""_","
"RTN","HMPUTILS",316,0)
 .S HMPD=0
"RTN","HMPUTILS",317,0)
 .S HMPX=HMPX_"""eventMetaStamp"""_":"_"{"
"RTN","HMPUTILS",318,0)
 .F  S HMPD=$O(^XTMP(HMPA,HMPB,HMPC,HMPD)) Q:HMPD'=+HMPD  D
"RTN","HMPUTILS",319,0)
 ..I HMPC'="document" S HMPE=^XTMP(HMPA,HMPB,HMPC,HMPD,1)
"RTN","HMPUTILS",320,0)
 ..E  D  ;uid for document may not be in node 1 if document text spans over multiple nodes
"RTN","HMPUTILS",321,0)
 ...S HMPW1=$TR($P($P(^XTMP(HMPA,HMPB,HMPC,HMPD,1),"lastUpdateTime",2),","),""":")
"RTN","HMPUTILS",322,0)
 ...F HMPN=1:1 S HMPM=^XTMP(HMPA,HMPB,HMPC,HMPD,HMPN) Q:'$D(HMPM)  I HMPM[("urn:va:"_HMPC) S HMPE=^XTMP(HMPA,HMPB,HMPC,HMPD,HMPN) Q
"RTN","HMPUTILS",323,0)
 ..I HMPE="null"!(HMPE']"") Q
"RTN","HMPUTILS",324,0)
 ..S HMPC1=$P(HMPC,"#")
"RTN","HMPUTILS",325,0)
 ..S HMPF=$P($P(HMPE,"""uid"""_":"_""""_"urn:va:"_HMPC1_":",2),HMPQ)
"RTN","HMPUTILS",326,0)
 ..I $L(HMPX)>20000 S HMPZ=HMPZ+1,^TMP("HMPF",$J,HMPFCNT,.3,HMPZ)=HMPX,HMPX=""
"RTN","HMPUTILS",327,0)
 ..S HMPX=HMPX_"""urn:va:"_HMPC1_":"_HMPF_""""_":{"
"RTN","HMPUTILS",328,0)
 ..S HMPW=$TR($P($P(HMPE,"lastUpdateTime",2),","),""":")
"RTN","HMPUTILS",329,0)
 ..S HMPX=HMPX_"""stampTime"":"""_$S(HMPC="document":HMPW1,1:HMPW)_""""_"}"_$S(HMPD=HMPT:"}",1:",")
"RTN","HMPUTILS",330,0)
 .S HMPX=HMPX_"},"
"RTN","HMPUTILS",331,0)
 .I $L(HMPX)>20000 S HMPZ=HMPZ+1,^TMP("HMPF",$J,HMPFCNT,.3,HMPZ)=HMPX,HMPX=""
"RTN","HMPUTILS",332,0)
 I $L(HMPX)>0 D
"RTN","HMPUTILS",333,0)
 .S HMPZ=HMPZ+1
"RTN","HMPUTILS",334,0)
 .S HMPX=$E(HMPX,1,$L(HMPX)-1)_"}}}}"
"RTN","HMPUTILS",335,0)
 .I $E(HMPX,$L(HMPX))="}" S HMPX=HMPX_","
"RTN","HMPUTILS",336,0)
 .I OFFSET>-1 S HMPX=HMPX_"""seq"":"_OFFSET_","
"RTN","HMPUTILS",337,0)
 .I DOMSIZE>-1 S HMPX=HMPX_"""total"":"_DOMSIZE_","
"RTN","HMPUTILS",338,0)
 .I OFFSET>-1 S HMPX=HMPX_"""object"":"
"RTN","HMPUTILS",339,0)
 .S ^TMP("HMPF",$J,HMPFCNT,.3,HMPZ)=HMPX
"RTN","HMPUTILS",340,0)
 Q
"RTN","HMPUTILS",341,0)
 ;
"RTN","HMPUTILS",342,0)
MTOD1(A,HMPSTMP) ; MetaStamp for operational data (within its own syncStart chunk).  JD - 2/3/15
"RTN","HMPUTILS",343,0)
 ; A = HMPFX~hmp-development-box~OPD
"RTN","HMPUTILS",344,0)
 ;Q
"RTN","HMPUTILS",345,0)
 N HMPDAT,HMPDAT1,HMPDOM,HMPDOM1,HMPEVT,HMPJSN,HMPTOT,HMPTSK,HMPMOR,HMPLAS,HMPMOR,HMPLAS
"RTN","HMPUTILS",346,0)
 S HMPTSK=$O(^XTMP(A,0)),HMPY=HMPSTMP,HMPID=$$SYS
"RTN","HMPUTILS",347,0)
 S HMPJSN="{""collection"":"""_"OPDsyncStart"_""""_","
"RTN","HMPUTILS",348,0)
 S HMPJSN=HMPJSN_"""metaStamp"":"_"{"
"RTN","HMPUTILS",349,0)
 S HMPJSN=HMPJSN_"""stampTime"":"""_HMPY_""""_",""sourceMetaStamp"":"_"{"
"RTN","HMPUTILS",350,0)
 S HMPJSN=HMPJSN_""""_$P(HMPID,";")_""""_":{"
"RTN","HMPUTILS",351,0)
 S HMPJSN=HMPJSN_"""stampTime"":"""_HMPY_""""_","
"RTN","HMPUTILS",352,0)
 S HMPJSN=HMPJSN_"""domainMetaStamp"""_":"_"{"
"RTN","HMPUTILS",353,0)
 S HMPTSK=0
"RTN","HMPUTILS",354,0)
 F  S HMPTSK=$O(^XTMP(A,HMPTSK)) Q:HMPTSK'=+HMPTSK  D
"RTN","HMPUTILS",355,0)
 .S HMPDOM=""
"RTN","HMPUTILS",356,0)
 .F  S HMPDOM=$O(^XTMP(A,HMPTSK,HMPDOM)) Q:HMPDOM']""  D
"RTN","HMPUTILS",357,0)
 ..S HMPDOM1=$P(HMPDOM,"#")
"RTN","HMPUTILS",358,0)
 ..;Check if further nodes exist for this domain
"RTN","HMPUTILS",359,0)
 ..S HMPMOR=$O(^XTMP(A,HMPTSK,HMPDOM))
"RTN","HMPUTILS",360,0)
 ..S HMPMOR=$S(HMPMOR="":0,($P(HMPMOR,"#")=HMPDOM1):1,1:0)
"RTN","HMPUTILS",361,0)
 ..; transform the domain name for quick orders to match the uid
"RTN","HMPUTILS",362,0)
 ..I HMPDOM1="quick" S HMPDOM1="qo"
"RTN","HMPUTILS",363,0)
 ..S HMPTOT=$G(^XTMP(A,HMPTSK,HMPDOM,"total")) Q:HMPTOT'>0
"RTN","HMPUTILS",364,0)
 ..;Set itemMetaStamp for first occurance of this domain ONLY - indent added
"RTN","HMPUTILS",365,0)
 ..I HMPDOM1'=$G(HMPLAS) D
"RTN","HMPUTILS",366,0)
 ...S HMPJSN=HMPJSN_""""_HMPDOM1_""""_":{"
"RTN","HMPUTILS",367,0)
 ...S HMPJSN=HMPJSN_"""domain"":"""_HMPDOM1_""""_","
"RTN","HMPUTILS",368,0)
 ...S HMPJSN=HMPJSN_"""stampTime"":"""_HMPY_""""_","
"RTN","HMPUTILS",369,0)
 ...S HMPJSN=HMPJSN_"""itemMetaStamp"""_":"_"{"
"RTN","HMPUTILS",370,0)
 ..S HMPEVT=0,HMPLAS=HMPDOM1 ;Save domain to compare against next node
"RTN","HMPUTILS",371,0)
 ..F  S HMPEVT=$O(^XTMP(A,HMPTSK,HMPDOM,HMPEVT)) Q:HMPEVT'=+HMPEVT  D
"RTN","HMPUTILS",372,0)
 ...;Search back from last ^XTMP record to find uid
"RTN","HMPUTILS",373,0)
 ...N I,NEXT,SRCH,HMPN
"RTN","HMPUTILS",374,0)
 ...S HMPDAT1="",HMPN="",SRCH="""uid"""_":"_""""_"urn:va:"_HMPDOM1_":"
"RTN","HMPUTILS",375,0)
 ...F  S HMPN=$O(^XTMP(A,HMPTSK,HMPDOM,HMPEVT,HMPN),-1) Q:'HMPN  D  Q:HMPDAT1
"RTN","HMPUTILS",376,0)
 ....S HMPDAT=$G(^XTMP(A,HMPTSK,HMPDOM,HMPEVT,HMPN)) Q:HMPDAT="null"!(HMPDAT']"")!('$F(HMPDAT,SRCH))
"RTN","HMPUTILS",377,0)
 ....;Search for last occurance of uid in record (this will be parent)
"RTN","HMPUTILS",378,0)
 ....F I=2:1 S NEXT=$P($P(HMPDAT,SRCH,I),HMPQ) Q:NEXT=""  S HMPDAT1=NEXT
"RTN","HMPUTILS",379,0)
 ...I $L(HMPJSN)>1000 S HMPZ=HMPZ+1,^TMP("HMPF",$J,HMPFCNT,.3,HMPZ)=HMPJSN,HMPJSN=""
"RTN","HMPUTILS",380,0)
 ...S HMPJSN=HMPJSN_"""urn:va:"_HMPDOM1_":"_HMPDAT1_""""_":{"
"RTN","HMPUTILS",381,0)
 ...S HMPJSN=HMPJSN_"""stampTime"":"""_HMPY_""""_"}"
"RTN","HMPUTILS",382,0)
 ...;Only terminate if this is last entry in last node for this domain
"RTN","HMPUTILS",383,0)
 ...I (HMPEVT=HMPTOT),'HMPMOR S HMPJSN=HMPJSN_"}"
"RTN","HMPUTILS",384,0)
 ...;Otherwise add comma separator
"RTN","HMPUTILS",385,0)
 ...E  S HMPJSN=HMPJSN_","
"RTN","HMPUTILS",386,0)
 ..;Close collection for the domain ONLY if there are no more nodes
"RTN","HMPUTILS",387,0)
 ..I 'HMPMOR S HMPJSN=HMPJSN_"},"
"RTN","HMPUTILS",388,0)
 ..I $L(HMPJSN)>1000 S HMPZ=HMPZ+1,^TMP("HMPF",$J,HMPFCNT,.3,HMPZ)=HMPJSN,HMPJSN=""
"RTN","HMPUTILS",389,0)
 I $L(HMPJSN)>0 D
"RTN","HMPUTILS",390,0)
 .S HMPZ=HMPZ+1
"RTN","HMPUTILS",391,0)
 .S HMPJSN=$E(HMPJSN,1,$L(HMPJSN)-1)_"}}}}},{"
"RTN","HMPUTILS",392,0)
 .S ^TMP("HMPF",$J,HMPFCNT,.3,HMPZ)=HMPJSN
"RTN","HMPUTILS",393,0)
 Q
"RTN","HMPUTILS",394,0)
 ;
"RTN","HMPUTILS",395,0)
NODATA(A) ; Is there any patient data; JD - 2/23/15
"RTN","HMPUTILS",396,0)
 ; Returns 1 if there is no patient data
"RTN","HMPUTILS",397,0)
 ;          0 Otherwise
"RTN","HMPUTILS",398,0)
 ; HMPA = Loop counter
"RTN","HMPUTILS",399,0)
 ; HMPF = Dummy variable
"RTN","HMPUTILS",400,0)
 N HMPA,HMPF
"RTN","HMPUTILS",401,0)
 S HMPF=0,HMPA=""
"RTN","HMPUTILS",402,0)
 F  S HMPA=$O(^XTMP(A,0,"count",HMPA)) Q:HMPF!(HMPA']"")  D
"RTN","HMPUTILS",403,0)
 .I +$G(^XTMP(A,0,"count",HMPA))>0 S HMPF=1 Q
"RTN","HMPUTILS",404,0)
 Q $S(HMPF:0,1:1)
"RTN","HMPWB")
0^122^B1537700
"RTN","HMPWB",1,0)
HMPWB ;;EJK/AGX - COMMON ENTRY POINT FOR ALL WRITEBACK ACTIVITY; 12/14/2014
"RTN","HMPWB",2,0)
 ;;1.0;COMMON ENTRY POINT FOR WRITEBACK FROM JDS TO VISTA;**1**;DEC 11 2014;Build 53
"RTN","HMPWB",3,0)
 ; INPUT PARAMETERS
"RTN","HMPWB",4,0)
 ;   IEN - existing allergy IEN or 0 if this is a new allergen. 
"RTN","HMPWB",5,0)
 ;   DFN - patient identifier
"RTN","HMPWB",6,0)
 ;   DATA(list) - array of related data
"RTN","HMPWB",7,0)
 ;      domain - used for determining the type of writeback data this is. 
"RTN","HMPWB",8,0)
 ;
"RTN","HMPWB",9,0)
 Q
"RTN","HMPWB",10,0)
 ;
"RTN","HMPWB",11,0)
API(RSLT,IEN,DFN,DATA) ; MAIN ENTRY POINT FROM RPC HMP PUT OPERATIONAL DATA
"RTN","HMPWB",12,0)
 M ^TMP("ZZHMPWB",$J,"DATA")=DATA
"RTN","HMPWB",13,0)
 S ^TMP("ZZHMPWB",$J,"DFN")=$G(DFN)
"RTN","HMPWB",14,0)
 S ^TMP("ZZHMPWB",$J,"IEN")=$G(IEN)
"RTN","HMPWB",15,0)
 N HMPAPI
"RTN","HMPWB",16,0)
 S HMP=$NA(^TMP("HMP",$J)),HMPI=0 K @HMP
"RTN","HMPWB",17,0)
 S HMPAPI=$G(DATA("domain"))
"RTN","HMPWB",18,0)
 I HMPAPI="allergy" D ALLERGY^HMPWB1(.RSLT,IEN,DFN,.DATA)
"RTN","HMPWB",19,0)
 I HMPAPI="demographics" D DEMOG^HMPWB2(.RSLT,IEN,OL,.DATA)
"RTN","HMPWB",20,0)
 I HMPAPI="vitals" D VMADD^HMPWB2(.RSLT,IEN,DFN,.DATA)
"RTN","HMPWB",21,0)
 I HMPAPI="vitals error" D VMERR^HMPWB2(.RSLT,IEN,DFN,.DATA)
"RTN","HMPWB",22,0)
 I HMPAPI="meds" D NVAMED^HMPWB3(.RSLT,IEN,DFN,.DATA)
"RTN","HMPWB",23,0)
 Q
"RTN","HMPWB1")
0^126^B49750558
"RTN","HMPWB1",1,0)
HMPWB1 ;;EJK/AGX - COMMON ENTRY POINT FOR ALL WRITEBACK ACTIVITY; 12/14/2014
"RTN","HMPWB1",2,0)
 ;;1.0;ENTRY POINT FOR ALLERGEN WRITEBACK FROM JDS TO VISTA;**1**;DEC 11 2014;Build 53
"RTN","HMPWB1",3,0)
 ;
"RTN","HMPWB1",4,0)
 Q
"RTN","HMPWB1",5,0)
 ;
"RTN","HMPWB1",6,0)
ALLERGY(RSLT,IEN,DFN,DATA) ;file allergen data
"RTN","HMPWB1",7,0)
 N HMPIEN,HMPDFN,X,I,VPRI
"RTN","HMPWB1",8,0)
 S HMPI=0
"RTN","HMPWB1",9,0)
 S ORY=""
"RTN","HMPWB1",10,0)
 S HMPIEN=IEN,HMPDFN=DFN
"RTN","HMPWB1",11,0)
 D EDITSAVE^ORWDAL32(.ORY,IEN,DFN,.DATA)
"RTN","HMPWB1",12,0)
 N ORNODE
"RTN","HMPWB1",13,0)
 S ORNODE=$NAME(^TMP("GMRA",$J))
"RTN","HMPWB1",14,0)
 K @ORNODE M @ORNODE=DATA
"RTN","HMPWB1",15,0)
 S ORY=0
"RTN","HMPWB1",16,0)
 I $G(@ORNODE@("GMRAERR"))="YES" D EIE^GMRAGUI1(ORALIEN,ORDFN,ORNODE) Q  ;Handle entered in error
"RTN","HMPWB1",17,0)
 I $G(@ORNODE@("GMRANKA"))="YES" D NKA^GMRAGUI1 Q
"RTN","HMPWB1",18,0)
 D UPDATE^GMRAGUI1(HMPIEN,HMPDFN,ORNODE)  ;Add/edit reactions
"RTN","HMPWB1",19,0)
 ;ALLERGEN DATA FILED, SEND BACK SYNCED ALLERGEN DATA
"RTN","HMPWB1",20,0)
WB ;CREATE JSON ACKNOWLDGEMENT RESULT
"RTN","HMPWB1",21,0)
 S FILTER("patientId")=DFN
"RTN","HMPWB1",22,0)
 S FILTER("domain")="allergy"
"RTN","HMPWB1",23,0)
 S FILTER("noHead")=1
"RTN","HMPWB1",24,0)
 S HMP=$NA(^TMP("HMP",$J)),HMPI=0 K @HMP
"RTN","HMPWB1",25,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPWB1",26,0)
 S HMPSTART=+$G(FILTER("start"),1410102)
"RTN","HMPWB1",27,0)
 S HMPSTOP=+$G(FILTER("stop"),4141015)
"RTN","HMPWB1",28,0)
 S HMPMAX=+$G(FILTER("max"),999999)
"RTN","HMPWB1",29,0)
 S DT=$$DT^XLFDT             ;for crossing midnight boundary
"RTN","HMPWB1",30,0)
 K GMRAL
"RTN","HMPWB1",31,0)
 K ID
"RTN","HMPWB1",32,0)
 S (GMRAL,ID)=""
"RTN","HMPWB1",33,0)
 D EN1^GMRADPT
"RTN","HMPWB1",34,0)
 I 'GMRAL Q  ;D NKA^HMPDJ02 Q
"RTN","HMPWB1",35,0)
 ;I $G(HMPID) D GMRA1^HMPDJ02(HMPID) Q
"RTN","HMPWB1",36,0)
 S ID=0 F  S ID=+$O(GMRAL(ID)) Q:ID<1  D
"RTN","HMPWB1",37,0)
 .N GMRA,REAC,X,Y,I,USER,CMMT
"RTN","HMPWB1",38,0)
 .S GMRA=$G(GMRAL(ID)) D EN1(ID,"HMPY")
"RTN","HMPWB1",39,0)
 .N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPWB1",40,0)
 .S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPWB1",41,0)
 .S ERRMSG="A problem occurred converting record "_ID_" for the allergy domain"
"RTN","HMPWB1",42,0)
 .;
"RTN","HMPWB1",43,0)
 .S X=$P(HMPY,U,10) I $L(X) S X=$$DATE^HMPDGMRA(X) Q:X<HMPSTART  Q:X>HMPSTOP  S REAC("object","entered")=$$JSONDT^HMPUTILS(X)
"RTN","HMPWB1",44,0)
 .;S X=$$FAC^HMPD D FACILITY^HMPUTILS(X,"REAC")
"RTN","HMPWB1",45,0)
 .S REAC("collection")="allergy"
"RTN","HMPWB1",46,0)
 .S X=""
"RTN","HMPWB1",47,0)
 .S X=$$SITE^VASITE
"RTN","HMPWB1",48,0)
 .S REAC("object","facilityCode")=$P($G(X),"^",1)
"RTN","HMPWB1",49,0)
 .S REAC("object","facilityName")=$P($G(X),"^",2)
"RTN","HMPWB1",50,0)
 .S REAC("systemId")=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPWB1",51,0)
 .S REAC("object","kind")="Allergy / Adverse Reaction"
"RTN","HMPWB1",52,0)
 .S REAC("localId")=DFN,REAC("object","uid")=$$SETUID^HMPUTILS("allergy",DFN,ID)
"RTN","HMPWB1",53,0)
 .S REAC("pid")=REAC("systemId")_";"_DFN
"RTN","HMPWB1",54,0)
 .S REAC("icn")=$P($G(^DPT(HMPDFN,"MPI")),"^",1)
"RTN","HMPWB1",55,0)
 .S I=0,X="",(TOT,SEQ)=0
"RTN","HMPWB1",56,0)
 .S REAC("seq")=""
"RTN","HMPWB1",57,0)
 .F  S I=$O(^GMR(120.8,"B",HMPDFN,I)) Q:I=""  D
"RTN","HMPWB1",58,0)
 .. S TOT=TOT+1
"RTN","HMPWB1",59,0)
 .. S REAC("object","localId")=I
"RTN","HMPWB1",60,0)
 .. I $D(GMRAL(I)) S REAC("seq")=TOT
"RTN","HMPWB1",61,0)
 .S REAC("total")=TOT
"RTN","HMPWB1",62,0)
 .S X=$P(GMRA,U,9),REAC("object","reference")=X
"RTN","HMPWB1",63,0)
 .S (REAC("object","summary"),REAC("object","products",1,"name"))=$P(HMPY,U) I $P(GMRA,U,9) D
"RTN","HMPWB1",64,0)
 .. S X=$P(GMRA,U,9),REAC("object","reference")=X
"RTN","HMPWB1",65,0)
 .. S Y=+$P(X,"(",2) I 'Y,X["PSDRUG" S Y=50
"RTN","HMPWB1",66,0)
 .. S I=$$VUID^HMPD(+X,Y),REAC("object","products",1,"vuid")=$$SETVURN^HMPUTILS("vuid",I)
"RTN","HMPWB1",67,0)
 .S X=$P(HMPY,U,2) S:$L(X) REAC("object","originatorName")=X
"RTN","HMPWB1",68,0)
 .S REAC("object","historical")=$S($E($P(HMPY,U,5))="H":"true",1:"false")
"RTN","HMPWB1",69,0)
 .S X=$P(HMPY,U,6) S:$L(X) REAC("object","mechanism")=X
"RTN","HMPWB1",70,0)
 .S X=$P(HMPY,U,7) S:$L(X) REAC("object","typeName")=X
"RTN","HMPWB1",71,0)
 .; REAC("adverseEventTypeName")=$P(HMPY,U,7)_" "_$P(HMPY,U,6) ;TYPE_MECH
"RTN","HMPWB1",72,0)
 .I $P(HMPY,U,4)="VERIFIED",$P(HMPY,U,9) D
"RTN","HMPWB1",73,0)
 .. S REAC("object","verified")=$$JSONDT^HMPUTILS($P(HMPY,U,9))
"RTN","HMPWB1",74,0)
 .. S REAC("object","verifierName")=$P(HMPY,U,8)
"RTN","HMPWB1",75,0)
 .; severity
"RTN","HMPWB1",76,0)
 .S I=0 F  S I=$O(HMPY("O",I)) Q:I<1  D
"RTN","HMPWB1",77,0)
 .. S X=$G(HMPY("O",I))
"RTN","HMPWB1",78,0)
 .. S REAC("object","observations",I,"date")=$$JSONDT^HMPUTILS(+X)
"RTN","HMPWB1",79,0)
 .. S REAC("object","observations",I,"severity")=$P(X,U,2)
"RTN","HMPWB1",80,0)
 .; reactions
"RTN","HMPWB1",81,0)
 .S I=0 F  S I=$O(GMRAL(ID,"S",I)) Q:I<1  D
"RTN","HMPWB1",82,0)
 .. S X=$G(GMRAL(ID,"S",I))
"RTN","HMPWB1",83,0)
 .. S REAC("object","reactions",I,"name")=$P(X,";")
"RTN","HMPWB1",84,0)
 .. S Y=$$VUID^HMPD(+$P(X,";",2),120.83)
"RTN","HMPWB1",85,0)
 .. S REAC("object","reactions",I,"vuid")=$$SETVURN^HMPUTILS("vuid",Y)
"RTN","HMPWB1",86,0)
 .; drug classes
"RTN","HMPWB1",87,0)
 .S I=0 F  S I=$O(HMPY("V",I)) Q:I<1  D
"RTN","HMPWB1",88,0)
 .. S X=$G(HMPY("V",I))
"RTN","HMPWB1",89,0)
 .. S REAC("object","drugClasses",I,"code")=$P(X,U)
"RTN","HMPWB1",90,0)
 .. S REAC("object","drugClasses",I,"name")=$P(X,U,2)
"RTN","HMPWB1",91,0)
 .S I=0 F  S I=$O(HMPY("C",I)) Q:I<1  D
"RTN","HMPWB1",92,0)
 .. S X=$G(HMPY("C",I)),USER=$$VA200^HMPDGMPL($P(X,U,3))
"RTN","HMPWB1",93,0)
 .. S REAC("comments",I,"enteredByUid")=$$SETUID^HMPUTILS("user",,+USER)
"RTN","HMPWB1",94,0)
 .. S REAC("comments",I,"enteredByName")=$P(X,U,3)
"RTN","HMPWB1",95,0)
 .. S REAC("comments",I,"entered")=$$JSONDT^HMPUTILS(+X)
"RTN","HMPWB1",96,0)
 .. K CMMT M CMMT=HMPY("C",I)
"RTN","HMPWB1",97,0)
 .. S REAC("comments",I,"comment")=$$STRING^HMPD(.CMMT)
"RTN","HMPWB1",98,0)
 .I GMRA="" S REAC("removed")="true" ;entered in error
"RTN","HMPWB1",99,0)
 .D ADD^HMPDJ("REAC","allergy")
"RTN","HMPWB1",100,0)
 ;D GET^HMPDJ("",.FILTER)
"RTN","HMPWB1",101,0)
EXTRACT ;
"RTN","HMPWB1",102,0)
 S (I,J)=0
"RTN","HMPWB1",103,0)
 F  S I=$O(^TMP("HMP",$J,I)) Q:I=""  D
"RTN","HMPWB1",104,0)
 . F  S J=$O(^TMP("HMP",$J,I,J)) Q:J=""  D
"RTN","HMPWB1",105,0)
 .. I $G(^TMP("HMP",$J,I,J))[$P(DATA("GMRAGNT"),"^",1) S RSLT=$G(RSLT)_$G(^TMP("HMP",$J,I,J))
"RTN","HMPWB1",106,0)
 .. Q
"RTN","HMPWB1",107,0)
 . Q
"RTN","HMPWB1",108,0)
 Q
"RTN","HMPWB1",109,0)
 ;
"RTN","HMPWB1",110,0)
EN1(IEN,ARRAY) ;
"RTN","HMPWB1",111,0)
 Q:$G(IEN)=""
"RTN","HMPWB1",112,0)
 S ARRAY=$S($G(ARRAY)'="":ARRAY,1:"GMRACT") Q:ARRAY="GMRAL"
"RTN","HMPWB1",113,0)
 N GMRAPA,GMRAOTH,GMRAL,GMRAI
"RTN","HMPWB1",114,0)
 S GMRAPA=IEN,GMRAPA(0)=$G(^GMR(120.8,GMRAPA,0)) Q:GMRAPA(0)=""
"RTN","HMPWB1",115,0)
 ; Set up GMRAL variable
"RTN","HMPWB1",116,0)
 S GMRAL=$P(GMRAPA(0),U,2)_U
"RTN","HMPWB1",117,0)
 S GMRAL=GMRAL_$S($P(GMRAPA(0),U,5)'="":$$GET1^DIQ(200,$P(GMRAPA(0),U,5)_",",".01"),1:"<None>")_U ;21
"RTN","HMPWB1",118,0)
 S %=$S($P(GMRAPA(0),U,5)'="":$$GET1^DIQ(200,$P(GMRAPA(0),U,5)_",","8","I"),1:"") ;21
"RTN","HMPWB1",119,0)
 S GMRAL=GMRAL_$S(%>1:$P($G(^DIC(3.1,%,0)),U),1:"")_U
"RTN","HMPWB1",120,0)
 S GMRAL=GMRAL_$S($P(GMRAPA(0),U,16)=1:"",1:"NOT ")_"VERIFIED"_U
"RTN","HMPWB1",121,0)
 S GMRAL=GMRAL_$S($P(GMRAPA(0),U,6)="o":"OBSERVED",$P(GMRAPA(0),U,6)="h":"HISTORICAL",1:"")_U
"RTN","HMPWB1",122,0)
 S GMRAL=GMRAL_$S($P(GMRAPA(0),U,14)="A":"ALLERGY",$P(GMRAPA(0),U,14)="P":"PHARMACOLOGIC",$P(GMRAPA(0),U,14)="U":"UNKNOWN",1:"")_U
"RTN","HMPWB1",123,0)
 S GMRAL=GMRAL_$$OUTTYPE^GMRAUTL($P(GMRAPA(0),U,20))_U_$S($P(GMRAPA(0),U,16)&('$P(GMRAPA(0),U,18)):"<auto-verified>",1:$$GET1^DIQ(200,$P(GMRAPA(0),U,18)_",",.01))_U_$P(GMRAPA(0),U,17) ;21
"RTN","HMPWB1",124,0)
 S GMRAL=GMRAL_U_$$FMTE^XLFDT($P(GMRAPA(0),U,4)) ;21 add orig date/time
"RTN","HMPWB1",125,0)
 ;Set up Comments in to GMRAL("C",
"RTN","HMPWB1",126,0)
 S GMRAI=0 F %=1:1 S GMRAI=$O(^GMR(120.8,GMRAPA,26,GMRAI)) Q:GMRAI<1  D
"RTN","HMPWB1",127,0)
 .N GMRACOM
"RTN","HMPWB1",128,0)
 .S GMRACOM=$G(^GMR(120.8,GMRAPA,26,GMRAI,0)) Q:GMRACOM=""
"RTN","HMPWB1",129,0)
 .S GMRAL("C",%)=$P(GMRACOM,U)_U_$S($P(GMRACOM,U,3)="V":"VERIFIER",$P(GMRACOM,U,3)="O":"ORIGINATOR",1:"")_U_$$GET1^DIQ(200,$P(GMRACOM,U,2)_",",.01) ;21
"RTN","HMPWB1",130,0)
 .M GMRAL("C",%)=^GMR(120.8,GMRAPA,26,GMRAI,2)
"RTN","HMPWB1",131,0)
 .Q
"RTN","HMPWB1",132,0)
 ;Observer information from file 120.85
"RTN","HMPWB1",133,0)
 S GMRAI=0 F %=1:1 S GMRAI=$O(^GMR(120.85,"C",GMRAPA,GMRAI)) Q:GMRAI<1  D
"RTN","HMPWB1",134,0)
 .N GMRACOM
"RTN","HMPWB1",135,0)
 .S GMRACOM=$G(^GMR(120.85,GMRAI,0)) Q:GMRACOM=""
"RTN","HMPWB1",136,0)
 .S GMRAL("O",%)=$P(GMRACOM,U)_U_$S($P(GMRACOM,U,14)=1:"MILD",$P(GMRACOM,U,14)=2:"MODERATE",$P(GMRACOM,U,14)=3:"SEVERE",1:"")
"RTN","HMPWB1",137,0)
 .Q
"RTN","HMPWB1",138,0)
 ;Signs/Symptoms
"RTN","HMPWB1",139,0)
 S GMRAOTH=$O(^GMRD(120.83,"B","OTHER REACTION",0))
"RTN","HMPWB1",140,0)
 S GMRAI=0 F %=1:1 S GMRAI=$O(^GMR(120.8,GMRAPA,10,GMRAI)) Q:GMRAI<1  D
"RTN","HMPWB1",141,0)
 .N GMRAZ
"RTN","HMPWB1",142,0)
 .S GMRAZ=$G(^GMR(120.8,GMRAPA,10,GMRAI,0)) Q:GMRAZ=""
"RTN","HMPWB1",143,0)
 .S GMRAL("S",%)=$S(+GMRAZ'=GMRAOTH:$P($G(^GMRD(120.83,+GMRAZ,0)),U),1:$P(GMRAZ,U,2))_$S($P(GMRAZ,U,4)'="":" ("_$$FMTE^XLFDT($P(GMRAZ,U,4),2)_")",1:"") ;21
"RTN","HMPWB1",144,0)
 .Q
"RTN","HMPWB1",145,0)
 ;VA Drug Class
"RTN","HMPWB1",146,0)
 S GMRAI=0 F %=1:1 S GMRAI=$O(^GMR(120.8,GMRAPA,3,GMRAI)) Q:GMRAI<1  D
"RTN","HMPWB1",147,0)
 .N GMRACOM
"RTN","HMPWB1",148,0)
 .S GMRACOM=$G(^GMR(120.8,GMRAPA,3,GMRAI,0)) Q:GMRACOM=""
"RTN","HMPWB1",149,0)
 .;S GMRAL("V",%)=$P($G(^PS(50.605,GMRACOM,0)),U,1,2)
"RTN","HMPWB1",150,0)
 .S GMRAL("V",%)=$$CLP2CLDA^GMRAPENC(GMRACOM)
"RTN","HMPWB1",151,0)
 .Q
"RTN","HMPWB1",152,0)
 ;Drug Ingredients
"RTN","HMPWB1",153,0)
 S GMRAI=0 F %=1:1 S GMRAI=$O(^GMR(120.8,GMRAPA,2,GMRAI)) Q:GMRAI<1  D
"RTN","HMPWB1",154,0)
 .N GMRACOM
"RTN","HMPWB1",155,0)
 .S GMRACOM=$G(^GMR(120.8,GMRAPA,2,GMRAI,0)) Q:GMRACOM=""
"RTN","HMPWB1",156,0)
 .;S GMRAL("I",%)=$P($G(^PS(50.416,GMRACOM,0)),U)
"RTN","HMPWB1",157,0)
 .S GMRAL("I",%)=$$INP2INNA^GMRAPENC(GMRACOM)
"RTN","HMPWB1",158,0)
 .Q
"RTN","HMPWB1",159,0)
 M @ARRAY=GMRAL
"RTN","HMPWB1",160,0)
 Q
"RTN","HMPWB2")
0^123^B39490690
"RTN","HMPWB2",1,0)
HMPWB2 ;;PJH/SLC - WRITEBACK DEMOGRAPHICS/VITALS TO VISTA; 12/14/2014
"RTN","HMPWB2",2,0)
 ;;1.0;EHMP;**PJH**;DEC 11 2014;Build 53
"RTN","HMPWB2",3,0)
 ;
"RTN","HMPWB2",4,0)
 Q
"RTN","HMPWB2",5,0)
 ;
"RTN","HMPWB2",6,0)
DEMOG(RSLT,IEN,DFN,DATA) ;File demographic data - WIP not part of PSI 6
"RTN","HMPWB2",7,0)
 ;
"RTN","HMPWB2",8,0)
 ;Output
"RTN","HMPWB2",9,0)
 ; RSLT = JSON format string for demographics
"RTN","HMPWB2",10,0)
 ;Input
"RTN","HMPWB2",11,0)
 ; IEN  = record to be updated (not used)
"RTN","HMPWB2",12,0)
 ; DFN  = patient IEN
"RTN","HMPWB2",13,0)
 ; DATA("data") - input format - string
"RTN","HMPWB2",14,0)
 ;   Piece 1: DFN
"RTN","HMPWB2",15,0)
 ;   Piece 2: Home Phone Number - ^DD(2,.131 - ^DPT(DFN,.13) piece 1
"RTN","HMPWB2",16,0)
 ;   Piece 3: Cell Phone Number - ^DD(2,.134 - ^DPT(DFN,.13) piece 4
"RTN","HMPWB2",17,0)
 ;   Piece 4: Work Phone Number - ^DD(2,.132 - ^DPT(DFN,.13) piece 2
"RTN","HMPWB2",18,0)
 ;   Piece 5: Emergency Phone Number - ^DD(2,.339 - ^DPT(DFN,.33) piece 9
"RTN","HMPWB2",19,0)
 ;   Piece 6: NOK Phone Number - ^DD(2,.219 - ^DPT(DFN,.21) piece 9
"RTN","HMPWB2",20,0)
 ;
"RTN","HMPWB2",21,0)
 ; If a piece contains -1, it means DELETE it
"RTN","HMPWB2",22,0)
 ; If a piece is null, it means LEAVE it ALONE
"RTN","HMPWB2",23,0)
 ; If a piece is not -1 and not null, it means UPDATE it
"RTN","HMPWB2",24,0)
 ;
"RTN","HMPWB2",25,0)
 ;Update Demographics Logic
"RTN","HMPWB2",26,0)
 ;-------------------------
"RTN","HMPWB2",27,0)
 ;Quit if DFN is not defined - IEN is not used
"RTN","HMPWB2",28,0)
 S RSLT="ERROR" Q:'$G(DFN)
"RTN","HMPWB2",29,0)
 ;Assume input is presented as a string with DFN in piece1
"RTN","HMPWB2",30,0)
 N HMP,HMPI,INVAR,OUTVAR
"RTN","HMPWB2",31,0)
 S INVAR=$G(DATA("data")) Q:$P(INVAR,U)'=DFN
"RTN","HMPWB2",32,0)
 ;Call existing HMPPTDEM api
"RTN","HMPWB2",33,0)
 D FILE^HMPPTDEM(.OUTVAR,INVAR) I $G(OUTVAR(0))'=1 M RSLT=OUTVAR Q
"RTN","HMPWB2",34,0)
 ;Build JSON in ^TMP("HMP",$J) from VistA - expects DFN to be defined
"RTN","HMPWB2",35,0)
 S HMP=$NA(^TMP("HMP",$J)),HMPI=0 K @HMP
"RTN","HMPWB2",36,0)
 D DPT1^HMPDJ00
"RTN","HMPWB2",37,0)
 ;Call $$EXTRACT to pass JSON back as RSLT string
"RTN","HMPWB2",38,0)
 S RSLT=$$EXTRACT(HMP)
"RTN","HMPWB2",39,0)
 ;Clear work files
"RTN","HMPWB2",40,0)
 K @HMP
"RTN","HMPWB2",41,0)
 Q
"RTN","HMPWB2",42,0)
 ;
"RTN","HMPWB2",43,0)
VMADD(RSLT,IEN,DFN,DATA) ;Add vital measurement
"RTN","HMPWB2",44,0)
 ;
"RTN","HMPWB2",45,0)
 ;
"RTN","HMPWB2",46,0)
 ; Note: Original GMVDCSAV routine supports the following IAs:
"RTN","HMPWB2",47,0)
 ; #3996 - GMV ADD VM RPC called at EN1  (private)
"RTN","HMPWB2",48,0)
 ;
"RTN","HMPWB2",49,0)
 ;Output
"RTN","HMPWB2",50,0)
 ; RSLT = JSON format string for vital added
"RTN","HMPWB2",51,0)
 ;Input
"RTN","HMPWB2",52,0)
 ; IEN  = record to be updated (not used)
"RTN","HMPWB2",53,0)
 ; DFN  = patient IEN
"RTN","HMPWB2",54,0)
 ; DATA("data") - input format - string
"RTN","HMPWB2",55,0)
 ;   piece1 = date/time in FileMan internal format
"RTN","HMPWB2",56,0)
 ;   piece2 = patient number from FILE 2 (i.e., DFN)
"RTN","HMPWB2",57,0)
 ;   piece3 = vital type, a semi-colon, the reading, a semi-colon, and
"RTN","HMPWB2",58,0)
 ;            oxygen flow rate and percentage values [optional] (e.g.,
"RTN","HMPWB2",59,0)
 ;            21;99;1 l/min 90%)
"RTN","HMPWB2",60,0)
 ;   piece4 = hospital location (FILE 44) pointer value
"RTN","HMPWB2",61,0)
 ;   piece5 = FILE 200 user number (i.e., DUZ), an asterisk, and the 
"RTN","HMPWB2",62,0)
 ;            qualifier (File 120.52) internal entry numbers separated by
"RTN","HMPWB2",63,0)
 ;            colons (e.g., 547*50:65)
"RTN","HMPWB2",64,0)
 ; Example:
"RTN","HMPWB2",65,0)
 ;            "3051011.1635^134^1;120/80;^67^87*2:38:50:75"
"RTN","HMPWB2",66,0)
 ;
"RTN","HMPWB2",67,0)
 ;Add Vital Logic
"RTN","HMPWB2",68,0)
 ;---------------
"RTN","HMPWB2",69,0)
 ;Quit if DFN is null or IEN is not zero
"RTN","HMPWB2",70,0)
 S RSLT="ERROR" Q:'$G(DFN)  Q:$G(IEN)
"RTN","HMPWB2",71,0)
 ;Assume input is presented as a string with DFN in second piece
"RTN","HMPWB2",72,0)
 N HMP,HMPI,INVAR,OUTVAR,GMRIEN,SEQ,TOT
"RTN","HMPWB2",73,0)
 S HMP=$NA(^TMP("HMP",$J)),HMPI=0 K @HMP
"RTN","HMPWB2",74,0)
 S INVAR=$G(DATA("data")) Q:$P(INVAR,U,2)'=DFN
"RTN","HMPWB2",75,0)
 ;Add vital record to file #120.5
"RTN","HMPWB2",76,0)
 D EN1^GMVDCSAV(.OUTVAR,INVAR) Q:$G(OUTVAR(0))="ERROR"
"RTN","HMPWB2",77,0)
 ;Check if added record exist in VistA
"RTN","HMPWB2",78,0)
 S GMRIEN=$$FINDVM(DFN) Q:'GMRIEN
"RTN","HMPWB2",79,0)
 ;Determine total count and sequence
"RTN","HMPWB2",80,0)
 S TOT=$$COUNTVM(DFN,GMRIEN,.SEQ)
"RTN","HMPWB2",81,0)
 ;Build JSON in ^TMP("HMP",$J) from VistA data in file #120.5
"RTN","HMPWB2",82,0)
 D GMV1(DFN,GMRIEN,SEQ,TOT)
"RTN","HMPWB2",83,0)
 ;Call $$EXTRACT to pass JSON back as RSLT string
"RTN","HMPWB2",84,0)
 S RSLT=$$EXTRACT(HMP)
"RTN","HMPWB2",85,0)
 ;Clear work files
"RTN","HMPWB2",86,0)
 K @HMP
"RTN","HMPWB2",87,0)
 Q
"RTN","HMPWB2",88,0)
 ;
"RTN","HMPWB2",89,0)
VMERR(RSLT,IEN,DFN,DATA) ;Mark vital measurement entered in error
"RTN","HMPWB2",90,0)
 ;
"RTN","HMPWB2",91,0)
 ; Note: Original GMRVUTL1 routine supports the following IAs:
"RTN","HMPWB2",92,0)
 ; #4414 - GMV MARK ERROR RPC is called at ERROR (private)
"RTN","HMPWB2",93,0)
 ;
"RTN","HMPWB2",94,0)
 ;Output
"RTN","HMPWB2",95,0)
 ; RSLT = JSON format string for vital added
"RTN","HMPWB2",96,0)
 ;Input
"RTN","HMPWB2",97,0)
 ; IEN  = record to be updated
"RTN","HMPWB2",98,0)
 ; DFN  = patient IEN
"RTN","HMPWB2",99,0)
 ; DATA("data") - Input format - string 
"RTN","HMPWB2",100,0)
 ;    piece1 = FILE #120.5 IEN
"RTN","HMPWB2",101,0)
 ;    piece2 = DUZ
"RTN","HMPWB2",102,0)
 ;    piece3 
"RTN","HMPWB2",103,0)
 ;      1 = INCORRECT DATE/TIME
"RTN","HMPWB2",104,0)
 ;      2 = INCORRECT READING
"RTN","HMPWB2",105,0)
 ;      3 = INCORRECT PATIENT
"RTN","HMPWB2",106,0)
 ;      4 = INVALID RECORD
"RTN","HMPWB2",107,0)
 ; Example:
"RTN","HMPWB2",108,0)
 ;            "24048^134^2"
"RTN","HMPWB2",109,0)
 ;
"RTN","HMPWB2",110,0)
 ;Mark in error logic
"RTN","HMPWB2",111,0)
 ;-------------------
"RTN","HMPWB2",112,0)
 ;Quit if IEN is null
"RTN","HMPWB2",113,0)
 S RSLT="ERROR" Q:'$G(IEN)
"RTN","HMPWB2",114,0)
 ;Assume input is presented as a string with 120.5 ien in piece 1
"RTN","HMPWB2",115,0)
 N HMP,HMPI,INVAR,OUTVAR,GMRIEN
"RTN","HMPWB2",116,0)
 S HMP=$NA(^TMP("HMP",$J)),HMPI=0 K @HMP
"RTN","HMPWB2",117,0)
 S INVAR=$G(DATA("data")),GMRIEN=$P(INVAR,U) Q:'GMRIEN  Q:GMRIEN'=IEN
"RTN","HMPWB2",118,0)
 ;Get the DFN for this Vital reading
"RTN","HMPWB2",119,0)
 S DFN=$P($G(^GMR(120.5,GMRIEN,0)),U,2) Q:'DFN
"RTN","HMPWB2",120,0)
 ;Call existing GRMVUTL1 api - seq logic
"RTN","HMPWB2",121,0)
 D ERROR^GMVUTL1(.OUTVAR,INVAR) Q:OUTVAR'="OK"
"RTN","HMPWB2",122,0)
 ;Determine total count and sequence
"RTN","HMPWB2",123,0)
 S TOT=$$COUNTVM(DFN,GMRIEN,.SEQ)
"RTN","HMPWB2",124,0)
 ;Build JSON in ^TMP("HMP",$J) from VistA data in file #120.5
"RTN","HMPWB2",125,0)
 D GMV1(DFN,GMRIEN,.SEQ,TOT)
"RTN","HMPWB2",126,0)
 ;Call $$EXTRACT to pass JSON back as RSLT string
"RTN","HMPWB2",127,0)
 S RSLT=$$EXTRACT(HMP)
"RTN","HMPWB2",128,0)
 ;Clear work files
"RTN","HMPWB2",129,0)
 K @HMP
"RTN","HMPWB2",130,0)
 Q
"RTN","HMPWB2",131,0)
 ;
"RTN","HMPWB2",132,0)
GMV1(DFN,ID,SEQ,TOT) ; -- vital/measurement ^UTILITY($J,"GMRVD",HMPIDT,HMPTYP,ID)
"RTN","HMPWB2",133,0)
 ; Note: this code is a copy of GMV1^HMPDJ02 with addition of header 
"RTN","HMPWB2",134,0)
 N HMPY,X0,TYPE,LOC,FAC,X,Y,MRES,MUNT,HIGH,LOW,I,ARRAY,VIT
"RTN","HMPWB2",135,0)
 D GETREC^GMVUTL(.HMPY,ID,1) S X0=$G(HMPY(0)) Q:X0=""
"RTN","HMPWB2",136,0)
 ;
"RTN","HMPWB2",137,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPWB2",138,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPWB2",139,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the vitals domain"
"RTN","HMPWB2",140,0)
 ;Add headers
"RTN","HMPWB2",141,0)
 S VIT("systemId")=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPWB2",142,0)
 S VIT("localId")=DFN
"RTN","HMPWB2",143,0)
 S VIT("object","uid")=$$SETUID^HMPUTILS("vitals",DFN,ID)
"RTN","HMPWB2",144,0)
 S VIT("pid")=VIT("systemId")_";"_DFN
"RTN","HMPWB2",145,0)
 S VIT("icn")=$P($G(^DPT(DFN,"MPI")),"^",1)
"RTN","HMPWB2",146,0)
 S VIT("collection")="vital"
"RTN","HMPWB2",147,0)
 S VIT("seq")=SEQ
"RTN","HMPWB2",148,0)
 S VIT("total")=TOT
"RTN","HMPWB2",149,0)
 ;Add body as per normal JSON but within 'object' node
"RTN","HMPWB2",150,0)
 S ARRAY=$NA(VIT("object"))
"RTN","HMPWB2",151,0)
 S @ARRAY@("localId")=ID,@ARRAY@("kind")="Vital Sign"
"RTN","HMPWB2",152,0)
 S @ARRAY@("uid")=$$SETUID^HMPUTILS("vital",DFN,ID)
"RTN","HMPWB2",153,0)
 S @ARRAY@("observed")=$$JSONDT^HMPUTILS(+X0)
"RTN","HMPWB2",154,0)
 S @ARRAY@("resulted")=$$JSONDT^HMPUTILS(+$P(X0,U,4))
"RTN","HMPWB2",155,0)
 S TYPE=$$FIELD^GMVGETVT(+$P(X0,U,3),2)
"RTN","HMPWB2",156,0)
 S @ARRAY@("displayName")=TYPE
"RTN","HMPWB2",157,0)
 S @ARRAY@("typeName")=$$FIELD^GMVGETVT($P(X0,U,3),1)
"RTN","HMPWB2",158,0)
 S @ARRAY@("typeCode")="urn:va:vuid:"_$$FIELD^GMVGETVT($P(X0,U,3),4)
"RTN","HMPWB2",159,0)
 S X=$P(X0,U,8),@ARRAY@("result")=X
"RTN","HMPWB2",160,0)
 S @ARRAY@("units")=$$UNIT^HMPDGMV(TYPE),(MRES,MUNT)=""
"RTN","HMPWB2",161,0)
 I TYPE="T"  S MUNT="C",MRES=$J(X-32*5/9,0,1) ;EN1^GMRVUTL
"RTN","HMPWB2",162,0)
 I TYPE="HT" S MUNT="cm",MRES=$J(2.54*X,0,2)  ;EN2^GMRVUTL
"RTN","HMPWB2",163,0)
 I TYPE="WT" S MUNT="kg",MRES=$J(X/2.2,0,2)   ;EN3^GMRVUTL
"RTN","HMPWB2",164,0)
 I TYPE="CG" S MUNT="cm",MRES=$J(2.54*X,0,2)
"RTN","HMPWB2",165,0)
 S:MRES @ARRAY@("metricResult")=MRES,@ARRAY@("metricUnits")=MUNT
"RTN","HMPWB2",166,0)
 S X=$$RANGE^HMPDGMV(TYPE) I $L(X) S @ARRAY@("high")=$P(X,U),@ARRAY@("low")=$P(X,U,2)
"RTN","HMPWB2",167,0)
 S @ARRAY@("summary")=@ARRAY@("typeName")_" "_@ARRAY@("result")_" "_@ARRAY@("units")
"RTN","HMPWB2",168,0)
 F I=1:1:$L(HMPY(5),U) S X=$P(HMPY(5),U,I) I X D
"RTN","HMPWB2",169,0)
 . S @ARRAY@("qualifiers",I,"name")=$$FIELD^GMVGETQL(X,1)
"RTN","HMPWB2",170,0)
 . S @ARRAY@("qualifiers",I,"vuid")=$$FIELD^GMVGETQL(X,3)
"RTN","HMPWB2",171,0)
 I $G(HMPY(2)) S @ARRAY@("removed")="true"        ;entered in error
"RTN","HMPWB2",172,0)
 S LOC=+$P(X0,U,5),FAC=$$FAC^HMPD(LOC)
"RTN","HMPWB2",173,0)
 S @ARRAY@("locationUid")=$$SETUID^HMPUTILS("location",,LOC)
"RTN","HMPWB2",174,0)
 S @ARRAY@("locationName")=$S(LOC:$P($G(^SC(LOC,0)),U),1:"unknown")
"RTN","HMPWB2",175,0)
 N USERID S USERID=$P(HMPY(0),U,6)
"RTN","HMPWB2",176,0)
 I $G(USERID) D
"RTN","HMPWB2",177,0)
 . S @ARRAY@("enteredByUid")=$$SETUID^HMPUTILS("user",,USERID)
"RTN","HMPWB2",178,0)
 . S @ARRAY@("enteredByName")=$P(^VA(200,USERID,0),U,1)
"RTN","HMPWB2",179,0)
 D FACILITY^HMPUTILS(FAC,ARRAY)
"RTN","HMPWB2",180,0)
 D ADD^HMPDJ("VIT","vital")
"RTN","HMPWB2",181,0)
 Q
"RTN","HMPWB2",182,0)
 ;
"RTN","HMPWB2",183,0)
FINDVM(DFN) ;Get most recent vital measurement for this patient
"RTN","HMPWB2",184,0)
 Q $O(^GMR(120.5,"C",DFN,"A"),-1)
"RTN","HMPWB2",185,0)
 ;
"RTN","HMPWB2",186,0)
COUNTVM(DFN,IEN,SEQ) ;Count vitals for this patient
"RTN","HMPWB2",187,0)
 N SUB,TOT S SUB=0,SEQ=0,TOT=0
"RTN","HMPWB2",188,0)
 F  S SUB=$O(^GMR(120.5,"C",DFN,SUB)) Q:'SUB  D
"RTN","HMPWB2",189,0)
 .;Ignore entered in error
"RTN","HMPWB2",190,0)
 .Q:$P($G(^GMR(120.5,SUB,2)),U)=1
"RTN","HMPWB2",191,0)
 .;Save SEQ if this is the entry
"RTN","HMPWB2",192,0)
 .S TOT=TOT+1 S:SUB=IEN SEQ=TOT
"RTN","HMPWB2",193,0)
 ;Return count of vitals for this patient (plus sequence in SEQ)
"RTN","HMPWB2",194,0)
 Q TOT
"RTN","HMPWB2",195,0)
 ;
"RTN","HMPWB2",196,0)
EXTRACT(GLOB) ; Move ^TMP("HMP",$J) into string format
"RTN","HMPWB2",197,0)
 N NODE,RSLT S RSLT="",NODE=GLOB
"RTN","HMPWB2",198,0)
 F  S NODE=$Q(@NODE) Q:'$F(NODE,$P(GLOB,")"))  S RSLT=RSLT_$G(@NODE)
"RTN","HMPWB2",199,0)
 Q RSLT
"RTN","HMPYCSI")
0^124^B16398514
"RTN","HMPYCSI",1,0)
HMPYCSI ;SLC/KCM -- Convert system identifier in UID's for HMP objects
"RTN","HMPYCSI",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPYCSI",3,0)
 ;
"RTN","HMPYCSI",4,0)
EN ; Prompt for if the system should really convert
"RTN","HMPYCSI",5,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y,DA,FROMSYS,TOSYS
"RTN","HMPYCSI",6,0)
 S DIR(0)="F:4:40",DIR("A")="Convert from (System ID or Domain Name)"
"RTN","HMPYCSI",7,0)
 S DIR("?")="Enter the four character system ID or the domain name."
"RTN","HMPYCSI",8,0)
 D ^DIR Q:$D(DIRUT)
"RTN","HMPYCSI",9,0)
 S Y=$$UP^XLFSTR(Y),TOSYS=$$SYS^HMPUTILS
"RTN","HMPYCSI",10,0)
 I $L(Y)'=4,Y["." S Y=$$CNV^XLFUTL($$CRC16^XLFCRC(Y),16)
"RTN","HMPYCSI",11,0)
 I Y=TOSYS W !,"Same ID as this system." Q
"RTN","HMPYCSI",12,0)
 W !,"This will (brute force) replace all instances of "":"_Y_":"""
"RTN","HMPYCSI",13,0)
 W !,"                               with instances of "":"_TOSYS_":"""
"RTN","HMPYCSI",14,0)
 W !,"Continue? NO//" R X:300 Q:$E($$UP^XLFSTR(X))'="Y"
"RTN","HMPYCSI",15,0)
 ;
"RTN","HMPYCSI",16,0)
 N FROMSYS
"RTN","HMPYCSI",17,0)
 S FROMSYS=Y
"RTN","HMPYCSI",18,0)
 W !,"File 800000.1:  "
"RTN","HMPYCSI",19,0)
 D CONV(FROMSYS,800000.1)
"RTN","HMPYCSI",20,0)
 W !,"File 800000.11: "
"RTN","HMPYCSI",21,0)
 D CONV(FROMSYS,800000.11)
"RTN","HMPYCSI",22,0)
 Q
"RTN","HMPYCSI",23,0)
CONV(FROMSYS,FILENUM) ; FROMSYS is the system id to be converted
"RTN","HMPYCSI",24,0)
 N TOSYS,FDAIEN
"RTN","HMPYCSI",25,0)
 S TOSYS=$$SYS^HMPUTILS
"RTN","HMPYCSI",26,0)
 S FDAIEN=0 F  S FDAIEN=$O(^HMP(FILENUM,FDAIEN)) Q:'FDAIEN  D CONV1(FILENUM,FDAIEN,FROMSYS,TOSYS)
"RTN","HMPYCSI",27,0)
 Q
"RTN","HMPYCSI",28,0)
CONV1(FILENUM,FDAIEN,FROMSYS,TOSYS) ; convert one record
"RTN","HMPYCSI",29,0)
 ; system id is assumed to be the fourth piece
"RTN","HMPYCSI",30,0)
 N X0,UID,SYS,WPORIG,WPNEW,VAL
"RTN","HMPYCSI",31,0)
 S X0=$G(^HMP(FILENUM,FDAIEN,0)),UID=$P(X0,"^",1),SYS=$P(UID,":",4)
"RTN","HMPYCSI",32,0)
 Q:SYS=TOSYS  ; already native to this account
"RTN","HMPYCSI",33,0)
 S $P(UID,":",4)=TOSYS
"RTN","HMPYCSI",34,0)
 M WPORIG=^HMP(FILENUM,FDAIEN,1)
"RTN","HMPYCSI",35,0)
 S VAL=$$WP2X(.WPORIG)
"RTN","HMPYCSI",36,0)
 S VAL=$$SWAP(VAL,":"_FROMSYS_":",":"_TOSYS_":")
"RTN","HMPYCSI",37,0)
 D X2WP(VAL,.WPNEW)
"RTN","HMPYCSI",38,0)
 D SAVE(FILENUM,FDAIEN,UID,.WPNEW)
"RTN","HMPYCSI",39,0)
 W "."
"RTN","HMPYCSI",40,0)
 Q
"RTN","HMPYCSI",41,0)
SWAP(X,FIND,REPLACE) ; swap string FIND with string REPLACE in X
"RTN","HMPYCSI",42,0)
 N Y,POS,SIZE
"RTN","HMPYCSI",43,0)
 S Y="",POS=0,SIZE=$L(FIND)
"RTN","HMPYCSI",44,0)
 F  S POS=$F(X,FIND,POS) Q:'POS  S $E(X,POS-SIZE,POS-1)=REPLACE
"RTN","HMPYCSI",45,0)
 Q X
"RTN","HMPYCSI",46,0)
 ;
"RTN","HMPYCSI",47,0)
WP2X(WP) ; Return a single string by concatenating the WP fields
"RTN","HMPYCSI",48,0)
 N I,X,ERR
"RTN","HMPYCSI",49,0)
 S X="",ERR=0
"RTN","HMPYCSI",50,0)
 S I=0 F  S I=$O(WP(I)) Q:'I  D  Q:ERR
"RTN","HMPYCSI",51,0)
 . I ($L(X)+$L(WP(I,0)))>32000 D  Q
"RTN","HMPYCSI",52,0)
 . . S ERR=1,X=""
"RTN","HMPYCSI",53,0)
 . . W !,"Can't convert documents longer than 32K",!
"RTN","HMPYCSI",54,0)
 . S X=X_WP(I,0)
"RTN","HMPYCSI",55,0)
 Q X
"RTN","HMPYCSI",56,0)
X2WP(X,WP,SIZE) ; Convert a string to WP field with strings no longer than SIZE
"RTN","HMPYCSI",57,0)
 N START,STOP,LINE,IDX
"RTN","HMPYCSI",58,0)
 S SIZE=$G(SIZE,245)-1 Q:'SIZE
"RTN","HMPYCSI",59,0)
 S START=1,IDX=0
"RTN","HMPYCSI",60,0)
 F  Q:START>$L(X)  D
"RTN","HMPYCSI",61,0)
 . S STOP=START+SIZE,LINE=$E(X,START,STOP),START=STOP+1
"RTN","HMPYCSI",62,0)
 . I $L(LINE) S IDX=IDX+1,WP(IDX,0)=LINE
"RTN","HMPYCSI",63,0)
 Q
"RTN","HMPYCSI",64,0)
SAVE(FILENUM,FDAIEN,UID,WP) ;
"RTN","HMPYCSI",65,0)
 N FDA,DIERR,ERR
"RTN","HMPYCSI",66,0)
 S FDA(FILENUM,FDAIEN_",",.01)=UID
"RTN","HMPYCSI",67,0)
 D FILE^DIE("","FDA","ERR")
"RTN","HMPYCSI",68,0)
 I $D(DIERR) W !,"Save failed for UID: ",UID,! D WOUT("ERR") Q
"RTN","HMPYCSI",69,0)
 I $D(WP) D WP^DIE(FILENUM,FDAIEN_",",1,"","WP","ERR")
"RTN","HMPYCSI",70,0)
 I $D(DIERR) W !,"Save failed for WP: ",UID,! D WOUT("ERR") Q
"RTN","HMPYCSI",71,0)
 D CLEAN^DILF
"RTN","HMPYCSI",72,0)
 Q
"RTN","HMPYCSI",73,0)
 ;
"RTN","HMPYCSI",74,0)
CHECK(FILENUM) ; Check JSON integrity of FILENUM
"RTN","HMPYCSI",75,0)
 S IEN=0 F  S IEN=$O(^HMP(FILENUM,IEN)) Q:'IEN  D CHECK1(FILENUM,IEN)
"RTN","HMPYCSI",76,0)
 Q
"RTN","HMPYCSI",77,0)
CHECK1(FILENUM,IEN) ;
"RTN","HMPYCSI",78,0)
 N JSON,OBJ,ERR,I
"RTN","HMPYCSI",79,0)
 S I=0 F  S I=$O(^HMP(FILENUM,IEN,1,I)) Q:'I  S JSON(I)=^HMP(FILENUM,IEN,1,I,0)
"RTN","HMPYCSI",80,0)
 I $D(JSON)'>1 W !,FILENUM,":",IEN,?20,"no JSON present" Q
"RTN","HMPYCSI",81,0)
 D DECODE^HMPJSON("JSON","OBJ","ERR")
"RTN","HMPYCSI",82,0)
 I $D(ERR) W !,FILENUM,":",IEN,?20,$G(ERR(1))
"RTN","HMPYCSI",83,0)
 W "."
"RTN","HMPYCSI",84,0)
 Q
"RTN","HMPYCSI",85,0)
 ;
"RTN","HMPYCSI",86,0)
TX2WP ;
"RTN","HMPYCSI",87,0)
 N INPUT,OUTPUT
"RTN","HMPYCSI",88,0)
 S INPUT="abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwxyz"
"RTN","HMPYCSI",89,0)
 D X2WP(INPUT,.OUTPUT,5)  W ! D WOUT("OUTPUT") K OUTPUT
"RTN","HMPYCSI",90,0)
 D X2WP(INPUT,.OUTPUT,10) W ! D WOUT("OUTPUT") K OUTPUT
"RTN","HMPYCSI",91,0)
 S INPUT=$E(INPUT,1,25)
"RTN","HMPYCSI",92,0)
 D X2WP(INPUT,.OUTPUT,5)  W ! D WOUT("OUTPUT")
"RTN","HMPYCSI",93,0)
 Q
"RTN","HMPYCSI",94,0)
TSWAP ;
"RTN","HMPYCSI",95,0)
 ;;{"uid":"urn:va:personphoto:F484:1123","summary":"gov.va.cpe.hmp.PersonPhoto@266713c1","personUid":"urn:va:user:F484:1123"}
"RTN","HMPYCSI",96,0)
 N X
"RTN","HMPYCSI",97,0)
 S X=$P($T(TSWAP+1),";;",2,99)
"RTN","HMPYCSI",98,0)
 W !,X
"RTN","HMPYCSI",99,0)
 S X=$$SWAP(X,":F484:",":0F0F:")
"RTN","HMPYCSI",100,0)
 W !,X,!
"RTN","HMPYCSI",101,0)
 Q
"RTN","HMPYCSI",102,0)
TSAVE ;
"RTN","HMPYCSI",103,0)
 S IEN=$O(^HMP(800000.11,"B","urn:va:personphoto:2222:123",0)) Q:'IEN
"RTN","HMPYCSI",104,0)
 W !,"IEN:",IEN
"RTN","HMPYCSI",105,0)
 D CONV1(IEN,"2222","3333")
"RTN","HMPYCSI",106,0)
 Q
"RTN","HMPYCSI",107,0)
 ;
"RTN","HMPYCSI",108,0)
WOUT(ROOT) ; Write out a variable named by ROOT
"RTN","HMPYCSI",109,0)
 W !,ROOT," -----"
"RTN","HMPYCSI",110,0)
 N X
"RTN","HMPYCSI",111,0)
 S X=ROOT F  S X=$Q(@X) Q:'$L(X)  Q:$E(X,1,$L(ROOT))'=ROOT  W !,X,"=",@X
"RTN","HMPYCSI",112,0)
 Q
"RTN","HMPYCSO")
0^125^B21641505
"RTN","HMPYCSO",1,0)
HMPYCSO ;SLC/MJK -- Convert system objects utility ;8/2/11  15:29
"RTN","HMPYCSO",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPYCSO",3,0)
 ;
"RTN","HMPYCSO",4,0)
 ; *S68-JCH* This routine introduced with S68
"RTN","HMPYCSO",5,0)
CONV(HMPDATA,HMPCNTS) ; -- execute conversion over a syetem object type
"RTN","HMPYCSO",6,0)
 ; input: HMPDATA("type") := object type
"RTN","HMPYCSO",7,0)
 ;                             - [ OPD - operational (file #800000.11) | PT - HMP (file #800000.1) / default ]
"RTN","HMPYCSO",8,0)
 ;
"RTN","HMPYCSO",9,0)
 ;         ("collection") := object collection name as it appears in "C" xref
"RTN","HMPYCSO",10,0)
 ;                                - ex. "task"
"RTN","HMPYCSO",11,0)
 ;
"RTN","HMPYCSO",12,0)
 ;           ("callback") := callback code to execute conversion on single object
"RTN","HMPYCSO",13,0)
 ;                             - callback should expect decoded array containing object to convert and IEN of object
"RTN","HMPYCSO",14,0)
 ;                                   - TAG^ROUTINE
"RTN","HMPYCSO",15,0)
 ;                                   - ex. TASK^HMPP3I
"RTN","HMPYCSO",16,0)
 ;                             - callback must return indicator on how to proceed
"RTN","HMPYCSO",17,0)
 ;                                   - 1 : update converted object
"RTN","HMPYCSO",18,0)
 ;                                   - 0 : stop processing this object; no conversion needed
"RTN","HMPYCSO",19,0)
 ;
"RTN","HMPYCSO",20,0)
 ;         HMPCNTS : returns array of counts related to converison [optional]
"RTN","HMPYCSO",21,0)
 ;                    - closed array reference 
"RTN","HMPYCSO",22,0)
 ;                    - Counts:
"RTN","HMPYCSO",23,0)
 ;                        - HMPTALLY("converted") -> conversion performed
"RTN","HMPYCSO",24,0)
 ;                                  ("errored")   -> errored at somep point in process
"RTN","HMPYCSO",25,0)
 ;                                  ("passed")    -> no conversion needed
"RTN","HMPYCSO",26,0)
 ;                                  ("reviewed")  -> count of objects reviewed for conversion
"RTN","HMPYCSO",27,0)
 ;
"RTN","HMPYCSO",28,0)
 N HMPTYPE,HMPCOLL,HMPCB,X,HMPFILE,HMPZCNTS
"RTN","HMPYCSO",29,0)
 S HMPTYPE=$G(HMPDATA("type"),"PT")
"RTN","HMPYCSO",30,0)
 S HMPCOLL=$G(HMPDATA("collection"))
"RTN","HMPYCSO",31,0)
 S HMPCB=$G(HMPDATA("callback"))
"RTN","HMPYCSO",32,0)
 ;
"RTN","HMPYCSO",33,0)
 ; - collection name and callback must be defined
"RTN","HMPYCSO",34,0)
 I HMPCOLL=""!(HMPCB="") Q
"RTN","HMPYCSO",35,0)
 ;
"RTN","HMPYCSO",36,0)
 I HMPTYPE'="PT",HMPTYPE'="OPD" Q
"RTN","HMPYCSO",37,0)
 ;
"RTN","HMPYCSO",38,0)
 ; -- currently only supports PT, as OPD has not been tested
"RTN","HMPYCSO",39,0)
 I HMPTYPE'="PT" Q
"RTN","HMPYCSO",40,0)
 ;
"RTN","HMPYCSO",41,0)
 ; -- initialize counts
"RTN","HMPYCSO",42,0)
 F X="reviewed","errored","converted","passed" S HMPZCNTS(X)=0
"RTN","HMPYCSO",43,0)
 ;
"RTN","HMPYCSO",44,0)
 I HMPTYPE="PT" D
"RTN","HMPYCSO",45,0)
 . N DFN,IEN
"RTN","HMPYCSO",46,0)
 . S HMPFILE=800000.1
"RTN","HMPYCSO",47,0)
 . S DFN=0 F  S DFN=$O(^HMP(HMPFILE,"C",DFN)) Q:DFN'>0  D
"RTN","HMPYCSO",48,0)
 . . S IEN=0 F  S IEN=$O(^HMP(HMPFILE,"C",DFN,HMPCOLL,IEN)) Q:IEN'>0  D CONVOBJ(HMPFILE,IEN,HMPCB)
"RTN","HMPYCSO",49,0)
 E  D
"RTN","HMPYCSO",50,0)
 . N IEN
"RTN","HMPYCSO",51,0)
 . S HMPFILE=800000.11
"RTN","HMPYCSO",52,0)
 . S IEN=0 F  S IEN=$O(^HMP(HMPFILE,"C",HMPCOLL,IEN)) Q:IEN'>0  D CONVOBJ(HMPFILE,IEN,HMPCB)
"RTN","HMPYCSO",53,0)
 ;
"RTN","HMPYCSO",54,0)
 I $G(HMPCNTS)]"" M @HMPCNTS=HMPZCNTS
"RTN","HMPYCSO",55,0)
 Q
"RTN","HMPYCSO",56,0)
 ;
"RTN","HMPYCSO",57,0)
CONVOBJ(HMPFILE,IEN,HMPCB) ; -- convert object
"RTN","HMPYCSO",58,0)
 N HMPY,HMPTEMP,ERROR,UID,I,HMP0,HMPCOLL
"RTN","HMPYCSO",59,0)
 S HMPY=$NA(^TMP($J,"HMPY"))
"RTN","HMPYCSO",60,0)
 S HMPTEMP=$NA(^TMP($J,"HMPTEMP"))
"RTN","HMPYCSO",61,0)
 K @HMPY,@HMPTEMP
"RTN","HMPYCSO",62,0)
 D TALLY("reviewed")
"RTN","HMPYCSO",63,0)
 ;
"RTN","HMPYCSO",64,0)
 S HMP0=$G(^HMP(HMPFILE,IEN,0))
"RTN","HMPYCSO",65,0)
 S HMPCOLL=$P(HMP0,U,3)
"RTN","HMPYCSO",66,0)
 S UID=$P(HMP0,U)
"RTN","HMPYCSO",67,0)
 I UID="" D ERROR("Error:  JSON "_HMPCOLL_" Object (IEN: "_IEN_") missing UID") Q
"RTN","HMPYCSO",68,0)
 ;
"RTN","HMPYCSO",69,0)
 S I=0 F  S I=$O(^HMP(HMPFILE,IEN,1,I)) Q:I<1  S X=$G(^(I,0)),@HMPY@(I)=X
"RTN","HMPYCSO",70,0)
 ;
"RTN","HMPYCSO",71,0)
 D DECODE^HMPJSON(HMPY,HMPTEMP,"ERROR")
"RTN","HMPYCSO",72,0)
 I $D(ERROR) D ERROR("Error in decoding JSON "_HMPCOLL_" Object (IEN: "_IEN_")") Q
"RTN","HMPYCSO",73,0)
 ;
"RTN","HMPYCSO",74,0)
 ; -- execute type conversion callback ; quit if object passed w/o needing conversion
"RTN","HMPYCSO",75,0)
 I @("'$$"_HMPCB_"(HMPTEMP,IEN)") D TALLY("passed") Q
"RTN","HMPYCSO",76,0)
 ;
"RTN","HMPYCSO",77,0)
 K @HMPY
"RTN","HMPYCSO",78,0)
 D ENCODE^HMPJSON(HMPTEMP,HMPY,"ERROR")
"RTN","HMPYCSO",79,0)
 I $D(ERROR) D ERROR("Error in encoding JSON "_HMPCOLL_" object (IEN: "_IEN_")") Q
"RTN","HMPYCSO",80,0)
 ;
"RTN","HMPYCSO",81,0)
 D MES^XPDUTL("Updating "_HMPCOLL_" uid: "_UID)
"RTN","HMPYCSO",82,0)
 I '$$UPDATE(HMPFILE,IEN,HMPY) D  Q
"RTN","HMPYCSO",83,0)
 . D ERROR("Error: Unable to obtain lock on DATA node for JSON "_HMPCOLL_" object (IEN: "_IEN_")")
"RTN","HMPYCSO",84,0)
 E  D
"RTN","HMPYCSO",85,0)
 . D TALLY("converted")
"RTN","HMPYCSO",86,0)
 ;
"RTN","HMPYCSO",87,0)
 K @HMPY,@HMPTEMP
"RTN","HMPYCSO",88,0)
 ;
"RTN","HMPYCSO",89,0)
 Q
"RTN","HMPYCSO",90,0)
 ;
"RTN","HMPYCSO",91,0)
ERROR(MSG) ; -- write out error message and inc error tally
"RTN","HMPYCSO",92,0)
 ;D EN^DDIOL(MSG)
"RTN","HMPYCSO",93,0)
 D BMES^XPDUTL(MSG)
"RTN","HMPYCSO",94,0)
 D TALLY("errored")
"RTN","HMPYCSO",95,0)
 Q
"RTN","HMPYCSO",96,0)
 ;
"RTN","HMPYCSO",97,0)
TALLY(CNTYP) ; -- inc counter
"RTN","HMPYCSO",98,0)
 S HMPZCNTS(CNTYP)=$G(HMPZCNTS(CNTYP))+1
"RTN","HMPYCSO",99,0)
 Q
"RTN","HMPYCSO",100,0)
 ;
"RTN","HMPYCSO",101,0)
UPDATE(HMPFILE,DA,JSON) ; -- update DATA wp field on patient object
"RTN","HMPYCSO",102,0)
 ;  input:  DA - internal entry number in 800000.1
"RTN","HMPYCSO",103,0)
 ;        JSON - closed array reference for M representation of object
"RTN","HMPYCSO",104,0)
 ; return:   1 - update successful | 0 - update not successful (unable to obtain lock)
"RTN","HMPYCSO",105,0)
 L +^HMP(HMPFILE,DA,1):$S($G(DILOCKTM)>0:DILOCKTM,1:5)
"RTN","HMPYCSO",106,0)
 I '$T Q 0
"RTN","HMPYCSO",107,0)
 ;
"RTN","HMPYCSO",108,0)
 N CNT,I,HMPSUB
"RTN","HMPYCSO",109,0)
 S CNT=0
"RTN","HMPYCSO",110,0)
 ; -- derive subfile number
"RTN","HMPYCSO",111,0)
 S HMPSUB=HMPFILE_$S(HMPFILE=800000.1:"01",1:"1")
"RTN","HMPYCSO",112,0)
 K ^HMP(HMPFILE,DA,1) S ^(1,0)="^"_HMPSUB_"^^"
"RTN","HMPYCSO",113,0)
 S I="" F  S I=$O(@JSON@(I)) Q:I=""  S CNT=CNT+1,^HMP(HMPFILE,DA,1,CNT,0)=@JSON@(I)
"RTN","HMPYCSO",114,0)
 I CNT S ^HMP(HMPFILE,DA,1,0)="^800000.101^"_CNT_U_CNT
"RTN","HMPYCSO",115,0)
 ;
"RTN","HMPYCSO",116,0)
 L -^HMP(HMPFILE,DA,1)
"RTN","HMPYCSO",117,0)
 Q 1
"RTN","HMPYCSO",118,0)
 ;
"RTN","HMPYCSO",119,0)
TASKCONV ; -- convert patient task objects 
"RTN","HMPYCSO",120,0)
 ;               - converts 'pid' property to SYSID;DFN (ex. F484;237)
"RTN","HMPYCSO",121,0)
 ;               - removes 'patientId' property if it exists
"RTN","HMPYCSO",122,0)
 ;
"RTN","HMPYCSO",123,0)
 ;ZBreak UPDATE+1^HMPYCSO:"N":: "W !!,""Update: "" ZW @JSON" 
"RTN","HMPYCSO",124,0)
 ;ZBreak TASKCB+1^HMPYCSO:"N":: "K HMPB4 M HMPB4=@OBJREF"
"RTN","HMPYCSO",125,0)
 ;ZBreak TASKCB+17^HMPYCSO:"N":: "I HMPOK W !!,""Before:"",! ZW HMPB4 W !,""After:"",! ZW @OBJREF"
"RTN","HMPYCSO",126,0)
 N HMPAMS,HMPSTATS
"RTN","HMPYCSO",127,0)
 S HMPAMS("type")="PT"
"RTN","HMPYCSO",128,0)
 S HMPAMS("collection")="task"
"RTN","HMPYCSO",129,0)
 S HMPAMS("callback")="TASKCB^HMPYCSO"
"RTN","HMPYCSO",130,0)
 D CONV^HMPYCSO(.HMPAMS,"HMPSTATS")
"RTN","HMPYCSO",131,0)
 D BMES^XPDUTL("Task object conversion statistics:")
"RTN","HMPYCSO",132,0)
 D MES^XPDUTL("  Reviewed: "_$J($G(HMPSTATS("reviewed")),8))
"RTN","HMPYCSO",133,0)
 D MES^XPDUTL("    Passed: "_$J($G(HMPSTATS("passed")),8))
"RTN","HMPYCSO",134,0)
 D MES^XPDUTL(" Converted: "_$J($G(HMPSTATS("converted")),8))
"RTN","HMPYCSO",135,0)
 D MES^XPDUTL("   Errored: "_$J($G(HMPSTATS("errored")),8))
"RTN","HMPYCSO",136,0)
 ;ZBreak --UPDATE+1^HMPYCSO
"RTN","HMPYCSO",137,0)
 ;ZBreak --TASKCB+1^HMPYCSO
"RTN","HMPYCSO",138,0)
 ;ZBreak --TASKCB+17^HMPYCSO
"RTN","HMPYCSO",139,0)
 K HMPB4
"RTN","HMPYCSO",140,0)
 Q
"RTN","HMPYCSO",141,0)
 ;
"RTN","HMPYCSO",142,0)
TASKCB(OBJREF,IEN) ; -- callback that converts a 'task' object's if neccessary
"RTN","HMPYCSO",143,0)
 ;                       - converts 'pid' property to SYSID;DFN (ex. F484;237)
"RTN","HMPYCSO",144,0)
 ;                       - removes 'patientId' property if it exists
"RTN","HMPYCSO",145,0)
 ;
"RTN","HMPYCSO",146,0)
 ;  input: OBJREF := JSON decoded task object for DATA field in 800000.1
"RTN","HMPYCSO",147,0)
 ;            IEN := internal entry number in 800000.1
"RTN","HMPYCSO",148,0)
 ;
"RTN","HMPYCSO",149,0)
 ; return: 1 - task was converted | 0 - no conversion required
"RTN","HMPYCSO",150,0)
 ;
"RTN","HMPYCSO",151,0)
 N HMPOK,DFN,PID
"RTN","HMPYCSO",152,0)
 S HMPOK=0
"RTN","HMPYCSO",153,0)
 S DFN=+$P($G(^HMP(800000.1,+$G(IEN),0)),"^",2)
"RTN","HMPYCSO",154,0)
 I 'DFN Q 0
"RTN","HMPYCSO",155,0)
 S PID=$$SYS^HMPUTILS_";"_DFN
"RTN","HMPYCSO",156,0)
 ; -- if pid different, first kill 'pid' to get rid of possible ...,"pid","\s") node
"RTN","HMPYCSO",157,0)
 I $G(@OBJREF@("pid"))'=PID K @OBJREF@("pid") S @OBJREF@("pid")=PID,HMPOK=1
"RTN","HMPYCSO",158,0)
 I $D(@OBJREF@("patientId")) K @OBJREF@("patientId") S HMPOK=1
"RTN","HMPYCSO",159,0)
 Q HMPOK
"RTN","HMPYFRP")
0^127^B92765563
"RTN","HMPYFRP",1,0)
HMPYFRP ;SLC/KCM -- Find recent patients and put on roster
"RTN","HMPYFRP",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPYFRP",3,0)
 ;
"RTN","HMPYFRP",4,0)
EN ; Utilities for building roster lists
"RTN","HMPYFRP",5,0)
 W !,"D BLDMTHS to create lists"
"RTN","HMPYFRP",6,0)
 W !,"D SHOWCNT to see how many patients in each month"
"RTN","HMPYFRP",7,0)
 W !,"D XTRLST to get a single month"
"RTN","HMPYFRP",8,0)
 W !,"D GET4ALL to do extracts for all the patients"
"RTN","HMPYFRP",9,0)
 W !,"D SHOWSIZE to show sizes for each month"
"RTN","HMPYFRP",10,0)
 W !,"D SHOWSTS to show task status and any errors in extracts"
"RTN","HMPYFRP",11,0)
 W !,"D SHOWTOP to show the highest times and sizes"
"RTN","HMPYFRP",12,0)
 W !,"D STOP to stop processing of extracts"
"RTN","HMPYFRP",13,0)
 W !!,"Data stored in ^XTMP(""HMPYFRP"")",!
"RTN","HMPYFRP",14,0)
 Q
"RTN","HMPYFRP",15,0)
 ;
"RTN","HMPYFRP",16,0)
BLDMTHS ; Build patient lists for a range of months 
"RTN","HMPYFRP",17,0)
 ; ^XTMP("HMPYFRP","FOUND",DFN)=""         ; patients already found
"RTN","HMPYFRP",18,0)
 ; ^XTMP("HMPYFRP","MONTH",YYYYMM,DFN)=""  ; patients by month of last visit
"RTN","HMPYFRP",19,0)
 ; MONTHS(inverseMonth)=YYYMM^MmmYYYY      ; months to measure
"RTN","HMPYFRP",20,0)
 ;
"RTN","HMPYFRP",21,0)
 K ^XTMP("HMPYFRP")
"RTN","HMPYFRP",22,0)
 S ^XTMP("HMPYFRP",0)=$$HTFM^XLFDT(+$H+4)_"^"_$$HTFM^XLFDT(+$H)_"^HMP Build Rosters by Month"
"RTN","HMPYFRP",23,0)
 ;
"RTN","HMPYFRP",24,0)
 N MTHBEG,MTHEND,MONTH,MONTHS
"RTN","HMPYFRP",25,0)
 D PRMTMTHS(.MTHBEG,.MTHEND) Q:'MTHBEG
"RTN","HMPYFRP",26,0)
 I MTHBEG>MTHEND N X S X=MTHEND,MTHEND=MTHBEG,MTHBEG=X
"RTN","HMPYFRP",27,0)
 S MONTH=MTHBEG F  D  Q:MONTH>MTHEND
"RTN","HMPYFRP",28,0)
 . S MONTHS(MONTH)=MONTH_"^"_$$EXTMTH(MONTH)
"RTN","HMPYFRP",29,0)
 . S MONTH=$$INCMTH(MONTH)
"RTN","HMPYFRP",30,0)
 S MONTH=0 F  S MONTH=$O(MONTHS(MONTH)) Q:'MONTH  D BLDMTH(MONTHS(MONTH)) W "."
"RTN","HMPYFRP",31,0)
 W ! D SHOWCNT
"RTN","HMPYFRP",32,0)
 Q
"RTN","HMPYFRP",33,0)
BLDMTH(MONTH) ; Build list of patients for a month
"RTN","HMPYFRP",34,0)
 N NAME,START,STOP,VDATE,VISIT,X0,DFN,CAT
"RTN","HMPYFRP",35,0)
 S START=$P(MONTH,"^"),NAME=$P(MONTH,"^",2)
"RTN","HMPYFRP",36,0)
 S ^XTMP("HMPYFRP","SEQUENCE",START)=NAME
"RTN","HMPYFRP",37,0)
 S VDATE=+(START_"00"),STOP=+(START_"99")
"RTN","HMPYFRP",38,0)
 F  S VDATE=$O(^AUPNVSIT("B",VDATE))  Q:'VDATE  Q:VDATE>STOP  D
"RTN","HMPYFRP",39,0)
 . S VISIT=0 F  S VISIT=$O(^AUPNVSIT("B",VDATE,VISIT)) Q:'VISIT  D
"RTN","HMPYFRP",40,0)
 . . S X0=^AUPNVSIT(VISIT,0),DFN=$P(X0,"^",5),CAT=$P(X0,"^",7)
"RTN","HMPYFRP",41,0)
 . . Q:$D(^XTMP("HMPYFRP","FOUND",DFN))
"RTN","HMPYFRP",42,0)
 . . Q:CAT="E"  ; event (historical)
"RTN","HMPYFRP",43,0)
 . . Q:CAT="N"  ; not found
"RTN","HMPYFRP",44,0)
 . . S ^XTMP("HMPYFRP","MONTH",NAME,DFN)=""
"RTN","HMPYFRP",45,0)
 . . S ^XTMP("HMPYFRP","FOUND",DFN)=""
"RTN","HMPYFRP",46,0)
 Q
"RTN","HMPYFRP",47,0)
XTRLST ; Prompt for a list name and extract it interactively
"RTN","HMPYFRP",48,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y,DA,FROMSYS,TOSYS
"RTN","HMPYFRP",49,0)
 S DIR(0)="D^::EMP",DIR("A")="Extract Month",DIR("?")="Enter the month to run an extract."
"RTN","HMPYFRP",50,0)
 D ^DIR I $D(DIRUT) Q
"RTN","HMPYFRP",51,0)
 N HMPYNAME S HMPYNAME=$$EXTMTH(Y)
"RTN","HMPYFRP",52,0)
 W !,"Running Extracts for "_HMPYNAME_".  Continue? NO// " R X:300
"RTN","HMPYFRP",53,0)
 I $E($$UP^XLFSTR(X))'="Y" Q
"RTN","HMPYFRP",54,0)
 W !
"RTN","HMPYFRP",55,0)
 D GET4LST
"RTN","HMPYFRP",56,0)
 Q
"RTN","HMPYFRP",57,0)
GET4ALL ; Extract data for all lists
"RTN","HMPYFRP",58,0)
 ; VARIABLES THAT CONTROL EXTRACT PROCESS
"RTN","HMPYFRP",59,0)
 ; HMPYNAME: name of month for which patients are being extracted
"RTN","HMPYFRP",60,0)
 ; HMPYDFN : current DFN in the month
"RTN","HMPYFRP",61,0)
 ; HMPYDOMS: domains for which extracts will be done
"RTN","HMPYFRP",62,0)
 ; HMPYDOM : current DOMAIN for extract
"RTN","HMPYFRP",63,0)
 ; these variables get saved before each extract so KILL^XUSCLEAN may be called
"RTN","HMPYFRP",64,0)
 N HMPYNAME,X
"RTN","HMPYFRP",65,0)
 W !,"Queue each list?  NO// " R X:300
"RTN","HMPYFRP",66,0)
 I $E($$UP^XLFSTR(X))="Y" N HMPYQ,LASTPT,HMPDTH S HMPYQ=1,LASTPT=0
"RTN","HMPYFRP",67,0)
 S HMPYNAME=""
"RTN","HMPYFRP",68,0)
 F  S HMPYNAME=$O(^XTMP("HMPYFRP","MONTH",HMPYNAME)) Q:HMPYNAME=""  D
"RTN","HMPYFRP",69,0)
 . I $G(HMPYQ) D  Q
"RTN","HMPYFRP",70,0)
 . . S HMPDTH=$$HADD^XLFDT($H,,LASTPT\1000)
"RTN","HMPYFRP",71,0)
 . . D QU4LST
"RTN","HMPYFRP",72,0)
 . . S LASTPT=LASTPT+^XTMP("HMPYFRP","count",HMPYNAME)
"RTN","HMPYFRP",73,0)
 . E  D
"RTN","HMPYFRP",74,0)
 . . W !,"Running extracts for "_HMPYNAME
"RTN","HMPYFRP",75,0)
 . . D GET4LST
"RTN","HMPYFRP",76,0)
 Q
"RTN","HMPYFRP",77,0)
STOP ; Stop queued jobs
"RTN","HMPYFRP",78,0)
 S ^XTMP("HMPYFRP","STOP")=1
"RTN","HMPYFRP",79,0)
 Q
"RTN","HMPYFRP",80,0)
 ;
"RTN","HMPYFRP",81,0)
QU4LST ; Queue extract of a month
"RTN","HMPYFRP",82,0)
 ; expects HMPYNAME from GET4ALL
"RTN","HMPYFRP",83,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTSAVE,ZTKIL,ZTSYNC,ZTSK
"RTN","HMPYFRP",84,0)
 S ZTRTN="GET4LST^HMPYFRP",ZTIO="",ZTSAVE("HMPYNAME")="",ZTDTH=HMPDTH
"RTN","HMPYFRP",85,0)
 S ZTDESC="Measure extract sizes for patients with visits in a month"
"RTN","HMPYFRP",86,0)
 D ^%ZTLOAD I '$G(ZTSK) W !,"Error queuing "_HMPYNAME
"RTN","HMPYFRP",87,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYNAME)="Task #"_ZTSK
"RTN","HMPYFRP",88,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYNAME,"status")="Queued"
"RTN","HMPYFRP",89,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYNAME,"count")=0
"RTN","HMPYFRP",90,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYNAME,"result")=""
"RTN","HMPYFRP",91,0)
 W !,HMPYNAME,", task #"_ZTSK_" queued for "_$$HTE^XLFDT(HMPDTH)
"RTN","HMPYFRP",92,0)
 Q
"RTN","HMPYFRP",93,0)
GET4LST ; Extract data for a list & measure size
"RTN","HMPYFRP",94,0)
 ; expects HMPYNAME from GET4ALL or XTRLST or Queued Job
"RTN","HMPYFRP",95,0)
 N HMPYDFN,HMPYH,HMPYDOMS,PTSIZE,HMPFZTSK
"RTN","HMPYFRP",96,0)
 D BLDDOMS(.HMPYDOMS)
"RTN","HMPYFRP",97,0)
 S HMPYH=$H
"RTN","HMPYFRP",98,0)
 S HMPFZTSK=$G(ZTSK) ; if tasked, HMPDJ expects HMPFZTSK to be task
"RTN","HMPYFRP",99,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYNAME,"status")="Started"
"RTN","HMPYFRP",100,0)
 S HMPYDFN=0 F  S HMPYDFN=$O(^XTMP("HMPYFRP","MONTH",HMPYNAME,HMPYDFN)) Q:'HMPYDFN  D
"RTN","HMPYFRP",101,0)
 . S PTSIZE=$$SIZEPT(HMPYDFN)
"RTN","HMPYFRP",102,0)
 . S ^XTMP("HMPYFRP","MONTH",HMPYNAME,HMPYDFN)=PTSIZE
"RTN","HMPYFRP",103,0)
 . D TOPSIZE(HMPYDFN,"",PTSIZE,"PatientSize")
"RTN","HMPYFRP",104,0)
 S ^XTMP("HMPYFRP","MONTH",HMPYNAME)=$$HDIFF^XLFDT($H,HMPYH,2)
"RTN","HMPYFRP",105,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYNAME,"status")="Finished"
"RTN","HMPYFRP",106,0)
 Q
"RTN","HMPYFRP",107,0)
SIZEPT(HMPYDFN) ; Extract data for a patient and return size
"RTN","HMPYFRP",108,0)
 I '$D(ZTQUEUED) W "."
"RTN","HMPYFRP",109,0)
 N HMPYSIZE,HMPYDOM,HMPBATCH,HMPYET,DOMSIZE
"RTN","HMPYFRP",110,0)
 S HMPYSIZE=0,HMPBATCH="HMPYFRP"
"RTN","HMPYFRP",111,0)
 S HMPYDOM="" F  S HMPYDOM=$O(HMPYDOMS(HMPYDOM)) Q:HMPYDOM=""  D
"RTN","HMPYFRP",112,0)
 . D CLEANDOM
"RTN","HMPYFRP",113,0)
 . S HMPYET=$H
"RTN","HMPYFRP",114,0)
 . S DOMSIZE=$$SIZEDOM(HMPYDFN,HMPYDOM)
"RTN","HMPYFRP",115,0)
 . S HMPYET=$$HDIFF^XLFDT($H,HMPYET,2)
"RTN","HMPYFRP",116,0)
 . S HMPYSIZE=HMPYSIZE+DOMSIZE
"RTN","HMPYFRP",117,0)
 . D TOPSIZE(HMPYDFN,HMPYDOM,HMPYET,"ExtractTime")
"RTN","HMPYFRP",118,0)
 . D TOPSIZE(HMPYDFN,HMPYDOM,DOMSIZE,"ExtractSize")
"RTN","HMPYFRP",119,0)
 Q HMPYSIZE
"RTN","HMPYFRP",120,0)
 ;
"RTN","HMPYFRP",121,0)
SIZEDOM(DFN,DOMAIN) ; Extract 1 domain and return size
"RTN","HMPYFRP",122,0)
 N $ESTACK,$ETRAP S $ETRAP="D EXTERR^HMPYFRP"
"RTN","HMPYFRP",123,0)
 Q:$G(^XTMP("HMPYFRP","STOP"))=1 0
"RTN","HMPYFRP",124,0)
 N FILTER,RSLT,SIZE
"RTN","HMPYFRP",125,0)
 S FILTER("patientId")=DFN
"RTN","HMPYFRP",126,0)
 S FILTER("domain")=DOMAIN
"RTN","HMPYFRP",127,0)
 D GET^HMPDJ(.RSLT,.FILTER)
"RTN","HMPYFRP",128,0)
 S SIZE=$$SIZEREF(RSLT)
"RTN","HMPYFRP",129,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYNAME,"count")=$G(^XTMP("HMPYFRP","TASKS",HMPYNAME,"count"))+1
"RTN","HMPYFRP",130,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYNAME,"result")=RSLT
"RTN","HMPYFRP",131,0)
 K @RSLT ;^XTMP("HMPYFRP",HMPYDFN,HMPYDOM)
"RTN","HMPYFRP",132,0)
 Q SIZE
"RTN","HMPYFRP",133,0)
 ;
"RTN","HMPYFRP",134,0)
CLEANDOM ; Clean up partition for domain extract
"RTN","HMPYFRP",135,0)
 N X
"RTN","HMPYFRP",136,0)
 K ^TMP("HMPY",$J)
"RTN","HMPYFRP",137,0)
 F X="HMPYNAME","HMPYDOMS","HMPYDFN","HMPYDOM","HMPYSIZE","HMPYH","HMPBATCH","HMPFZTSK" M ^TMP("HMPY",$J,X)=@X
"RTN","HMPYFRP",138,0)
 D KILL^XUSCLEAN
"RTN","HMPYFRP",139,0)
 F X="HMPYNAME","HMPYDOMS","HMPYDFN","HMPYDOM","HMPYSIZE","HMPYH","HMPBATCH","HMPFZTSK" M @X=^TMP("HMPY",$J,X)
"RTN","HMPYFRP",140,0)
 K ^TMP("HMPY",$J)
"RTN","HMPYFRP",141,0)
 Q
"RTN","HMPYFRP",142,0)
TOPSIZE(DFN,DOMAIN,SIZE,MEASURE) ; Record the highest measures (time, size)
"RTN","HMPYFRP",143,0)
 Q:SIZE<1
"RTN","HMPYFRP",144,0)
 N LOW,NUM,MAX,DFNS,DOMS
"RTN","HMPYFRP",145,0)
 S MAX=30
"RTN","HMPYFRP",146,0)
 S LOW=+$O(^XTMP("HMPYFRP","MEASURE",MEASURE,"")),NUM=$G(^XTMP("HMPYFRP","MEASURE",MEASURE),0)
"RTN","HMPYFRP",147,0)
 I SIZE>LOW S ^XTMP("HMPYFRP","MEASURE",MEASURE,SIZE,DFN,$S($L(DOMAIN):DOMAIN,1:0))="",NUM=NUM+1
"RTN","HMPYFRP",148,0)
 I NUM>MAX D
"RTN","HMPYFRP",149,0)
 . S LOW="" F  S LOW=$O(^XTMP("HMPYFRP","MEASURE",MEASURE,LOW)) Q:'LOW  D  Q:NUM'>MAX
"RTN","HMPYFRP",150,0)
 . . S DFNS="" F  S DFNS=$O(^XTMP("HMPYFRP","MEASURE",MEASURE,LOW,DFNS)) Q:'DFNS  D  Q:NUM'>MAX
"RTN","HMPYFRP",151,0)
 . . . S DOMS="" F  S DOMS=$O(^XTMP("HMPYFRP","MEASURE",MEASURE,LOW,DFNS,DOMS)) Q:DOMS=""  D  Q:NUM'>MAX
"RTN","HMPYFRP",152,0)
 . . . . S NUM=NUM-1 K ^XTMP("HMPYFRP","MEASURE",MEASURE,LOW,DFNS,DOMS)
"RTN","HMPYFRP",153,0)
 S ^XTMP("HMPYFRP","MEASURE",MEASURE)=NUM
"RTN","HMPYFRP",154,0)
 Q
"RTN","HMPYFRP",155,0)
EXTERR ; Come here in case of error during extract
"RTN","HMPYFRP",156,0)
 S ^XTMP("HMPYFRP","ERRORS",$G(HMPYDFN,0),$G(HMPYDOM,0))=$H
"RTN","HMPYFRP",157,0)
 I $D(ZTQUEUED),$L($G(HMPYDFN)),$L($G(HMPYDOM)) K ^XTMP("HMPYFRP",HMPYDFN,HMPYDOM)
"RTN","HMPYFRP",158,0)
 D ^%ZTER
"RTN","HMPYFRP",159,0)
 G UNWIND^%ZTER
"RTN","HMPYFRP",160,0)
 ;
"RTN","HMPYFRP",161,0)
SIZEREF(REF) ; Return size of date in ref
"RTN","HMPYFRP",162,0)
 N X,SIZE,ROOT,LROOT
"RTN","HMPYFRP",163,0)
 S SIZE=0
"RTN","HMPYFRP",164,0)
 S ROOT=$RE($P($RE(REF),")",2,99)),LROOT=$L(ROOT)
"RTN","HMPYFRP",165,0)
 S X=REF F  S X=$Q(@X) Q:$E(X,1,LROOT)'=ROOT  S SIZE=SIZE+$L(@X)
"RTN","HMPYFRP",166,0)
 Q SIZE
"RTN","HMPYFRP",167,0)
 ;
"RTN","HMPYFRP",168,0)
SHOWCNT ; Show counts of unique patients by month
"RTN","HMPYFRP",169,0)
 N NAME,IMONTH,CNT,DFN,TOTAL
"RTN","HMPYFRP",170,0)
 S TOTAL=0
"RTN","HMPYFRP",171,0)
 S IMONTH=0 F  S IMONTH=$O(^XTMP("HMPYFRP","SEQUENCE",IMONTH)) Q:'IMONTH  D
"RTN","HMPYFRP",172,0)
 . S NAME=^XTMP("HMPYFRP","SEQUENCE",IMONTH)
"RTN","HMPYFRP",173,0)
 . S CNT=0
"RTN","HMPYFRP",174,0)
 . S DFN=0 F  S DFN=$O(^XTMP("HMPYFRP","MONTH",NAME,DFN)) Q:'DFN  S CNT=CNT+1
"RTN","HMPYFRP",175,0)
 . W !,NAME,?12,CNT," patients"
"RTN","HMPYFRP",176,0)
 . S ^XTMP("HMPYFRP","count",NAME)=CNT
"RTN","HMPYFRP",177,0)
 . S TOTAL=TOTAL+CNT
"RTN","HMPYFRP",178,0)
 W !!,"Total",?11,TOTAL," patients"
"RTN","HMPYFRP",179,0)
 Q
"RTN","HMPYFRP",180,0)
SHOWSIZE ; Show extract sizes by month
"RTN","HMPYFRP",181,0)
 N NAME,IMONTH,SIZE,DFN,SECS
"RTN","HMPYFRP",182,0)
 S IMONTH=0 F  S IMONTH=$O(^XTMP("HMPYFRP","SEQUENCE",IMONTH)) Q:'IMONTH  D
"RTN","HMPYFRP",183,0)
 . S NAME=^XTMP("HMPYFRP","SEQUENCE",IMONTH)
"RTN","HMPYFRP",184,0)
 . S SIZE=0
"RTN","HMPYFRP",185,0)
 . S DFN=0 F  S DFN=$O(^XTMP("HMPYFRP","MONTH",NAME,DFN)) Q:'DFN  S SIZE=SIZE+^XTMP("HMPYFRP","MONTH",NAME,DFN)
"RTN","HMPYFRP",186,0)
 . S SECS=$G(^XTMP("HMPYFRP","MONTH",NAME),0)
"RTN","HMPYFRP",187,0)
 . W !,NAME,?12,SIZE," bytes",?30,SECS\60," minutes ",SECS#60," seconds"
"RTN","HMPYFRP",188,0)
 Q
"RTN","HMPYFRP",189,0)
SHOWSTS ; Show task status and errors
"RTN","HMPYFRP",190,0)
 N DFN,DOMAIN,X
"RTN","HMPYFRP",191,0)
 S X="" F  S X=$O(^XTMP("HMPYFRP","TASKS",X)) Q:X=""  D
"RTN","HMPYFRP",192,0)
 . W !,X
"RTN","HMPYFRP",193,0)
 . W ?9,$G(^XTMP("HMPYFRP","TASKS",X))
"RTN","HMPYFRP",194,0)
 . W ?25,$G(^XTMP("HMPYFRP","TASKS",X,"status"))
"RTN","HMPYFRP",195,0)
 . W ?35,$G(^XTMP("HMPYFRP","TASKS",X,"count"))
"RTN","HMPYFRP",196,0)
 . ; W ?40,$G(^XTMP("HMPYFRP","TASKS",X,"result"))
"RTN","HMPYFRP",197,0)
 ;
"RTN","HMPYFRP",198,0)
 W !,"Errors (if any) --"
"RTN","HMPYFRP",199,0)
 S DFN="" F  S DFN=$O(^XTMP("HMPYFRP","ERRORS",DFN)) Q:'DFN  D
"RTN","HMPYFRP",200,0)
 . S DOMAIN="" F  S DOMAIN=$O(^XTMP("HMPYFRP","ERRORS",DFN,DOMAIN)) Q:DOMAIN=""  D
"RTN","HMPYFRP",201,0)
 . . W !,DFN,?20,DOMAIN,?45,$$HTE^XLFDT(^XTMP("HMPYFRP","ERRORS",DFN,DOMAIN))
"RTN","HMPYFRP",202,0)
 Q
"RTN","HMPYFRP",203,0)
SHOWTOP ; Show largest sizes and times
"RTN","HMPYFRP",204,0)
 N MEASURE,SIZE,DFN,DOMAIN,I
"RTN","HMPYFRP",205,0)
 F MEASURE="PatientSize","ExtractSize","ExtractTime" D
"RTN","HMPYFRP",206,0)
 . W !,MEASURE," " F I=1:1:24 W "-"
"RTN","HMPYFRP",207,0)
 . W !,"DFN",?15,$S(MEASURE["Time":"Seconds",1:"Bytes")
"RTN","HMPYFRP",208,0)
 . I MEASURE'="PatientSize" W ?30,"Domain"
"RTN","HMPYFRP",209,0)
 . S SIZE=0 F  S SIZE=$O(^XTMP("HMPYFRP","MEASURE",MEASURE,SIZE)) Q:'SIZE  D
"RTN","HMPYFRP",210,0)
 . . S DFN=0 F  S DFN=$O(^XTMP("HMPYFRP","MEASURE",MEASURE,SIZE,DFN)) Q:'DFN  D
"RTN","HMPYFRP",211,0)
 . . . S DOMAIN="" F  S DOMAIN=$O(^XTMP("HMPYFRP","MEASURE",MEASURE,SIZE,DFN,DOMAIN)) Q:DOMAIN=""  D
"RTN","HMPYFRP",212,0)
 . . . . W !,DFN,?15,SIZE
"RTN","HMPYFRP",213,0)
 . . . . I DOMAIN'=0 W ?30,DOMAIN
"RTN","HMPYFRP",214,0)
 . W !
"RTN","HMPYFRP",215,0)
 Q
"RTN","HMPYFRP",216,0)
EXTMTH(DT) ; Return external MmmYYYY format
"RTN","HMPYFRP",217,0)
 N M,Y
"RTN","HMPYFRP",218,0)
 S M=$E(DT,4,5),Y=$E(DT,1,3)
"RTN","HMPYFRP",219,0)
 S Y=Y+1700
"RTN","HMPYFRP",220,0)
 S M=$P($P($T(MNAMES),";;",2,99),";",M)
"RTN","HMPYFRP",221,0)
 Q M_Y
"RTN","HMPYFRP",222,0)
 ;
"RTN","HMPYFRP",223,0)
INCMTH(DT) ; Return incremented month
"RTN","HMPYFRP",224,0)
 N M,Y
"RTN","HMPYFRP",225,0)
 S M=$E(DT,4,5),Y=$E(DT,1,3)
"RTN","HMPYFRP",226,0)
 S M=M+1
"RTN","HMPYFRP",227,0)
 I M>12 S M=1,Y=Y+1
"RTN","HMPYFRP",228,0)
 I $L(Y)'=3 W !,"error in year" Q 99999
"RTN","HMPYFRP",229,0)
 S M="00"_M,M=$E(M,$L(M)-1,$L(M))
"RTN","HMPYFRP",230,0)
 Q Y_M
"RTN","HMPYFRP",231,0)
 ;
"RTN","HMPYFRP",232,0)
PRMTMTHS(BEG,END) ; prompt for the month range
"RTN","HMPYFRP",233,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y,DA,FROMSYS,TOSYS
"RTN","HMPYFRP",234,0)
 S DIR(0)="D^::EMP",DIR("A")="Beginning Month",DIR("?")="Enter the earliest month of visits to evaluate."
"RTN","HMPYFRP",235,0)
 D ^DIR I $D(DIRUT) S BEG="",END="" Q
"RTN","HMPYFRP",236,0)
 S BEG=Y
"RTN","HMPYFRP",237,0)
 S DIR(0)="D^::EMP",DIR("A")="Ending Month",DIR("?")="Enter the latest month of visits to evaluate."
"RTN","HMPYFRP",238,0)
 D ^DIR I $D(DIRUT) S BEG="",END="" Q
"RTN","HMPYFRP",239,0)
 S END=Y
"RTN","HMPYFRP",240,0)
 W !,"Searching visits from ",$$FMTE^XLFDT(BEG)," through ",$$FMTE^XLFDT(END),".  Continue? NO// " R X:300
"RTN","HMPYFRP",241,0)
 I $E($$UP^XLFSTR(X))'="Y" S BEG="",END="" Q
"RTN","HMPYFRP",242,0)
 S BEG=$E(BEG,1,5),END=$E(END,1,5)
"RTN","HMPYFRP",243,0)
 Q
"RTN","HMPYFRP",244,0)
BLDDOMS(DOMAINS) ; Build a list of domains
"RTN","HMPYFRP",245,0)
 N X
"RTN","HMPYFRP",246,0)
 F I=1:1 S X=$P($T(DOMAINS+I),";;",2) Q:X="zzzzz"  S DOMAINS(X)=""
"RTN","HMPYFRP",247,0)
 Q
"RTN","HMPYFRP",248,0)
MNAMES ;;Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec
"RTN","HMPYFRP",249,0)
 ;
"RTN","HMPYFRP",250,0)
DOMAINS ;
"RTN","HMPYFRP",251,0)
 ;;allergy
"RTN","HMPYFRP",252,0)
 ;;auxiliary
"RTN","HMPYFRP",253,0)
 ;;appointment
"RTN","HMPYFRP",254,0)
 ;;diagnosis
"RTN","HMPYFRP",255,0)
 ;;document
"RTN","HMPYFRP",256,0)
 ;;factor
"RTN","HMPYFRP",257,0)
 ;;immunization
"RTN","HMPYFRP",258,0)
 ;;lab
"RTN","HMPYFRP",259,0)
 ;;med
"RTN","HMPYFRP",260,0)
 ;;obs
"RTN","HMPYFRP",261,0)
 ;;order
"RTN","HMPYFRP",262,0)
 ;;problem
"RTN","HMPYFRP",263,0)
 ;;procedure
"RTN","HMPYFRP",264,0)
 ;;consult
"RTN","HMPYFRP",265,0)
 ;;image
"RTN","HMPYFRP",266,0)
 ;;surgery
"RTN","HMPYFRP",267,0)
 ;;task
"RTN","HMPYFRP",268,0)
 ;;visit
"RTN","HMPYFRP",269,0)
 ;;vital
"RTN","HMPYFRP",270,0)
 ;;ptf
"RTN","HMPYFRP",271,0)
 ;;exam
"RTN","HMPYFRP",272,0)
 ;;cpt
"RTN","HMPYFRP",273,0)
 ;;education
"RTN","HMPYFRP",274,0)
 ;;pov
"RTN","HMPYFRP",275,0)
 ;;skin
"RTN","HMPYFRP",276,0)
 ;;treatment
"RTN","HMPYFRP",277,0)
 ;;roadtrip
"RTN","HMPYFRP",278,0)
 ;;zzzzz
"RTN","HMPYFRP",279,0)
 ;;
"RTN","HMPYFRP",280,0)
 ;;mh
"RTN","HMPYFRP",281,0)
 ; *S68-JCH* Blank line above mh
"RTN","HMPYFRP1")
0^128^B46640576
"RTN","HMPYFRP1",1,0)
HMPYFRP1 ;SLC/KCM -- Find recent patients by week and test extracts
"RTN","HMPYFRP1",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPYFRP1",3,0)
 ;
"RTN","HMPYFRP1",4,0)
EN ; Utilities for building roster lists
"RTN","HMPYFRP1",5,0)
 W !,"D BLDWKS to create lists of new patients by week"
"RTN","HMPYFRP1",6,0)
 W !,"D EXTRACT to start queuing extracts"
"RTN","HMPYFRP1",7,0)
 W !,"D SHOWCNT to see how many new patients in each week"
"RTN","HMPYFRP1",8,0)
 W !,"D SHOWSIZE to show size & elapsed time for each week"
"RTN","HMPYFRP1",9,0)
 W !,"D SHOWSTS to show task status and any errors in extracts"
"RTN","HMPYFRP1",10,0)
 W !,"D SHOWTOP to show the highest times and sizes"
"RTN","HMPYFRP1",11,0)
 W !,"D STOP to stop processing of extracts"
"RTN","HMPYFRP1",12,0)
 W !!,"Data is stored in ^XTMP(""HMPYFRP"")",!
"RTN","HMPYFRP1",13,0)
 Q
"RTN","HMPYFRP1",14,0)
 ;
"RTN","HMPYFRP1",15,0)
 ; ^XTMP("HMPYFRP",dfn,domain,...extract data...) 
"RTN","HMPYFRP1",16,0)
 ; ^XTMP("HMPYFRP","FOUND",dfn)
"RTN","HMPYFRP1",17,0)
 ; ^XTMP("HMPYFRP","MEASURE",type,size,dfn,{domain})
"RTN","HMPYFRP1",18,0)
 ; ^XTMP("HMPYFRP","TASKS",taskId,...)
"RTN","HMPYFRP1",19,0)
 ; ^XTMP("HMPYFRP","TOTALS","patients")
"RTN","HMPYFRP1",20,0)
 ; ^XTMP("HMPYFRP","WEEK",date,dfn)=byteCount
"RTN","HMPYFRP1",21,0)
 ;
"RTN","HMPYFRP1",22,0)
BLDWKS ; Build patient lists for a range of weeks
"RTN","HMPYFRP1",23,0)
 ; ^XTMP("HMPYFRP","FOUND",DFN)=""         ; patients already found
"RTN","HMPYFRP1",24,0)
 ; ^XTMP("HMPYFRP","WEEK",FMDate,DFN)=""   ; patients by week of visit
"RTN","HMPYFRP1",25,0)
 D NEWXTMP^HMPDJFS("HMPYFRP",90,"HMP Extract Patients by Week")
"RTN","HMPYFRP1",26,0)
 S ^XTMP("HMPYFRP","TOTALS","patients")=0
"RTN","HMPYFRP1",27,0)
 ;
"RTN","HMPYFRP1",28,0)
 N BEG,END,WEEK
"RTN","HMPYFRP1",29,0)
 D PRMTWKS(.BEG,.END) Q:'BEG  Q:'END
"RTN","HMPYFRP1",30,0)
 S WEEK=BEG F  W "." D BLDWEEK(WEEK) S WEEK=$$FMADD^XLFDT(WEEK,7) Q:WEEK>END
"RTN","HMPYFRP1",31,0)
 D SHOWCNT
"RTN","HMPYFRP1",32,0)
 Q
"RTN","HMPYFRP1",33,0)
BLDWEEK(SUNDAY) ; Build list of patients for the week starting SUNDAY
"RTN","HMPYFRP1",34,0)
 N VDATE,EOW,IEN,X0,CAT,COUNT
"RTN","HMPYFRP1",35,0)
 S COUNT=0
"RTN","HMPYFRP1",36,0)
 S EOW=$$FMADD^XLFDT(SUNDAY,7)_".9999"     ; to include all Saturday
"RTN","HMPYFRP1",37,0)
 S VDATE=$$FMADD^XLFDT(SUNDAY,-1)_".9999"  ; to get entries with no time
"RTN","HMPYFRP1",38,0)
 F  S VDATE=$O(^AUPNVSIT("B",VDATE)) Q:'VDATE  Q:VDATE>EOW  D
"RTN","HMPYFRP1",39,0)
 . S IEN=0 F  S IEN=$O(^AUPNVSIT("B",VDATE,IEN)) Q:'IEN  D
"RTN","HMPYFRP1",40,0)
 . . S X0=^AUPNVSIT(IEN,0),DFN=$P(X0,"^",5),CAT=$P(X0,"^",7)
"RTN","HMPYFRP1",41,0)
 . . I 'DFN W !,"Missing DFN for:",IEN QUIT
"RTN","HMPYFRP1",42,0)
 . . Q:$D(^XTMP("HMPYFRP","FOUND",DFN))
"RTN","HMPYFRP1",43,0)
 . . Q:CAT="E"  ; event (historical)
"RTN","HMPYFRP1",44,0)
 . . Q:CAT="N"  ; not found
"RTN","HMPYFRP1",45,0)
 . . S COUNT=COUNT+1
"RTN","HMPYFRP1",46,0)
 . . S ^XTMP("HMPYFRP","FOUND",DFN)=""
"RTN","HMPYFRP1",47,0)
 . . S ^XTMP("HMPYFRP","WEEK",SUNDAY,DFN)=""
"RTN","HMPYFRP1",48,0)
 S ^XTMP("HMPYFRP","WEEK",SUNDAY,"count")=COUNT
"RTN","HMPYFRP1",49,0)
 S ^XTMP("HMPYFRP","TOTALS","patients")=^XTMP("HMPYFRP","TOTALS","patients")+COUNT
"RTN","HMPYFRP1",50,0)
 Q
"RTN","HMPYFRP1",51,0)
EXTRACT ; Begin first extract by week
"RTN","HMPYFRP1",52,0)
 N TASK,HMPYWEEK
"RTN","HMPYFRP1",53,0)
 S HMPYWEEK=$O(^XTMP("HMPYFRP","WEEK",0))
"RTN","HMPYFRP1",54,0)
 I 'HMPYWEEK W !,"No lists by week" QUIT
"RTN","HMPYFRP1",55,0)
 W !,"Queuing week ",$$FMTE^XLFDT(HMPYWEEK)
"RTN","HMPYFRP1",56,0)
 S TASK=$$QWEEK(HMPYWEEK) W " task ",TASK
"RTN","HMPYFRP1",57,0)
 Q
"RTN","HMPYFRP1",58,0)
STOP ; Stop queued jobs
"RTN","HMPYFRP1",59,0)
 S ^XTMP("HMPYFRP","STOP")=1
"RTN","HMPYFRP1",60,0)
 Q
"RTN","HMPYFRP1",61,0)
QWEEK(HMPYWEEK) ; Queue extracts for HMPYWEEK
"RTN","HMPYFRP1",62,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTSAVE,ZTKIL,ZTSYNC,ZTSK
"RTN","HMPYFRP1",63,0)
 S ZTRTN="GET4LST^HMPYFRP1",ZTIO="",ZTSAVE("HMPYWEEK")="",ZTDTH=$H
"RTN","HMPYFRP1",64,0)
 S ZTDESC="Measure extract sizes for patients with visits in a week"
"RTN","HMPYFRP1",65,0)
 D ^%ZTLOAD I '$G(ZTSK) W !,"Error queuing "_HMPYWEEK
"RTN","HMPYFRP1",66,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYWEEK)="Task #"_ZTSK
"RTN","HMPYFRP1",67,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYWEEK,"status")="Queued"
"RTN","HMPYFRP1",68,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYWEEK,"count")=0
"RTN","HMPYFRP1",69,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYWEEK,"result")=""
"RTN","HMPYFRP1",70,0)
 Q ZTSK
"RTN","HMPYFRP1",71,0)
GET4LST ; Extract data for a list & measure size
"RTN","HMPYFRP1",72,0)
 ; expects HMPYWEEK (date of Sunday for the week)
"RTN","HMPYFRP1",73,0)
 N HMPYDFN,HMPYH,HMPYDOMS,PTSIZE,HMPFZTSK
"RTN","HMPYFRP1",74,0)
 D BLDDOMS^HMPYFRP(.HMPYDOMS)
"RTN","HMPYFRP1",75,0)
 S HMPYH=$H
"RTN","HMPYFRP1",76,0)
 S HMPFZTSK=$G(ZTSK) ; if tasked, HMPDJ expects HMPFZTSK to be task id
"RTN","HMPYFRP1",77,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYWEEK,"status")="Started"
"RTN","HMPYFRP1",78,0)
 S HMPYDFN=0 F  S HMPYDFN=$O(^XTMP("HMPYFRP","WEEK",HMPYWEEK,HMPYDFN)) Q:'HMPYDFN  D
"RTN","HMPYFRP1",79,0)
 . S PTSIZE=$$SIZEPT(HMPYDFN)
"RTN","HMPYFRP1",80,0)
 . S ^XTMP("HMPYFRP","WEEK",HMPYWEEK,HMPYDFN)=PTSIZE
"RTN","HMPYFRP1",81,0)
 . D TOPSIZE^HMPYFRP(HMPYDFN,"",PTSIZE,"PatientSize")
"RTN","HMPYFRP1",82,0)
 S ^XTMP("HMPYFRP","WEEK",HMPYWEEK)=$$HDIFF^XLFDT($H,HMPYH,2) ; elapsed time for week
"RTN","HMPYFRP1",83,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYWEEK,"status")="Finished"
"RTN","HMPYFRP1",84,0)
 S HMPYWEEK=$O(^XTMP("HMPYFRP","WEEK",HMPYWEEK))
"RTN","HMPYFRP1",85,0)
 I HMPYWEEK,'$G(^XTMP("HMPYFRP","STOP")) D QWEEK(HMPYWEEK)
"RTN","HMPYFRP1",86,0)
 Q
"RTN","HMPYFRP1",87,0)
SIZEPT(HMPYDFN) ; Extract data for a patient and return size
"RTN","HMPYFRP1",88,0)
 N HMPYSIZE,HMPYDOM,HMPBATCH,HMPYET,DOMSIZE
"RTN","HMPYFRP1",89,0)
 S HMPYSIZE=0,HMPBATCH="HMPYFRP"
"RTN","HMPYFRP1",90,0)
 S HMPYDOM="" F  S HMPYDOM=$O(HMPYDOMS(HMPYDOM)) Q:HMPYDOM=""  D
"RTN","HMPYFRP1",91,0)
 . D CLEANDOM
"RTN","HMPYFRP1",92,0)
 . S HMPYET=$H
"RTN","HMPYFRP1",93,0)
 . S DOMSIZE=$$SIZEDOM(HMPYDFN,HMPYDOM)
"RTN","HMPYFRP1",94,0)
 . S HMPYET=$$HDIFF^XLFDT($H,HMPYET,2)
"RTN","HMPYFRP1",95,0)
 . S HMPYSIZE=HMPYSIZE+DOMSIZE
"RTN","HMPYFRP1",96,0)
 . D TOPSIZE^HMPYFRP(HMPYDFN,HMPYDOM,HMPYET,"ExtractTime")
"RTN","HMPYFRP1",97,0)
 . D TOPSIZE^HMPYFRP(HMPYDFN,HMPYDOM,DOMSIZE,"ExtractSize")
"RTN","HMPYFRP1",98,0)
 Q HMPYSIZE
"RTN","HMPYFRP1",99,0)
 ;
"RTN","HMPYFRP1",100,0)
SIZEDOM(DFN,DOMAIN) ; Extract 1 domain and return size
"RTN","HMPYFRP1",101,0)
 N $ESTACK,$ETRAP S $ETRAP="D EXTERR^HMPYFRP"
"RTN","HMPYFRP1",102,0)
 Q:$G(^XTMP("HMPYFRP","STOP"))=1 0
"RTN","HMPYFRP1",103,0)
 N FILTER,RSLT,SIZE
"RTN","HMPYFRP1",104,0)
 S FILTER("patientId")=DFN
"RTN","HMPYFRP1",105,0)
 S FILTER("domain")=DOMAIN
"RTN","HMPYFRP1",106,0)
 D GET^HMPDJ(.RSLT,.FILTER)
"RTN","HMPYFRP1",107,0)
 S SIZE=$$SIZEREF^HMPYFRP(RSLT)
"RTN","HMPYFRP1",108,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYWEEK,"count")=$G(^XTMP("HMPYFRP","TASKS",HMPYWEEK,"count"))+1
"RTN","HMPYFRP1",109,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYWEEK,"result")=RSLT
"RTN","HMPYFRP1",110,0)
 K @RSLT ;^XTMP("HMPYFRP",HMPYDFN,HMPYDOM)
"RTN","HMPYFRP1",111,0)
 Q SIZE
"RTN","HMPYFRP1",112,0)
 ;
"RTN","HMPYFRP1",113,0)
CLEANDOM ; Clean up partition for domain extract
"RTN","HMPYFRP1",114,0)
 N X
"RTN","HMPYFRP1",115,0)
 K ^TMP("HMPY",$J)
"RTN","HMPYFRP1",116,0)
 F X="HMPYWEEK","HMPYDOMS","HMPYDFN","HMPYDOM","HMPYSIZE","HMPYH","HMPBATCH","HMPFZTSK" M ^TMP("HMPY",$J,X)=@X
"RTN","HMPYFRP1",117,0)
 D KILL^XUSCLEAN
"RTN","HMPYFRP1",118,0)
 F X="HMPYWEEK","HMPYDOMS","HMPYDFN","HMPYDOM","HMPYSIZE","HMPYH","HMPBATCH","HMPFZTSK" M @X=^TMP("HMPY",$J,X)
"RTN","HMPYFRP1",119,0)
 K ^TMP("HMPY",$J)
"RTN","HMPYFRP1",120,0)
 Q
"RTN","HMPYFRP1",121,0)
 ; 
"RTN","HMPYFRP1",122,0)
SHOWCNT ; Show counts of unique patients by week
"RTN","HMPYFRP1",123,0)
 N WEEK
"RTN","HMPYFRP1",124,0)
 S WEEK=0 F  S WEEK=$O(^XTMP("HMPYFRP","WEEK",WEEK)) Q:'WEEK  D
"RTN","HMPYFRP1",125,0)
 . W !,"Week beginning "_$$FMTE^XLFDT(WEEK,8)_":"
"RTN","HMPYFRP1",126,0)
 . W ?26,$J(^XTMP("HMPYFRP","WEEK",WEEK,"count"),7)," patients"
"RTN","HMPYFRP1",127,0)
 W !!,?10,"Total patients:",?26,$J(^XTMP("HMPYFRP","TOTALS","patients"),7)
"RTN","HMPYFRP1",128,0)
 Q
"RTN","HMPYFRP1",129,0)
SHOWSIZE ; Show extract sizes by week
"RTN","HMPYFRP1",130,0)
 N NAME,WEEK,SIZE,DFN,SECS,TOTSIZE,TOTSECS
"RTN","HMPYFRP1",131,0)
 S TOTSIZE=0,TOTSECS=0
"RTN","HMPYFRP1",132,0)
 S WEEK=0 F  S WEEK=$O(^XTMP("HMPYFRP","WEEK",WEEK)) Q:'WEEK  D
"RTN","HMPYFRP1",133,0)
 . I $G(^XTMP("HMPYFRP","TASKS",WEEK,"status"))'="Finished" QUIT
"RTN","HMPYFRP1",134,0)
 . S SIZE=0
"RTN","HMPYFRP1",135,0)
 . S DFN=0 F  S DFN=$O(^XTMP("HMPYFRP","WEEK",WEEK,DFN)) Q:'DFN  D
"RTN","HMPYFRP1",136,0)
 . . S SIZE=SIZE+^XTMP("HMPYFRP","WEEK",WEEK,DFN)
"RTN","HMPYFRP1",137,0)
 . S SECS=$G(^XTMP("HMPYFRP","WEEK",WEEK),0)
"RTN","HMPYFRP1",138,0)
 . S TOTSIZE=TOTSIZE+SIZE,TOTSECS=TOTSECS+SECS
"RTN","HMPYFRP1",139,0)
 . W !,$$FMTE^XLFDT(WEEK),?15,$J(SIZE,15)," bytes",?40,SECS\60," minutes ",SECS#60," seconds"
"RTN","HMPYFRP1",140,0)
 W !!,"Totals:",?15,$J(TOTSIZE,15)," bytes",?40,TOTSECS\60," minutes ",TOTSECS#60," seconds"
"RTN","HMPYFRP1",141,0)
 Q
"RTN","HMPYFRP1",142,0)
SHOWSTS ; Show task status and errors
"RTN","HMPYFRP1",143,0)
 G SHOWSTS^HMPYFRP
"RTN","HMPYFRP1",144,0)
 ;
"RTN","HMPYFRP1",145,0)
SHOWTOP ; Show largest sizes and times
"RTN","HMPYFRP1",146,0)
 G SHOWTOP^HMPYFRP
"RTN","HMPYFRP1",147,0)
 ;
"RTN","HMPYFRP1",148,0)
 ;
"RTN","HMPYFRP1",149,0)
PRMTWKS(BEG,END) ; prompt for date range of weeks
"RTN","HMPYFRP1",150,0)
 S BEG="",END=""
"RTN","HMPYFRP1",151,0)
 S BEG=$$ASKDT("Beginning Date","Enter beginning visit date to evaluate.") Q:'BEG
"RTN","HMPYFRP1",152,0)
 S END=$$ASKDT("Ending Date","Enter latest date to evaluate.") Q:'END
"RTN","HMPYFRP1",153,0)
 S BEG=$$FMADD^XLFDT(BEG,-$$DOW^XLFDT(BEG,1))    ; get previous Sunday
"RTN","HMPYFRP1",154,0)
 S END=$$FMADD^XLFDT(END,(6-$$DOW^XLFDT(END,1))) ; get following Saturday
"RTN","HMPYFRP1",155,0)
 S BEG=$P(BEG,"."),END=$P(END,".")               ; only dates
"RTN","HMPYFRP1",156,0)
 I BEG>END N X S X=BEG,BEG=END,END=X             ; swap if entered backwards
"RTN","HMPYFRP1",157,0)
 W !,"Searching visits from Sunday ",$$FMTE^XLFDT(BEG)
"RTN","HMPYFRP1",158,0)
 W !,"            through Saturday ",$$FMTE^XLFDT(END)
"RTN","HMPYFRP1",159,0)
 I '$$ASKYN("Continue","No") S BEG="",END=""
"RTN","HMPYFRP1",160,0)
 Q
"RTN","HMPYFRP1",161,0)
ASKDT(ASK,HELP) ; prompt for a date in the past
"RTN","HMPYFRP1",162,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,Y
"RTN","HMPYFRP1",163,0)
 S DIR(0)="D^::EP",DIR("A")=ASK,DIR("?")=HELP
"RTN","HMPYFRP1",164,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","HMPYFRP1",165,0)
 Q Y
"RTN","HMPYFRP1",166,0)
 ;
"RTN","HMPYFRP1",167,0)
ASKYN(ASK,DFLT) ; prompt for yes/no
"RTN","HMPYFRP1",168,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,Y
"RTN","HMPYFRP1",169,0)
 S DIR(0)="Y",DIR("A")=ASK,DIR("B")=DFLT
"RTN","HMPYFRP1",170,0)
 D ^DIR
"RTN","HMPYFRP1",171,0)
 Q Y
"RTN","HMPYFRP1",172,0)
 ;
"RTN","HMPYFRP2")
0^129^B43272246
"RTN","HMPYFRP2",1,0)
HMPYFRP2 ;SLC/KCM -- Find recent patients by day and test extracts
"RTN","HMPYFRP2",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPYFRP2",3,0)
 ;
"RTN","HMPYFRP2",4,0)
EN ; Utilities for building roster lists
"RTN","HMPYFRP2",5,0)
 W !,"D BLDDAYS to create lists of new patients by day"
"RTN","HMPYFRP2",6,0)
 W !,"D EXTRACT to start queuing extracts"
"RTN","HMPYFRP2",7,0)
 W !,"D SHOWCNT to see how many new patients in each day"
"RTN","HMPYFRP2",8,0)
 W !,"D SHOWSIZE to show size & elapsed time for each day"
"RTN","HMPYFRP2",9,0)
 W !,"D SHOWSTS to show task status and any errors in extracts"
"RTN","HMPYFRP2",10,0)
 W !,"D SHOWTOP to show the highest times and sizes"
"RTN","HMPYFRP2",11,0)
 W !,"D STOP to stop processing of extracts"
"RTN","HMPYFRP2",12,0)
 W !!,"Data is stored in ^XTMP(""HMPYFRP"")",!
"RTN","HMPYFRP2",13,0)
 Q
"RTN","HMPYFRP2",14,0)
 ;
"RTN","HMPYFRP2",15,0)
 ; ^XTMP("HMPYFRP",dfn,domain,...extract data...) 
"RTN","HMPYFRP2",16,0)
 ; ^XTMP("HMPYFRP","FOUND",dfn)
"RTN","HMPYFRP2",17,0)
 ; ^XTMP("HMPYFRP","MEASURE",type,size,dfn,{domain})
"RTN","HMPYFRP2",18,0)
 ; ^XTMP("HMPYFRP","TASKS",taskId,...)
"RTN","HMPYFRP2",19,0)
 ; ^XTMP("HMPYFRP","TOTALS","patients")
"RTN","HMPYFRP2",20,0)
 ; ^XTMP("HMPYFRP","DAY",date,dfn)=byteCount
"RTN","HMPYFRP2",21,0)
 ;
"RTN","HMPYFRP2",22,0)
BLDDAYS ; Build patient lists for a range of weeks
"RTN","HMPYFRP2",23,0)
 ; ^XTMP("HMPYFRP","FOUND",DFN)=""         ; patients already found
"RTN","HMPYFRP2",24,0)
 ; ^XTMP("HMPYFRP","DAY",FMDate,DFN)=""    ; patients by day of visit
"RTN","HMPYFRP2",25,0)
 D NEWXTMP^HMPDJFS("HMPYFRP",90,"HMP Extract Patients by Day")
"RTN","HMPYFRP2",26,0)
 S ^XTMP("HMPYFRP","TOTALS","patients")=0
"RTN","HMPYFRP2",27,0)
 ;
"RTN","HMPYFRP2",28,0)
 N BEG,END,DAY
"RTN","HMPYFRP2",29,0)
 D PRMTDAYS(.BEG,.END) Q:'BEG  Q:'END
"RTN","HMPYFRP2",30,0)
 S DAY=BEG F  W "." D BLDDAY(DAY) S DAY=$$FMADD^XLFDT(DAY,1) Q:DAY>END
"RTN","HMPYFRP2",31,0)
 D SHOWCNT
"RTN","HMPYFRP2",32,0)
 Q
"RTN","HMPYFRP2",33,0)
BLDDAY(DAY) ; Build list of patients for the day
"RTN","HMPYFRP2",34,0)
 N VDATE,EOD,IEN,X0,CAT,COUNT
"RTN","HMPYFRP2",35,0)
 S COUNT=0
"RTN","HMPYFRP2",36,0)
 S EOD=DAY_".9999"                      ; to include all day
"RTN","HMPYFRP2",37,0)
 S VDATE=$$FMADD^XLFDT(DAY,-1)_".9999"  ; to get entries with no time
"RTN","HMPYFRP2",38,0)
 F  S VDATE=$O(^AUPNVSIT("B",VDATE)) Q:'VDATE  Q:VDATE>EOD  D
"RTN","HMPYFRP2",39,0)
 . S IEN=0 F  S IEN=$O(^AUPNVSIT("B",VDATE,IEN)) Q:'IEN  D
"RTN","HMPYFRP2",40,0)
 . . S X0=^AUPNVSIT(IEN,0),DFN=$P(X0,"^",5),CAT=$P(X0,"^",7)
"RTN","HMPYFRP2",41,0)
 . . I 'DFN W !,"Missing DFN for:",IEN QUIT
"RTN","HMPYFRP2",42,0)
 . . Q:$D(^XTMP("HMPYFRP","FOUND",DFN))
"RTN","HMPYFRP2",43,0)
 . . Q:CAT="E"  ; event (historical)
"RTN","HMPYFRP2",44,0)
 . . Q:CAT="N"  ; not found
"RTN","HMPYFRP2",45,0)
 . . S COUNT=COUNT+1
"RTN","HMPYFRP2",46,0)
 . . S ^XTMP("HMPYFRP","FOUND",DFN)=""
"RTN","HMPYFRP2",47,0)
 . . S ^XTMP("HMPYFRP","DAY",DAY,DFN)=""
"RTN","HMPYFRP2",48,0)
 S ^XTMP("HMPYFRP","DAY",DAY,"count")=COUNT
"RTN","HMPYFRP2",49,0)
 S ^XTMP("HMPYFRP","TOTALS","patients")=^XTMP("HMPYFRP","TOTALS","patients")+COUNT
"RTN","HMPYFRP2",50,0)
 Q
"RTN","HMPYFRP2",51,0)
EXTRACT ; Begin first extract by day
"RTN","HMPYFRP2",52,0)
 N TASK,HMPYDAY
"RTN","HMPYFRP2",53,0)
 S HMPYDAY=$O(^XTMP("HMPYFRP","DAY",0))
"RTN","HMPYFRP2",54,0)
 I 'HMPYDAY W !,"No lists by day" QUIT
"RTN","HMPYFRP2",55,0)
 W !,"Queuing day ",$$FMTE^XLFDT(HMPYDAY)
"RTN","HMPYFRP2",56,0)
 S TASK=$$QDAY(HMPYDAY) W " task ",TASK
"RTN","HMPYFRP2",57,0)
 Q
"RTN","HMPYFRP2",58,0)
STOP ; Stop queued jobs
"RTN","HMPYFRP2",59,0)
 S ^XTMP("HMPYFRP","STOP")=1
"RTN","HMPYFRP2",60,0)
 Q
"RTN","HMPYFRP2",61,0)
QDAY(HMPYDAY) ; Queue extracts for HMPYDAY
"RTN","HMPYFRP2",62,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTSAVE,ZTKIL,ZTSYNC,ZTSK
"RTN","HMPYFRP2",63,0)
 S ZTRTN="GET4LST^HMPYFRP2",ZTIO="",ZTSAVE("HMPYDAY")="",ZTDTH=$H
"RTN","HMPYFRP2",64,0)
 S ZTDESC="Measure extract sizes for patients with visits in a day"
"RTN","HMPYFRP2",65,0)
 D ^%ZTLOAD I '$G(ZTSK) W !,"Error queuing "_HMPYDAY
"RTN","HMPYFRP2",66,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYDAY)="Task #"_ZTSK
"RTN","HMPYFRP2",67,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYDAY,"status")="Queued"
"RTN","HMPYFRP2",68,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYDAY,"count")=0
"RTN","HMPYFRP2",69,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYDAY,"result")=""
"RTN","HMPYFRP2",70,0)
 Q ZTSK
"RTN","HMPYFRP2",71,0)
 ;
"RTN","HMPYFRP2",72,0)
GET4LST ; Extract data for a list & measure size
"RTN","HMPYFRP2",73,0)
 ; expects HMPYDAY (date to extract)
"RTN","HMPYFRP2",74,0)
 N HMPYDFN,HMPYH,HMPYDOMS,PTSIZE,HMPFZTSK
"RTN","HMPYFRP2",75,0)
 D BLDDOMS^HMPYFRP(.HMPYDOMS)
"RTN","HMPYFRP2",76,0)
 S HMPYH=$H
"RTN","HMPYFRP2",77,0)
 S HMPFZTSK=$G(ZTSK) ; if tasked, HMPDJ expects HMPFZTSK to be task id
"RTN","HMPYFRP2",78,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYDAY,"status")="Started"
"RTN","HMPYFRP2",79,0)
 S HMPYDFN=0 F  S HMPYDFN=$O(^XTMP("HMPYFRP","DAY",HMPYDAY,HMPYDFN)) Q:'HMPYDFN  D
"RTN","HMPYFRP2",80,0)
 . S PTSIZE=$$SIZEPT(HMPYDFN)
"RTN","HMPYFRP2",81,0)
 . S ^XTMP("HMPYFRP","DAY",HMPYDAY,HMPYDFN)=PTSIZE
"RTN","HMPYFRP2",82,0)
 . D TOPSIZE^HMPYFRP(HMPYDFN,"",PTSIZE,"PatientSize")
"RTN","HMPYFRP2",83,0)
 S ^XTMP("HMPYFRP","DAY",HMPYDAY)=$$HDIFF^XLFDT($H,HMPYH,2) ; elapsed time for day
"RTN","HMPYFRP2",84,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYDAY,"status")="Finished"
"RTN","HMPYFRP2",85,0)
 S HMPYDAY=$O(^XTMP("HMPYFRP","DAY",HMPYDAY))
"RTN","HMPYFRP2",86,0)
 I HMPYDAY,'$G(^XTMP("HMPYFRP","STOP")) D QDAY(HMPYDAY)
"RTN","HMPYFRP2",87,0)
 Q
"RTN","HMPYFRP2",88,0)
SIZEPT(HMPYDFN) ; Extract data for a patient and return size
"RTN","HMPYFRP2",89,0)
 N HMPYSIZE,HMPYDOM,HMPBATCH,HMPYET,DOMSIZE
"RTN","HMPYFRP2",90,0)
 S HMPYSIZE=0,HMPBATCH="HMPYFRP"
"RTN","HMPYFRP2",91,0)
 S HMPYDOM="" F  S HMPYDOM=$O(HMPYDOMS(HMPYDOM)) Q:HMPYDOM=""  D
"RTN","HMPYFRP2",92,0)
 . D CLEANDOM
"RTN","HMPYFRP2",93,0)
 . S HMPYET=$H
"RTN","HMPYFRP2",94,0)
 . S DOMSIZE=$$SIZEDOM(HMPYDFN,HMPYDOM)
"RTN","HMPYFRP2",95,0)
 . S HMPYET=$$HDIFF^XLFDT($H,HMPYET,2)
"RTN","HMPYFRP2",96,0)
 . S HMPYSIZE=HMPYSIZE+DOMSIZE
"RTN","HMPYFRP2",97,0)
 . D TOPSIZE^HMPYFRP(HMPYDFN,HMPYDOM,HMPYET,"ExtractTime")
"RTN","HMPYFRP2",98,0)
 . D TOPSIZE^HMPYFRP(HMPYDFN,HMPYDOM,DOMSIZE,"ExtractSize")
"RTN","HMPYFRP2",99,0)
 Q HMPYSIZE
"RTN","HMPYFRP2",100,0)
 ;
"RTN","HMPYFRP2",101,0)
SIZEDOM(DFN,DOMAIN) ; Extract 1 domain and return size
"RTN","HMPYFRP2",102,0)
 N $ESTACK,$ETRAP S $ETRAP="D EXTERR^HMPYFRP"
"RTN","HMPYFRP2",103,0)
 Q:$G(^XTMP("HMPYFRP","STOP"))=1 0
"RTN","HMPYFRP2",104,0)
 N FILTER,RSLT,SIZE
"RTN","HMPYFRP2",105,0)
 S FILTER("patientId")=DFN
"RTN","HMPYFRP2",106,0)
 S FILTER("domain")=DOMAIN
"RTN","HMPYFRP2",107,0)
 D GET^HMPDJ(.RSLT,.FILTER)
"RTN","HMPYFRP2",108,0)
 S SIZE=$$SIZEREF^HMPYFRP(RSLT)
"RTN","HMPYFRP2",109,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYDAY,"count")=$G(^XTMP("HMPYFRP","TASKS",HMPYDAY,"count"))+1
"RTN","HMPYFRP2",110,0)
 S ^XTMP("HMPYFRP","TASKS",HMPYDAY,"result")=RSLT
"RTN","HMPYFRP2",111,0)
 K @RSLT ;^XTMP("HMPYFRP",HMPYDFN,HMPYDOM)
"RTN","HMPYFRP2",112,0)
 Q SIZE
"RTN","HMPYFRP2",113,0)
 ;
"RTN","HMPYFRP2",114,0)
CLEANDOM ; Clean up partition for domain extract
"RTN","HMPYFRP2",115,0)
 N X
"RTN","HMPYFRP2",116,0)
 K ^TMP("HMPY",$J)
"RTN","HMPYFRP2",117,0)
 F X="HMPYDAY","HMPYDOMS","HMPYDFN","HMPYDOM","HMPYSIZE","HMPYH","HMPBATCH","HMPFZTSK" M ^TMP("HMPY",$J,X)=@X
"RTN","HMPYFRP2",118,0)
 D KILL^XUSCLEAN
"RTN","HMPYFRP2",119,0)
 F X="HMPYDAY","HMPYDOMS","HMPYDFN","HMPYDOM","HMPYSIZE","HMPYH","HMPBATCH","HMPFZTSK" M @X=^TMP("HMPY",$J,X)
"RTN","HMPYFRP2",120,0)
 K ^TMP("HMPY",$J)
"RTN","HMPYFRP2",121,0)
 Q
"RTN","HMPYFRP2",122,0)
 ; 
"RTN","HMPYFRP2",123,0)
SHOWCNT ; Show counts of unique patients by day
"RTN","HMPYFRP2",124,0)
 N DAY
"RTN","HMPYFRP2",125,0)
 S DAY=0 F  S DAY=$O(^XTMP("HMPYFRP","DAY",DAY)) Q:'DAY  D
"RTN","HMPYFRP2",126,0)
 . W !,$$FMTE^XLFDT(DAY,8)_":"
"RTN","HMPYFRP2",127,0)
 . W ?26,$J(^XTMP("HMPYFRP","DAY",DAY,"count"),7)," patients"
"RTN","HMPYFRP2",128,0)
 W !!,?10,"Total patients:",?26,$J(^XTMP("HMPYFRP","TOTALS","patients"),7)
"RTN","HMPYFRP2",129,0)
 Q
"RTN","HMPYFRP2",130,0)
SHOWSIZE ; Show extract sizes by week
"RTN","HMPYFRP2",131,0)
 N NAME,DAY,SIZE,DFN,SECS,TOTSIZE,TOTSECS
"RTN","HMPYFRP2",132,0)
 S TOTSIZE=0,TOTSECS=0
"RTN","HMPYFRP2",133,0)
 S DAY=0 F  S DAY=$O(^XTMP("HMPYFRP","DAY",DAY)) Q:'DAY  D
"RTN","HMPYFRP2",134,0)
 . I $G(^XTMP("HMPYFRP","TASKS",DAY,"status"))'="Finished" QUIT
"RTN","HMPYFRP2",135,0)
 . S SIZE=0
"RTN","HMPYFRP2",136,0)
 . S DFN=0 F  S DFN=$O(^XTMP("HMPYFRP","DAY",DAY,DFN)) Q:'DFN  D
"RTN","HMPYFRP2",137,0)
 . . S SIZE=SIZE+^XTMP("HMPYFRP","DAY",DAY,DFN)
"RTN","HMPYFRP2",138,0)
 . S SECS=$G(^XTMP("HMPYFRP","DAY",DAY),0)
"RTN","HMPYFRP2",139,0)
 . S TOTSIZE=TOTSIZE+SIZE,TOTSECS=TOTSECS+SECS
"RTN","HMPYFRP2",140,0)
 . W !,$$FMTE^XLFDT(DAY),?15,$J(SIZE,15)," bytes",?40,SECS\60," minutes ",SECS#60," seconds"
"RTN","HMPYFRP2",141,0)
 W !!,"Totals:",?15,$J(TOTSIZE,15)," bytes",?40,TOTSECS\60," minutes ",TOTSECS#60," seconds"
"RTN","HMPYFRP2",142,0)
 Q
"RTN","HMPYFRP2",143,0)
SHOWSTS ; Show task status and errors
"RTN","HMPYFRP2",144,0)
 G SHOWSTS^HMPYFRP
"RTN","HMPYFRP2",145,0)
 ;
"RTN","HMPYFRP2",146,0)
SHOWTOP ; Show largest sizes and times
"RTN","HMPYFRP2",147,0)
 G SHOWTOP^HMPYFRP
"RTN","HMPYFRP2",148,0)
 ;
"RTN","HMPYFRP2",149,0)
 ;
"RTN","HMPYFRP2",150,0)
PRMTDAYS(BEG,END) ; prompt for date range
"RTN","HMPYFRP2",151,0)
 S BEG="",END=""
"RTN","HMPYFRP2",152,0)
 S BEG=$$ASKDT("Beginning Date","Enter beginning visit date to evaluate.") Q:'BEG
"RTN","HMPYFRP2",153,0)
 S END=$$ASKDT("Ending Date","Enter latest date to evaluate.") Q:'END
"RTN","HMPYFRP2",154,0)
 S BEG=$P(BEG,"."),END=$P(END,".")               ; only dates
"RTN","HMPYFRP2",155,0)
 I BEG>END N X S X=BEG,BEG=END,END=X             ; swap if entered backwards
"RTN","HMPYFRP2",156,0)
 W !,"Searching visits from ",$$FMTE^XLFDT(BEG)
"RTN","HMPYFRP2",157,0)
 W !,"              through ",$$FMTE^XLFDT(END)
"RTN","HMPYFRP2",158,0)
 I '$$ASKYN("Continue","No") S BEG="",END=""
"RTN","HMPYFRP2",159,0)
 Q
"RTN","HMPYFRP2",160,0)
ASKDT(ASK,HELP) ; prompt for a date in the past
"RTN","HMPYFRP2",161,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,Y
"RTN","HMPYFRP2",162,0)
 S DIR(0)="D^::EP",DIR("A")=ASK,DIR("?")=HELP
"RTN","HMPYFRP2",163,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","HMPYFRP2",164,0)
 Q Y
"RTN","HMPYFRP2",165,0)
 ;
"RTN","HMPYFRP2",166,0)
ASKYN(ASK,DFLT) ; prompt for yes/no
"RTN","HMPYFRP2",167,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,Y
"RTN","HMPYFRP2",168,0)
 S DIR(0)="Y",DIR("A")=ASK,DIR("B")=DFLT
"RTN","HMPYFRP2",169,0)
 D ^DIR
"RTN","HMPYFRP2",170,0)
 Q Y
"RTN","HMPYFRP2",171,0)
 ;
"RTN","HMPYPAR")
0^130^B3965687
"RTN","HMPYPAR",1,0)
HMPYPAR ;SLC/KCM -- Modify Parameters
"RTN","HMPYPAR",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 53
"RTN","HMPYPAR",3,0)
 ;
"RTN","HMPYPAR",4,0)
PARLOOP ; Loop thru parameter
"RTN","HMPYPAR",5,0)
 N PAR,ENT,INST,IEN
"RTN","HMPYPAR",6,0)
 S PAR=$O(^XTV(8989.51,"B","HMP PARAMETERS",0))
"RTN","HMPYPAR",7,0)
 S ENT="" F  S ENT=$O(^XTV(8989.5,"AC",PAR,ENT)) Q:ENT=""  D
"RTN","HMPYPAR",8,0)
 . S INST="" F  S INST=$O(^XTV(8989.5,"AC",PAR,ENT,INST)) Q:INST=""  D
"RTN","HMPYPAR",9,0)
 . . S IEN=0 F  S IEN=$O(^XTV(8989.5,"AC",PAR,ENT,INST,IEN)) Q:IEN=""  D
"RTN","HMPYPAR",10,0)
 . . . I $P(^XTV(8989.5,IEN,0),":",6)'="HMP USER PREF" Q
"RTN","HMPYPAR",11,0)
 . . . D PULLPID(IEN)
"RTN","HMPYPAR",12,0)
 Q
"RTN","HMPYPAR",13,0)
PULLPID(IEN) ; Remove PID entries
"RTN","HMPYPAR",14,0)
 N JSON,WP,OBJ,ERR,I
"RTN","HMPYPAR",15,0)
 S I=0 F  S I=$O(^XTV(8989.5,IEN,2,I)) Q:'I  S JSON(I)=^XTV(8989.5,IEN,2,I,0)
"RTN","HMPYPAR",16,0)
 D DECODE^HMPJSON("JSON","OBJ","ERR")
"RTN","HMPYPAR",17,0)
 I $D(ERR) W !,"Error decoding ",IEN Q
"RTN","HMPYPAR",18,0)
 I '$D(OBJ("cpe.context.patient")) Q
"RTN","HMPYPAR",19,0)
 ;
"RTN","HMPYPAR",20,0)
 K OBJ("cpe.context.patient"),JSON
"RTN","HMPYPAR",21,0)
 D ENCODE^HMPJSON("OBJ","JSON","ERR")
"RTN","HMPYPAR",22,0)
 I $D(ERR) W !,"Error encoding ",IEN
"RTN","HMPYPAR",23,0)
 ;
"RTN","HMPYPAR",24,0)
 W !,"Updating ",^XTV(8989.5,IEN,0)
"RTN","HMPYPAR",25,0)
 S I=0 F  S I=$O(JSON(I)) Q:'I  S WP(I,0)=JSON(I)
"RTN","HMPYPAR",26,0)
 I $D(WP) D WP^DIE(8989.5,IEN_",",2,"","WP","ERR")
"RTN","HMPYPAR",27,0)
 I $D(DIERR) W !,"Save failed for WP: ",IEN,!
"RTN","HMPYPAR",28,0)
 D CLEAN^DILF
"RTN","HMPYPAR",29,0)
 Q
"RTN","HMPYPAR",30,0)
SHOWPAR ; Show values for parameters
"RTN","HMPYPAR",31,0)
 N PARAM,IEN
"RTN","HMPYPAR",32,0)
 S PARAM=$O(^XTV(8989.51,"B","HMP PARAMETERS",0))
"RTN","HMPYPAR",33,0)
 W !,"Param:",PARAM
"RTN","HMPYPAR",34,0)
 S IEN=0 F  S IEN=$O(^XTV(8989.5,IEN)) Q:'IEN  D
"RTN","HMPYPAR",35,0)
 . I $P(^XTV(8989.5,IEN,0),"^",2)'=PARAM Q
"RTN","HMPYPAR",36,0)
 . S INST=$P(^XTV(8989.5,IEN,0),"^",3)
"RTN","HMPYPAR",37,0)
 . I $P(INST,":",6)'="HMP USER PREF" Q
"RTN","HMPYPAR",38,0)
 . N JSON,OBJ,ERR,X
"RTN","HMPYPAR",39,0)
 . S I=0 F  S I=$O(^XTV(8989.5,IEN,2,I)) Q:'I  S JSON(I)=^XTV(8989.5,IEN,2,I,0)
"RTN","HMPYPAR",40,0)
 . D DECODE^HMPJSON("JSON","OBJ","ERR")
"RTN","HMPYPAR",41,0)
 . W !!,INST,"  ("_IEN_") --------------------"
"RTN","HMPYPAR",42,0)
 . S X="" F  S X=$O(OBJ(X)) Q:X=""  W !,X," = ",OBJ(X)
"RTN","HMPYPAR",43,0)
 Q
"RTN","HMPZ0218")
0^131^B5541697
"RTN","HMPZ0218",1,0)
HMPZ0218 ;AGILEX/hrubovcak - Clinical Procedures failing TIU patch quick fix ;Feb 18, 2015@14:29:52
"RTN","HMPZ0218",2,0)
 ;;2.0;HEALTH MANAGEMENT PLATFORM;**1**;18 February 2015;Build 53
"RTN","HMPZ0218",3,0)
 ;
"RTN","HMPZ0218",4,0)
 Q
"RTN","HMPZ0218",5,0)
 ;
"RTN","HMPZ0218",6,0)
 ; temporary fix for Clinical Procedures issue (User Story 5021)
"RTN","HMPZ0218",7,0)
DISABLE ;
"RTN","HMPZ0218",8,0)
 ;
"RTN","HMPZ0218",9,0)
 D BMES^XPDUTL("Disabling INDEX entries for Clinical Procedures "_$$NOW),MES^XPDUTL("routine: "_$T(+0))
"RTN","HMPZ0218",10,0)
 ;
"RTN","HMPZ0218",11,0)
 ; HMPARY - IEN array for INDEX
"RTN","HMPZ0218",12,0)
 ; HMPINDX - target INDEX entry
"RTN","HMPZ0218",13,0)
 N F,G,HMPARY,HMPINDX,I,J,Q,X,Y
"RTN","HMPZ0218",14,0)
 ;
"RTN","HMPZ0218",15,0)
 S Q=$C(34)
"RTN","HMPZ0218",16,0)
 F J=1:1 S HMPINDX=$P($T(INDXLST+J),";;",2,99) Q:HMPINDX=""  D  ; find INDEX file (#.11) entries
"RTN","HMPZ0218",17,0)
 .D MES^XPDUTL("looking for INDEX: "_HMPINDX)
"RTN","HMPZ0218",18,0)
 .N FL,I,NTRY,Y
"RTN","HMPZ0218",19,0)
 .S NTRY=0  ; INDEX enrty IEN
"RTN","HMPZ0218",20,0)
 .S FL=+$P(HMPINDX,U)  ; file #
"RTN","HMPZ0218",21,0)
 .S I=0 F  S I=$O(^DD("IX","B",FL,I)) Q:'I!(NTRY)  D  ; find entry and save it
"RTN","HMPZ0218",22,0)
 ..S Y=$G(^DD("IX",I,0)) S:$P(HMPINDX,U,1,3)=$P(Y,U,1,3) NTRY=I,HMPINDX(FL,I)=Y,HMPINDX(0)=$G(HMPINDX(0))+1
"RTN","HMPZ0218",23,0)
 ;
"RTN","HMPZ0218",24,0)
 I '($G(HMPINDX(0))=1) D  Q  ; must locate both entries, exit if not found
"RTN","HMPZ0218",25,0)
 .D BMES^XPDUTL("Unable to find INDEX file entries"),MES^XPDUTL("exiting routine "_$T(+0)_" "_$$NOW)
"RTN","HMPZ0218",26,0)
 ;
"RTN","HMPZ0218",27,0)
 S F=0 F  S F=$O(HMPINDX(F)) Q:'F  D
"RTN","HMPZ0218",28,0)
 .N GLB,ND,UPDT
"RTN","HMPZ0218",29,0)
 .S I=+$O(HMPINDX(F,0)) Q:'I
"RTN","HMPZ0218",30,0)
 .S GLB=$NA(^DD("IX",I,0)),Y=$G(@GLB) D BMES^XPDUTL("examining "_GLB),MES^XPDUTL("   "_Q_Y_Q)
"RTN","HMPZ0218",31,0)
 .S UPDT=0  ; updated flag, false if index not changed
"RTN","HMPZ0218",32,0)
 .F ND=1,2 D
"RTN","HMPZ0218",33,0)
 ..S Y=$G(^DD("IX",I,ND)),GLB=$NA(^(ND))
"RTN","HMPZ0218",34,0)
 ..D MES^XPDUTL("value found in "_GLB_" was: "),MES^XPDUTL("   "_Q_Y_Q)
"RTN","HMPZ0218",35,0)
 ..I $E(Y)'="Q" S UPDT=1,Y="Q  ;"_Y
"RTN","HMPZ0218",36,0)
 ..S:UPDT @GLB=Y
"RTN","HMPZ0218",37,0)
 ..D MES^XPDUTL($S(UPDT:"updated to "_Q_Y_Q,1:"* NOT CHANGED *"))
"RTN","HMPZ0218",38,0)
 ;
"RTN","HMPZ0218",39,0)
 ;
"RTN","HMPZ0218",40,0)
 D BMES^XPDUTL("INDEX entry completed "_$$NOW)
"RTN","HMPZ0218",41,0)
 ;
"RTN","HMPZ0218",42,0)
 Q
"RTN","HMPZ0218",43,0)
 ;
"RTN","HMPZ0218",44,0)
NOW() ; extrinsic variable, now in external format
"RTN","HMPZ0218",45,0)
 Q $$HTE^XLFDT($H)
"RTN","HMPZ0218",46,0)
 ;
"RTN","HMPZ0218",47,0)
INDXLST ; *S68 - disable of AEVT index on file 8925 removed US5074 
"RTN","HMPZ0218",48,0)
 ;;702^AVPR^Trigger updates to VPR^
"RTN","HMPZ0218",49,0)
 ;
"SEC","^DIC",800000,800000,0,"AUDIT")
@
"SEC","^DIC",800000,800000,0,"DD")
@
"SEC","^DIC",800000,800000,0,"DEL")
@
"SEC","^DIC",800000,800000,0,"LAYGO")
@
"SEC","^DIC",800000,800000,0,"RD")
@
"SEC","^DIC",800000,800000,0,"WR")
@
"SEC","^DIC",800000.1,800000.1,0,"AUDIT")
@
"SEC","^DIC",800000.1,800000.1,0,"DD")
@
"SEC","^DIC",800000.1,800000.1,0,"DEL")
@
"SEC","^DIC",800000.1,800000.1,0,"LAYGO")
@
"SEC","^DIC",800000.1,800000.1,0,"RD")
@
"SEC","^DIC",800000.1,800000.1,0,"WR")
@
"SEC","^DIC",800000.11,800000.11,0,"AUDIT")
@
"SEC","^DIC",800000.11,800000.11,0,"DD")
@
"SEC","^DIC",800000.11,800000.11,0,"DEL")
@
"SEC","^DIC",800000.11,800000.11,0,"LAYGO")
@
"SEC","^DIC",800000.11,800000.11,0,"RD")
@
"SEC","^DIC",800000.11,800000.11,0,"WR")
@
"SEC","^DIC",800000.2,800000.2,0,"AUDIT")
@
"SEC","^DIC",800000.2,800000.2,0,"DD")
@
"SEC","^DIC",800000.2,800000.2,0,"DEL")
@
"SEC","^DIC",800000.2,800000.2,0,"LAYGO")
@
"SEC","^DIC",800000.2,800000.2,0,"RD")
@
"SEC","^DIC",800000.2,800000.2,0,"WR")
@
"SEC","^DIC",800000.21,800000.21,0,"AUDIT")
@
"SEC","^DIC",800000.21,800000.21,0,"DD")
@
"SEC","^DIC",800000.21,800000.21,0,"DEL")
@
"SEC","^DIC",800000.21,800000.21,0,"LAYGO")
@
"SEC","^DIC",800000.21,800000.21,0,"RD")
@
"SEC","^DIC",800000.21,800000.21,0,"WR")
@
"SEC","^DIC",800000.22,800000.22,0,"AUDIT")
@
"SEC","^DIC",800000.22,800000.22,0,"DD")
@
"SEC","^DIC",800000.22,800000.22,0,"DEL")
@
"SEC","^DIC",800000.22,800000.22,0,"LAYGO")
@
"SEC","^DIC",800000.22,800000.22,0,"RD")
@
"SEC","^DIC",800000.22,800000.22,0,"WR")
@
"SEC","^DIC",800001,800001,0,"AUDIT")
@
"SEC","^DIC",800001,800001,0,"DD")
@
"SEC","^DIC",800001,800001,0,"DEL")
@
"SEC","^DIC",800001,800001,0,"LAYGO")
@
"SEC","^DIC",800001,800001,0,"RD")
@
"SEC","^DIC",800001,800001,0,"WR")
@
"SEC","^DIC",800001.2,800001.2,0,"AUDIT")
@
"SEC","^DIC",800001.2,800001.2,0,"DD")
@
"SEC","^DIC",800001.2,800001.2,0,"DEL")
@
"SEC","^DIC",800001.2,800001.2,0,"LAYGO")
@
"SEC","^DIC",800001.2,800001.2,0,"RD")
@
"SEC","^DIC",800001.2,800001.2,0,"WR")
@
"SEC","^DIC",800001.5,800001.5,0,"AUDIT")
@
"SEC","^DIC",800001.5,800001.5,0,"DD")
@
"SEC","^DIC",800001.5,800001.5,0,"DEL")
@
"SEC","^DIC",800001.5,800001.5,0,"LAYGO")
@
"SEC","^DIC",800001.5,800001.5,0,"RD")
@
"SEC","^DIC",800001.5,800001.5,0,"WR")
@
"VER")
8.0^22.0
"^DD",800000,800000,0)
FIELD^^.04^7
"^DD",800000,800000,0,"IX","B",800000,.01)

"^DD",800000,800000,0,"NM","HMP SUBSCRIPTION")

"^DD",800000,800000,0,"VRPK")
HMP
"^DD",800000,800000,.01,0)
SERVER^RF^^0;1^K:$L(X)>64!($L(X)<1)!'(X'?1P.E) X
"^DD",800000,800000,.01,1,0)
^.1^^-1
"^DD",800000,800000,.01,1,1,0)
800000^B
"^DD",800000,800000,.01,1,1,1)
S ^HMP(800000,"B",$E(X,1,64),DA)=""
"^DD",800000,800000,.01,1,1,2)
K ^HMP(800000,"B",$E(X,1,64),DA)
"^DD",800000,800000,.01,3)
Answer must be 1-64 characters in length.
"^DD",800000,800000,.01,21,0)
^.001^1^1^3140212^^^^
"^DD",800000,800000,.01,21,1,0)
This is the name of the client system that is subscribing to data updates.
"^DD",800000,800000,.01,"DT")
3141028
"^DD",800000,800000,.02,0)
LASTUPDATE^F^^0;2^K:$L(X)>100!($L(X)<3) X
"^DD",800000,800000,.02,3)
Answer must be 3-100 characters in length. (Do not modified)
"^DD",800000,800000,.02,21,0)
^^3^3^3110908^
"^DD",800000,800000,.02,21,1,0)
This field holds a flag, indicating if this URL should be notified via the
"^DD",800000,800000,.02,21,2,0)
nightly scheduled option HMP APPOINTMENTS of the list of patients expected
"^DD",800000,800000,.02,21,3,0)
to be seen tomorrow.
"^DD",800000,800000,.02,"DT")
3141028
"^DD",800000,800000,.03,0)
OPERATION DATA^S^0:UNSUBCRIBED;1:SUBSCRIBED;2:INITIALIZED;^0;3^Q
"^DD",800000,800000,.03,3)
Enter YES if the hmp server has received a sync of operational data (Do Not Modified)
"^DD",800000,800000,.03,21,0)
^^2^2^3110908^
"^DD",800000,800000,.03,21,1,0)
This field holds a flag, indicating if this URL should be notified via http
"^DD",800000,800000,.03,21,2,0)
when a patient is admitted.
"^DD",800000,800000,.03,"DT")
3141028
"^DD",800000,800000,.04,0)
REPEAT POLLS^NJ8,0^^0;4^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",800000,800000,.04,3)
Type a number between 0 and 99999999, 0 decimal digits.
"^DD",800000,800000,.04,21,0)
^^2^2^3140404^
"^DD",800000,800000,.04,21,1,0)
This tracks the number of times the same "last update" value has been
"^DD",800000,800000,.04,21,2,0)
repeated.  A high repeat may be normal if data are not changing.
"^DD",800000,800000,.04,"DT")
3141028
"^DD",800000,800000,.1,0)
URL^F^^.1;1^K:$L(X)>250!($L(X)<1) X
"^DD",800000,800000,.1,3)
Answer must be 1-250 characters in length.
"^DD",800000,800000,.1,21,0)
^^1^1^3110706^
"^DD",800000,800000,.1,21,1,0)
This is the fully specified URL to call when updates are available.
"^DD",800000,800000,.1,"DT")
3141028
"^DD",800000,800000,1,0)
PATIENT^800000.01P^^1;0
"^DD",800000,800000,1,21,0)
^.001^1^1^3140212^^^^
"^DD",800000,800000,1,21,1,0)
This is a patient that will be monitored for new data and updates.
"^DD",800000,800000,2,0)
ROSTER^800000.02P^^2;0
"^DD",800000,800000,2,21,0)
^.001^1^1^3130417^^^^
"^DD",800000,800000,2,21,1,0)
This is a roster that will be monitored for new patients and updates.
"^DD",800000,800000,2,"DT")
3130417
"^DD",800000,800000.01,0)
PATIENT SUB-FIELD^^3^3
"^DD",800000,800000.01,0,"NM","PATIENT")

"^DD",800000,800000.01,0,"UP")
800000
"^DD",800000,800000.01,.01,0)
PATIENT NAME^MP2'X^DPT(^0;1^S DINUM=X
"^DD",800000,800000.01,.01,1,0)
^.1^^0
"^DD",800000,800000.01,.01,3)
Enter the name of a patient to be tracked.
"^DD",800000,800000.01,.01,21,0)
^.001^1^1^3140212^^
"^DD",800000,800000.01,.01,21,1,0)
This is the name of the patient being monitored for new data.
"^DD",800000,800000.01,.01,"DT")
3140226
"^DD",800000,800000.01,2,0)
STATUS^S^0:UNINITIALIZED;1:INITIALIZING;2:INITIALIZED;^0;2^Q
"^DD",800000,800000.01,2,3)
Tracks the status of a patient sync. (Do Not Modify)
"^DD",800000,800000.01,2,21,0)
^^4^4^3140521^
"^DD",800000,800000.01,2,21,1,0)
This field tracks the initialization progress of the patient.  When a 
"^DD",800000,800000.01,2,21,2,0)
patient is initially subscribed, they are added to this multiple.  The 
"^DD",800000,800000.01,2,21,3,0)
statis is "1" when the extracts start and "2" when they finish.  At that 
"^DD",800000,800000.01,2,21,4,0)
point, freshness updates are moved into the stream.
"^DD",800000,800000.01,2,"DT")
3140521
"^DD",800000,800000.01,3,0)
STATUS TIME^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",800000,800000.01,3,3)
Enter the time the status changed.
"^DD",800000,800000.01,3,21,0)
^^1^1^3140521^
"^DD",800000,800000.01,3,21,1,0)
This is the time of the last change in extract status.
"^DD",800000,800000.01,3,"DT")
3140521
"^DD",800000,800000.02,0)
ROSTER SUB-FIELD^^2^2
"^DD",800000,800000.02,0,"NM","ROSTER")

"^DD",800000,800000.02,0,"UP")
800000
"^DD",800000,800000.02,.01,0)
NAME^MP800001.2'X^HMPROSTR(800001.2,^0;1^S DINUM=X
"^DD",800000,800000.02,.01,1,0)
^.1^^0
"^DD",800000,800000.02,.01,3)
Enter the name of a roster to be tracked.
"^DD",800000,800000.02,.01,21,0)
^.001^1^1^3130417^^
"^DD",800000,800000.02,.01,21,1,0)
This is the name of the roster being monitored for new patients.
"^DD",800000,800000.02,.01,"DT")
3130417
"^DD",800000,800000.02,2,0)
ON^S^1:YES;0:NO;^0;2^Q
"^DD",800000,800000.02,2,3)
Enter YES to turn on data tracking for this roster.
"^DD",800000,800000.02,2,21,0)
^.001^3^3^3130417^^
"^DD",800000,800000.02,2,21,1,0)
This field turns on the Data Monitor for this roster and client system.
"^DD",800000,800000.02,2,21,2,0)
If ON=true, a new snapshot of this roster will be sent to the client
"^DD",800000,800000.02,2,21,3,0)
when new data updates are requested.
"^DD",800000,800000.02,2,"DT")
3130417
"^DD",800000.1,800000.1,0)
FIELD^^1^4
"^DD",800000.1,800000.1,0,"IX","B",800000.1,.01)

"^DD",800000.1,800000.1,0,"NM","HMP PATIENT OBJECT")

"^DD",800000.1,800000.1,0,"VRPK")
HMP
"^DD",800000.1,800000.1,.01,0)
UID^RF^^0;1^K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",800000.1,800000.1,.01,1,0)
^.1
"^DD",800000.1,800000.1,.01,1,1,0)
800000.1^B
"^DD",800000.1,800000.1,.01,1,1,1)
S ^HMP(800000.1,"B",$E(X,1,63),DA)=""
"^DD",800000.1,800000.1,.01,1,1,2)
K ^HMP(800000.1,"B",$E(X,1,63),DA)
"^DD",800000.1,800000.1,.01,3)
Answer must be 3-63 characters in length.
"^DD",800000.1,800000.1,.01,21,0)
^^1^1^3121129^
"^DD",800000.1,800000.1,.01,21,1,0)
The fully specified Universal ID string for this object.
"^DD",800000.1,800000.1,.01,23,0)
^^1^1^3121129^
"^DD",800000.1,800000.1,.01,23,1,0)
urn:va:{systemId}:{DFN}:{collection}:{ien}
"^DD",800000.1,800000.1,.01,"DT")
3121129
"^DD",800000.1,800000.1,.02,0)
PATIENT^RP2'^DPT(^0;2^Q
"^DD",800000.1,800000.1,.02,3)
Enter the patient that owns this object.
"^DD",800000.1,800000.1,.02,21,0)
^^1^1^3121129^
"^DD",800000.1,800000.1,.02,21,1,0)
Patient file #2 ien
"^DD",800000.1,800000.1,.02,"DT")
3121129
"^DD",800000.1,800000.1,.03,0)
COLLECTION^F^^0;3^K:$L(X)>30!($L(X)<3) X
"^DD",800000.1,800000.1,.03,3)
Answer must be 3-30 characters in length.
"^DD",800000.1,800000.1,.03,21,0)
^^1^1^3121129^
"^DD",800000.1,800000.1,.03,21,1,0)
The name of the type or kind of data this object belongs to.
"^DD",800000.1,800000.1,.03,"DT")
3121129
"^DD",800000.1,800000.1,1,0)
DATA^800000.101^^1;0
"^DD",800000.1,800000.101,0)
DATA SUB-FIELD^^.01^1
"^DD",800000.1,800000.101,0,"NM","DATA")

"^DD",800000.1,800000.101,0,"UP")
800000.1
"^DD",800000.1,800000.101,.01,0)
DATA^Wx^^0;1^Q
"^DD",800000.1,800000.101,.01,21,0)
^^1^1^3121129^
"^DD",800000.1,800000.101,.01,21,1,0)
JSON data object
"^DD",800000.1,800000.101,.01,"DT")
3121129
"^DD",800000.11,800000.11,0)
FIELD^^1^3
"^DD",800000.11,800000.11,0,"IX","ACNT",800000.11,.03)

"^DD",800000.11,800000.11,0,"IX","B",800000.11,.01)

"^DD",800000.11,800000.11,0,"IX","C",800000.11,.03)

"^DD",800000.11,800000.11,0,"NM","HMP OBJECT")

"^DD",800000.11,800000.11,0,"VRPK")
HMP
"^DD",800000.11,800000.11,.01,0)
UID^RF^^0;1^K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",800000.11,800000.11,.01,1,0)
^.1
"^DD",800000.11,800000.11,.01,1,1,0)
800000.11^B
"^DD",800000.11,800000.11,.01,1,1,1)
S ^HMP(800000.11,"B",$E(X,1,63),DA)=""
"^DD",800000.11,800000.11,.01,1,1,2)
K ^HMP(800000.11,"B",$E(X,1,63),DA)
"^DD",800000.11,800000.11,.01,3)
Answer must be 3-63 characters in length.
"^DD",800000.11,800000.11,.01,21,0)
^^1^1^3121129^
"^DD",800000.11,800000.11,.01,21,1,0)
The fully specified Universal ID string for this object.
"^DD",800000.11,800000.11,.01,23,0)
^^1^1^3121129^
"^DD",800000.11,800000.11,.01,23,1,0)
urn:va:{collection}:{systemId}:{ien}
"^DD",800000.11,800000.11,.01,"DT")
3121129
"^DD",800000.11,800000.11,.03,0)
COLLECTION^F^^0;3^K:$L(X)>30!($L(X)<3) X
"^DD",800000.11,800000.11,.03,1,0)
^.1
"^DD",800000.11,800000.11,.03,1,1,0)
800000.11^C
"^DD",800000.11,800000.11,.03,1,1,1)
S ^HMP(800000.11,"C",$E(X,1,30),DA)=""
"^DD",800000.11,800000.11,.03,1,1,2)
K ^HMP(800000.11,"C",$E(X,1,30),DA)
"^DD",800000.11,800000.11,.03,1,1,"DT")
3121129
"^DD",800000.11,800000.11,.03,1,2,0)
800000.11^ACNT^MUMPS
"^DD",800000.11,800000.11,.03,1,2,1)
S ^HMP(800000.11,"ACNT",$E(X,1,30))=$G(^HMP(800000.11,"ACNT",$E(X,1,30)))+1
"^DD",800000.11,800000.11,.03,1,2,2)
S ^HMP(800000.11,"ACNT",$E(X,1,30))=$G(^HMP(800000.11,"ACNT",$E(X,1,30)))-1
"^DD",800000.11,800000.11,.03,1,2,"%D",0)
^^1^1^3140503^
"^DD",800000.11,800000.11,.03,1,2,"%D",1,0)
Maintain a count of the number of items in each collection.
"^DD",800000.11,800000.11,.03,1,2,"DT")
3140503
"^DD",800000.11,800000.11,.03,3)
Answer must be 3-30 characters in length.
"^DD",800000.11,800000.11,.03,21,0)
^^1^1^3121129^
"^DD",800000.11,800000.11,.03,21,1,0)
The name of the type or kind of data this object belongs to.
"^DD",800000.11,800000.11,.03,"DT")
3140503
"^DD",800000.11,800000.11,1,0)
DATA^800000.111^^1;0
"^DD",800000.11,800000.111,0)
DATA SUB-FIELD^^.01^1
"^DD",800000.11,800000.111,0,"NM","DATA")

"^DD",800000.11,800000.111,0,"UP")
800000.11
"^DD",800000.11,800000.111,.01,0)
DATA^Wx^^0;1^Q
"^DD",800000.11,800000.111,.01,21,0)
^^1^1^3121129^
"^DD",800000.11,800000.111,.01,21,1,0)
JSON data object
"^DD",800000.11,800000.111,.01,"DT")
3121129
"^DD",800000.2,800000.2,0)
FIELD^^.3^11
"^DD",800000.2,800000.2,0,"IX","ADD",800000.2,.03)

"^DD",800000.2,800000.2,0,"IX","AREFRESH",800000.2,.08)

"^DD",800000.2,800000.2,0,"IX","B",800000.2,.01)

"^DD",800000.2,800000.2,0,"NM","HMP LIST")

"^DD",800000.2,800000.2,0,"VRPK")
HMP
"^DD",800000.2,800000.2,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",800000.2,800000.2,.01,1,0)
^.1
"^DD",800000.2,800000.2,.01,1,1,0)
800000.2^B
"^DD",800000.2,800000.2,.01,1,1,1)
S ^HMPD(800000.2,"B",$E(X,1,30),DA)=""
"^DD",800000.2,800000.2,.01,1,1,2)
K ^HMPD(800000.2,"B",$E(X,1,30),DA)
"^DD",800000.2,800000.2,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",800000.2,800000.2,.02,0)
TYPE^S^0:STATIC;1:DYNAMIC;^0;2^Q
"^DD",800000.2,800000.2,.02,"DT")
3121011
"^DD",800000.2,800000.2,.03,0)
DD NUMBER^NJ14,5^^0;3^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."6N.N) X
"^DD",800000.2,800000.2,.03,1,0)
^.1
"^DD",800000.2,800000.2,.03,1,1,0)
800000.2^ADD
"^DD",800000.2,800000.2,.03,1,1,1)
S ^HMPD(800000.2,"ADD",$E(X,1,30),DA)=""
"^DD",800000.2,800000.2,.03,1,1,2)
K ^HMPD(800000.2,"ADD",$E(X,1,30),DA)
"^DD",800000.2,800000.2,.03,1,1,"DT")
3121022
"^DD",800000.2,800000.2,.03,3)
Type a number between 1 and 99999999, 5 decimal digits.
"^DD",800000.2,800000.2,.03,"DT")
3121022
"^DD",800000.2,800000.2,.04,0)
DOMAIN^RP800000.21'^HMPD(800000.21,^0;4^Q
"^DD",800000.2,800000.2,.04,3)

"^DD",800000.2,800000.2,.04,"DT")
3121031
"^DD",800000.2,800000.2,.05,0)
ATTRIBUTE^RP800000.22'^HMPD(800000.22,^0;5^Q
"^DD",800000.2,800000.2,.05,3)

"^DD",800000.2,800000.2,.05,"DT")
3121107
"^DD",800000.2,800000.2,.08,0)
REFRESH THRESHOLD^NJ4,0^^0;8^K:+X'=X!(X>1440)!(X<0)!(X?.E1"."1N.N) X
"^DD",800000.2,800000.2,.08,1,0)
^.1
"^DD",800000.2,800000.2,.08,1,1,0)
800000.2^AREFRESH
"^DD",800000.2,800000.2,.08,1,1,1)
S ^HMPD(800000.2,"AREFRESH",$E(X,1,30),DA)=""
"^DD",800000.2,800000.2,.08,1,1,2)
K ^HMPD(800000.2,"AREFRESH",$E(X,1,30),DA)
"^DD",800000.2,800000.2,.08,1,1,"DT")
3121031
"^DD",800000.2,800000.2,.08,3)
Type a number between 0 and 1440, 0 decimal digits.
"^DD",800000.2,800000.2,.08,"DT")
3121031
"^DD",800000.2,800000.2,.09,0)
NEXT REFRESH^D^^0;9^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",800000.2,800000.2,.09,"DT")
3121101
"^DD",800000.2,800000.2,.11,0)
GENERATION CODE^K^^.11;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",800000.2,800000.2,.11,3)
This is Standard MUMPS code.
"^DD",800000.2,800000.2,.11,9)
@
"^DD",800000.2,800000.2,.11,"DT")
3121011
"^DD",800000.2,800000.2,.2,0)
COLUMNS^800000.202^^2;0
"^DD",800000.2,800000.2,.3,0)
DESCRIPTION^800000.203^^3;0
"^DD",800000.2,800000.2,.9,0)
DATA^800000.209^^9;0
"^DD",800000.2,800000.202,0)
COLUMNS SUB-FIELD^^.02^2
"^DD",800000.2,800000.202,0,"IX","AORD",800000.202,.02)

"^DD",800000.2,800000.202,0,"IX","B",800000.202,.01)

"^DD",800000.2,800000.202,0,"NM","COLUMNS")

"^DD",800000.2,800000.202,0,"UP")
800000.2
"^DD",800000.2,800000.202,.01,0)
COLUMN NAME^MF^^0;1^K:$L(X)>30!($L(X)<3)!'(X?1UL.29ULN) X
"^DD",800000.2,800000.202,.01,1,0)
^.1
"^DD",800000.2,800000.202,.01,1,1,0)
800000.202^B
"^DD",800000.2,800000.202,.01,1,1,1)
S ^HMPD(800000.2,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",800000.2,800000.202,.01,1,1,2)
K ^HMPD(800000.2,DA(1),2,"B",$E(X,1,30),DA)
"^DD",800000.2,800000.202,.01,3)
Answer must be 3-30 characters in length.
"^DD",800000.2,800000.202,.01,"DT")
3141015
"^DD",800000.2,800000.202,.02,0)
ORDER^RNJ2,0^^0;2^K:+X'=X!(X>99)!(X<3)!(X?.E1"."1N.N) X
"^DD",800000.2,800000.202,.02,1,0)
^.1
"^DD",800000.2,800000.202,.02,1,1,0)
800000.202^AORD
"^DD",800000.2,800000.202,.02,1,1,1)
S ^HMPD(800000.2,DA(1),2,"AORD",$E(X,1,30),DA)=""
"^DD",800000.2,800000.202,.02,1,1,2)
K ^HMPD(800000.2,DA(1),2,"AORD",$E(X,1,30),DA)
"^DD",800000.2,800000.202,.02,1,1,"DT")
3121031
"^DD",800000.2,800000.202,.02,3)
Type a number between 3 and 99, 0 decimal digits.
"^DD",800000.2,800000.202,.02,"DT")
3121031
"^DD",800000.2,800000.203,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",800000.2,800000.203,0,"NM","DESCRIPTION")

"^DD",800000.2,800000.203,0,"UP")
800000.2
"^DD",800000.2,800000.203,.01,0)
DESCRIPTION^WLx^^0;1^Q
"^DD",800000.2,800000.203,.01,"DT")
3121031
"^DD",800000.2,800000.209,0)
DATA SUB-FIELD^^.01^1
"^DD",800000.2,800000.209,0,"NM","DATA")

"^DD",800000.2,800000.209,0,"UP")
800000.2
"^DD",800000.2,800000.209,.01,0)
DATA^WLx^^0;1^Q
"^DD",800000.2,800000.209,.01,"DT")
3121030
"^DD",800000.21,800000.21,0)
FIELD^^.01^3
"^DD",800000.21,800000.21,0,"IX","B",800000.21,.01)

"^DD",800000.21,800000.21,0,"NM","HMP LIST DOMAIN")

"^DD",800000.21,800000.21,0,"PT",800000.2,.04)

"^DD",800000.21,800000.21,0,"VRPK")
HMP
"^DD",800000.21,800000.21,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",800000.21,800000.21,.01,1,0)
^.1
"^DD",800000.21,800000.21,.01,1,1,0)
800000.21^B
"^DD",800000.21,800000.21,.01,1,1,1)
S ^HMPD(800000.21,"B",$E(X,1,30),DA)=""
"^DD",800000.21,800000.21,.01,1,1,2)
K ^HMPD(800000.21,"B",$E(X,1,30),DA)
"^DD",800000.21,800000.21,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",800000.21,800000.21,.02,0)
ABBREVIATION^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",800000.21,800000.21,.02,3)
Answer must be 1-10 characters in length.
"^DD",800000.21,800000.21,.02,"DT")
3121031
"^DD",800000.21,800000.21,.03,0)
DISPLAY NAME^F^^0;3^K:$L(X)>50!($L(X)<1) X
"^DD",800000.21,800000.21,.03,3)
Answer must be 1-50 characters in length.
"^DD",800000.21,800000.21,.03,"DT")
3121031
"^DD",800000.22,800000.22,0)
FIELD^^.01^3
"^DD",800000.22,800000.22,0,"IX","B",800000.22,.01)

"^DD",800000.22,800000.22,0,"NM","HMP LIST ATTRIBUTE")

"^DD",800000.22,800000.22,0,"PT",800000.2,.05)

"^DD",800000.22,800000.22,0,"VRPK")
HMP
"^DD",800000.22,800000.22,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",800000.22,800000.22,.01,1,0)
^.1
"^DD",800000.22,800000.22,.01,1,1,0)
800000.22^B
"^DD",800000.22,800000.22,.01,1,1,1)
S ^HMPD(800000.22,"B",$E(X,1,30),DA)=""
"^DD",800000.22,800000.22,.01,1,1,2)
K ^HMPD(800000.22,"B",$E(X,1,30),DA)
"^DD",800000.22,800000.22,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",800000.22,800000.22,.02,0)
ABBREVIATION^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",800000.22,800000.22,.02,3)
Answer must be 1-10 characters in length.
"^DD",800000.22,800000.22,.02,"DT")
3121031
"^DD",800000.22,800000.22,.03,0)
DISPLAY NAME^F^^0;3^K:$L(X)>50!($L(X)<1) X
"^DD",800000.22,800000.22,.03,3)
Answer must be 1-50 characters in length.
"^DD",800000.22,800000.22,.03,"DT")
3121031
"^DD",800001,800001,0)
FIELD^^.03^4
"^DD",800001,800001,0,"DDA")
N
"^DD",800001,800001,0,"IX","B",800001,.01)

"^DD",800001,800001,0,"IX","C",800001,.03)

"^DD",800001,800001,0,"NM","HMP PANEL")

"^DD",800001,800001,0,"PT",800001.21,.02)

"^DD",800001,800001,0,"VRPK")
HMP
"^DD",800001,800001,.01,0)
NAME^R*P810.4'^PXRM(810.4,^0;1^S DIC("S")="I $P(^(0),U,3)=3" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",800001,800001,.01,1,0)
^.1
"^DD",800001,800001,.01,1,1,0)
800001^B
"^DD",800001,800001,.01,1,1,1)
S ^HMPPANEL("B",$E(X,1,30),DA)=""
"^DD",800001,800001,.01,1,1,2)
K ^HMPPANEL("B",$E(X,1,30),DA)
"^DD",800001,800001,.01,3)

"^DD",800001,800001,.01,12)
Only select RULE SET types
"^DD",800001,800001,.01,12.1)
S DIC("S")="I $P(^(0),U,3)=3"
"^DD",800001,800001,.01,"DT")
3110629
"^DD",800001,800001,.02,0)
DISPLAY NAME^RF^^0;2^K:$L(X)>50!($L(X)<3) X
"^DD",800001,800001,.02,3)
Answer must be 3-50 characters in length.
"^DD",800001,800001,.02,"DT")
3110630
"^DD",800001,800001,.03,0)
PATIENT LIST NAME^F^^0;3^K:$L(X)>40!($L(X)<3) X
"^DD",800001,800001,.03,1,0)
^.1
"^DD",800001,800001,.03,1,1,0)
800001^C
"^DD",800001,800001,.03,1,1,1)
S ^HMPPANEL("C",$E(X,1,30),DA)=""
"^DD",800001,800001,.03,1,1,2)
K ^HMPPANEL("C",$E(X,1,30),DA)
"^DD",800001,800001,.03,1,1,"DT")
3111006
"^DD",800001,800001,.03,3)
Answer must be 3-40 characters in length.
"^DD",800001,800001,.03,"DT")
3111006
"^DD",800001,800001,5,0)
ORDER DIALOGS^800001.05P^^ORDER DIALOGS;0
"^DD",800001,800001.05,0)
ORDER DIALOGS SUB-FIELD^^.01^1
"^DD",800001,800001.05,0,"IX","B",800001.05,.01)

"^DD",800001,800001.05,0,"NM","ORDER DIALOGS")

"^DD",800001,800001.05,0,"UP")
800001
"^DD",800001,800001.05,.01,0)
ORDER DIALOGS^MP101.41'^ORD(101.41,^0;1^Q
"^DD",800001,800001.05,.01,1,0)
^.1
"^DD",800001,800001.05,.01,1,1,0)
800001.05^B
"^DD",800001,800001.05,.01,1,1,1)
S ^HMPPANEL(DA(1),"ORDER DIALOGS","B",$E(X,1,30),DA)=""
"^DD",800001,800001.05,.01,1,1,2)
K ^HMPPANEL(DA(1),"ORDER DIALOGS","B",$E(X,1,30),DA)
"^DD",800001,800001.05,.01,"DT")
3110629
"^DD",800001.2,800001.2,0)
FIELD^^3^10
"^DD",800001.2,800001.2,0,"IX","AB",800001.23,.01)

"^DD",800001.2,800001.2,0,"IX","AC",800001.2,.04)

"^DD",800001.2,800001.2,0,"IX","AD",800001.21,.02)

"^DD",800001.2,800001.2,0,"IX","ATS",800001.2,99)

"^DD",800001.2,800001.2,0,"IX","B",800001.2,.01)

"^DD",800001.2,800001.2,0,"NM","HMP ROSTER")

"^DD",800001.2,800001.2,0,"PT",800000.02,.01)

"^DD",800001.2,800001.2,0,"PT",800001.21,.02)

"^DD",800001.2,800001.2,0,"VRPK")
HMP
"^DD",800001.2,800001.2,.01,0)
NAME^RF^^0;1^K:$L(X)>104!($L(X)<3)!'(X'?1P.E) X
"^DD",800001.2,800001.2,.01,1,0)
^.1
"^DD",800001.2,800001.2,.01,1,1,0)
800001.2^B
"^DD",800001.2,800001.2,.01,1,1,1)
S ^HMPROSTR(800001.2,"B",$E(X,1,30),DA)=""
"^DD",800001.2,800001.2,.01,1,1,2)
K ^HMPROSTR(800001.2,"B",$E(X,1,30),DA)
"^DD",800001.2,800001.2,.01,3)
Answer must be 3-104 characters in length.
"^DD",800001.2,800001.2,.01,"DT")
3130220
"^DD",800001.2,800001.2,.02,0)
DISPLAY NAME^F^^0;2^K:$L(X)>45!($L(X)<3) X
"^DD",800001.2,800001.2,.02,3)
Answer must be 3-45 characters in length.
"^DD",800001.2,800001.2,.02,"DT")
3110830
"^DD",800001.2,800001.2,.03,0)
DISABLE^S^1:YES;^0;3^Q
"^DD",800001.2,800001.2,.03,3)
ENTER A 1 OR YES TO DISABLE THIS ROSTER.
"^DD",800001.2,800001.2,.03,"DT")
3110830
"^DD",800001.2,800001.2,.04,0)
OWNER^P200'^VA(200,^0;4^Q
"^DD",800001.2,800001.2,.04,1,0)
^.1
"^DD",800001.2,800001.2,.04,1,1,0)
800001.2^AC
"^DD",800001.2,800001.2,.04,1,1,1)
S ^HMPROSTR(800001.2,"AC",$E(X,1,30),DA)=""
"^DD",800001.2,800001.2,.04,1,1,2)
K ^HMPROSTR(800001.2,"AC",$E(X,1,30),DA)
"^DD",800001.2,800001.2,.04,1,1,"%D",0)
^^1^1^3120105^
"^DD",800001.2,800001.2,.04,1,1,"%D",1,0)
Index all rosters by owner.
"^DD",800001.2,800001.2,.04,1,1,"DT")
3120105
"^DD",800001.2,800001.2,.04,3)
ENTER THE OWNER OF THIS ROSTER
"^DD",800001.2,800001.2,.04,"DT")
3120105
"^DD",800001.2,800001.2,.05,0)
TYPE^RS^PU:PUBLIC;PR:PRIVATE;^0;5^Q
"^DD",800001.2,800001.2,.05,"DT")
3111115
"^DD",800001.2,800001.2,.06,0)
PATIENT LIST NAME^F^^0;6^K:$L(X)>40!($L(X)<3) X
"^DD",800001.2,800001.2,.06,3)
Answer must be 3-40 characters in length.
"^DD",800001.2,800001.2,.06,"DT")
3120120
"^DD",800001.2,800001.2,1,0)
SOURCES^800001.21^^1;0
"^DD",800001.2,800001.2,2,0)
SPECIAL HANDLING^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",800001.2,800001.2,2,3)
This is Standard MUMPS code.
"^DD",800001.2,800001.2,2,9)
@
"^DD",800001.2,800001.2,2,"DT")
3120103
"^DD",800001.2,800001.2,3,0)
PATIENT^800001.23P^^4;0
"^DD",800001.2,800001.2,99,0)
TIMESTAMP^D^^2;1^S %DT="ESTXR" D ^%DT S X=Y K:3110830.0839>X X
"^DD",800001.2,800001.2,99,1,0)
^.1
"^DD",800001.2,800001.2,99,1,1,0)
800001.2^ATS
"^DD",800001.2,800001.2,99,1,1,1)
S ^HMPROSTR(800001.2,"ATS",$E(X,1,30),DA)=""
"^DD",800001.2,800001.2,99,1,1,2)
K ^HMPROSTR(800001.2,"ATS",$E(X,1,30),DA)
"^DD",800001.2,800001.2,99,1,1,"DT")
3110831
"^DD",800001.2,800001.2,99,3)
Type a date not earlier than AUG 30, 2011@08:39.
"^DD",800001.2,800001.2,99,"DT")
3110831
"^DD",800001.2,800001.21,0)
SOURCES SUB-FIELD^^.05^5
"^DD",800001.2,800001.21,0,"IX","AS",800001.21,.01)

"^DD",800001.2,800001.21,0,"IX","B",800001.21,.01)

"^DD",800001.2,800001.21,0,"NM","SOURCES")

"^DD",800001.2,800001.21,0,"UP")
800001.2
"^DD",800001.2,800001.21,.01,0)
SEQUENCE^MNJ8,0^^0;1^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1.N) X
"^DD",800001.2,800001.21,.01,1,0)
^.1
"^DD",800001.2,800001.21,.01,1,1,0)
800001.21^B
"^DD",800001.2,800001.21,.01,1,1,1)
S ^HMPROSTR(800001.2,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",800001.2,800001.21,.01,1,1,2)
K ^HMPROSTR(800001.2,DA(1),1,"B",$E(X,1,30),DA)
"^DD",800001.2,800001.21,.01,1,2,0)
800001.21^AS
"^DD",800001.2,800001.21,.01,1,2,1)
S ^HMPROSTR(800001.2,DA(1),1,"AS",$E(X,1,30),DA)=""
"^DD",800001.2,800001.21,.01,1,2,2)
K ^HMPROSTR(800001.2,DA(1),1,"AS",$E(X,1,30),DA)
"^DD",800001.2,800001.21,.01,1,2,"DT")
3110901
"^DD",800001.2,800001.21,.01,3)
Type a number between 1 and 99999999, 0 decimal digits.
"^DD",800001.2,800001.21,.01,"DT")
3110901
"^DD",800001.2,800001.21,.02,0)
SOURCE^RV^^0;2^Q
"^DD",800001.2,800001.21,.02,1,0)
^.1
"^DD",800001.2,800001.21,.02,1,1,0)
800001.2^AD
"^DD",800001.2,800001.21,.02,1,1,1)
S ^HMPROSTR(800001.2,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",800001.2,800001.21,.02,1,1,2)
K ^HMPROSTR(800001.2,"AD",$E(X,1,30),DA(1),DA)
"^DD",800001.2,800001.21,.02,1,1,"DT")
3131126
"^DD",800001.2,800001.21,.02,3)
ENTER FILE WHICH WILL BE THE SOURCE FOR THIS ROSTER
"^DD",800001.2,800001.21,.02,"DT")
3131126
"^DD",800001.2,800001.21,.02,"V",0)
^.12P^12^10
"^DD",800001.2,800001.21,.02,"V",1,0)
2^PATIENT^1^PAT^n^n
"^DD",800001.2,800001.21,.02,"V",1,1)

"^DD",800001.2,800001.21,.02,"V",1,2)

"^DD",800001.2,800001.21,.02,"V",2,0)
42^WARD LOCATION^2^WARD^n^n
"^DD",800001.2,800001.21,.02,"V",2,1)

"^DD",800001.2,800001.21,.02,"V",2,2)

"^DD",800001.2,800001.21,.02,"V",3,0)
44^CLINIC^3^CL^n^n
"^DD",800001.2,800001.21,.02,"V",3,1)

"^DD",800001.2,800001.21,.02,"V",3,2)

"^DD",800001.2,800001.21,.02,"V",5,0)
200^PROVIDER^5^PROV^n^n
"^DD",800001.2,800001.21,.02,"V",5,1)

"^DD",800001.2,800001.21,.02,"V",5,2)

"^DD",800001.2,800001.21,.02,"V",6,0)
100.21^CPRS^6^CPRS^n^n
"^DD",800001.2,800001.21,.02,"V",6,1)

"^DD",800001.2,800001.21,.02,"V",6,2)

"^DD",800001.2,800001.21,.02,"V",7,0)
404.51^PCMM TEAM^7^PCMM^n^n
"^DD",800001.2,800001.21,.02,"V",7,1)

"^DD",800001.2,800001.21,.02,"V",7,2)

"^DD",800001.2,800001.21,.02,"V",8,0)
810.4^REMINDER'S LIST RULE FILE^22^PXRM^y^n
"^DD",800001.2,800001.21,.02,"V",8,1)
S DIC("S")="I $P(^(0),U,3)=3"
"^DD",800001.2,800001.21,.02,"V",8,2)
Only select Rule Set types
"^DD",800001.2,800001.21,.02,"V",9,0)
800001.2^HMP ROSTER FILE^9^ROST^^n
"^DD",800001.2,800001.21,.02,"V",11,0)
45.7^SPECIALTY^70^SPEC^n^n
"^DD",800001.2,800001.21,.02,"V",12,0)
800001^Select HMP Panel List Rule^80^HMPPAN^n^n
"^DD",800001.2,800001.21,.03,0)
OPERATION^S^0:UNION;1:INTERSECTION;2:DIFFERENCE;^0;3^Q
"^DD",800001.2,800001.21,.03,"DT")
3110830
"^DD",800001.2,800001.21,.04,0)
FILTER^S^T:TODAY;^0;4^Q
"^DD",800001.2,800001.21,.04,3)

"^DD",800001.2,800001.21,.04,"DT")
3110901
"^DD",800001.2,800001.21,.05,0)
REFRESH FREQUENCY^S^D:DAILY;H:HOURLY;^0;5^Q
"^DD",800001.2,800001.21,.05,3)

"^DD",800001.2,800001.21,.05,"DT")
3120119
"^DD",800001.2,800001.23,0)
PATIENT SUB-FIELD^^.02^2
"^DD",800001.2,800001.23,0,"IX","B",800001.23,.01)

"^DD",800001.2,800001.23,0,"NM","PATIENT")

"^DD",800001.2,800001.23,0,"UP")
800001.2
"^DD",800001.2,800001.23,.01,0)
PATIENT^MP2'^DPT(^0;1^Q
"^DD",800001.2,800001.23,.01,1,0)
^.1
"^DD",800001.2,800001.23,.01,1,1,0)
800001.23^B
"^DD",800001.2,800001.23,.01,1,1,1)
S ^HMPROSTR(800001.2,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",800001.2,800001.23,.01,1,1,2)
K ^HMPROSTR(800001.2,DA(1),4,"B",$E(X,1,30),DA)
"^DD",800001.2,800001.23,.01,1,2,0)
800001.2^AB
"^DD",800001.2,800001.23,.01,1,2,1)
S ^HMPROSTR(800001.2,"AB",$E(X,1,30),DA(1),DA)=""
"^DD",800001.2,800001.23,.01,1,2,2)
K ^HMPROSTR(800001.2,"AB",$E(X,1,30),DA(1),DA)
"^DD",800001.2,800001.23,.01,1,2,"%D",0)
^^1^1^3121220^
"^DD",800001.2,800001.23,.01,1,2,"%D",1,0)
Index of all rosters patient is in.
"^DD",800001.2,800001.23,.01,1,2,"DT")
3121220
"^DD",800001.2,800001.23,.01,"DT")
3121220
"^DD",800001.2,800001.23,.02,0)
SRCSEQ^NJ6,0^^0;2^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",800001.2,800001.23,.02,3)
Type a number between 1 and 999999, 0 decimal digits.
"^DD",800001.2,800001.23,.02,"DT")
3130717
"^DD",800001.5,800001.5,0)
FIELD^^7^7
"^DD",800001.5,800001.5,0,"IX","B",800001.5,.01)

"^DD",800001.5,800001.5,0,"IX","HMP",800001.5,6)

"^DD",800001.5,800001.5,0,"NM","HMP ACTIVITY")

"^DD",800001.5,800001.5,0,"VRPK")
HMP
"^DD",800001.5,800001.5,.01,0)
PATIENT NAME^RP2'^DPT(^0;1^Q
"^DD",800001.5,800001.5,.01,1,0)
^.1
"^DD",800001.5,800001.5,.01,1,1,0)
800001.5^B
"^DD",800001.5,800001.5,.01,1,1,1)
S ^HMP(800001.5,"PTAPPT","B",$E(X,1,30),DA)=""
"^DD",800001.5,800001.5,.01,1,1,2)
K ^HMP(800001.5,"PTAPPT","B",$E(X,1,30),DA)
"^DD",800001.5,800001.5,.01,3)

"^DD",800001.5,800001.5,.01,"DT")
3140731
"^DD",800001.5,800001.5,2,0)
APPOINTMENT DATE^D^^0;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",800001.5,800001.5,2,"DT")
3140804
"^DD",800001.5,800001.5,3,0)
APPOINTMENT STATUS^F^^0;3^K:$L(X)>5!($L(X)<1) X
"^DD",800001.5,800001.5,3,3)
Answer must be 1-5 characters in length.
"^DD",800001.5,800001.5,3,"DT")
3140804
"^DD",800001.5,800001.5,4,0)
DATE RECORD CREATED^D^^0;4^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",800001.5,800001.5,4,"DT")
3140804
"^DD",800001.5,800001.5,5,0)
DATE RECORD RETREIVED^D^^0;5^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",800001.5,800001.5,5,5,1,0)
800001.5^6^2
"^DD",800001.5,800001.5,5,"DT")
3140804
"^DD",800001.5,800001.5,6,0)
HMP PROCESS FLAG^NJ1,0^^0;6^K:+X'=X!(X>1)!(X<0)!(X?.E1"."1N.N) X
"^DD",800001.5,800001.5,6,1,0)
^.1
"^DD",800001.5,800001.5,6,1,1,0)
800001.5^HMP^MUMPS
"^DD",800001.5,800001.5,6,1,1,1)
I +X=0 S ^HMP(800001.5,"PTAPPT","HMP",+DA)=""
"^DD",800001.5,800001.5,6,1,1,2)
K ^HMP(800001.5,"PTAPPT","HMP",+DA)
"^DD",800001.5,800001.5,6,1,1,"DT")
3140901
"^DD",800001.5,800001.5,6,1,2,0)
^^TRIGGER^800001.5^5
"^DD",800001.5,800001.5,6,1,2,1)
Q
"^DD",800001.5,800001.5,6,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^HMP(800001.5,"PTAPPT",D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% X ^DD(800001.5,6,1,2,2.4)
"^DD",800001.5,800001.5,6,1,2,2.4)
S DIH=$G(^HMP(800001.5,"PTAPPT",DIV(0),0)),DIV=X S $P(^(0),U,5)=DIV,DIH=800001.5,DIG=5 D ^DICR
"^DD",800001.5,800001.5,6,1,2,"CREATE VALUE")
NO EFFECT
"^DD",800001.5,800001.5,6,1,2,"DELETE VALUE")
NOW
"^DD",800001.5,800001.5,6,1,2,"DT")
3140804
"^DD",800001.5,800001.5,6,1,2,"FIELD")
DATE RECORD RETREIVED
"^DD",800001.5,800001.5,6,3)
Type a number between 0 and 1, 0 decimal digits.
"^DD",800001.5,800001.5,6,"DT")
3140804
"^DD",800001.5,800001.5,7,0)
JSON MESSAGE^F^^JSON;1^K:$L(X)>200!($L(X)<1) X
"^DD",800001.5,800001.5,7,3)
Answer must be 1-200 characters in length.
"^DD",800001.5,800001.5,7,"DT")
3140805
"^DIC",800000,800000,0)
HMP SUBSCRIPTION^800000
"^DIC",800000,800000,0,"GL")
^HMP(800000,
"^DIC",800000,"B","HMP SUBSCRIPTION",800000)

"^DIC",800000.1,800000.1,0)
HMP PATIENT OBJECT^800000.1
"^DIC",800000.1,800000.1,0,"GL")
^HMP(800000.1,
"^DIC",800000.1,"B","HMP PATIENT OBJECT",800000.1)

"^DIC",800000.11,800000.11,0)
HMP OBJECT^800000.11
"^DIC",800000.11,800000.11,0,"GL")
^HMP(800000.11,
"^DIC",800000.11,"B","HMP OBJECT",800000.11)

"^DIC",800000.2,800000.2,0)
HMP LIST^800000.2
"^DIC",800000.2,800000.2,0,"GL")
^HMPD(800000.2,
"^DIC",800000.2,"B","HMP LIST",800000.2)

"^DIC",800000.21,800000.21,0)
HMP LIST DOMAIN^800000.21
"^DIC",800000.21,800000.21,0,"GL")
^HMPD(800000.21,
"^DIC",800000.21,"B","HMP LIST DOMAIN",800000.21)

"^DIC",800000.22,800000.22,0)
HMP LIST ATTRIBUTE^800000.22
"^DIC",800000.22,800000.22,0,"GL")
^HMPD(800000.22,
"^DIC",800000.22,"B","HMP LIST ATTRIBUTE",800000.22)

"^DIC",800001,800001,0)
HMP PANEL^800001
"^DIC",800001,800001,0,"GL")
^HMPPANEL(
"^DIC",800001,800001,"%D",0)
^1.001^4^4^3110701^^^
"^DIC",800001,800001,"%D",1,0)
Contains the Rule Sets that contain the cohorts for creating patient panels.
"^DIC",800001,800001,"%D",2,0)
For example, panel which includes Diabetic patients will be created
"^DIC",800001,800001,"%D",3,0)
nightly to update the list of patients.  All panels in this file will be
"^DIC",800001,800001,"%D",4,0)
updated nightly.
"^DIC",800001,"B","HMP PANEL",800001)

"^DIC",800001.2,800001.2,0)
HMP ROSTER^800001.2
"^DIC",800001.2,800001.2,0,"GL")
^HMPROSTR(800001.2,
"^DIC",800001.2,"B","HMP ROSTER",800001.2)

"^DIC",800001.5,800001.5,0)
HMP ACTIVITY^800001.5
"^DIC",800001.5,800001.5,0,"GL")
^HMP(800001.5,"PTAPPT",
"^DIC",800001.5,"B","HMP ACTIVITY",800001.5)

**INSTALL NAME**
HMP*2.0*150417
"BLD",9079,0)
HMP*2.0*150417^HEALTH MANAGEMENT PLATFORM^0^3150610^y
"BLD",9079,1,0)
^^1^1^3150417^
"BLD",9079,1,1,0)
Merge S68 changes into eHMP.
"BLD",9079,4,0)
^9.64PA^^0
"BLD",9079,6.3)
33
"BLD",9079,"INIT")
POST^HMPP3I
"BLD",9079,"KRN",0)
^9.67PA^779.2^20
"BLD",9079,"KRN",.4,0)
.4
"BLD",9079,"KRN",.401,0)
.401
"BLD",9079,"KRN",.402,0)
.402
"BLD",9079,"KRN",.403,0)
.403
"BLD",9079,"KRN",.5,0)
.5
"BLD",9079,"KRN",.84,0)
.84
"BLD",9079,"KRN",3.6,0)
3.6
"BLD",9079,"KRN",3.8,0)
3.8
"BLD",9079,"KRN",9.2,0)
9.2
"BLD",9079,"KRN",9.8,0)
9.8
"BLD",9079,"KRN",9.8,"NM",0)
^9.68A^^0
"BLD",9079,"KRN",19,0)
19
"BLD",9079,"KRN",19,"NM",0)
^9.68A^3^1
"BLD",9079,"KRN",19,"NM",3,0)
HMP SYNCHRONIZATION CONTEXT^^0
"BLD",9079,"KRN",19,"NM","B","HMP SYNCHRONIZATION CONTEXT",3)

"BLD",9079,"KRN",19.1,0)
19.1
"BLD",9079,"KRN",101,0)
101
"BLD",9079,"KRN",101,"NM",0)
^9.68A^11^11
"BLD",9079,"KRN",101,"NM",1,0)
HMPM EVT QUE SELECT STREAM^^0
"BLD",9079,"KRN",101,"NM",2,0)
HMPM EVT QUE GET AGGREGATE EXTRACT SIZE^^0
"BLD",9079,"KRN",101,"NM",3,0)
HMPM EVT QUE CHANGE SERVER^^0
"BLD",9079,"KRN",101,"NM",4,0)
HMPM EVT QUE FRESHNESS REPORT^^0
"BLD",9079,"KRN",101,"NM",5,0)
HMPM EVT QUE CHANGE DOMAIN^^0
"BLD",9079,"KRN",101,"NM",6,0)
HMPM EVT QUE REFRESH^^0
"BLD",9079,"KRN",101,"NM",7,0)
HMPM EVT QUE DISPLAY DETAILS^^0
"BLD",9079,"KRN",101,"NM",8,0)
HMPM EVT QUE FILTER^^0
"BLD",9079,"KRN",101,"NM",9,0)
HMPM EVT QUE SHOW TEMP GLOBALS^^0
"BLD",9079,"KRN",101,"NM",10,0)
HMPM EVT QUE SELECT PATIENT^^0
"BLD",9079,"KRN",101,"NM",11,0)
HMPM EVT QUE CHANGE MAX LISTED^^0
"BLD",9079,"KRN",101,"NM","B","HMPM EVT QUE CHANGE DOMAIN",5)

"BLD",9079,"KRN",101,"NM","B","HMPM EVT QUE CHANGE MAX LISTED",11)

"BLD",9079,"KRN",101,"NM","B","HMPM EVT QUE CHANGE SERVER",3)

"BLD",9079,"KRN",101,"NM","B","HMPM EVT QUE DISPLAY DETAILS",7)

"BLD",9079,"KRN",101,"NM","B","HMPM EVT QUE FILTER",8)

"BLD",9079,"KRN",101,"NM","B","HMPM EVT QUE FRESHNESS REPORT",4)

"BLD",9079,"KRN",101,"NM","B","HMPM EVT QUE GET AGGREGATE EXTRACT SIZE",2)

"BLD",9079,"KRN",101,"NM","B","HMPM EVT QUE REFRESH",6)

"BLD",9079,"KRN",101,"NM","B","HMPM EVT QUE SELECT PATIENT",10)

"BLD",9079,"KRN",101,"NM","B","HMPM EVT QUE SELECT STREAM",1)

"BLD",9079,"KRN",101,"NM","B","HMPM EVT QUE SHOW TEMP GLOBALS",9)

"BLD",9079,"KRN",409.61,0)
409.61
"BLD",9079,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",9079,"KRN",409.61,"NM",1,0)
HMPM EVT QUE MGR^^0
"BLD",9079,"KRN",409.61,"NM","B","HMPM EVT QUE MGR",1)

"BLD",9079,"KRN",771,0)
771
"BLD",9079,"KRN",771,"NM",0)
^9.68A^^
"BLD",9079,"KRN",779.2,0)
779.2
"BLD",9079,"KRN",779.2,"NM",0)
^9.68A^^
"BLD",9079,"KRN",870,0)
870
"BLD",9079,"KRN",8989.51,0)
8989.51
"BLD",9079,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",9079,"KRN",8989.52,0)
8989.52
"BLD",9079,"KRN",8994,0)
8994
"BLD",9079,"KRN","B",.4,.4)

"BLD",9079,"KRN","B",.401,.401)

"BLD",9079,"KRN","B",.402,.402)

"BLD",9079,"KRN","B",.403,.403)

"BLD",9079,"KRN","B",.5,.5)

"BLD",9079,"KRN","B",.84,.84)

"BLD",9079,"KRN","B",3.6,3.6)

"BLD",9079,"KRN","B",3.8,3.8)

"BLD",9079,"KRN","B",9.2,9.2)

"BLD",9079,"KRN","B",9.8,9.8)

"BLD",9079,"KRN","B",19,19)

"BLD",9079,"KRN","B",19.1,19.1)

"BLD",9079,"KRN","B",101,101)

"BLD",9079,"KRN","B",409.61,409.61)

"BLD",9079,"KRN","B",771,771)

"BLD",9079,"KRN","B",779.2,779.2)

"BLD",9079,"KRN","B",870,870)

"BLD",9079,"KRN","B",8989.51,8989.51)

"BLD",9079,"KRN","B",8989.52,8989.52)

"BLD",9079,"KRN","B",8994,8994)

"BLD",9079,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9079,"QUES",0)
^9.62^^
"BLD",9079,"REQB",0)
^9.611^^
"INIT")
POST^HMPP3I
"KRN",19,14336,-1)
0^3
"KRN",19,14336,0)
HMP SYNCHRONIZATION CONTEXT^Synchronize the HMP^^B^^^^^^^^
"KRN",19,14336,99.1)
63613,33836
"KRN",19,14336,"RPC",0)
^19.05P^24^24
"KRN",19,14336,"RPC",2,0)
HMP DATA VERSION
"KRN",19,14336,"RPC",4,0)
HMP SUBSCRIBE
"KRN",19,14336,"RPC",5,0)
HMP GET PATIENT DATA JSON
"KRN",19,14336,"RPC",7,0)
HMP GET OBJECT
"KRN",19,14336,"RPC",8,0)
HMP GET OPERATIONAL DATA
"KRN",19,14336,"RPC",10,0)
HMP PUT OBJECT
"KRN",19,14336,"RPC",19,0)
HMPDJFS API
"KRN",19,14336,"RPC",20,0)
HMPDJFS DELSUB
"KRN",19,14336,"RPC",21,0)
HMP GET CHECKSUM
"KRN",19,14336,"RPC",22,0)
HMP PATIENT ACTIVITY
"KRN",19,14336,"RPC",23,0)
HMP LOCAL GETCORRESPONDINGIDS
"KRN",19,14336,"RPC",24,0)
ORWU USERINFO
"KRN",19,14336,"U")
SYNCHRONIZE THE HMP
"KRN",101,6118,-1)
0^3
"KRN",101,6118,0)
HMPM EVT QUE CHANGE SERVER^Change Server^^A^^^^^^^^
"KRN",101,6118,1,0)
^^2^2^3140716^
"KRN",101,6118,1,1,0)
Allows user to change which server's freshness queue events to display in 
"KRN",101,6118,1,2,0)
the viewer.
"KRN",101,6118,10,0)
^101.01PA^1^1
"KRN",101,6118,10,1,0)
6119^^^
"KRN",101,6118,10,1,"^")
HMPM EVT QUE FRESHNESS REPORT
"KRN",101,6118,20)
D CS^HMPEQLM
"KRN",101,6118,99)
63713,34892
"KRN",101,6119,-1)
0^4
"KRN",101,6119,0)
HMPM EVT QUE FRESHNESS REPORT^Freshness Report^^A^^^^^^^^
"KRN",101,6119,1,0)
^^1^1^3140716^
"KRN",101,6119,1,1,0)
View overview freshness queue information for all HMP servers.
"KRN",101,6119,20)
D FSHRPT^HMPEQLM
"KRN",101,6119,99)
63713,34892
"KRN",101,6120,-1)
0^5
"KRN",101,6120,0)
HMPM EVT QUE CHANGE DOMAIN^Change Domain^^A^^^^^^^^
"KRN",101,6120,1,0)
^^3^3^3140716^
"KRN",101,6120,1,1,0)
Allows user to indicate only freshness events for a particular domain, 
"KRN",101,6120,1,2,0)
like med, task, visit, etc., or all domains should be listed in 
"KRN",101,6120,1,3,0)
freshness viewer.
"KRN",101,6120,20)
D CD^HMPEQLM
"KRN",101,6120,99)
63713,34892
"KRN",101,6121,-1)
0^6
"KRN",101,6121,0)
HMPM EVT QUE REFRESH^Update^^A^^^^^^^^
"KRN",101,6121,1,0)
^101.06^2^2^3140716^^
"KRN",101,6121,1,1,0)
Refresh/update the current list of freshness queue events using the 
"KRN",101,6121,1,2,0)
current criteria/filters specified.
"KRN",101,6121,20)
D REFRESH^HMPEQLM
"KRN",101,6121,99)
63713,34892
"KRN",101,6122,-1)
0^7
"KRN",101,6122,0)
HMPM EVT QUE DISPLAY DETAILS^Display Details^^A^^^^^^^^
"KRN",101,6122,1,0)
^^1^1^3140716^
"KRN",101,6122,1,1,0)
Display details related to an event listed in the freshness queue viewer.
"KRN",101,6122,20)
D DETAIL^HMPEQLM
"KRN",101,6122,99)
63713,34892
"KRN",101,6123,-1)
0^8
"KRN",101,6123,0)
HMPM EVT QUE FILTER^Filter Events^^A^^^^^^^^
"KRN",101,6123,1,0)
^^3^3^3140716^
"KRN",101,6123,1,1,0)
Allows user to indicate only freshness events with a state of 
"KRN",101,6123,1,2,0)
'processed' or 'waiting to be processed' or all events should be listed in
"KRN",101,6123,1,3,0)
freshness viewer.
"KRN",101,6123,20)
D FILTER^HMPEQLM
"KRN",101,6123,99)
63713,34892
"KRN",101,6124,-1)
0^9
"KRN",101,6124,0)
HMPM EVT QUE SHOW TEMP GLOBALS^Temp Global Usage^^A^^^^^^^^
"KRN",101,6124,1,0)
^101.06^4^4^3140716^^
"KRN",101,6124,1,1,0)
Show VPR temporary global usage report. 
"KRN",101,6124,1,2,0)
 
"KRN",101,6124,1,3,0)
The report displays summary information related to VPR processing use of 
"KRN",101,6124,1,4,0)
^XTMP and ^TMP globals.
"KRN",101,6124,20)
D SHOWHMPN^HMPEQLM
"KRN",101,6124,99)
63713,34892
"KRN",101,6125,-1)
0^10
"KRN",101,6125,0)
HMPM EVT QUE SELECT PATIENT^Select Patient^^A^^^^^^^^
"KRN",101,6125,1,0)
^^2^2^3140716^
"KRN",101,6125,1,1,0)
Allows user to specify that only the freshness events for the selected 
"KRN",101,6125,1,2,0)
patient should be used in the freshness queue event viewer.
"KRN",101,6125,20)
D SELPT^HMPEQLM
"KRN",101,6125,99)
63713,34892
"KRN",101,6126,-1)
0^11
"KRN",101,6126,0)
HMPM EVT QUE CHANGE MAX LISTED^Change Max Limit^^A^^^^^^^^
"KRN",101,6126,1,0)
^^2^2^3140716^
"KRN",101,6126,1,1,0)
Allows user to select the maximum events to display in the freshness 
"KRN",101,6126,1,2,0)
queue viewer. (10 - 1000)
"KRN",101,6126,20)
D CM^HMPEQLM
"KRN",101,6126,99)
63713,34892
"KRN",101,6128,-1)
0^1
"KRN",101,6128,0)
HMPM EVT QUE SELECT STREAM^Select Stream^^A^^^^^^^^
"KRN",101,6128,1,0)
^101.06^2^2^3150225^^
"KRN",101,6128,1,1,0)
Allows user to change fresshness stream/events that is
"KRN",101,6128,1,2,0)
displayed in the viewer
"KRN",101,6128,20)
D SS^HMPEQLM
"KRN",101,6128,99)
63713,34892
"KRN",101,6129,-1)
0^2
"KRN",101,6129,0)
HMPM EVT QUE GET AGGREGATE EXTRACT SIZE^^^A^^^^^^^^
"KRN",101,6129,1,0)
^101.06^2^2^3150225^^^
"KRN",101,6129,1,1,0)
Action allow user to estimate the current size of extracts
"KRN",101,6129,1,2,0)
 waiting to be sent to HMP servers.
"KRN",101,6129,4)
^^^Get VPRX Size
"KRN",101,6129,20)
D GETSIZE^HMPEQLM
"KRN",409.61,801,-1)
0^1
"KRN",409.61,801,0)
HMPM EVT QUE MGR^1^^80^7^18^0^1^Event^HMPM EVT QUE MGR MENU^HMP Freshness Event Viewer^1^^1
"KRN",409.61,801,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,801,"COL",0)
^409.621^4^4
"KRN",409.61,801,"COL",1,0)
ID^2^4^ITEM
"KRN",409.61,801,"COL",2,0)
SEQ^7^8^SEQ
"KRN",409.61,801,"COL",3,0)
NODE^19^62^Event Node
"KRN",409.61,801,"COL",4,0)
STATE^17^1
"KRN",409.61,801,"COL","B","ID",1)

"KRN",409.61,801,"COL","B","NODE",3)

"KRN",409.61,801,"COL","B","SEQ",2)

"KRN",409.61,801,"COL","B","STATE",4)

"KRN",409.61,801,"FNL")
D EXIT^HMPEQLM
"KRN",409.61,801,"HDR")
D HDR^HMPEQLM
"KRN",409.61,801,"HLP")
D HELP^HMPEQLM
"KRN",409.61,801,"INIT")
D INIT^HMPEQLM
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",578,-1)
1^1
"PKG",578,0)
HEALTH MANAGEMENT PLATFORM^HMP^Access patient medical records from all VistA's
"PKG",578,20,0)
^9.402P^^
"PKG",578,22,0)
^9.49I^1^1
"PKG",578,22,1,0)
2.0^3150610^3150610^1
"PKG",578,22,1,"PAH",1,0)
150417^3150610^1
"PKG",578,22,1,"PAH",1,1,0)
^^1^1^3150610
"PKG",578,22,1,"PAH",1,1,1,0)
Merge S68 changes into eHMP.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","HMPP3I")
0^^B74432110
"RTN","HMPP3I",1,0)
HMPP3I ;SLC/AGP -- HMP patch 3 post install ; 2/18/15 5:43pm
"RTN","HMPP3I",2,0)
 ;;2.0;HEALTH MANAGEMENT PLATFORM;**1**;Oct 10, 2014;Build 33
"RTN","HMPP3I",3,0)
 ;
"RTN","HMPP3I",4,0)
ENV ; -- environment check to prevent production installation
"RTN","HMPP3I",5,0)
 I $$PROD^XUPROD D
"RTN","HMPP3I",6,0)
 .W !,"You are attempting to install this software into your production account.",!,"At this time, this software is not ready for a production install."
"RTN","HMPP3I",7,0)
 .W !!,"Please verify the account you're attempting to install into and",!,"if you believe you're correct, contact Ron Massey or Tana Defa.",!!,"INSTALLATION ABORTED!"
"RTN","HMPP3I",8,0)
 .S XPDABORT=1
"RTN","HMPP3I",9,0)
 Q
"RTN","HMPP3I",10,0)
 ;
"RTN","HMPP3I",11,0)
PRE ; -- clean out HMP SUBSCRIPTION and ^XTMP("HMP") entries for testing
"RTN","HMPP3I",12,0)
 N HMPDT S HMPDT="HMP-1111111"
"RTN","HMPP3I",13,0)
 F  S HMPDT=$O(^XTMP(HMPDT)) Q:HMPDT'?1"HMP-"7N  K ^XTMP(HMPDT)
"RTN","HMPP3I",14,0)
 S HMPDT="HMPEF-1111111"
"RTN","HMPP3I",15,0)
 F  S HMPDT=$O(^XTMP(HMPDT)) Q:HMPDT'?1"HMPEF-"7N  K ^XTMP(HMPDT)
"RTN","HMPP3I",16,0)
 K ^XTMP("HMP"),^TMP("HMPX")
"RTN","HMPP3I",17,0)
 I $$VERCMP($$VERSRV(),"0.7-S54")>0 D  ; if current < S54
"RTN","HMPP3I",18,0)
 . K ^HMP(800000)
"RTN","HMPP3I",19,0)
 . S ^HMP(800000,0)="HMP SUBSCRIPTION^800000^^"
"RTN","HMPP3I",20,0)
 ;D CLEARPAR
"RTN","HMPP3I",21,0)
 I $D(^DD(800000.04)) D  ;remove old Subscription sub-files
"RTN","HMPP3I",22,0)
 . N DIU S DIU(0)="S"
"RTN","HMPP3I",23,0)
 . S DIU=800000.04 D EN^DIU2
"RTN","HMPP3I",24,0)
 . S DIU=800000.03 D EN^DIU2
"RTN","HMPP3I",25,0)
 I $D(^DD(800000.01,.03)) D  ; remote old PID field
"RTN","HMPP3I",26,0)
 . S DIK="^DD(800000.01,",DA=.03,DA(1)=800000.01
"RTN","HMPP3I",27,0)
 . D ^DIK
"RTN","HMPP3I",28,0)
 ;D TASKCONV
"RTN","HMPP3I",29,0)
 D ADDRSRC ; add resource for throttling extract tasks
"RTN","HMPP3I",30,0)
 S ^XTMP("HMP-LAST-SCHEMA",0)=$$HTFM^XLFDT(+$H+7)_U_$$HTFM^XLFDT(+$H)_U_"JSON schema before install"
"RTN","HMPP3I",31,0)
 S ^XTMP("HMP-LAST-SCHEMA",1)=+$P($$GET^XPAR("PKG","HMP JSON SCHEMA"),".")
"RTN","HMPP3I",32,0)
 Q
"RTN","HMPP3I",33,0)
 ;
"RTN","HMPP3I",34,0)
CLEARPAR ;
"RTN","HMPP3I",35,0)
 N ENT,ERROR,INST,LIST,PAR,TYPE,X,UID
"RTN","HMPP3I",36,0)
 ;S PAR="" F  S PAR=$O(^XTV(8989.51,"B","HMP PARAMETERS","")) I PAR>0 Q
"RTN","HMPP3I",37,0)
 S PAR=$O(^XTV(8989.51,"B","HMP PARAMETERS","")) Q:PAR'>0
"RTN","HMPP3I",38,0)
 S X="" F  S X=$O(^XTV(8989.5,"AC",PAR,X)) Q:X=""  D
"RTN","HMPP3I",39,0)
 .S TYPE=$S(X["VA":"USR",X["DIC":"SYS",1:"") I TYPE="" Q
"RTN","HMPP3I",40,0)
 .S ENT=TYPE_".`"_+X
"RTN","HMPP3I",41,0)
 .S UID="" F  S UID=$O(^XTV(8989.5,"AC",PAR,X,UID)) Q:UID=""  D
"RTN","HMPP3I",42,0)
 ..D DEL^XPAR(ENT,"HMP PARAMETERS",UID,.ERROR)
"RTN","HMPP3I",43,0)
 Q
"RTN","HMPP3I",44,0)
 ;
"RTN","HMPP3I",45,0)
 ; VERSRV and VERCMP are also in HMPUTILS, but not until after the install
"RTN","HMPP3I",46,0)
 ; of this patch (HMP*2*3), so they are reproduced here.
"RTN","HMPP3I",47,0)
 ;
"RTN","HMPP3I",48,0)
VERSRV()   ; Return server version of option name
"RTN","HMPP3I",49,0)
 N HMPLST,VAL
"RTN","HMPP3I",50,0)
 D FIND^DIC(19,"",1,"X","HMP UI CONTEXT",1,,,,"HMPLST")
"RTN","HMPP3I",51,0)
 S VAL=$G(HMPLST("DILIST","ID",1,1))
"RTN","HMPP3I",52,0)
 Q $$UP^XLFSTR($P(VAL,"version ",2))
"RTN","HMPP3I",53,0)
 ;
"RTN","HMPP3I",54,0)
VERCMP(CUR,VAL) ; Returns 1 if CUR<VAL, -1 if CUR>VAL, 0 if equal
"RTN","HMPP3I",55,0)
 N CURMAJOR,CURMINOR,CURSNAP,VALMAJOR,VALMINOR,VALSNAP
"RTN","HMPP3I",56,0)
 S CURMAJOR=$P(CUR,"-"),CURMINOR=$P(CUR,"-",2),CURSNAP=$E($P(CUR,"-",3),1,4)="SNAP"
"RTN","HMPP3I",57,0)
 S VALMAJOR=$P(VAL,"-"),VALMINOR=$P(VAL,"-",2),VALSNAP=$E($P(VAL,"-",3),1,4)="SNAP"
"RTN","HMPP3I",58,0)
 I $E(VALMINOR)="P" S VALMINOR=$E(VALMINOR,2,99)     ; "P"ilot versions (old)
"RTN","HMPP3I",59,0)
 I $E(CURMINOR)="P" S CURMINOR=$E(VALMINOR,2,99)
"RTN","HMPP3I",60,0)
 I $E(VALMINOR)="S" S VALMINOR=$E(VALMINOR,2,99)*10  ; "S"print versions
"RTN","HMPP3I",61,0)
 I $E(CURMINOR)="S" S CURMINOR=$E(CURMINOR,2,99)*10
"RTN","HMPP3I",62,0)
 Q:VALMAJOR>CURMAJOR 1   Q:VALMAJOR<CURMAJOR -1  ; compare major versions
"RTN","HMPP3I",63,0)
 Q:VALMINOR>CURMINOR 1   Q:VALMINOR<CURMINOR -1  ; compare minor versions
"RTN","HMPP3I",64,0)
 Q:(CURSNAP&'VALSNAP) 1  Q:(VALSNAP&'CURSNAP) -1 ; "SNAPSHOT" < released
"RTN","HMPP3I",65,0)
 Q 0
"RTN","HMPP3I",66,0)
 ;
"RTN","HMPP3I",67,0)
 ;
"RTN","HMPP3I",68,0)
POST ; -- set up new Tx data
"RTN","HMPP3I",69,0)
 ;D CREATEUS
"RTN","HMPP3I",70,0)
 N HMPLVER
"RTN","HMPP3I",71,0)
 S HMPLVER=$$VERSRV()
"RTN","HMPP3I",72,0)
 D VERSION
"RTN","HMPP3I",73,0)
 D EN^HMPIDX
"RTN","HMPP3I",74,0)
 D OBJCNT
"RTN","HMPP3I",75,0)
 I $$VERCMP(HMPLVER,"0.7-S58")>0 D PARPID            ; if current < S58
"RTN","HMPP3I",76,0)
 I $G(^XTMP("HMP-LAST-SCHEMA",1))<2 D CVTPAT,CVTSEL  ; if existing schema < 2.0
"RTN","HMPP3I",77,0)
 K ^XTMP("HMP-LAST-SCHEMA")
"RTN","HMPP3I",78,0)
 ;D CREATE^HMPAP1  ;BL;V5-6 Protocols now attached via KIDs build not post routine
"RTN","HMPP3I",79,0)
 D POST^HMPPRXY2
"RTN","HMPP3I",80,0)
 D DISABLE^HMPZ0218
"RTN","HMPP3I",81,0)
 Q
"RTN","HMPP3I",82,0)
 ;
"RTN","HMPP3I",83,0)
VERSION ; -- update V# parameter
"RTN","HMPP3I",84,0)
 D PUT^XPAR("PKG","HMP VERSION",1,"2.00")
"RTN","HMPP3I",85,0)
 D PUT^XPAR("SYS","HMP SYSTEM NAME",1,$$SYS^HMPUTILS)
"RTN","HMPP3I",86,0)
 Q
"RTN","HMPP3I",87,0)
 ;
"RTN","HMPP3I",88,0)
OBJCNT ; -- create count index for HMP OBJECT file
"RTN","HMPP3I",89,0)
 Q:$D(^HMP(800000.11,"ACNT"))
"RTN","HMPP3I",90,0)
 N DIK,DA
"RTN","HMPP3I",91,0)
 S DIK="^HMP(800000.11,"
"RTN","HMPP3I",92,0)
 S DIK(1)=".03^ACNT"
"RTN","HMPP3I",93,0)
 D ENALL^DIK
"RTN","HMPP3I",94,0)
 Q
"RTN","HMPP3I",95,0)
CREATEUS ;
"RTN","HMPP3I",96,0)
 N DIV,FDA,IC,IEN,IENS,NAME,SER,HMPERR
"RTN","HMPP3I",97,0)
 ;do not create the user if the patch is already installed or if the user is already created
"RTN","HMPP3I",98,0)
 I $$PATCH^XPDUTL("HMP*1.0*3") Q
"RTN","HMPP3I",99,0)
 D EN^DDIOL("Creating HMP Sync User")
"RTN","HMPP3I",100,0)
 ;
"RTN","HMPP3I",101,0)
 S NAME="HMP,USER SYNC"
"RTN","HMPP3I",102,0)
 S IEN=$$CREATE^XUSAP(NAME,"","HMP SYNCHRONIZATION CONTEXT")
"RTN","HMPP3I",103,0)
 I IEN=0 D EN^DDIOL("User already exists") Q
"RTN","HMPP3I",104,0)
 I IEN<0 D EN^DDIOL("Cannot create user") Q
"RTN","HMPP3I",105,0)
 S IENS="?"_IEN_","
"RTN","HMPP3I",106,0)
 S DIV=$$ASK(4) I DIV'>0 D EN^DDIOL("A division needs to be selected.") Q
"RTN","HMPP3I",107,0)
 S SER=$$ASK(49) I SER'>0 D EN^DDIOL("A service needs to be selected.") Q
"RTN","HMPP3I",108,0)
 S FDA(200,IENS,.01)=NAME
"RTN","HMPP3I",109,0)
 S FDA(200,IENS,7.2)=1
"RTN","HMPP3I",110,0)
 S FDA(200,IENS,29)=$P(SER,U)
"RTN","HMPP3I",111,0)
 S FDA(200,IENS,200.04)=1
"RTN","HMPP3I",112,0)
 S FDA(200,IENS,200.1)=99999
"RTN","HMPP3I",113,0)
 ;S FDA(200.03,"?+2,"_IENS,.01)="HMP SYNCHRONIZATION CONTEXT"
"RTN","HMPP3I",114,0)
 ;S FDA(200.03,"?+3,"_IENS,.01)="HMP UI CONTEXT"
"RTN","HMPP3I",115,0)
 S FDA(200.02,"?+4,"_IENS,.01)=$P(DIV,U)
"RTN","HMPP3I",116,0)
 S FDA(200.02,"?+4,"_IENS,1)=1
"RTN","HMPP3I",117,0)
 D UPDATE^DIE("","FDA","","HMPERR")
"RTN","HMPP3I",118,0)
 I $D(HMPERR) D  Q
"RTN","HMPP3I",119,0)
 .D EN^DDIOL("Update failed, UPDATE^DIE returned the following error message.")
"RTN","HMPP3I",120,0)
 .S IC="HMPERR"
"RTN","HMPP3I",121,0)
 .F  S IC=$Q(@IC) Q:IC=""  W !,IC,"=",@IC
"RTN","HMPP3I",122,0)
 .D EN^DDIOL("Examine the above error message for the reason.")
"RTN","HMPP3I",123,0)
 .H 2
"RTN","HMPP3I",124,0)
 D EN^DDIOL("Add ACCESS/VERIFY codes to the "_NAME)
"RTN","HMPP3I",125,0)
 Q
"RTN","HMPP3I",126,0)
 ;
"RTN","HMPP3I",127,0)
ASK(FILENUM) ;
"RTN","HMPP3I",128,0)
 N DIC,Y
"RTN","HMPP3I",129,0)
 S DIC=FILENUM,DIC(0)="AEQMZ",DIC("A")="Select "_$S(FILENUM=4:"division: ",1:"service/section: ")
"RTN","HMPP3I",130,0)
 I FILENUM=4 S DIC("S")="S DINUM=X K:$S($D(^XUSEC(""XUMGR"",DUZ)):0,'$$TF^XUAF4(X):1,1:0) X,DINUM"
"RTN","HMPP3I",131,0)
 D ^DIC
"RTN","HMPP3I",132,0)
 Q Y
"RTN","HMPP3I",133,0)
 ;
"RTN","HMPP3I",134,0)
TASKCONV ;
"RTN","HMPP3I",135,0)
 N COLL,I,IEN,NODE,PAT,TEMP,UID,UPDATE,HMPY
"RTN","HMPP3I",136,0)
 K ^TMP($J,"HMPY"),^TMP($J,"HMPTEMP")
"RTN","HMPP3I",137,0)
 S HMPY=$NA(^TMP($J,"HMPY")),TEMP=$NA(^TMP($J,"HMPTEMP"))
"RTN","HMPP3I",138,0)
 S PAT=0 F  S PAT=$O(^HMP(800000.1,"C",PAT)) Q:PAT'>0  D
"RTN","HMPP3I",139,0)
 .S IEN=0 F  S IEN=$O(^HMP(800000.1,"C",PAT,"task",IEN)) Q:IEN'>0  D
"RTN","HMPP3I",140,0)
 ..S NODE=$G(^HMP(800000.1,IEN,0))
"RTN","HMPP3I",141,0)
 ..S UID=$P(NODE,U) I UID="" Q
"RTN","HMPP3I",142,0)
 ..S UPDATE=0
"RTN","HMPP3I",143,0)
 ..S I=0 F  S I=$O(^HMP(800000.1,IEN,1,I)) Q:I<1  S X=$G(^(I,0)),HMPY(I)=X
"RTN","HMPP3I",144,0)
 ..D DECODE^HMPJSON("HMPY","TEMP","ERROR")
"RTN","HMPP3I",145,0)
 ..I $D(ERROR) D EN^DDIOL("Error in decoding JSON Object") Q
"RTN","HMPP3I",146,0)
 ..K HMPY,^TMP($J,"HMPY")
"RTN","HMPP3I",147,0)
 ..I $G(@TEMP@("assignToCode"))'="" S @TEMP@("createdByCode")=@TEMP@("assignToCode"),UPDATE=1 K @TEMP@("assignToCode")
"RTN","HMPP3I",148,0)
 ..I $G(@TEMP@("assignToName"))'="" S @TEMP@("createdByName")=@TEMP@("assignToName"),UPDATE=1 K @TEMP@("assignToName")
"RTN","HMPP3I",149,0)
 ..I $G(@TEMP@("ownerName"))'="" S UPDATE=1 K @TEMP@("ownerName")
"RTN","HMPP3I",150,0)
 ..I $G(@TEMP@("ownerCode"))'="" S UPDATE=1 K @TEMP@("ownerCode")
"RTN","HMPP3I",151,0)
 ..I UPDATE=0 Q
"RTN","HMPP3I",152,0)
 ..;
"RTN","HMPP3I",153,0)
 ..S HMPY=$NA(^TMP($J,"HMPY"))
"RTN","HMPP3I",154,0)
 ..D ENCODE^HMPJSON("TEMP","HMPY","ERROR")
"RTN","HMPP3I",155,0)
 ..I $D(ERROR) D EN^DDIOL("Error in encoding JSON Object") Q
"RTN","HMPP3I",156,0)
 ..D EN^DDIOL("Updating task uid: "_UID)
"RTN","HMPP3I",157,0)
 ..D PUT^HMPDJ1(.HMP,PAT,"task",.HMPY)
"RTN","HMPP3I",158,0)
 K ^TMP($J,"HMPY"),^TMP($J,"HMPTEMP")
"RTN","HMPP3I",159,0)
 Q
"RTN","HMPP3I",160,0)
ADDRSRC ; Add resource device
"RTN","HMPP3I",161,0)
 N RNAME,RDESC,RSLOT,RTYPE,RIEN
"RTN","HMPP3I",162,0)
 S RNAME="HMP EXTRACT RESOURCE"
"RTN","HMPP3I",163,0)
 S RDESC="Controls the number of HMP extract jobs that run simultaneously."
"RTN","HMPP3I",164,0)
 S RSLOT=10
"RTN","HMPP3I",165,0)
 S RTYPE="P-OTHER"
"RTN","HMPP3I",166,0)
 S RIEN=$$RES^XUDHSET(RNAME,RNAME,RSLOT,RDESC,RTYPE)
"RTN","HMPP3I",167,0)
 Q
"RTN","HMPP3I",168,0)
CVTPAT ; resend all the patient objects
"RTN","HMPP3I",169,0)
 D BMES^XPDUTL("Updating HMP patient objects")
"RTN","HMPP3I",170,0)
 N HMPIEN,DFN,CNT
"RTN","HMPP3I",171,0)
 K ^TMP("HMPCVT",$J)
"RTN","HMPP3I",172,0)
 S CNT=0
"RTN","HMPP3I",173,0)
 S HMPIEN=0 F  S HMPIEN=$O(^HMP(800000,HMPIEN)) Q:'HMPIEN  D
"RTN","HMPP3I",174,0)
 . S DFN=0 F  S DFN=$O(^HMP(800000,HMPIEN,1,DFN)) Q:'DFN  D
"RTN","HMPP3I",175,0)
 . . Q:$D(^TMP("HMPCVT",$J,DFN))
"RTN","HMPP3I",176,0)
 . . D POST^HMPDJFS(DFN,"patient",DFN,"","")
"RTN","HMPP3I",177,0)
 . . S ^TMP("HMPCVT",$J,DFN)=""
"RTN","HMPP3I",178,0)
 . . S CNT=CNT+1 I '(CNT#1000) D MES^XPDUTL("  "_CNT_" patient objects converted")
"RTN","HMPP3I",179,0)
 K ^TMP("HMPCVT",$J)
"RTN","HMPP3I",180,0)
 Q
"RTN","HMPP3I",181,0)
CVTSEL ; resend all patient selection objects
"RTN","HMPP3I",182,0)
 N HMPIEN
"RTN","HMPP3I",183,0)
 D BMES^XPDUTL("Updating patient select objects")
"RTN","HMPP3I",184,0)
 S HMPIEN=0 F  S HMPIEN=$O(^HMP(800000,HMPIEN)) Q:'HMPIEN  D
"RTN","HMPP3I",185,0)
 . Q:$P(^HMP(800000,HMPIEN,0),U,3)'=2  ; operational sync not completed
"RTN","HMPP3I",186,0)
 . N HMPSRV,BATCH,DOMAINS,HMPFERR
"RTN","HMPP3I",187,0)
 . S HMPSRV=$P(^HMP(800000,HMPIEN,0),U)
"RTN","HMPP3I",188,0)
 . S BATCH="HMPFX~"_HMPSRV_"~OPD"
"RTN","HMPP3I",189,0)
 . S DOMAINS(1)="pt-select"
"RTN","HMPP3I",190,0)
 . D QUINIT^HMPDJFSP(BATCH,"OPD",.DOMAINS)
"RTN","HMPP3I",191,0)
 . I $D(HMPFERR) D MES^XPDUTL("Error tasking pt-select objects for server "_HMPSRV)
"RTN","HMPP3I",192,0)
 Q
"RTN","HMPP3I",193,0)
PARPID ; Loop thru HMP PARAMETERS and switch ICN to qualified DFN
"RTN","HMPP3I",194,0)
 N PAR,ENT,UID,HMPWP,HMPERR,I,HMPSYS
"RTN","HMPP3I",195,0)
 S HMPSYS=$$GET^XPAR("SYS","HMP SYSTEM NAME")
"RTN","HMPP3I",196,0)
 S PAR=$O(^XTV(8989.51,"B","HMP PARAMETERS","")) Q:PAR'>0
"RTN","HMPP3I",197,0)
 S ENT="" F  S ENT=$O(^XTV(8989.5,"AC",PAR,ENT)) Q:ENT=""  D
"RTN","HMPP3I",198,0)
 . S UID="" F  S UID=$O(^XTV(8989.5,"AC",PAR,ENT,UID)) Q:UID=""  D  ;INST=UID
"RTN","HMPP3I",199,0)
 . . I $P(UID,":",6,7)'="HMP USER PREF:0" Q
"RTN","HMPP3I",200,0)
 . . N HMPWP,HMPERR,JSON,OBJ,ERR,DFN,RSLT
"RTN","HMPP3I",201,0)
 . . D GETWP^XPAR(.HMPWP,ENT,PAR,UID,.HMPERR)
"RTN","HMPP3I",202,0)
 . . I +HMPERR D WRERR(UID,$P(HMPERR,U,2,99)) Q
"RTN","HMPP3I",203,0)
 . . I $D(HMPWP)<10 Q                         ; no JSON found
"RTN","HMPP3I",204,0)
 . . S I=0 F  S I=$O(HMPWP(I)) Q:'I  S JSON(I)=HMPWP(I,0)
"RTN","HMPP3I",205,0)
 . . D DECODE^HMPJSON("JSON","OBJ","ERR")
"RTN","HMPP3I",206,0)
 . . I $D(ERR) D WRERR(UID,"Error decoding JSON") Q
"RTN","HMPP3I",207,0)
 . . I '$L($G(OBJ("cpe.context.patient"))) Q  ; nothing there
"RTN","HMPP3I",208,0)
 . . I OBJ("cpe.context.patient")[";" Q       ; already DFN
"RTN","HMPP3I",209,0)
 . . S DFN=$$GETDFN^MPIF001(OBJ("cpe.context.patient"))
"RTN","HMPP3I",210,0)
 . . I DFN<1 D WRERR(UID,"Error converting ICN: "_$P(DFN,U,2)) Q
"RTN","HMPP3I",211,0)
 . . S OBJ("cpe.context.patient")=HMPSYS_";"_DFN
"RTN","HMPP3I",212,0)
 . . K JSON
"RTN","HMPP3I",213,0)
 . . D ENCODE^HMPJSON("OBJ","JSON","ERR")
"RTN","HMPP3I",214,0)
 . . I $D(ERR) D WRERR(UID,"Error encoding JSON") Q
"RTN","HMPP3I",215,0)
 . . D PUTBYUID^HMPPARAM(.RSLT,UID,.JSON)
"RTN","HMPP3I",216,0)
 Q
"RTN","HMPP3I",217,0)
WRERR(UID,MSG) ; Write out error (from post-init in KIDS build)
"RTN","HMPP3I",218,0)
 D MES^XPDUTL("Error: "_MSG_" for UID "_UID)
"RTN","HMPP3I",219,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
HMP_RRB 1.0
"BLD",9080,0)
HMP_RRB 1.0^^0^3150610^n
"BLD",9080,4,0)
^9.64PA^^
"BLD",9080,6.3)
4
"BLD",9080,"KRN",0)
^9.67PA^779.2^20
"BLD",9080,"KRN",.4,0)
.4
"BLD",9080,"KRN",.401,0)
.401
"BLD",9080,"KRN",.402,0)
.402
"BLD",9080,"KRN",.403,0)
.403
"BLD",9080,"KRN",.5,0)
.5
"BLD",9080,"KRN",.84,0)
.84
"BLD",9080,"KRN",3.6,0)
3.6
"BLD",9080,"KRN",3.8,0)
3.8
"BLD",9080,"KRN",9.2,0)
9.2
"BLD",9080,"KRN",9.8,0)
9.8
"BLD",9080,"KRN",9.8,"NM",0)
^9.68A^^0
"BLD",9080,"KRN",19,0)
19
"BLD",9080,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",9080,"KRN",19,"NM",1,0)
HMP UI CONTEXT^^0
"BLD",9080,"KRN",19,"NM","B","HMP UI CONTEXT",1)

"BLD",9080,"KRN",19.1,0)
19.1
"BLD",9080,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",9080,"KRN",101,0)
101
"BLD",9080,"KRN",101,"NM",0)
^9.68A^^0
"BLD",9080,"KRN",409.61,0)
409.61
"BLD",9080,"KRN",771,0)
771
"BLD",9080,"KRN",771,"NM",0)
^9.68A^^0
"BLD",9080,"KRN",779.2,0)
779.2
"BLD",9080,"KRN",870,0)
870
"BLD",9080,"KRN",8989.51,0)
8989.51
"BLD",9080,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",9080,"KRN",8989.52,0)
8989.52
"BLD",9080,"KRN",8994,0)
8994
"BLD",9080,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",9080,"KRN",8994,"NM",1,0)
HMP PATIENT SCHED SYNC^^0
"BLD",9080,"KRN",8994,"NM",2,0)
HMP PATIENT ADMIT SYNC^^0
"BLD",9080,"KRN",8994,"NM","B","HMP PATIENT ADMIT SYNC",2)

"BLD",9080,"KRN",8994,"NM","B","HMP PATIENT SCHED SYNC",1)

"BLD",9080,"KRN","B",.4,.4)

"BLD",9080,"KRN","B",.401,.401)

"BLD",9080,"KRN","B",.402,.402)

"BLD",9080,"KRN","B",.403,.403)

"BLD",9080,"KRN","B",.5,.5)

"BLD",9080,"KRN","B",.84,.84)

"BLD",9080,"KRN","B",3.6,3.6)

"BLD",9080,"KRN","B",3.8,3.8)

"BLD",9080,"KRN","B",9.2,9.2)

"BLD",9080,"KRN","B",9.8,9.8)

"BLD",9080,"KRN","B",19,19)

"BLD",9080,"KRN","B",19.1,19.1)

"BLD",9080,"KRN","B",101,101)

"BLD",9080,"KRN","B",409.61,409.61)

"BLD",9080,"KRN","B",771,771)

"BLD",9080,"KRN","B",779.2,779.2)

"BLD",9080,"KRN","B",870,870)

"BLD",9080,"KRN","B",8989.51,8989.51)

"BLD",9080,"KRN","B",8989.52,8989.52)

"BLD",9080,"KRN","B",8994,8994)

"BLD",9080,"QUES",0)
^9.62^^
"BLD",9080,"REQB",0)
^9.611^^
"KRN",19,14337,-1)
0^1
"KRN",19,14337,0)
HMP UI CONTEXT^HMP UI CONTEXT version 0.7-S62^^B^^^^^^^^
"KRN",19,14337,1,0)
^19.06^1^1^3140618^^
"KRN",19,14337,1,1,0)
This option allows the HMP UI access to the VistA system.
"KRN",19,14337,99.1)
62990,29647
"KRN",19,14337,"RPC",0)
^19.05P^52^52
"KRN",19,14337,"RPC",1,0)
HMPCORD RPC
"KRN",19,14337,"RPC",2,0)
HMPCPAT RPC
"KRN",19,14337,"RPC",3,0)
HMPFPTC CHKS
"KRN",19,14337,"RPC",4,0)
HMPFPTC LOG
"KRN",19,14337,"RPC",5,0)
HMP APPOINTMENTS
"KRN",19,14337,"RPC",6,0)
HMP DATA VERSION
"KRN",19,14337,"RPC",7,0)
HMP DELETE ROSTER
"KRN",19,14337,"RPC",8,0)
HMP GET PATIENT DATA
"KRN",19,14337,"RPC",9,0)
HMP GET SOURCE
"KRN",19,14337,"RPC",10,0)
HMP INPATIENTS
"KRN",19,14337,"RPC",11,0)
HMP PREVIEW ROSTER
"KRN",19,14337,"RPC",12,0)
HMP ROSTER PATIENTS
"KRN",19,14337,"RPC",13,0)
HMP ROSTERS
"KRN",19,14337,"RPC",14,0)
HMP SUBSCRIBE
"KRN",19,14337,"RPC",15,0)
HMP UPDATE ROSTER
"KRN",19,14337,"RPC",16,0)
HMPCRPC RPC
"KRN",19,14337,"RPC",19,0)
XHD GET PARAMETER DEF LIST
"KRN",19,14337,"RPC",20,0)
HMP PUT PATIENT DATA
"KRN",19,14337,"RPC",21,0)
HMP PUT OBJECT
"KRN",19,14337,"RPC",22,0)
HMP DELETE OBJECT
"KRN",19,14337,"RPC",23,0)
HMP GET OBJECT
"KRN",19,14337,"RPC",24,0)
HMP GET ROSTER LIST
"KRN",19,14337,"RPC",25,0)
HMPCPRS RPC
"KRN",19,14337,"RPC",26,0)
ORQPT WARDS
"KRN",19,14337,"RPC",27,0)
ORQPT WARD PATIENTS
"KRN",19,14337,"RPC",28,0)
ORQPT SPECIALTIES
"KRN",19,14337,"RPC",29,0)
ORQPT SPECIALTY PATIENTS
"KRN",19,14337,"RPC",30,0)
ORWU CLINLOC
"KRN",19,14337,"RPC",31,0)
ORQPT CLINIC PATIENTS
"KRN",19,14337,"RPC",32,0)
ORWU NEWPERS
"KRN",19,14337,"RPC",33,0)
ORQPT PROVIDER PATIENTS
"KRN",19,14337,"RPC",34,0)
ORWRP COLUMN HEADERS
"KRN",19,14337,"RPC",35,0)
ORWLR CUMULATIVE REPORT
"KRN",19,14337,"RPC",36,0)
ORWLRR INTERIM
"KRN",19,14337,"RPC",37,0)
ORWRP REPORT TEXT
"KRN",19,14337,"RPC",38,0)
ORWRP3 EXPAND COLUMNS
"KRN",19,14337,"RPC",39,0)
HMP PUT DEMOGRAPHICS
"KRN",19,14337,"RPC",40,0)
HMPCRPC RPCCHAIN
"KRN",19,14337,"RPC",41,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,14337,"RPC",42,0)
ORWU USERINFO
"KRN",19,14337,"RPC",43,0)
YTQ ALLKEYS
"KRN",19,14337,"RPC",44,0)
ORWPT BYWARD
"KRN",19,14337,"RPC",45,0)
ORQQPX REMINDERS LIST
"KRN",19,14337,"RPC",46,0)
ORQQPX REMINDER DETAIL
"KRN",19,14337,"RPC",47,0)
ORQQPL4 LEX
"KRN",19,14337,"RPC",48,0)
ORWRP REPORT LISTS
"KRN",19,14337,"RPC",49,0)
HMP PATIENT ADMIT SYNC
"KRN",19,14337,"RPC",50,0)
HMP PATIENT SCHED SYNC
"KRN",19,14337,"RPC",51,0)
ORWPT LIST ALL
"KRN",19,14337,"RPC",52,0)
ORWPT APPTLST
"KRN",19,14337,"U")
HMP UI CONTEXT VERSION 0.7-S62
"KRN",8994,3497,-1)
0^1
"KRN",8994,3497,0)
HMP PATIENT SCHED SYNC^APPT^HMPACT^4^P^^^1^1
"KRN",8994,3497,1,0)
^^5^5^3150416^
"KRN",8994,3497,1,1,0)
This RPC looks up patient appointments by date and location and returns 
"KRN",8994,3497,1,2,0)
the following in a global array for patients that are not found in the 
"KRN",8994,3497,1,3,0)
HMP SUBSCRIPTION file (#800000):
"KRN",8994,3497,1,4,0)
 
"KRN",8994,3497,1,5,0)
    DFN^Appointment Date^Location Name^Location IEN
"KRN",8994,3497,2,0)
^8994.02A^3^3
"KRN",8994,3497,2,1,0)
STARTDT^1^20^1^1
"KRN",8994,3497,2,1,1,0)
^^1^1^3150416^
"KRN",8994,3497,2,1,1,1,0)
Start Date for appointment search in VA format.  This is a required field.
"KRN",8994,3497,2,2,0)
ENDDATE^1^20^0^2
"KRN",8994,3497,2,2,1,0)
^^2^2^3150416^
"KRN",8994,3497,2,2,1,1,0)
The ending date for the appointment search in VA format.  This field is 
"KRN",8994,3497,2,2,1,2,0)
optional and will default to the current date if not entered.
"KRN",8994,3497,2,3,0)
LOCIEN^1^20^0^3
"KRN",8994,3497,2,3,1,0)
^^3^3^3150416^
"KRN",8994,3497,2,3,1,1,0)
The IEN for the clinic location in the HOSPITAL LOCATION File (#44).  
"KRN",8994,3497,2,3,1,2,0)
This is an optional field.  Appointments for all locations will be 
"KRN",8994,3497,2,3,1,3,0)
evaluated if not entered.
"KRN",8994,3497,2,"B","ENDDATE",2)

"KRN",8994,3497,2,"B","LOCIEN",3)

"KRN",8994,3497,2,"B","STARTDT",1)

"KRN",8994,3497,2,"PARAMSEQ",1,1)

"KRN",8994,3497,2,"PARAMSEQ",2,2)

"KRN",8994,3497,2,"PARAMSEQ",3,3)

"KRN",8994,3497,3,0)
^^3^3^3150416^
"KRN",8994,3497,3,1,0)
An array of the following patient appointment data:
"KRN",8994,3497,3,2,0)
 
"KRN",8994,3497,3,3,0)
    DFN^Appointment Date^Location Name^Location IEN
"KRN",8994,3498,-1)
0^2
"KRN",8994,3498,0)
HMP PATIENT ADMIT SYNC^ADMIT^HMPACT^4^^^^1^1
"KRN",8994,3498,1,0)
^8994.01^6^6^3150416^
"KRN",8994,3498,1,1,0)
This RPC looks up patient admissions by location and returns the 
"KRN",8994,3498,1,2,0)
following in a global array for patients that are not found in the HMP 
"KRN",8994,3498,1,3,0)
SUBSCRIPTION file (#800000):
"KRN",8994,3498,1,4,0)
 
"KRN",8994,3498,1,5,0)
    DFN^Admission Date^Location Name^Room-Bed^Location IEN
"KRN",8994,3498,1,6,0)
      The Room-Bed may not be populated for all locations.
"KRN",8994,3498,2,0)
^8994.02A^1^1
"KRN",8994,3498,2,1,0)
LOCIEN^1^20^0^1
"KRN",8994,3498,2,1,1,0)
^^3^3^3150416^
"KRN",8994,3498,2,1,1,1,0)
The IEN for the ward location in the WARD LOCATION file (#42).  
"KRN",8994,3498,2,1,1,2,0)
This is an optional field.  Admissions for all ward locations will be 
"KRN",8994,3498,2,1,1,3,0)
evaluated if not entered.
"KRN",8994,3498,2,"B","LOCIEN",1)

"KRN",8994,3498,2,"PARAMSEQ",1,1)

"KRN",8994,3498,3,0)
^^3^3^3150416^
"KRN",8994,3498,3,1,0)
An array of the following patient admission data:
"KRN",8994,3498,3,2,0)
 
"KRN",8994,3498,3,3,0)
    DFN^Admission Date^Location Name^Room-Bed^Location IEN
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
HMP HRUB 2.0
"BLD",9081,0)
HMP HRUB 2.0^^0^3150610^n
"BLD",9081,1,0)
^^4^4^3150422^
"BLD",9081,1,1,0)
 
"BLD",9081,1,2,0)
installs a new protocol: HMP DGPF ASSIGN FLAG then makes the new protocol
"BLD",9081,1,3,0)
a ITEM to DGPF ASSIGN FLAG, DGPF ASSIGN FLAG will be edited to have a TYPE
"BLD",9081,1,4,0)
of 'extended action'
"BLD",9081,4,0)
^9.64PA^^
"BLD",9081,6.3)
9
"BLD",9081,"INIT")
POST^HMP0311P
"BLD",9081,"KRN",0)
^9.67PA^779.2^20
"BLD",9081,"KRN",.4,0)
.4
"BLD",9081,"KRN",.401,0)
.401
"BLD",9081,"KRN",.402,0)
.402
"BLD",9081,"KRN",.403,0)
.403
"BLD",9081,"KRN",.5,0)
.5
"BLD",9081,"KRN",.84,0)
.84
"BLD",9081,"KRN",3.6,0)
3.6
"BLD",9081,"KRN",3.8,0)
3.8
"BLD",9081,"KRN",9.2,0)
9.2
"BLD",9081,"KRN",9.8,0)
9.8
"BLD",9081,"KRN",19,0)
19
"BLD",9081,"KRN",19.1,0)
19.1
"BLD",9081,"KRN",101,0)
101
"BLD",9081,"KRN",101,"NM",0)
^9.68A^1^1
"BLD",9081,"KRN",101,"NM",1,0)
HMP DGPF ASSIGN FLAG^^0
"BLD",9081,"KRN",101,"NM","B","HMP DGPF ASSIGN FLAG",1)

"BLD",9081,"KRN",409.61,0)
409.61
"BLD",9081,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",9081,"KRN",771,0)
771
"BLD",9081,"KRN",779.2,0)
779.2
"BLD",9081,"KRN",870,0)
870
"BLD",9081,"KRN",8989.51,0)
8989.51
"BLD",9081,"KRN",8989.52,0)
8989.52
"BLD",9081,"KRN",8994,0)
8994
"BLD",9081,"KRN","B",.4,.4)

"BLD",9081,"KRN","B",.401,.401)

"BLD",9081,"KRN","B",.402,.402)

"BLD",9081,"KRN","B",.403,.403)

"BLD",9081,"KRN","B",.5,.5)

"BLD",9081,"KRN","B",.84,.84)

"BLD",9081,"KRN","B",3.6,3.6)

"BLD",9081,"KRN","B",3.8,3.8)

"BLD",9081,"KRN","B",9.2,9.2)

"BLD",9081,"KRN","B",9.8,9.8)

"BLD",9081,"KRN","B",19,19)

"BLD",9081,"KRN","B",19.1,19.1)

"BLD",9081,"KRN","B",101,101)

"BLD",9081,"KRN","B",409.61,409.61)

"BLD",9081,"KRN","B",771,771)

"BLD",9081,"KRN","B",779.2,779.2)

"BLD",9081,"KRN","B",870,870)

"BLD",9081,"KRN","B",8989.51,8989.51)

"BLD",9081,"KRN","B",8989.52,8989.52)

"BLD",9081,"KRN","B",8994,8994)

"INIT")
POST^HMP0311P
"KRN",101,6127,-1)
0^1
"KRN",101,6127,0)
HMP DGPF ASSIGN FLAG^^^A^^^^^^^^HEALTH MANAGEMENT PLATFORM
"KRN",101,6127,1,0)
^101.06^2^2^3150422^^
"KRN",101,6127,1,1,0)
Used to trigger a JDS update when the DGPF ASSIGN FLAG action protocol is used.
"KRN",101,6127,1,2,0)
A patient must have been selected and the DFN value is in DGDFN.
"KRN",101,6127,20)
I $G(DGDFN),$L($T(POST^HMPEVNT)) D POST^HMPEVNT(DGDFN,"patient",DGDFN)
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","HMP0311P")
0^^B14101699
"RTN","HMP0311P",1,0)
HMP0311P ; Agilex/hrubovcak ;Mar 20, 2015@14:34:08
"RTN","HMP0311P",2,0)
 ;;2.0;Health Management Platform;****;;Build 9
"RTN","HMP0311P",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMP0311P",4,0)
 ;
"RTN","HMP0311P",5,0)
 Q
"RTN","HMP0311P",6,0)
 ; Post-init logic
"RTN","HMP0311P",7,0)
POST ; make HMP DGPF ASSIGN FLAG protocol an ITEM
"RTN","HMP0311P",8,0)
 ;
"RTN","HMP0311P",9,0)
 N HMPDGIEN,HMPERR,HMPEXIT,HMPFDA,HMPIEN,HMPRTCL,J,PRTCLITM,V,X,Y
"RTN","HMP0311P",10,0)
 ;
"RTN","HMP0311P",11,0)
 D MES^XPDUTL($T(+0)_" post-init routine started "_$$HTE^XLFDT($H))
"RTN","HMP0311P",12,0)
 S V=$$SVDATA D MES^XPDUTL("Old data saved in "_V)
"RTN","HMP0311P",13,0)
 S HMPRTCL="HMP DGPF ASSIGN FLAG",HMPIEN=$O(^ORD(101,"B",HMPRTCL,0))
"RTN","HMP0311P",14,0)
 ; protocol missing, write message and exit
"RTN","HMP0311P",15,0)
 I '(HMPIEN>0) D MES^XPDUTL(HMPRTCL_" protocol not found. It must be installed to proceed.") Q
"RTN","HMP0311P",16,0)
 ;
"RTN","HMP0311P",17,0)
 S Y="DGPF ASSIGN FLAG",HMPDGIEN=$O(^ORD(101,"B",Y,0))
"RTN","HMP0311P",18,0)
 ; protocol missing, write message and exit
"RTN","HMP0311P",19,0)
 I '(HMPDGIEN>0) D MES^XPDUTL(Y_" protocol not found.  No ITEM update performed.") Q
"RTN","HMP0311P",20,0)
 ; make DGPF ASSIGN FLAG an extended action
"RTN","HMP0311P",21,0)
 S HMPFDA(101,HMPDGIEN_",",4)="X"
"RTN","HMP0311P",22,0)
 D UPDATE^DIE("","HMPFDA","","HMPERR")
"RTN","HMP0311P",23,0)
 I $D(HMPERR) D  Q  ; something went wrong
"RTN","HMP0311P",24,0)
 .D MES^XPDUTL("FileMan error when editing DGPF ASSIGN FLAG protocol")
"RTN","HMP0311P",25,0)
 .N V S V="HMPERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","HMP0311P",26,0)
 ;
"RTN","HMP0311P",27,0)
 ; is protocol already an item?
"RTN","HMP0311P",28,0)
 S HMPEXIT=$O(^ORD(101,HMPDGIEN,10,"B",HMPIEN,0))
"RTN","HMP0311P",29,0)
 I HMPEXIT D MES^XPDUTL(HMPRTCL_" already an ITEM in "_Y_".  No update needed.") Q
"RTN","HMP0311P",30,0)
 ;
"RTN","HMP0311P",31,0)
 ; add protocol as ITEM
"RTN","HMP0311P",32,0)
 K HMPFDA,HMPERR
"RTN","HMP0311P",33,0)
 S HMPFDA(101.01,"+1,"_HMPDGIEN_",",.01)=HMPIEN
"RTN","HMP0311P",34,0)
 D UPDATE^DIE("","HMPFDA","PRTCLITM","HMPERR")
"RTN","HMP0311P",35,0)
 I $D(HMPERR) D  Q  ; something went wrong
"RTN","HMP0311P",36,0)
 .D MES^XPDUTL("FileMan error when adding ITEM to DGPF ASSIGN FLAG protocol")
"RTN","HMP0311P",37,0)
 .N V S V="HMPERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","HMP0311P",38,0)
 ; new ITEM sub-file IEN will be in PRTCLITM(1)
"RTN","HMP0311P",39,0)
 D MES^XPDUTL(HMPRTCL_" protocol update finished "_$$HTE^XLFDT($H))
"RTN","HMP0311P",40,0)
 ;
"RTN","HMP0311P",41,0)
 Q
"RTN","HMP0311P",42,0)
 ;
"RTN","HMP0311P",43,0)
SVDATA() ; extrinsic variable, save original FileMan data, returns storage node
"RTN","HMP0311P",44,0)
 ;
"RTN","HMP0311P",45,0)
 D DT^DICRW
"RTN","HMP0311P",46,0)
 N FMERRCNT,HMPXTMP,HMPIEN,LN,NTRY,TXT,V,X,Y
"RTN","HMP0311P",47,0)
 S Y=$$NOW^XLFDT,HMPXTMP=$NA(^XTMP("HMP INSTALL LOG",Y))  ; XTMP storage location
"RTN","HMP0311P",48,0)
 ; ^XTMP log data expires in 90 days
"RTN","HMP0311P",49,0)
 S X=$G(@HMPXTMP@(0)) S:X="" @HMPXTMP@(0)=$$FMADD^XLFDT(DT,90)_U_Y_"^HMP installation "_$$FMTE^XLFDT(Y)
"RTN","HMP0311P",50,0)
 ;
"RTN","HMP0311P",51,0)
 S FMERRCNT=0  ; FileMan error counter
"RTN","HMP0311P",52,0)
 ; save entries in FileMan items list
"RTN","HMP0311P",53,0)
 F LN=1:1 S TXT=$P($T(FMITMS+LN),";;",2,99) Q:TXT=""  D
"RTN","HMP0311P",54,0)
 .N FLNO,FMARRY,FMERR  ; file #, FileMan returned value and error message arrays
"RTN","HMP0311P",55,0)
 .S FLNO=+$P(TXT,U),X=$P(TXT,U,2,99)  ; file number and target entry
"RTN","HMP0311P",56,0)
 .Q:'(FLNO>1)!(X="")  ; file and entry required
"RTN","HMP0311P",57,0)
 .S HMPIEN=$$FIND1^DIC(FLNO,"","",X,"","","FMERR")  ; lookup value in X is external format
"RTN","HMP0311P",58,0)
 .I $D(FMERR) D  Q  ; log error message and quit
"RTN","HMP0311P",59,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @HMPXTMP@("FM LOOKUP ERROR",FMERRCNT,V)=@V
"RTN","HMP0311P",60,0)
 .;
"RTN","HMP0311P",61,0)
 .S:'(HMPIEN>0) FMERRCNT=FMERRCNT+1,@HMPXTMP@("FM ENTRY NOT FOUND",FMERRCNT)=TXT  ; entry
"RTN","HMP0311P",62,0)
 .S:HMPIEN>0 @HMPXTMP@("ENTRY",FLNO,HMPIEN)="entry found"
"RTN","HMP0311P",63,0)
 .K FMERR  ; just in case
"RTN","HMP0311P",64,0)
 .D GETS^DIQ(FLNO,HMPIEN_",","**","EN","FMARRY","FMERR")  ; data including sub-files, ignore null values
"RTN","HMP0311P",65,0)
 .I $D(FMERR) D  ; log error message
"RTN","HMP0311P",66,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @HMPXTMP@("FM DATA ERROR",FMERRCNT,V)=@V
"RTN","HMP0311P",67,0)
 .; save the data
"RTN","HMP0311P",68,0)
 .M @HMPXTMP@("ENTRY")=FMARRY
"RTN","HMP0311P",69,0)
 ;
"RTN","HMP0311P",70,0)
 Q HMPXTMP  ; return ^XTMP storage location
"RTN","HMP0311P",71,0)
 ;
"RTN","HMP0311P",72,0)
FMITMS ; list of FileMan entries: "file # ^ .01 field value"
"RTN","HMP0311P",73,0)
 ;;101^DGPF ASSIGN FLAG
"RTN","HMP0311P",74,0)
 ;
"VER")
8.0^22.0
**INSTALL NAME**
HMP HRUB 4.1
"BLD",9082,0)
HMP HRUB 4.1^^0^3150610^n
"BLD",9082,1,0)
^^4^4^3150512^
"BLD",9082,1,1,0)
protocol updates for Defect 811
"BLD",9082,1,2,0)
add HMP DGPF ASSIGN FLAG protocol
"BLD",9082,1,3,0)
post-init updates DGPF ADD FLAG and DGPF ASSIGN FLAG
"BLD",9082,1,4,0)
Make them both eXtended action, add HMP DGPF ASSIGN FLAG as an ITEM
"BLD",9082,4,0)
^9.64PA^^
"BLD",9082,6.3)
7
"BLD",9082,"INIT")
POST^HMPDE811
"BLD",9082,"KRN",0)
^9.67PA^779.2^20
"BLD",9082,"KRN",.4,0)
.4
"BLD",9082,"KRN",.401,0)
.401
"BLD",9082,"KRN",.402,0)
.402
"BLD",9082,"KRN",.403,0)
.403
"BLD",9082,"KRN",.5,0)
.5
"BLD",9082,"KRN",.84,0)
.84
"BLD",9082,"KRN",3.6,0)
3.6
"BLD",9082,"KRN",3.8,0)
3.8
"BLD",9082,"KRN",9.2,0)
9.2
"BLD",9082,"KRN",9.8,0)
9.8
"BLD",9082,"KRN",9.8,"NM",0)
^9.68A^^0
"BLD",9082,"KRN",19,0)
19
"BLD",9082,"KRN",19.1,0)
19.1
"BLD",9082,"KRN",101,0)
101
"BLD",9082,"KRN",101,"NM",0)
^9.68A^5^3
"BLD",9082,"KRN",101,"NM",3,0)
HMP DGPF ASSIGN FLAG^^0
"BLD",9082,"KRN",101,"NM",4,0)
DGPF ASSIGN FLAG^^2
"BLD",9082,"KRN",101,"NM",5,0)
DGPF ADD FLAG^^2
"BLD",9082,"KRN",101,"NM","B","DGPF ADD FLAG",5)

"BLD",9082,"KRN",101,"NM","B","DGPF ASSIGN FLAG",4)

"BLD",9082,"KRN",101,"NM","B","HMP DGPF ASSIGN FLAG",3)

"BLD",9082,"KRN",409.61,0)
409.61
"BLD",9082,"KRN",771,0)
771
"BLD",9082,"KRN",779.2,0)
779.2
"BLD",9082,"KRN",870,0)
870
"BLD",9082,"KRN",8989.51,0)
8989.51
"BLD",9082,"KRN",8989.52,0)
8989.52
"BLD",9082,"KRN",8994,0)
8994
"BLD",9082,"KRN","B",.4,.4)

"BLD",9082,"KRN","B",.401,.401)

"BLD",9082,"KRN","B",.402,.402)

"BLD",9082,"KRN","B",.403,.403)

"BLD",9082,"KRN","B",.5,.5)

"BLD",9082,"KRN","B",.84,.84)

"BLD",9082,"KRN","B",3.6,3.6)

"BLD",9082,"KRN","B",3.8,3.8)

"BLD",9082,"KRN","B",9.2,9.2)

"BLD",9082,"KRN","B",9.8,9.8)

"BLD",9082,"KRN","B",19,19)

"BLD",9082,"KRN","B",19.1,19.1)

"BLD",9082,"KRN","B",101,101)

"BLD",9082,"KRN","B",409.61,409.61)

"BLD",9082,"KRN","B",771,771)

"BLD",9082,"KRN","B",779.2,779.2)

"BLD",9082,"KRN","B",870,870)

"BLD",9082,"KRN","B",8989.51,8989.51)

"BLD",9082,"KRN","B",8989.52,8989.52)

"BLD",9082,"KRN","B",8994,8994)

"BLD",9082,"QUES",0)
^9.62^^
"INIT")
POST^HMPDE811
"KRN",101,4929,-1)
2^4
"KRN",101,4929,0)
DGPF ASSIGN FLAG^Assign Flag^^X^1^^^^^^^114
"KRN",101,4929,10,0)
^101.01PA^1^1
"KRN",101,4929,10,1,0)
6127^^^
"KRN",101,4929,10,1,"^")
HMP DGPF ASSIGN FLAG
"KRN",101,4939,-1)
2^5
"KRN",101,4939,0)
DGPF ADD FLAG^Add New Record Flag^^X^1^^^^^^^114
"KRN",101,4939,10,0)
^101.01PA^1^1
"KRN",101,4939,10,1,0)
6127^^^
"KRN",101,4939,10,1,"^")
HMP DGPF ASSIGN FLAG
"KRN",101,6127,-1)
0^3
"KRN",101,6127,0)
HMP DGPF ASSIGN FLAG^^^A^^^^^^^^HEALTH MANAGEMENT PLATFORM
"KRN",101,6127,1,0)
^101.06^2^2^3150422^^
"KRN",101,6127,1,1,0)
Used to trigger a JDS update when the DGPF ASSIGN FLAG action protocol is used.
"KRN",101,6127,1,2,0)
A patient must have been selected and the DFN value is in DGDFN.
"KRN",101,6127,20)
I $G(DGDFN),$L($T(POST^HMPEVNT)) D POST^HMPEVNT(DGDFN,"patient",DGDFN)
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","HMPDE811")
0^^B19118401
"RTN","HMPDE811",1,0)
HMPDE811 ;Agilex/Hrubovcak - post-installation processing ;May 12, 2015@13:58:53
"RTN","HMPDE811",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 7
"RTN","HMPDE811",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HMPDE811",4,0)
 ;
"RTN","HMPDE811",5,0)
 Q
"RTN","HMPDE811",6,0)
 ;
"RTN","HMPDE811",7,0)
POST ; make HMP DGPF ASSIGN FLAG protocol an ITEM
"RTN","HMPDE811",8,0)
 ;
"RTN","HMPDE811",9,0)
 N HMPDGIEN,HMPERR,HMPEXIT,HMPFDA,HMPIEN,HMPRTCL,HMPTRGT,J,PRTCLITM,V,X,Y
"RTN","HMPDE811",10,0)
 ;
"RTN","HMPDE811",11,0)
 D MES^XPDUTL($T(+0)_" post-init routine started "_$$HTE^XLFDT($H))
"RTN","HMPDE811",12,0)
 S V=$$SVDATA D MES^XPDUTL("Old data saved in "_V)
"RTN","HMPDE811",13,0)
 S HMPTRGT="HMP DGPF ASSIGN FLAG",HMPTRGT("IEN")=$O(^ORD(101,"B",HMPTRGT,0))
"RTN","HMPDE811",14,0)
 I '(HMPTRGT("IEN")>0) D MES^XPDUTL(HMPTRGT_" protocol not found. It must be installed to proceed.") Q
"RTN","HMPDE811",15,0)
 ;
"RTN","HMPDE811",16,0)
 ; update protocols
"RTN","HMPDE811",17,0)
 D PRTCLUPD("DGPF ADD FLAG",HMPTRGT("IEN"))
"RTN","HMPDE811",18,0)
 D PRTCLUPD("DGPF ASSIGN FLAG",HMPTRGT("IEN"))
"RTN","HMPDE811",19,0)
 ;
"RTN","HMPDE811",20,0)
 Q
"RTN","HMPDE811",21,0)
 ;
"RTN","HMPDE811",22,0)
PRTCLUPD(HMPRTCL,HMPIEN) ; update HMPRTCL with HMPIEN protocol as ITEM
"RTN","HMPDE811",23,0)
 ;
"RTN","HMPDE811",24,0)
 S HMPDGIEN=$O(^ORD(101,"B",HMPRTCL,0))
"RTN","HMPDE811",25,0)
 ; protocol missing, write message and exit
"RTN","HMPDE811",26,0)
 I '(HMPDGIEN>0) D MES^XPDUTL(HMPRTCL_" protocol not found.  No ITEM update performed.") Q
"RTN","HMPDE811",27,0)
 D MES^XPDUTL("updating "_HMPRTCL)
"RTN","HMPDE811",28,0)
 ; make protocol an extended action
"RTN","HMPDE811",29,0)
 S HMPFDA(101,HMPDGIEN_",",4)="X"
"RTN","HMPDE811",30,0)
 D UPDATE^DIE("","HMPFDA","","HMPERR")
"RTN","HMPDE811",31,0)
 I $D(HMPERR) D  Q  ; something went wrong
"RTN","HMPDE811",32,0)
 .D MES^XPDUTL("FileMan error when editing "_HMPRTCL_" protocol")
"RTN","HMPDE811",33,0)
 .N V S V="HMPERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","HMPDE811",34,0)
 ;
"RTN","HMPDE811",35,0)
 ; is protocol already an item?
"RTN","HMPDE811",36,0)
 S J=$O(^ORD(101,HMPDGIEN,10,"B",HMPIEN,0))
"RTN","HMPDE811",37,0)
 I J D MES^XPDUTL(HMPRTCL_" already an ITEM in IEN "_HMPIEN_".  No update needed.") Q
"RTN","HMPDE811",38,0)
 ; add protocol as ITEM
"RTN","HMPDE811",39,0)
 K HMPFDA,HMPERR,PRTCLITM
"RTN","HMPDE811",40,0)
 S HMPFDA(101.01,"+1,"_HMPDGIEN_",",.01)=HMPIEN
"RTN","HMPDE811",41,0)
 D UPDATE^DIE("","HMPFDA","PRTCLITM","HMPERR")
"RTN","HMPDE811",42,0)
 I $D(HMPERR) D  Q  ; something went wrong
"RTN","HMPDE811",43,0)
 .D MES^XPDUTL("FileMan error when adding ITEM to DGPF ASSIGN FLAG protocol")
"RTN","HMPDE811",44,0)
 .N V S V="HMPERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","HMPDE811",45,0)
 ; new ITEM sub-file IEN will be in PRTCLITM(1)
"RTN","HMPDE811",46,0)
 D MES^XPDUTL(HMPRTCL_" protocol update finished "_$$HTE^XLFDT($H))
"RTN","HMPDE811",47,0)
 ;
"RTN","HMPDE811",48,0)
 Q
"RTN","HMPDE811",49,0)
 ;
"RTN","HMPDE811",50,0)
SVDATA() ; extrinsic variable, save original FileMan data, returns storage node
"RTN","HMPDE811",51,0)
 ;
"RTN","HMPDE811",52,0)
 N FMERRCNT,HMPXTMP,HMPIEN,HMPLOGND,HMPLGRT,LN,NTRY,TXT,V,X,Y
"RTN","HMPDE811",53,0)
 D DT^DICRW  ; kernel variables
"RTN","HMPDE811",54,0)
 S HMPLOGND="HMP INSTALL LOG"  ; HMP log data stored here in ^XTMP
"RTN","HMPDE811",55,0)
 S HMPLGRT=$NA(^XTMP(HMPLOGND,DT))  ; log root node
"RTN","HMPDE811",56,0)
 S Y=$$NOW^XLFDT
"RTN","HMPDE811",57,0)
 ; ^XTMP log data expires in 90 days
"RTN","HMPDE811",58,0)
 S X=$G(@HMPLGRT@(0)) S:X="" @HMPLGRT@(0)=$$FMADD^XLFDT(DT,90)_U_Y_"^HMP installation "_$$FMTE^XLFDT(Y)
"RTN","HMPDE811",59,0)
 ;
"RTN","HMPDE811",60,0)
 S X=$G(@HMPLGRT@(0,"CNTR"))+1,^("CNTR")=X  ; counter for multiple installations per day
"RTN","HMPDE811",61,0)
 S HMPXTMP=$NA(@HMPLGRT@(X))  ; XTMP storage node for this installation
"RTN","HMPDE811",62,0)
 S @HMPXTMP@(0,"begun")=$$NOW^XLFDT  ; when?
"RTN","HMPDE811",63,0)
 S @HMPXTMP@(0,"DUZ")=$G(DUZ)  ; who?
"RTN","HMPDE811",64,0)
 S FMERRCNT=0  ; FileMan error counter
"RTN","HMPDE811",65,0)
 ; save entries in FileMan items list
"RTN","HMPDE811",66,0)
 F LN=1:1 S TXT=$P($T(FMITMS+LN),";;",2,99) Q:TXT=""  D
"RTN","HMPDE811",67,0)
 .N FLNO,FMARRY,FMERR  ; file #, FileMan returned value and error message arrays
"RTN","HMPDE811",68,0)
 .S FLNO=+$P(TXT,U),X=$P(TXT,U,2,99)  ; file number and target entry
"RTN","HMPDE811",69,0)
 .Q:'(FLNO>1)!(X="")  ; file and entry required
"RTN","HMPDE811",70,0)
 .S HMPIEN=$$FIND1^DIC(FLNO,"","",X,"","","FMERR")  ; lookup value in X is external format
"RTN","HMPDE811",71,0)
 .I $D(FMERR) D  Q  ; log error message and quit
"RTN","HMPDE811",72,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @HMPXTMP@("FM LOOKUP ERROR",FMERRCNT,V)=@V
"RTN","HMPDE811",73,0)
 .;
"RTN","HMPDE811",74,0)
 .S:'(HMPIEN>0) FMERRCNT=FMERRCNT+1,@HMPXTMP@("FM ENTRY NOT FOUND",FMERRCNT)=TXT  ; entry
"RTN","HMPDE811",75,0)
 .S:HMPIEN>0 @HMPXTMP@("ENTRY",FLNO,HMPIEN)="entry found"
"RTN","HMPDE811",76,0)
 .K FMERR  ; just in case
"RTN","HMPDE811",77,0)
 .D GETS^DIQ(FLNO,HMPIEN_",","**","EN","FMARRY","FMERR")  ; data including sub-files, ignore null values
"RTN","HMPDE811",78,0)
 .I $D(FMERR) D  ; log error message
"RTN","HMPDE811",79,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @HMPXTMP@("FM DATA ERROR",FMERRCNT,V)=@V
"RTN","HMPDE811",80,0)
 .; save the data
"RTN","HMPDE811",81,0)
 .M @HMPXTMP@("ENTRY")=FMARRY
"RTN","HMPDE811",82,0)
 ;
"RTN","HMPDE811",83,0)
 S @HMPXTMP@(0,"ended")=$$NOW^XLFDT
"RTN","HMPDE811",84,0)
 Q HMPXTMP  ; return ^XTMP storage location
"RTN","HMPDE811",85,0)
 ;
"RTN","HMPDE811",86,0)
FMITMS ; list of FileMan entries: "file # ^ .01 field value"
"RTN","HMPDE811",87,0)
 ;;101^DGPF ASSIGN FLAG
"RTN","HMPDE811",88,0)
 ;;101^DGPF ADD FLAG
"RTN","HMPDE811",89,0)
 ;
"VER")
8.0^22.0
**END**
**END**
