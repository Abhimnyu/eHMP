# Encoding: utf-8

require 'rubygems'
require 'rubocop'
require 'rubocop/rake_task'

require_relative './rake_helpers.rb'
include RakeHelpers

require_relative '../../../infrastructure/vagrant/Servers'
require_relative '../../../infrastructure/vagrant/aws/VagrantfileUtil.rb'

$LOAD_PATH.push(File.expand_path(File.dirname(__FILE__) + '/features/lib'))

# Check environment sanity and fail fast if not correct
FAIL_MSG = 'Please first source infrastructure/set.env.sh.'
fail FAIL_MSG unless ENV.keys.include?('WORKSPACE') || ENV.keys.include?('GEM_HOME')

task default: [:end_to_end]

task :smoke do
  btype = select_browser
	puts %x(cucumber --profile smoke)
end

task :reg_lite do
  btype = select_browser
	puts %x(cucumber --profile reg_lite)
end

task :end_to_end do
  btype = select_browser
  puts %x(cucumber --profile end_to_end)
end

task :end_to_end_stable do
  btype = select_browser
  puts %x(cucumber --profile end_to_end_stable)
end

task :end_to_end_unstable do
  btype = select_browser
  puts %x(cucumber --profile end_to_end_unstable)
end

task :all_tests do |t|
  #btype = ENV['BTYPE'] || 'phantomjs'
  select_browser
  ENV["SCREENSHOTS_FOLDER"] = "screenshots"

  FileUtils.rm_r ENV["SCREENSHOTS_FOLDER"], :force => true if Dir.exists? ENV["SCREENSHOTS_FOLDER"]
  Dir.mkdir(ENV["SCREENSHOTS_FOLDER"])

  puts %x(cucumber --profile all_tests)
end

task code_quality: [
  :info,
  :rubocop
]

task :info do
  puts '=========================================================================='
  puts '#     Validating code quality.                                           #'
  puts '#     For details, see https://github.com/bbatsov/ruby-style-guide       #'
  puts '=========================================================================='
  # puts %x(rubocop -f e -f o -f fi -F ./features)
end

RuboCop::RakeTask.new(:rubocop) do |rubocop|
  # Specify config file in non-standard location.
  rubocop.options = ['-c.rubocop.yml']

  # Specify Ruby file locations
  rubocop.patterns = ['**/*.rb']

  # Show emacs style output, and offense counts
  # See https://github.com/bbatsov/rubocop#formatters for other output options
  rubocop.formatters = ['emacs', 'o']

  # Abort rake on failure
  rubocop.fail_on_error = true
end

task :environment_setup, :env do |task, args|
  env = args[:env] || 'virtualbox'
  case env
  when "virtualbox"
    ip = Servers::EHMPUI.localIP
    ENV["EHMPUI_IP"] = 'http://' + "#{ip}"
  when "aws"
    ip = VagrantfileUtil::AWS.get_private_ip("ehmp-ui", "ehmp-balancer")
    ENV["EHMPUI_IP"] = 'https://' + "#{ip}"
  else
    fail "Unrecognized environment type: #{env}. Allowable types are: 'virtualbox' and 'aws'"
  end
end

# task code_quality: [:rubocop]
task end_to_end: [:code_quality]
task end_to_end_stable: [:code_quality]
task end_to_end_unstable: [:code_quality]
task all_tests: [:code_quality]
