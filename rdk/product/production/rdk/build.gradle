ext.set('repo', 'releases')
ext.set('groupId', 'us.vistacore.rdk')
ext.set('artifactId', 'rdk')

task installNpm(type: Exec) {
  group "RDK Tasks"
  description "installs package(s)"
  commandLine "npm", "install"
}

task ccowInstallNpm(type: Exec) {
  workingDir './ccow'
  group "RDK Tasks"
  description "installs package(s) for ccow"
  commandLine "npm", "install"
}

task writeInstallNpm(type: Exec) {
  workingDir './src/write'
  group "RDK Tasks"
  description "installs package(s) for write back"
  commandLine "npm", "install"
}

task cleanNPM() {
  group "RDK Tasks"
  description "Clean up node_modules"
}
clean.dependsOn cleanNPM

task build(dependsOn: [clean, installNpm]) {
  group "RDK Tasks"
  description "installs package(s)"
}

task check(type: Exec, dependsOn: [build]) {
  group "RDK Tasks"
  description "installs package(s) and runs jshint"
  commandLine "npm", "run-script", "check"
}

task test(type: Exec, dependsOn: [build]) {
  group "RDK Tasks"
  description "installs package(s) and runs unit tests"
  commandLine "npm", "test"
}

task rdkIntTests(type: Exec, dependsOn: [build]) {
  group "RDK Tasks"
  description "installs package(s) and runs integration tests"
  commandLine "npm", "run-script", "int-test"
}

task rdkAllTests(dependsOn: [test, rdkIntTests]) {
  group "RDK Tasks"
  description "runs unit and integration tests"
}

task zipRDK(type: Zip, dependsOn: [build, ccowInstallNpm, writeInstallNpm]) {
  extension = 'zip'
  baseName = 'rdk'
  version = version
  destinationDir parent.parent.buildDir
  from projectDir
}

uploadArchives.dependsOn zipRDK

artifacts {
  archives zipRDK
}

task rebuildMetadata(type: Exec) {
  commandLine "bash", "-c", "curl -s -u ${System.getenv()['NEXUS_USER_NAME']}:${System.getenv()['NEXUS_PASSWORD']} -X DELETE https://dl.vistacore.us/nexus/service/local/metadata/repositories/${->repo}/content/${->groupId.replaceAll('\\.','/')}/${->artifactId}/"
}

uploadArchives.finalizedBy rebuildMetadata
